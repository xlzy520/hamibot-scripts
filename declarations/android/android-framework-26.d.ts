/// <reference path="./android-platform-27.d.ts"/>

declare module com {
    export module android {
        export module framework {
            export module protobuf {
                export module nano {
                    export class CodedInputByteBufferNano extends java.lang.Object {
                        public static class: java.lang.Class<com.android.framework.protobuf.nano.CodedInputByteBufferNano>;
                        public skipField(param0: number): boolean;
                        public getAbsolutePosition(): number;
                        public readMessage(param0: com.android.framework.protobuf.nano.MessageNano): void;
                        public isAtEnd(): boolean;
                        public readUInt32(): number;
                        public getBuffer(): number[];
                        public readGroup(param0: com.android.framework.protobuf.nano.MessageNano, param1: number): void;
                        public readSFixed32(): number;
                        public readInt64(): number;
                        public readRawLittleEndian64(): number;
                        public popLimit(param0: number): void;
                        public readTag(): number;
                        public static decodeZigZag32(param0: number): number;
                        public skipMessage(): void;
                        public readEnum(): number;
                        public readBool(): boolean;
                        public setSizeLimit(param0: number): number;
                        public rewindToPosition(param0: number): void;
                        public readSFixed64(): number;
                        public readBytes(): number[];
                        public readSInt64(): number;
                        public setRecursionLimit(param0: number): number;
                        public skipRawBytes(param0: number): void;
                        public readInt32(): number;
                        public readRawLittleEndian32(): number;
                        public getPosition(): number;
                        public readFixed64(): number;
                        public readDouble(): number;
                        public readRawVarint64(): number;
                        public static newInstance(param0: number[]): com.android.framework.protobuf.nano.CodedInputByteBufferNano;
                        public readString(): string;
                        public readRawByte(): number;
                        public pushLimit(param0: number): number;
                        public readFixed32(): number;
                        public getBytesUntilLimit(): number;
                        public static newInstance(param0: number[], param1: number, param2: number): com.android.framework.protobuf.nano.CodedInputByteBufferNano;
                        public static decodeZigZag64(param0: number): number;
                        public checkLastTagWas(param0: number): void;
                        public resetSizeCounter(): void;
                        public readFloat(): number;
                        public readSInt32(): number;
                        public readRawBytes(param0: number): number[];
                        public readUInt64(): number;
                        public getData(param0: number, param1: number): number[];
                        public readRawVarint32(): number;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module framework {
            export module protobuf {
                export module nano {
                    export class CodedOutputByteBufferNano extends java.lang.Object {
                        public static class: java.lang.Class<com.android.framework.protobuf.nano.CodedOutputByteBufferNano>;
                        public static LITTLE_ENDIAN_32_SIZE: number;
                        public static LITTLE_ENDIAN_64_SIZE: number;
                        public static computeFixed64Size(param0: number, param1: number): number;
                        public static encodeZigZag64(param0: number): number;
                        public writeInt64NoTag(param0: number): void;
                        public writeSFixed64NoTag(param0: number): void;
                        public static computeFloatSizeNoTag(param0: number): number;
                        public static computeInt32SizeNoTag(param0: number): number;
                        public static computeUInt64Size(param0: number, param1: number): number;
                        public static computeGroupSize(param0: number, param1: com.android.framework.protobuf.nano.MessageNano): number;
                        public static computeBytesSize(param0: number, param1: number): number;
                        public writeFixed32NoTag(param0: number): void;
                        public writeTag(param0: number, param1: number): void;
                        public static computeFixed64SizeNoTag(param0: number): number;
                        public writeRawBytes(param0: number[], param1: number, param2: number): void;
                        public static computeSInt32SizeNoTag(param0: number): number;
                        public static computeStringSizeNoTag(param0: string): number;
                        public position(): number;
                        public static computeBoolSize(param0: number, param1: boolean): number;
                        public writeUInt64(param0: number, param1: number): void;
                        public static computeBytesSizeNoTag(param0: number[]): number;
                        public static computeSInt32Size(param0: number, param1: number): number;
                        public static computeStringSize(param0: number, param1: string): number;
                        public static computeUInt32SizeNoTag(param0: number): number;
                        public writeInt32(param0: number, param1: number): void;
                        public static computeBoolSizeNoTag(param0: boolean): number;
                        public static computeUInt32Size(param0: number, param1: number): number;
                        public spaceLeft(): number;
                        public writeFixed32(param0: number, param1: number): void;
                        public static computeInt32Size(param0: number, param1: number): number;
                        public writeSInt64NoTag(param0: number): void;
                        public checkNoSpaceLeft(): void;
                        public writeUInt64NoTag(param0: number): void;
                        public writeEnum(param0: number, param1: number): void;
                        public writeSFixed32(param0: number, param1: number): void;
                        public writeGroup(param0: number, param1: com.android.framework.protobuf.nano.MessageNano): void;
                        public writeSInt32NoTag(param0: number): void;
                        public writeRawLittleEndian64(param0: number): void;
                        public static newInstance(param0: number[]): com.android.framework.protobuf.nano.CodedOutputByteBufferNano;
                        public writeDouble(param0: number, param1: number): void;
                        public writeStringNoTag(param0: string): void;
                        public writeUInt32(param0: number, param1: number): void;
                        public static computeFixed32Size(param0: number, param1: number): number;
                        public reset(): void;
                        public writeUInt32NoTag(param0: number): void;
                        public writeSFixed32NoTag(param0: number): void;
                        public static computeSInt64SizeNoTag(param0: number): number;
                        public writeBytesNoTag(param0: number[], param1: number, param2: number): void;
                        public writeMessage(param0: number, param1: com.android.framework.protobuf.nano.MessageNano): void;
                        public static computeMessageSizeNoTag(param0: com.android.framework.protobuf.nano.MessageNano): number;
                        public writeInt32NoTag(param0: number): void;
                        public static computeEnumSizeNoTag(param0: number): number;
                        public writeDoubleNoTag(param0: number): void;
                        public writeFixed64NoTag(param0: number): void;
                        public writeFloat(param0: number, param1: number): void;
                        public static computeBytesSizeNoTag(param0: number): number;
                        public static computeUInt64SizeNoTag(param0: number): number;
                        public writeRawVarint64(param0: number): void;
                        public static computeSFixed32Size(param0: number, param1: number): number;
                        public static computeBytesSize(param0: number, param1: number[]): number;
                        public writeEnumNoTag(param0: number): void;
                        public writeMessageNoTag(param0: com.android.framework.protobuf.nano.MessageNano): void;
                        public static newInstance(param0: number[], param1: number, param2: number): com.android.framework.protobuf.nano.CodedOutputByteBufferNano;
                        public writeSFixed64(param0: number, param1: number): void;
                        public static computeMessageSize(param0: number, param1: com.android.framework.protobuf.nano.MessageNano): number;
                        public writeSInt64(param0: number, param1: number): void;
                        public writeBool(param0: number, param1: boolean): void;
                        public static encodeZigZag32(param0: number): number;
                        public static computeFloatSize(param0: number, param1: number): number;
                        public writeRawVarint32(param0: number): void;
                        public writeRawLittleEndian32(param0: number): void;
                        public static computeFixed32SizeNoTag(param0: number): number;
                        public writeRawByte(param0: number): void;
                        public static computeRawVarint32Size(param0: number): number;
                        public writeFloatNoTag(param0: number): void;
                        public writeGroupNoTag(param0: com.android.framework.protobuf.nano.MessageNano): void;
                        public static computeInt64Size(param0: number, param1: number): number;
                        public static computeSFixed64Size(param0: number, param1: number): number;
                        public writeBytes(param0: number, param1: number[]): void;
                        public writeBytesNoTag(param0: number[]): void;
                        public static computeDoubleSize(param0: number, param1: number): number;
                        public static computeSFixed32SizeNoTag(param0: number): number;
                        public writeBoolNoTag(param0: boolean): void;
                        public writeBytes(param0: number, param1: number[], param2: number, param3: number): void;
                        public writeFixed64(param0: number, param1: number): void;
                        public writeSInt32(param0: number, param1: number): void;
                        public static computeDoubleSizeNoTag(param0: number): number;
                        public static computeInt64SizeNoTag(param0: number): number;
                        public static computeGroupSizeNoTag(param0: com.android.framework.protobuf.nano.MessageNano): number;
                        public static computeTagSize(param0: number): number;
                        public writeRawBytes(param0: number[]): void;
                        public static computeSInt64Size(param0: number, param1: number): number;
                        public writeString(param0: number, param1: string): void;
                        public static computeRawVarint64Size(param0: number): number;
                        public writeInt64(param0: number, param1: number): void;
                        public static computeEnumSize(param0: number, param1: number): number;
                        public static computeSFixed64SizeNoTag(param0: number): number;
                    }
                    export module CodedOutputByteBufferNano {
                        export class OutOfSpaceException extends java.lang.Object {
                            public static class: java.lang.Class<com.android.framework.protobuf.nano.CodedOutputByteBufferNano.OutOfSpaceException>;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module framework {
            export module protobuf {
                export module nano {
                    export abstract class ExtendableMessageNano<M> extends com.android.framework.protobuf.nano.MessageNano {
                        public static class: java.lang.Class<com.android.framework.protobuf.nano.ExtendableMessageNano<any>>;
                        public unknownFieldData: com.android.framework.protobuf.nano.FieldArray;
                        public computeSerializedSize(): number;
                        public constructor();
                        public setExtension(param0: com.android.framework.protobuf.nano.Extension<any, any>, param1: any): com.android.framework.protobuf.nano.ExtendableMessageNano<any>;
                        public clone(): any;
                        public getExtension(param0: com.android.framework.protobuf.nano.Extension<any, any>): any;
                        public storeUnknownField(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano, param1: number): boolean;
                        public hasExtension(param0: com.android.framework.protobuf.nano.Extension<any, any>): boolean;
                        public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                        public clone(): com.android.framework.protobuf.nano.MessageNano;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module framework {
            export module protobuf {
                export module nano {
                    export class Extension<M, T> extends java.lang.Object {
                        public static class: java.lang.Class<com.android.framework.protobuf.nano.Extension<any, any>>;
                        public static TYPE_BOOL: number;
                        public static TYPE_BYTES: number;
                        public static TYPE_DOUBLE: number;
                        public static TYPE_ENUM: number;
                        public static TYPE_FIXED32: number;
                        public static TYPE_FIXED64: number;
                        public static TYPE_FLOAT: number;
                        public static TYPE_GROUP: number;
                        public static TYPE_INT32: number;
                        public static TYPE_INT64: number;
                        public static TYPE_MESSAGE: number;
                        public static TYPE_SFIXED32: number;
                        public static TYPE_SFIXED64: number;
                        public static TYPE_SINT32: number;
                        public static TYPE_SINT64: number;
                        public static TYPE_STRING: number;
                        public static TYPE_UINT32: number;
                        public static TYPE_UINT64: number;
                        public clazz: java.lang.Class<T>;
                        public repeated: boolean;
                        public tag: number;
                        public type: number;
                        public static createRepeatedPrimitiveTyped(param0: number, param1: java.lang.Class<any>, param2: number, param3: number, param4: number): com.android.framework.protobuf.nano.Extension<any, any>;
                        public static createRepeatedMessageTyped(param0: number, param1: java.lang.Class<any>, param2: number): com.android.framework.protobuf.nano.Extension<any, any>;
                        public readData(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): any;
                        public computeSingularSerializedSize(param0: any): number;
                        public writeRepeatedData(param0: any, param1: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                        public static createMessageTyped(param0: number, param1: java.lang.Class<any>, param2: number): com.android.framework.protobuf.nano.Extension<any, any>;
                        public computeRepeatedSerializedSize(param0: any): number;
                        public readDataInto(param0: com.android.framework.protobuf.nano.UnknownFieldData, param1: java.util.List<any>): void;
                        public writeSingularData(param0: any, param1: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                        public static createPrimitiveTyped(param0: number, param1: java.lang.Class<any>, param2: number): com.android.framework.protobuf.nano.Extension<any, any>;
                    }
                    export module Extension {
                        export class PrimitiveExtension<M, T> extends com.android.framework.protobuf.nano.Extension<any, any> {
                            public static class: java.lang.Class<com.android.framework.protobuf.nano.Extension.PrimitiveExtension<any, any>>;
                            public constructor(param0: number, param1: java.lang.Class<any>, param2: number, param3: boolean, param4: number, param5: number);
                            public computeRepeatedSerializedSize(param0: any): number;
                            public readDataInto(param0: com.android.framework.protobuf.nano.UnknownFieldData, param1: java.util.List<any>): void;
                            public readData(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): any;
                            public writeSingularData(param0: any, param1: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            public writeRepeatedData(param0: any, param1: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            public computeSingularSerializedSize(param0: any): number;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module framework {
            export module protobuf {
                export module nano {
                    export class FieldArray extends java.lang.Object {
                        public static class: java.lang.Class<com.android.framework.protobuf.nano.FieldArray>;
                        public clone(): com.android.framework.protobuf.nano.FieldArray;
                        public equals(param0: any): boolean;
                        public hashCode(): number;
                        public isEmpty(): boolean;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module framework {
            export module protobuf {
                export module nano {
                    export class FieldData extends java.lang.Object {
                        public static class: java.lang.Class<com.android.framework.protobuf.nano.FieldData>;
                        public clone(): com.android.framework.protobuf.nano.FieldData;
                        public equals(param0: any): boolean;
                        public hashCode(): number;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module framework {
            export module protobuf {
                export module nano {
                    export class InternalNano extends java.lang.Object {
                        public static class: java.lang.Class<com.android.framework.protobuf.nano.InternalNano>;
                        public static ISO_8859_1: java.nio.charset.Charset;
                        public static LAZY_INIT_LOCK: any;
                        public static TYPE_BOOL: number;
                        public static TYPE_BYTES: number;
                        public static TYPE_DOUBLE: number;
                        public static TYPE_ENUM: number;
                        public static TYPE_FIXED32: number;
                        public static TYPE_FIXED64: number;
                        public static TYPE_FLOAT: number;
                        public static TYPE_GROUP: number;
                        public static TYPE_INT32: number;
                        public static TYPE_INT64: number;
                        public static TYPE_MESSAGE: number;
                        public static TYPE_SFIXED32: number;
                        public static TYPE_SFIXED64: number;
                        public static TYPE_SINT32: number;
                        public static TYPE_SINT64: number;
                        public static TYPE_STRING: number;
                        public static TYPE_UINT32: number;
                        public static TYPE_UINT64: number;
                        public static UTF_8: java.nio.charset.Charset;
                        public static mergeMapEntry(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano, param1: java.util.Map<any, any>, param2: com.android.framework.protobuf.nano.MapFactories.MapFactory, param3: number, param4: number, param5: any, param6: number, param7: number): java.util.Map<any, any>;
                        public static equals(param0: java.util.Map<any, any>, param1: java.util.Map<any, any>): boolean;
                        public static copyFromUtf8(param0: string): number[];
                        public static hashCode(param0: number[]): number;
                        public static cloneUnknownFieldData(param0: com.android.framework.protobuf.nano.ExtendableMessageNano<any>, param1: com.android.framework.protobuf.nano.ExtendableMessageNano<any>): void;
                        public static equals(param0: any[], param1: any[]): boolean;
                        public static hashCode(param0: any[]): number;
                        public static bytesDefaultValue(param0: string): number[];
                        public static serializeMapField(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano, param1: java.util.Map<any, any>, param2: number, param3: number, param4: number): void;
                        public static equals(param0: boolean[], param1: boolean[]): boolean;
                        public static equals(param0: number[], param1: number[]): boolean;
                        public static computeMapFieldSize(param0: java.util.Map<any, any>, param1: number, param2: number, param3: number): number;
                        public static hashCode(param0: java.util.Map<any, any>): number;
                        public static stringDefaultValue(param0: string): string;
                        public static equals(param0: number[][], param1: number[][]): boolean;
                        public static hashCode(param0: number[][]): number;
                        public static hashCode(param0: boolean[]): number;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module framework {
            export module protobuf {
                export module nano {
                    export class InvalidProtocolBufferNanoException extends java.lang.Object {
                        public static class: java.lang.Class<com.android.framework.protobuf.nano.InvalidProtocolBufferNanoException>;
                        public constructor(param0: string);
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module framework {
            export module protobuf {
                export module nano {
                    export class MapFactories extends java.lang.Object {
                        public static class: java.lang.Class<com.android.framework.protobuf.nano.MapFactories>;
                        public static getMapFactory(): com.android.framework.protobuf.nano.MapFactories.MapFactory;
                    }
                    export module MapFactories {
                        export class DefaultMapFactory extends com.android.framework.protobuf.nano.MapFactories.MapFactory {
                            public static class: java.lang.Class<com.android.framework.protobuf.nano.MapFactories.DefaultMapFactory>;
                            public forMap(param0: java.util.Map<any, any>): java.util.Map<any, any>;
                        }
                        export class MapFactory extends java.lang.Object {
                            public static class: java.lang.Class<com.android.framework.protobuf.nano.MapFactories.MapFactory>;
                            /**
                             * Constructs a new instance of the com.android.framework.protobuf.nano.MapFactories$MapFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                             */
                            public constructor(implementation: {
                                forMap(param0: java.util.Map<any, any>): java.util.Map<any, any>;
                            });
                            public constructor();
                            public forMap(param0: java.util.Map<any, any>): java.util.Map<any, any>;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module framework {
            export module protobuf {
                export module nano {
                    export abstract class MessageNano {
                        public static class: java.lang.Class<com.android.framework.protobuf.nano.MessageNano>;
                        public cachedSize: number;
                        public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                        public constructor();
                        public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                        public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                        public clone(): com.android.framework.protobuf.nano.MessageNano;
                        public toString(): string;
                        public static toByteArray(param0: com.android.framework.protobuf.nano.MessageNano): number[];
                        public computeSerializedSize(): number;
                        public getSerializedSize(): number;
                        public static toByteArray(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): void;
                        public getCachedSize(): number;
                        public static messageNanoEquals(param0: com.android.framework.protobuf.nano.MessageNano, param1: com.android.framework.protobuf.nano.MessageNano): boolean;
                        public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module framework {
            export module protobuf {
                export module nano {
                    export class MessageNanoPrinter extends java.lang.Object {
                        public static class: java.lang.Class<com.android.framework.protobuf.nano.MessageNanoPrinter>;
                        public static print(param0: com.android.framework.protobuf.nano.MessageNano): string;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module framework {
            export module protobuf {
                export module nano {
                    export class UnknownFieldData extends java.lang.Object {
                        public static class: java.lang.Class<com.android.framework.protobuf.nano.UnknownFieldData>;
                        public equals(param0: any): boolean;
                        public hashCode(): number;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module framework {
            export module protobuf {
                export module nano {
                    export class WireFormatNano extends java.lang.Object {
                        public static class: java.lang.Class<com.android.framework.protobuf.nano.WireFormatNano>;
                        public static EMPTY_BOOLEAN_ARRAY: boolean[];
                        public static EMPTY_BYTES: number[];
                        public static EMPTY_BYTES_ARRAY: number[][];
                        public static EMPTY_DOUBLE_ARRAY: number[];
                        public static EMPTY_FLOAT_ARRAY: number[];
                        public static EMPTY_INT_ARRAY: number[];
                        public static EMPTY_LONG_ARRAY: number[];
                        public static EMPTY_STRING_ARRAY: string[];
                        public static parseUnknownField(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano, param1: number): boolean;
                        public static getTagFieldNumber(param0: number): number;
                        public static getRepeatedFieldArrayLength(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano, param1: number): number;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module framework {
            export module protobuf {
                export module nano {
                    export module android {
                        export abstract class ParcelableExtendableMessageNano<M> extends com.android.framework.protobuf.nano.ExtendableMessageNano<any> implements globalAndroid.os.Parcelable {
                            public static class: java.lang.Class<com.android.framework.protobuf.nano.android.ParcelableExtendableMessageNano<any>>;
                            public constructor();
                            public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                            public describeContents(): number;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module framework {
            export module protobuf {
                export module nano {
                    export module android {
                        export abstract class ParcelableMessageNano extends com.android.framework.protobuf.nano.MessageNano {
                            public static class: java.lang.Class<com.android.framework.protobuf.nano.android.ParcelableMessageNano>;
                            public constructor();
                            public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                            public describeContents(): number;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module framework {
            export module protobuf {
                export module nano {
                    export module android {
                        export class ParcelableMessageNanoCreator<T> extends globalAndroid.os.Parcelable.Creator<any> {
                            public static class: java.lang.Class<com.android.framework.protobuf.nano.android.ParcelableMessageNanoCreator<any>>;
                            public constructor(param0: java.lang.Class<any>);
                            public newArray(param0: number): any[];
                            public createFromParcel(param0: globalAndroid.os.Parcel): any;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export class ImsCallForwardInfo extends java.lang.Object {
                public static class: java.lang.Class<com.android.ims.ImsCallForwardInfo>;
                public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.ims.ImsCallForwardInfo>;
                public mCondition: number;
                public mNumber: string;
                public mServiceClass: number;
                public mStatus: number;
                public mTimeSeconds: number;
                public mToA: number;
                public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                public describeContents(): number;
                public toString(): string;
                public constructor(param0: globalAndroid.os.Parcel);
                public constructor();
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export class ImsCallProfile extends java.lang.Object {
                public static class: java.lang.Class<com.android.ims.ImsCallProfile>;
                public static CALL_RESTRICT_CAUSE_DISABLED: number;
                public static CALL_RESTRICT_CAUSE_HD: number;
                public static CALL_RESTRICT_CAUSE_NONE: number;
                public static CALL_RESTRICT_CAUSE_RAT: number;
                public static CALL_TYPE_VIDEO_N_VOICE: number;
                public static CALL_TYPE_VOICE: number;
                public static CALL_TYPE_VOICE_N_VIDEO: number;
                public static CALL_TYPE_VS: number;
                public static CALL_TYPE_VS_RX: number;
                public static CALL_TYPE_VS_TX: number;
                public static CALL_TYPE_VT: number;
                public static CALL_TYPE_VT_NODIR: number;
                public static CALL_TYPE_VT_RX: number;
                public static CALL_TYPE_VT_TX: number;
                public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.ims.ImsCallProfile>;
                public static DIALSTRING_NORMAL: number;
                public static DIALSTRING_SS_CONF: number;
                public static DIALSTRING_USSD: number;
                public static EXTRA_ADDITIONAL_CALL_INFO: string;
                public static EXTRA_CALL_MODE_CHANGEABLE: string;
                public static EXTRA_CALL_RAT_TYPE: string;
                public static EXTRA_CALL_RAT_TYPE_ALT: string;
                public static EXTRA_CHILD_NUMBER: string;
                public static EXTRA_CNA: string;
                public static EXTRA_CNAP: string;
                public static EXTRA_CODEC: string;
                public static EXTRA_CONFERENCE: string;
                public static EXTRA_CONFERENCE_AVAIL: string;
                public static EXTRA_DIALSTRING: string;
                public static EXTRA_DISPLAY_TEXT: string;
                public static EXTRA_E_CALL: string;
                public static EXTRA_IS_CALL_PULL: string;
                public static EXTRA_OEM_EXTRAS: string;
                public static EXTRA_OI: string;
                public static EXTRA_OIR: string;
                public static EXTRA_REMOTE_URI: string;
                public static EXTRA_USSD: string;
                public static EXTRA_VMS: string;
                public static OIR_DEFAULT: number;
                public static OIR_PRESENTATION_NOT_RESTRICTED: number;
                public static OIR_PRESENTATION_PAYPHONE: number;
                public static OIR_PRESENTATION_RESTRICTED: number;
                public static OIR_PRESENTATION_UNKNOWN: number;
                public static SERVICE_TYPE_EMERGENCY: number;
                public static SERVICE_TYPE_NONE: number;
                public static SERVICE_TYPE_NORMAL: number;
                public mCallExtras: globalAndroid.os.Bundle;
                public mCallType: number;
                public mMediaProfile: com.android.ims.ImsStreamMediaProfile;
                public mRestrictCause: number;
                public mServiceType: number;
                public constructor(param0: number, param1: number);
                public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                public static getVideoStateFromCallType(param0: number): number;
                public static OIRToPresentation(param0: number): number;
                public setCallExtraInt(param0: string, param1: number): void;
                public static getVideoStateFromImsCallProfile(param0: com.android.ims.ImsCallProfile): number;
                public getCallExtraInt(param0: string, param1: number): number;
                public toString(): string;
                public constructor(param0: globalAndroid.os.Parcel);
                public static getCallTypeFromVideoState(param0: number): number;
                public getCallExtraBoolean(param0: string): boolean;
                public updateCallType(param0: com.android.ims.ImsCallProfile): void;
                public constructor();
                public isVideoCall(): boolean;
                public updateCallExtras(param0: com.android.ims.ImsCallProfile): void;
                public getCallExtraBoolean(param0: string, param1: boolean): boolean;
                public setCallExtra(param0: string, param1: string): void;
                public static presentationToOIR(param0: number): number;
                public describeContents(): number;
                public getCallExtra(param0: string): string;
                public getCallExtra(param0: string, param1: string): string;
                public setCallExtraBoolean(param0: string, param1: boolean): void;
                public getCallExtraInt(param0: string): number;
                public isVideoPaused(): boolean;
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export class ImsConferenceState extends java.lang.Object {
                public static class: java.lang.Class<com.android.ims.ImsConferenceState>;
                public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.ims.ImsConferenceState>;
                public static DISPLAY_TEXT: string;
                public static ENDPOINT: string;
                public static SIP_STATUS_CODE: string;
                public static STATUS: string;
                public static STATUS_ALERTING: string;
                public static STATUS_CONNECTED: string;
                public static STATUS_CONNECT_FAIL: string;
                public static STATUS_DIALING_IN: string;
                public static STATUS_DIALING_OUT: string;
                public static STATUS_DISCONNECTED: string;
                public static STATUS_DISCONNECTING: string;
                public static STATUS_MUTED_VIA_FOCUS: string;
                public static STATUS_ON_HOLD: string;
                public static STATUS_PENDING: string;
                public static USER: string;
                public mParticipants: java.util.HashMap<string, globalAndroid.os.Bundle>;
                public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                public static getConnectionStateForStatus(param0: string): number;
                public describeContents(): number;
                public constructor(param0: globalAndroid.os.Parcel);
                public constructor();
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export class ImsConfig extends java.lang.Object {
                public static class: java.lang.Class<com.android.ims.ImsConfig>;
                public static ACTION_IMS_CONFIG_CHANGED: string;
                public static ACTION_IMS_FEATURE_CHANGED: string;
                public static EXTRA_CHANGED_ITEM: string;
                public static EXTRA_NEW_VALUE: string;
                public setFeatureValue(param0: number, param1: number, param2: number, param3: com.android.ims.ImsConfigListener): void;
                public getFeatureValue(param0: number, param1: number, param2: com.android.ims.ImsConfigListener): void;
                public setProvisionedStringValue(param0: number, param1: string): number;
                public setProvisionedValue(param0: number, param1: number): number;
                public getProvisionedStringValue(param0: number): string;
                public constructor(param0: com.android.ims.internal.IImsConfig, param1: globalAndroid.content.Context);
                public getProvisionedValue(param0: number): number;
            }
            export module ImsConfig {
                export class ConfigConstants extends java.lang.Object {
                    public static class: java.lang.Class<com.android.ims.ImsConfig.ConfigConstants>;
                    public static AMR_BANDWIDTH_EFFICIENT_PT: number;
                    public static AMR_DEFAULT_MODE: number;
                    public static AMR_OCTET_ALIGNED_PT: number;
                    public static AMR_WB_BANDWIDTH_EFFICIENT_PT: number;
                    public static AMR_WB_OCTET_ALIGNED_PT: number;
                    public static AVAILABILITY_CACHE_EXPIRATION: number;
                    public static CANCELLATION_TIMER: number;
                    public static CAPABILITIES_CACHE_EXPIRATION: number;
                    public static CAPABILITIES_POLL_INTERVAL: number;
                    public static CAPABILITY_DISCOVERY_ENABLED: number;
                    public static CAPAB_POLL_LIST_SUB_EXP: number;
                    public static CONFIG_START: number;
                    public static DOMAIN_NAME: number;
                    public static DTMF_NB_PT: number;
                    public static DTMF_WB_PT: number;
                    public static EAB_SETTING_ENABLED: number;
                    public static GZIP_FLAG: number;
                    public static KEEP_ALIVE_ENABLED: number;
                    public static LBO_PCSCF_ADDRESS: number;
                    public static LVC_SETTING_ENABLED: number;
                    public static MAX_NUMENTRIES_IN_RCL: number;
                    public static MIN_SE: number;
                    public static MOBILE_DATA_ENABLED: number;
                    public static PROVISIONED_CONFIG_END: number;
                    public static PROVISIONED_CONFIG_START: number;
                    public static PUBLISH_TIMER: number;
                    public static PUBLISH_TIMER_EXTENDED: number;
                    public static REGISTRATION_RETRY_BASE_TIME_SEC: number;
                    public static REGISTRATION_RETRY_MAX_TIME_SEC: number;
                    public static RTT_SETTING_ENABLED: number;
                    public static SILENT_REDIAL_ENABLE: number;
                    public static SIP_ACK_RECEIPT_WAIT_TIME_MSEC: number;
                    public static SIP_ACK_RETX_WAIT_TIME_MSEC: number;
                    public static SIP_INVITE_REQ_RETX_INTERVAL_MSEC: number;
                    public static SIP_INVITE_RSP_RETX_INTERVAL_MSEC: number;
                    public static SIP_INVITE_RSP_RETX_WAIT_TIME_MSEC: number;
                    public static SIP_INVITE_RSP_WAIT_TIME_MSEC: number;
                    public static SIP_NON_INVITE_REQ_RETX_INTERVAL_MSEC: number;
                    public static SIP_NON_INVITE_REQ_RETX_WAIT_TIME_MSEC: number;
                    public static SIP_NON_INVITE_RSP_RETX_WAIT_TIME_MSEC: number;
                    public static SIP_NON_INVITE_TXN_TIMEOUT_TIMER_MSEC: number;
                    public static SIP_SESSION_TIMER: number;
                    public static SIP_T1_TIMER: number;
                    public static SIP_T2_TIMER: number;
                    public static SIP_TF_TIMER: number;
                    public static SMS_FORMAT: number;
                    public static SMS_OVER_IP: number;
                    public static SMS_PSI: number;
                    public static SOURCE_THROTTLE_PUBLISH: number;
                    public static SPEECH_END_PORT: number;
                    public static SPEECH_START_PORT: number;
                    public static TDELAY: number;
                    public static TH_1x: number;
                    public static TH_LTE1: number;
                    public static TH_LTE2: number;
                    public static TH_LTE3: number;
                    public static T_EPDG_1X: number;
                    public static T_EPDG_LTE: number;
                    public static T_EPDG_WIFI: number;
                    public static VICE_SETTING_ENABLED: number;
                    public static VIDEO_QUALITY: number;
                    public static VLT_SETTING_ENABLED: number;
                    public static VOCODER_AMRMODESET: number;
                    public static VOCODER_AMRWBMODESET: number;
                    public static VOICE_OVER_WIFI_MODE: number;
                    public static VOICE_OVER_WIFI_ROAMING: number;
                    public static VOICE_OVER_WIFI_SETTING_ENABLED: number;
                    public static VOLTE_USER_OPT_IN_STATUS: number;
                    public static VOWT_A: number;
                    public static VOWT_B: number;
                    public constructor();
                }
                export class FeatureConstants extends java.lang.Object {
                    public static class: java.lang.Class<com.android.ims.ImsConfig.FeatureConstants>;
                    public static FEATURE_TYPE_UNKNOWN: number;
                    public static FEATURE_TYPE_UT_OVER_LTE: number;
                    public static FEATURE_TYPE_UT_OVER_WIFI: number;
                    public static FEATURE_TYPE_VIDEO_OVER_LTE: number;
                    public static FEATURE_TYPE_VIDEO_OVER_WIFI: number;
                    public static FEATURE_TYPE_VOICE_OVER_LTE: number;
                    public static FEATURE_TYPE_VOICE_OVER_WIFI: number;
                    public constructor();
                }
                export class FeatureValueConstants extends java.lang.Object {
                    public static class: java.lang.Class<com.android.ims.ImsConfig.FeatureValueConstants>;
                    public static OFF: number;
                    public static ON: number;
                    public constructor();
                }
                export class OperationStatusConstants extends java.lang.Object {
                    public static class: java.lang.Class<com.android.ims.ImsConfig.OperationStatusConstants>;
                    public static FAILED: number;
                    public static SUCCESS: number;
                    public static UNKNOWN: number;
                    public static UNSUPPORTED_CAUSE_DISABLED: number;
                    public static UNSUPPORTED_CAUSE_NONE: number;
                    public static UNSUPPORTED_CAUSE_RAT: number;
                    public constructor();
                }
                export class OperationValuesConstants extends java.lang.Object {
                    public static class: java.lang.Class<com.android.ims.ImsConfig.OperationValuesConstants>;
                    public static VIDEO_QUALITY_HIGH: number;
                    public static VIDEO_QUALITY_LOW: number;
                    public static VIDEO_QUALITY_UNKNOWN: number;
                    public constructor();
                }
                export class VideoQualityFeatureValuesConstants extends java.lang.Object {
                    public static class: java.lang.Class<com.android.ims.ImsConfig.VideoQualityFeatureValuesConstants>;
                    public static HIGH: number;
                    public static LOW: number;
                    public constructor();
                }
                export class WfcModeFeatureValueConstants extends java.lang.Object {
                    public static class: java.lang.Class<com.android.ims.ImsConfig.WfcModeFeatureValueConstants>;
                    public static CELLULAR_PREFERRED: number;
                    public static WIFI_ONLY: number;
                    public static WIFI_PREFERRED: number;
                    public constructor();
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export class ImsConfigListener extends java.lang.Object {
                public static class: java.lang.Class<com.android.ims.ImsConfigListener>;
                /**
                 * Constructs a new instance of the com.android.ims.ImsConfigListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                 */
                public constructor(implementation: {
                    onGetFeatureResponse(param0: number, param1: number, param2: number, param3: number): void;
                    onGetVideoQuality(param0: number, param1: number): void;
                    onSetFeatureResponse(param0: number, param1: number, param2: number, param3: number): void;
                    onSetVideoQuality(param0: number): void;
                });
                public constructor();
                public onSetFeatureResponse(param0: number, param1: number, param2: number, param3: number): void;
                public onSetVideoQuality(param0: number): void;
                public onGetFeatureResponse(param0: number, param1: number, param2: number, param3: number): void;
                public onGetVideoQuality(param0: number, param1: number): void;
            }
            export module ImsConfigListener {
                export abstract class Stub implements com.android.ims.ImsConfigListener {
                    public static class: java.lang.Class<com.android.ims.ImsConfigListener.Stub>;
                    public onSetVideoQuality(param0: number): void;
                    public constructor();
                    public onGetFeatureResponse(param0: number, param1: number, param2: number, param3: number): void;
                    public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                    public onGetVideoQuality(param0: number, param1: number): void;
                    public asBinder(): globalAndroid.os.IBinder;
                    public static asInterface(param0: globalAndroid.os.IBinder): com.android.ims.ImsConfigListener;
                    public onSetFeatureResponse(param0: number, param1: number, param2: number, param3: number): void;
                }
                export module Stub {
                    export class Proxy extends com.android.ims.ImsConfigListener {
                        public static class: java.lang.Class<com.android.ims.ImsConfigListener.Stub.Proxy>;
                        public onGetVideoQuality(param0: number, param1: number): void;
                        public getInterfaceDescriptor(): string;
                        public onSetFeatureResponse(param0: number, param1: number, param2: number, param3: number): void;
                        public onSetVideoQuality(param0: number): void;
                        public asBinder(): globalAndroid.os.IBinder;
                        public onGetFeatureResponse(param0: number, param1: number, param2: number, param3: number): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export class ImsException extends java.lang.Object {
                public static class: java.lang.Class<com.android.ims.ImsException>;
                public constructor(param0: string, param1: java.lang.Throwable, param2: number);
                public constructor(param0: string, param1: number);
                public getCode(): number;
                public constructor();
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export class ImsExternalCallState extends java.lang.Object {
                public static class: java.lang.Class<com.android.ims.ImsExternalCallState>;
                public static CALL_STATE_CONFIRMED: number;
                public static CALL_STATE_TERMINATED: number;
                public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.ims.ImsExternalCallState>;
                public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                public getAddress(): globalAndroid.net.Uri;
                public isCallPullable(): boolean;
                public constructor(param0: number, param1: globalAndroid.net.Uri, param2: boolean, param3: number, param4: number, param5: boolean);
                public getCallState(): number;
                public describeContents(): number;
                public isCallHeld(): boolean;
                public toString(): string;
                public constructor(param0: globalAndroid.os.Parcel);
                public getCallId(): number;
                public constructor();
                public getCallType(): number;
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export class ImsReasonInfo extends java.lang.Object {
                public static class: java.lang.Class<com.android.ims.ImsReasonInfo>;
                public static CODE_ACCESS_CLASS_BLOCKED: number;
                public static CODE_ANSWERED_ELSEWHERE: number;
                public static CODE_BLACKLISTED_CALL_ID: number;
                public static CODE_CALL_DROP_IWLAN_TO_LTE_UNAVAILABLE: number;
                public static CODE_CALL_END_CAUSE_CALL_PULL: number;
                public static CODE_CALL_PULL_OUT_OF_SYNC: number;
                public static CODE_DATA_DISABLED: number;
                public static CODE_DATA_LIMIT_REACHED: number;
                public static CODE_ECBM_NOT_SUPPORTED: number;
                public static CODE_EMERGENCY_PERM_FAILURE: number;
                public static CODE_EMERGENCY_TEMP_FAILURE: number;
                public static CODE_EPDG_TUNNEL_ESTABLISH_FAILURE: number;
                public static CODE_EPDG_TUNNEL_LOST_CONNECTION: number;
                public static CODE_EPDG_TUNNEL_REKEY_FAILURE: number;
                public static CODE_FDN_BLOCKED: number;
                public static CODE_IKEV2_AUTH_FAILURE: number;
                public static CODE_IMEI_NOT_ACCEPTED: number;
                public static CODE_IWLAN_DPD_FAILURE: number;
                public static CODE_LOCAL_CALL_BARRED: number;
                public static CODE_LOCAL_CALL_BUSY: number;
                public static CODE_LOCAL_CALL_CS_RETRY_REQUIRED: number;
                public static CODE_LOCAL_CALL_DECLINE: number;
                public static CODE_LOCAL_CALL_EXCEEDED: number;
                public static CODE_LOCAL_CALL_RESOURCE_RESERVATION_FAILED: number;
                public static CODE_LOCAL_CALL_TERMINATED: number;
                public static CODE_LOCAL_CALL_VCC_ON_PROGRESSING: number;
                public static CODE_LOCAL_CALL_VOLTE_RETRY_REQUIRED: number;
                public static CODE_LOCAL_ENDED_BY_CONFERENCE_MERGE: number;
                public static CODE_LOCAL_HO_NOT_FEASIBLE: number;
                public static CODE_LOCAL_ILLEGAL_ARGUMENT: number;
                public static CODE_LOCAL_ILLEGAL_STATE: number;
                public static CODE_LOCAL_IMS_SERVICE_DOWN: number;
                public static CODE_LOCAL_INTERNAL_ERROR: number;
                public static CODE_LOCAL_LOW_BATTERY: number;
                public static CODE_LOCAL_NETWORK_IP_CHANGED: number;
                public static CODE_LOCAL_NETWORK_NO_LTE_COVERAGE: number;
                public static CODE_LOCAL_NETWORK_NO_SERVICE: number;
                public static CODE_LOCAL_NETWORK_ROAMING: number;
                public static CODE_LOCAL_NOT_REGISTERED: number;
                public static CODE_LOCAL_NO_PENDING_CALL: number;
                public static CODE_LOCAL_POWER_OFF: number;
                public static CODE_LOCAL_SERVICE_UNAVAILABLE: number;
                public static CODE_LOW_BATTERY: number;
                public static CODE_MAXIMUM_NUMBER_OF_CALLS_REACHED: number;
                public static CODE_MEDIA_INIT_FAILED: number;
                public static CODE_MEDIA_NOT_ACCEPTABLE: number;
                public static CODE_MEDIA_NO_DATA: number;
                public static CODE_MEDIA_UNSPECIFIED: number;
                public static CODE_MULTIENDPOINT_NOT_SUPPORTED: number;
                public static CODE_NETWORK_DETACH: number;
                public static CODE_NETWORK_REJECT: number;
                public static CODE_NETWORK_RESP_TIMEOUT: number;
                public static CODE_NO_VALID_SIM: number;
                public static CODE_OEM_CAUSE_1: number;
                public static CODE_OEM_CAUSE_10: number;
                public static CODE_OEM_CAUSE_11: number;
                public static CODE_OEM_CAUSE_12: number;
                public static CODE_OEM_CAUSE_13: number;
                public static CODE_OEM_CAUSE_14: number;
                public static CODE_OEM_CAUSE_15: number;
                public static CODE_OEM_CAUSE_2: number;
                public static CODE_OEM_CAUSE_3: number;
                public static CODE_OEM_CAUSE_4: number;
                public static CODE_OEM_CAUSE_5: number;
                public static CODE_OEM_CAUSE_6: number;
                public static CODE_OEM_CAUSE_7: number;
                public static CODE_OEM_CAUSE_8: number;
                public static CODE_OEM_CAUSE_9: number;
                public static CODE_RADIO_ACCESS_FAILURE: number;
                public static CODE_RADIO_INTERNAL_ERROR: number;
                public static CODE_RADIO_LINK_FAILURE: number;
                public static CODE_RADIO_LINK_LOST: number;
                public static CODE_RADIO_OFF: number;
                public static CODE_RADIO_RELEASE_ABNORMAL: number;
                public static CODE_RADIO_RELEASE_NORMAL: number;
                public static CODE_RADIO_SETUP_FAILURE: number;
                public static CODE_RADIO_UPLINK_FAILURE: number;
                public static CODE_REGISTRATION_ERROR: number;
                public static CODE_REMOTE_CALL_DECLINE: number;
                public static CODE_SIP_BAD_ADDRESS: number;
                public static CODE_SIP_BAD_REQUEST: number;
                public static CODE_SIP_BUSY: number;
                public static CODE_SIP_CLIENT_ERROR: number;
                public static CODE_SIP_FORBIDDEN: number;
                public static CODE_SIP_GLOBAL_ERROR: number;
                public static CODE_SIP_NOT_ACCEPTABLE: number;
                public static CODE_SIP_NOT_FOUND: number;
                public static CODE_SIP_NOT_REACHABLE: number;
                public static CODE_SIP_NOT_SUPPORTED: number;
                public static CODE_SIP_REDIRECTED: number;
                public static CODE_SIP_REQUEST_CANCELLED: number;
                public static CODE_SIP_REQUEST_TIMEOUT: number;
                public static CODE_SIP_SERVER_ERROR: number;
                public static CODE_SIP_SERVER_INTERNAL_ERROR: number;
                public static CODE_SIP_SERVER_TIMEOUT: number;
                public static CODE_SIP_SERVICE_UNAVAILABLE: number;
                public static CODE_SIP_TEMPRARILY_UNAVAILABLE: number;
                public static CODE_SIP_USER_REJECTED: number;
                public static CODE_SUPP_SVC_CANCELLED: number;
                public static CODE_SUPP_SVC_FAILED: number;
                public static CODE_SUPP_SVC_REINVITE_COLLISION: number;
                public static CODE_TIMEOUT_1XX_WAITING: number;
                public static CODE_TIMEOUT_NO_ANSWER: number;
                public static CODE_TIMEOUT_NO_ANSWER_CALL_UPDATE: number;
                public static CODE_UNSPECIFIED: number;
                public static CODE_USER_DECLINE: number;
                public static CODE_USER_IGNORE: number;
                public static CODE_USER_NOANSWER: number;
                public static CODE_USER_TERMINATED: number;
                public static CODE_USER_TERMINATED_BY_REMOTE: number;
                public static CODE_UT_CB_PASSWORD_MISMATCH: number;
                public static CODE_UT_NETWORK_ERROR: number;
                public static CODE_UT_NOT_SUPPORTED: number;
                public static CODE_UT_OPERATION_NOT_ALLOWED: number;
                public static CODE_UT_SERVICE_UNAVAILABLE: number;
                public static CODE_WIFI_LOST: number;
                public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.ims.ImsReasonInfo>;
                public static EXTRA_CODE_CALL_RETRY_BY_SETTINGS: number;
                public static EXTRA_CODE_CALL_RETRY_NORMAL: number;
                public static EXTRA_CODE_CALL_RETRY_SILENT_REDIAL: number;
                public static EXTRA_MSG_SERVICE_NOT_AUTHORIZED: string;
                public static SOMC_SPECIFICATION: number;
                public mCode: number;
                public mExtraCode: number;
                public mExtraMessage: string;
                public constructor(param0: number, param1: number);
                public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                public getExtraMessage(): string;
                public getExtraCode(): number;
                public constructor(param0: number, param1: number, param2: string);
                public describeContents(): number;
                public getCode(): number;
                public toString(): string;
                public constructor(param0: globalAndroid.os.Parcel);
                public constructor();
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export class ImsSsInfo extends java.lang.Object {
                public static class: java.lang.Class<com.android.ims.ImsSsInfo>;
                public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.ims.ImsSsInfo>;
                public static DISABLED: number;
                public static ENABLED: number;
                public static NOT_REGISTERED: number;
                public mIcbNum: string;
                public mStatus: number;
                public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                public describeContents(): number;
                public toString(): string;
                public constructor(param0: globalAndroid.os.Parcel);
                public constructor();
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export class ImsStreamMediaProfile extends java.lang.Object {
                public static class: java.lang.Class<com.android.ims.ImsStreamMediaProfile>;
                public static AUDIO_QUALITY_AMR: number;
                public static AUDIO_QUALITY_AMR_WB: number;
                public static AUDIO_QUALITY_EVRC: number;
                public static AUDIO_QUALITY_EVRC_B: number;
                public static AUDIO_QUALITY_EVRC_NW: number;
                public static AUDIO_QUALITY_EVRC_WB: number;
                public static AUDIO_QUALITY_EVS_FB: number;
                public static AUDIO_QUALITY_EVS_NB: number;
                public static AUDIO_QUALITY_EVS_SWB: number;
                public static AUDIO_QUALITY_EVS_WB: number;
                public static AUDIO_QUALITY_G711A: number;
                public static AUDIO_QUALITY_G711AB: number;
                public static AUDIO_QUALITY_G711U: number;
                public static AUDIO_QUALITY_G722: number;
                public static AUDIO_QUALITY_G723: number;
                public static AUDIO_QUALITY_G729: number;
                public static AUDIO_QUALITY_GSM_EFR: number;
                public static AUDIO_QUALITY_GSM_FR: number;
                public static AUDIO_QUALITY_GSM_HR: number;
                public static AUDIO_QUALITY_NONE: number;
                public static AUDIO_QUALITY_QCELP13K: number;
                public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.ims.ImsStreamMediaProfile>;
                public static DIRECTION_INACTIVE: number;
                public static DIRECTION_INVALID: number;
                public static DIRECTION_RECEIVE: number;
                public static DIRECTION_SEND: number;
                public static DIRECTION_SEND_RECEIVE: number;
                public static RTT_MODE_DISABLED: number;
                public static RTT_MODE_FULL: number;
                public static VIDEO_QUALITY_NONE: number;
                public static VIDEO_QUALITY_QCIF: number;
                public static VIDEO_QUALITY_QVGA_LANDSCAPE: number;
                public static VIDEO_QUALITY_QVGA_PORTRAIT: number;
                public static VIDEO_QUALITY_VGA_LANDSCAPE: number;
                public static VIDEO_QUALITY_VGA_PORTRAIT: number;
                public mAudioDirection: number;
                public mAudioQuality: number;
                public mRttMode: number;
                public mVideoDirection: number;
                public mVideoQuality: number;
                public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                public copyFrom(param0: com.android.ims.ImsStreamMediaProfile): void;
                public constructor(param0: number, param1: number, param2: number, param3: number);
                public setRttMode(param0: number): void;
                public describeContents(): number;
                public constructor(param0: number);
                public isRttCall(): boolean;
                public toString(): string;
                public constructor(param0: globalAndroid.os.Parcel);
                public constructor();
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export class ImsSuppServiceNotification extends java.lang.Object {
                public static class: java.lang.Class<com.android.ims.ImsSuppServiceNotification>;
                public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.ims.ImsSuppServiceNotification>;
                public code: number;
                public history: string[];
                public index: number;
                public notificationType: number;
                public number: string;
                public type: number;
                public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                public describeContents(): number;
                public toString(): string;
                public constructor(param0: globalAndroid.os.Parcel);
                public constructor();
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export class ImsUtInterface extends java.lang.Object {
                public static class: java.lang.Class<com.android.ims.ImsUtInterface>;
                /**
                 * Constructs a new instance of the com.android.ims.ImsUtInterface interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                 */
                public constructor(implementation: {
                    queryCLIP(param0: globalAndroid.os.Message): void;
                    queryCLIR(param0: globalAndroid.os.Message): void;
                    queryCOLP(param0: globalAndroid.os.Message): void;
                    queryCOLR(param0: globalAndroid.os.Message): void;
                    queryCallBarring(param0: number, param1: number, param2: globalAndroid.os.Message): void;
                    queryCallBarring(param0: number, param1: globalAndroid.os.Message): void;
                    queryCallForward(param0: number, param1: string, param2: number, param3: globalAndroid.os.Message): void;
                    queryCallForward(param0: number, param1: string, param2: globalAndroid.os.Message): void;
                    queryCallWaiting(param0: globalAndroid.os.Message): void;
                    updateCLIP(param0: boolean, param1: globalAndroid.os.Message): void;
                    updateCLIR(param0: number, param1: globalAndroid.os.Message): void;
                    updateCOLP(param0: boolean, param1: globalAndroid.os.Message): void;
                    updateCOLR(param0: number, param1: globalAndroid.os.Message): void;
                    updateCallBarring(param0: number, param1: number, param2: number, param3: globalAndroid.os.Message, param4: string[]): void;
                    updateCallBarring(param0: number, param1: number, param2: globalAndroid.os.Message, param3: string[]): void;
                    updateCallForward(param0: number, param1: number, param2: string, param3: number, param4: number, param5: globalAndroid.os.Message): void;
                    updateCallWaiting(param0: boolean, param1: number, param2: globalAndroid.os.Message): void;
                });
                public constructor();
                public static CB_BAOC: number;
                public static CB_BOIC_EXHC: number;
                public static CDIV_CF_NOT_LOGGED_IN: number;
                public static INVALID: number;
                public static OIR_PRESENTATION_NOT_RESTRICTED: number;
                public static CB_BAIC: number;
                public static OIR_DEFAULT: number;
                public static CB_BIC_ACR: number;
                public static CB_BS_MT: number;
                public static CB_BIC_WR: number;
                public static ACTION_DEACTIVATION: number;
                public static CDIV_CF_NO_REPLY: number;
                public static CDIV_CF_BUSY: number;
                public static CB_BA_MT: number;
                public static OIR_PRESENTATION_RESTRICTED: number;
                public static ACTION_ERASURE: number;
                public static CB_BA_MO: number;
                public static CB_BA_ALL: number;
                public static ACTION_INTERROGATION: number;
                public static CDIV_CF_ALL: number;
                public static CDIV_CF_UNCONDITIONAL: number;
                public static CB_BOIC: number;
                public static ACTION_REGISTRATION: number;
                public static CDIV_CF_NOT_REACHABLE: number;
                public static ACTION_ACTIVATION: number;
                public static CDIV_CF_ALL_CONDITIONAL: number;
                public queryCLIP(param0: globalAndroid.os.Message): void;
                public queryCOLP(param0: globalAndroid.os.Message): void;
                public updateCallBarring(param0: number, param1: number, param2: number, param3: globalAndroid.os.Message, param4: string[]): void;
                public queryCallBarring(param0: number, param1: number, param2: globalAndroid.os.Message): void;
                public updateCallBarring(param0: number, param1: number, param2: globalAndroid.os.Message, param3: string[]): void;
                public updateCOLP(param0: boolean, param1: globalAndroid.os.Message): void;
                public queryCallBarring(param0: number, param1: globalAndroid.os.Message): void;
                public updateCOLR(param0: number, param1: globalAndroid.os.Message): void;
                public updateCallWaiting(param0: boolean, param1: number, param2: globalAndroid.os.Message): void;
                public queryCallForward(param0: number, param1: string, param2: number, param3: globalAndroid.os.Message): void;
                public queryCLIR(param0: globalAndroid.os.Message): void;
                public queryCallForward(param0: number, param1: string, param2: globalAndroid.os.Message): void;
                public queryCallWaiting(param0: globalAndroid.os.Message): void;
                public updateCLIP(param0: boolean, param1: globalAndroid.os.Message): void;
                public updateCLIR(param0: number, param1: globalAndroid.os.Message): void;
                public updateCallForward(param0: number, param1: number, param2: string, param3: number, param4: number, param5: globalAndroid.os.Message): void;
                public queryCOLR(param0: globalAndroid.os.Message): void;
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export class IImsCallSession extends java.lang.Object {
                    public static class: java.lang.Class<com.android.ims.internal.IImsCallSession>;
                    /**
                     * Constructs a new instance of the com.android.ims.internal.IImsCallSession interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        accept(param0: number, param1: com.android.ims.ImsStreamMediaProfile): void;
                        close(): void;
                        extendToConference(param0: string[]): void;
                        getCallId(): string;
                        getCallProfile(): com.android.ims.ImsCallProfile;
                        getLocalCallProfile(): com.android.ims.ImsCallProfile;
                        getProperty(param0: string): string;
                        getRemoteCallProfile(): com.android.ims.ImsCallProfile;
                        getState(): number;
                        getVideoCallProvider(): com.android.ims.internal.IImsVideoCallProvider;
                        hold(param0: com.android.ims.ImsStreamMediaProfile): void;
                        inviteParticipants(param0: string[]): void;
                        isInCall(): boolean;
                        isMultiparty(): boolean;
                        merge(): void;
                        reject(param0: number): void;
                        removeParticipants(param0: string[]): void;
                        resume(param0: com.android.ims.ImsStreamMediaProfile): void;
                        sendDtmf(param0: string, param1: globalAndroid.os.Message): void;
                        sendRttMessage(param0: string): void;
                        sendRttModifyRequest(param0: com.android.ims.ImsCallProfile): void;
                        sendRttModifyResponse(param0: boolean): void;
                        sendUssd(param0: string): void;
                        setListener(param0: com.android.ims.internal.IImsCallSessionListener): void;
                        setMute(param0: boolean): void;
                        start(param0: string, param1: com.android.ims.ImsCallProfile): void;
                        startConference(param0: string[], param1: com.android.ims.ImsCallProfile): void;
                        startDtmf(param0: string): void;
                        stopDtmf(): void;
                        terminate(param0: number): void;
                        update(param0: number, param1: com.android.ims.ImsStreamMediaProfile): void;
                    });
                    public constructor();
                    public getCallId(): string;
                    public setListener(param0: com.android.ims.internal.IImsCallSessionListener): void;
                    public start(param0: string, param1: com.android.ims.ImsCallProfile): void;
                    public startDtmf(param0: string): void;
                    public extendToConference(param0: string[]): void;
                    public reject(param0: number): void;
                    public removeParticipants(param0: string[]): void;
                    public sendRttModifyResponse(param0: boolean): void;
                    public update(param0: number, param1: com.android.ims.ImsStreamMediaProfile): void;
                    public getRemoteCallProfile(): com.android.ims.ImsCallProfile;
                    public inviteParticipants(param0: string[]): void;
                    public startConference(param0: string[], param1: com.android.ims.ImsCallProfile): void;
                    public sendUssd(param0: string): void;
                    public close(): void;
                    public isInCall(): boolean;
                    public getCallProfile(): com.android.ims.ImsCallProfile;
                    public getVideoCallProvider(): com.android.ims.internal.IImsVideoCallProvider;
                    public stopDtmf(): void;
                    public merge(): void;
                    public setMute(param0: boolean): void;
                    public sendDtmf(param0: string, param1: globalAndroid.os.Message): void;
                    public sendRttMessage(param0: string): void;
                    public isMultiparty(): boolean;
                    public getLocalCallProfile(): com.android.ims.ImsCallProfile;
                    public sendRttModifyRequest(param0: com.android.ims.ImsCallProfile): void;
                    public hold(param0: com.android.ims.ImsStreamMediaProfile): void;
                    public accept(param0: number, param1: com.android.ims.ImsStreamMediaProfile): void;
                    public resume(param0: com.android.ims.ImsStreamMediaProfile): void;
                    public getProperty(param0: string): string;
                    public terminate(param0: number): void;
                    public getState(): number;
                }
                export module IImsCallSession {
                    export abstract class Stub implements com.android.ims.internal.IImsCallSession {
                        public static class: java.lang.Class<com.android.ims.internal.IImsCallSession.Stub>;
                        public isInCall(): boolean;
                        public removeParticipants(param0: string[]): void;
                        public extendToConference(param0: string[]): void;
                        public getVideoCallProvider(): com.android.ims.internal.IImsVideoCallProvider;
                        public close(): void;
                        public accept(param0: number, param1: com.android.ims.ImsStreamMediaProfile): void;
                        public sendRttMessage(param0: string): void;
                        public start(param0: string, param1: com.android.ims.ImsCallProfile): void;
                        public reject(param0: number): void;
                        public setListener(param0: com.android.ims.internal.IImsCallSessionListener): void;
                        public getCallId(): string;
                        public merge(): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public hold(param0: com.android.ims.ImsStreamMediaProfile): void;
                        public update(param0: number, param1: com.android.ims.ImsStreamMediaProfile): void;
                        public getProperty(param0: string): string;
                        public getRemoteCallProfile(): com.android.ims.ImsCallProfile;
                        public asBinder(): globalAndroid.os.IBinder;
                        public startConference(param0: string[], param1: com.android.ims.ImsCallProfile): void;
                        public terminate(param0: number): void;
                        public constructor();
                        public getCallProfile(): com.android.ims.ImsCallProfile;
                        public sendRttModifyRequest(param0: com.android.ims.ImsCallProfile): void;
                        public startDtmf(param0: string): void;
                        public sendDtmf(param0: string, param1: globalAndroid.os.Message): void;
                        public stopDtmf(): void;
                        public isMultiparty(): boolean;
                        public inviteParticipants(param0: string[]): void;
                        public getState(): number;
                        public sendRttModifyResponse(param0: boolean): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.ims.internal.IImsCallSession;
                        public getLocalCallProfile(): com.android.ims.ImsCallProfile;
                        public setMute(param0: boolean): void;
                        public resume(param0: com.android.ims.ImsStreamMediaProfile): void;
                        public sendUssd(param0: string): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.ims.internal.IImsCallSession {
                            public static class: java.lang.Class<com.android.ims.internal.IImsCallSession.Stub.Proxy>;
                            public sendDtmf(param0: string, param1: globalAndroid.os.Message): void;
                            public close(): void;
                            public terminate(param0: number): void;
                            public isInCall(): boolean;
                            public getVideoCallProvider(): com.android.ims.internal.IImsVideoCallProvider;
                            public resume(param0: com.android.ims.ImsStreamMediaProfile): void;
                            public startDtmf(param0: string): void;
                            public sendUssd(param0: string): void;
                            public reject(param0: number): void;
                            public stopDtmf(): void;
                            public merge(): void;
                            public setMute(param0: boolean): void;
                            public getCallId(): string;
                            public removeParticipants(param0: string[]): void;
                            public accept(param0: number, param1: com.android.ims.ImsStreamMediaProfile): void;
                            public setListener(param0: com.android.ims.internal.IImsCallSessionListener): void;
                            public hold(param0: com.android.ims.ImsStreamMediaProfile): void;
                            public inviteParticipants(param0: string[]): void;
                            public start(param0: string, param1: com.android.ims.ImsCallProfile): void;
                            public getState(): number;
                            public extendToConference(param0: string[]): void;
                            public getProperty(param0: string): string;
                            public getRemoteCallProfile(): com.android.ims.ImsCallProfile;
                            public update(param0: number, param1: com.android.ims.ImsStreamMediaProfile): void;
                            public sendRttMessage(param0: string): void;
                            public startConference(param0: string[], param1: com.android.ims.ImsCallProfile): void;
                            public sendRttModifyResponse(param0: boolean): void;
                            public getInterfaceDescriptor(): string;
                            public getLocalCallProfile(): com.android.ims.ImsCallProfile;
                            public asBinder(): globalAndroid.os.IBinder;
                            public sendRttModifyRequest(param0: com.android.ims.ImsCallProfile): void;
                            public getCallProfile(): com.android.ims.ImsCallProfile;
                            public isMultiparty(): boolean;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export class IImsCallSessionListener extends java.lang.Object {
                    public static class: java.lang.Class<com.android.ims.internal.IImsCallSessionListener>;
                    /**
                     * Constructs a new instance of the com.android.ims.internal.IImsCallSessionListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        callSessionConferenceExtendFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        callSessionConferenceExtendReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.internal.IImsCallSession, param2: com.android.ims.ImsCallProfile): void;
                        callSessionConferenceExtended(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.internal.IImsCallSession, param2: com.android.ims.ImsCallProfile): void;
                        callSessionConferenceStateUpdated(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsConferenceState): void;
                        callSessionHandover(param0: com.android.ims.internal.IImsCallSession, param1: number, param2: number, param3: com.android.ims.ImsReasonInfo): void;
                        callSessionHandoverFailed(param0: com.android.ims.internal.IImsCallSession, param1: number, param2: number, param3: com.android.ims.ImsReasonInfo): void;
                        callSessionHeld(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        callSessionHoldFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        callSessionHoldReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        callSessionInviteParticipantsRequestDelivered(param0: com.android.ims.internal.IImsCallSession): void;
                        callSessionInviteParticipantsRequestFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        callSessionMayHandover(param0: com.android.ims.internal.IImsCallSession, param1: number, param2: number): void;
                        callSessionMergeComplete(param0: com.android.ims.internal.IImsCallSession): void;
                        callSessionMergeFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        callSessionMergeStarted(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.internal.IImsCallSession, param2: com.android.ims.ImsCallProfile): void;
                        callSessionMultipartyStateChanged(param0: com.android.ims.internal.IImsCallSession, param1: boolean): void;
                        callSessionProgressing(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsStreamMediaProfile): void;
                        callSessionRemoveParticipantsRequestDelivered(param0: com.android.ims.internal.IImsCallSession): void;
                        callSessionRemoveParticipantsRequestFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        callSessionResumeFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        callSessionResumeReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        callSessionResumed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        callSessionRttMessageReceived(param0: string): void;
                        callSessionRttModifyRequestReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        callSessionRttModifyResponseReceived(param0: number): void;
                        callSessionStartFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        callSessionStarted(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        callSessionSuppServiceReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsSuppServiceNotification): void;
                        callSessionTerminated(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        callSessionTtyModeReceived(param0: com.android.ims.internal.IImsCallSession, param1: number): void;
                        callSessionUpdateFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        callSessionUpdateReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        callSessionUpdated(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        callSessionUssdMessageReceived(param0: com.android.ims.internal.IImsCallSession, param1: number, param2: string): void;
                    });
                    public constructor();
                    public callSessionRemoveParticipantsRequestFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                    public callSessionConferenceStateUpdated(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsConferenceState): void;
                    public callSessionStarted(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                    public callSessionInviteParticipantsRequestFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                    public callSessionConferenceExtended(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.internal.IImsCallSession, param2: com.android.ims.ImsCallProfile): void;
                    public callSessionTtyModeReceived(param0: com.android.ims.internal.IImsCallSession, param1: number): void;
                    public callSessionUpdateReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                    public callSessionMergeComplete(param0: com.android.ims.internal.IImsCallSession): void;
                    public callSessionMergeFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                    public callSessionInviteParticipantsRequestDelivered(param0: com.android.ims.internal.IImsCallSession): void;
                    public callSessionHeld(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                    public callSessionHoldFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                    public callSessionMayHandover(param0: com.android.ims.internal.IImsCallSession, param1: number, param2: number): void;
                    public callSessionStartFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                    public callSessionMergeStarted(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.internal.IImsCallSession, param2: com.android.ims.ImsCallProfile): void;
                    public callSessionTerminated(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                    public callSessionUpdated(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                    public callSessionResumeReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                    public callSessionProgressing(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsStreamMediaProfile): void;
                    public callSessionConferenceExtendReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.internal.IImsCallSession, param2: com.android.ims.ImsCallProfile): void;
                    public callSessionRemoveParticipantsRequestDelivered(param0: com.android.ims.internal.IImsCallSession): void;
                    public callSessionHoldReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                    public callSessionMultipartyStateChanged(param0: com.android.ims.internal.IImsCallSession, param1: boolean): void;
                    public callSessionResumed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                    public callSessionUpdateFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                    public callSessionRttModifyResponseReceived(param0: number): void;
                    public callSessionRttModifyRequestReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                    public callSessionUssdMessageReceived(param0: com.android.ims.internal.IImsCallSession, param1: number, param2: string): void;
                    public callSessionHandover(param0: com.android.ims.internal.IImsCallSession, param1: number, param2: number, param3: com.android.ims.ImsReasonInfo): void;
                    public callSessionConferenceExtendFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                    public callSessionResumeFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                    public callSessionHandoverFailed(param0: com.android.ims.internal.IImsCallSession, param1: number, param2: number, param3: com.android.ims.ImsReasonInfo): void;
                    public callSessionRttMessageReceived(param0: string): void;
                    public callSessionSuppServiceReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsSuppServiceNotification): void;
                }
                export module IImsCallSessionListener {
                    export abstract class Stub implements com.android.ims.internal.IImsCallSessionListener {
                        public static class: java.lang.Class<com.android.ims.internal.IImsCallSessionListener.Stub>;
                        public callSessionRttMessageReceived(param0: string): void;
                        public callSessionConferenceExtendReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.internal.IImsCallSession, param2: com.android.ims.ImsCallProfile): void;
                        public callSessionHandover(param0: com.android.ims.internal.IImsCallSession, param1: number, param2: number, param3: com.android.ims.ImsReasonInfo): void;
                        public callSessionRemoveParticipantsRequestDelivered(param0: com.android.ims.internal.IImsCallSession): void;
                        public callSessionUpdateReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        public callSessionHandoverFailed(param0: com.android.ims.internal.IImsCallSession, param1: number, param2: number, param3: com.android.ims.ImsReasonInfo): void;
                        public callSessionMayHandover(param0: com.android.ims.internal.IImsCallSession, param1: number, param2: number): void;
                        public callSessionRemoveParticipantsRequestFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        public callSessionMergeFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        public callSessionSuppServiceReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsSuppServiceNotification): void;
                        public callSessionTtyModeReceived(param0: com.android.ims.internal.IImsCallSession, param1: number): void;
                        public callSessionConferenceExtendFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        public callSessionConferenceExtended(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.internal.IImsCallSession, param2: com.android.ims.ImsCallProfile): void;
                        public callSessionHoldFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        public callSessionInviteParticipantsRequestFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        public callSessionConferenceStateUpdated(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsConferenceState): void;
                        public callSessionMultipartyStateChanged(param0: com.android.ims.internal.IImsCallSession, param1: boolean): void;
                        public callSessionInviteParticipantsRequestDelivered(param0: com.android.ims.internal.IImsCallSession): void;
                        public callSessionUssdMessageReceived(param0: com.android.ims.internal.IImsCallSession, param1: number, param2: string): void;
                        public callSessionRttModifyRequestReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public callSessionResumeReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        public callSessionMergeStarted(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.internal.IImsCallSession, param2: com.android.ims.ImsCallProfile): void;
                        public callSessionUpdated(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        public constructor();
                        public callSessionTerminated(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        public callSessionRttModifyResponseReceived(param0: number): void;
                        public callSessionHeld(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        public callSessionMergeComplete(param0: com.android.ims.internal.IImsCallSession): void;
                        public callSessionResumeFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        public callSessionResumed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        public callSessionStartFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        public callSessionHoldReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        public callSessionStarted(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        public callSessionUpdateFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.ims.internal.IImsCallSessionListener;
                        public callSessionProgressing(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsStreamMediaProfile): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.ims.internal.IImsCallSessionListener {
                            public static class: java.lang.Class<com.android.ims.internal.IImsCallSessionListener.Stub.Proxy>;
                            public callSessionRttModifyResponseReceived(param0: number): void;
                            public callSessionHoldFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                            public callSessionStarted(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                            public callSessionConferenceExtended(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.internal.IImsCallSession, param2: com.android.ims.ImsCallProfile): void;
                            public callSessionRttModifyRequestReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                            public callSessionMergeStarted(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.internal.IImsCallSession, param2: com.android.ims.ImsCallProfile): void;
                            public callSessionSuppServiceReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsSuppServiceNotification): void;
                            public callSessionResumeReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                            public callSessionHoldReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                            public callSessionResumeFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                            public callSessionMergeComplete(param0: com.android.ims.internal.IImsCallSession): void;
                            public callSessionStartFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                            public callSessionTtyModeReceived(param0: com.android.ims.internal.IImsCallSession, param1: number): void;
                            public callSessionRemoveParticipantsRequestFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                            public callSessionUpdated(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                            public callSessionUssdMessageReceived(param0: com.android.ims.internal.IImsCallSession, param1: number, param2: string): void;
                            public callSessionHandover(param0: com.android.ims.internal.IImsCallSession, param1: number, param2: number, param3: com.android.ims.ImsReasonInfo): void;
                            public callSessionMergeFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                            public callSessionResumed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                            public callSessionInviteParticipantsRequestDelivered(param0: com.android.ims.internal.IImsCallSession): void;
                            public callSessionRemoveParticipantsRequestDelivered(param0: com.android.ims.internal.IImsCallSession): void;
                            public callSessionConferenceExtendFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                            public callSessionTerminated(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public callSessionMultipartyStateChanged(param0: com.android.ims.internal.IImsCallSession, param1: boolean): void;
                            public callSessionRttMessageReceived(param0: string): void;
                            public callSessionMayHandover(param0: com.android.ims.internal.IImsCallSession, param1: number, param2: number): void;
                            public callSessionProgressing(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsStreamMediaProfile): void;
                            public callSessionInviteParticipantsRequestFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                            public callSessionConferenceStateUpdated(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsConferenceState): void;
                            public callSessionUpdateReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                            public callSessionConferenceExtendReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.internal.IImsCallSession, param2: com.android.ims.ImsCallProfile): void;
                            public callSessionUpdateFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                            public callSessionHandoverFailed(param0: com.android.ims.internal.IImsCallSession, param1: number, param2: number, param3: com.android.ims.ImsReasonInfo): void;
                            public callSessionHeld(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export class IImsConfig extends java.lang.Object {
                    public static class: java.lang.Class<com.android.ims.internal.IImsConfig>;
                    /**
                     * Constructs a new instance of the com.android.ims.internal.IImsConfig interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        getFeatureValue(param0: number, param1: number, param2: com.android.ims.ImsConfigListener): void;
                        getProvisionedStringValue(param0: number): string;
                        getProvisionedValue(param0: number): number;
                        getVideoQuality(param0: com.android.ims.ImsConfigListener): void;
                        getVolteProvisioned(): boolean;
                        setFeatureValue(param0: number, param1: number, param2: number, param3: com.android.ims.ImsConfigListener): void;
                        setProvisionedStringValue(param0: number, param1: string): number;
                        setProvisionedValue(param0: number, param1: number): number;
                        setVideoQuality(param0: number, param1: com.android.ims.ImsConfigListener): void;
                    });
                    public constructor();
                    public getVolteProvisioned(): boolean;
                    public getVideoQuality(param0: com.android.ims.ImsConfigListener): void;
                    public setVideoQuality(param0: number, param1: com.android.ims.ImsConfigListener): void;
                    public getProvisionedStringValue(param0: number): string;
                    public getFeatureValue(param0: number, param1: number, param2: com.android.ims.ImsConfigListener): void;
                    public setProvisionedValue(param0: number, param1: number): number;
                    public getProvisionedValue(param0: number): number;
                    public setProvisionedStringValue(param0: number, param1: string): number;
                    public setFeatureValue(param0: number, param1: number, param2: number, param3: com.android.ims.ImsConfigListener): void;
                }
                export module IImsConfig {
                    export abstract class Stub implements com.android.ims.internal.IImsConfig {
                        public static class: java.lang.Class<com.android.ims.internal.IImsConfig.Stub>;
                        public constructor();
                        public setProvisionedStringValue(param0: number, param1: string): number;
                        public getProvisionedValue(param0: number): number;
                        public setProvisionedValue(param0: number, param1: number): number;
                        public setFeatureValue(param0: number, param1: number, param2: number, param3: com.android.ims.ImsConfigListener): void;
                        public getVolteProvisioned(): boolean;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.ims.internal.IImsConfig;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public getProvisionedStringValue(param0: number): string;
                        public setVideoQuality(param0: number, param1: com.android.ims.ImsConfigListener): void;
                        public asBinder(): globalAndroid.os.IBinder;
                        public getFeatureValue(param0: number, param1: number, param2: com.android.ims.ImsConfigListener): void;
                        public getVideoQuality(param0: com.android.ims.ImsConfigListener): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.ims.internal.IImsConfig {
                            public static class: java.lang.Class<com.android.ims.internal.IImsConfig.Stub.Proxy>;
                            public getFeatureValue(param0: number, param1: number, param2: com.android.ims.ImsConfigListener): void;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public getVideoQuality(param0: com.android.ims.ImsConfigListener): void;
                            public setFeatureValue(param0: number, param1: number, param2: number, param3: com.android.ims.ImsConfigListener): void;
                            public getProvisionedValue(param0: number): number;
                            public getProvisionedStringValue(param0: number): string;
                            public setVideoQuality(param0: number, param1: com.android.ims.ImsConfigListener): void;
                            public getVolteProvisioned(): boolean;
                            public setProvisionedStringValue(param0: number, param1: string): number;
                            public setProvisionedValue(param0: number, param1: number): number;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export class IImsEcbm extends java.lang.Object {
                    public static class: java.lang.Class<com.android.ims.internal.IImsEcbm>;
                    /**
                     * Constructs a new instance of the com.android.ims.internal.IImsEcbm interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        exitEmergencyCallbackMode(): void;
                        setListener(param0: com.android.ims.internal.IImsEcbmListener): void;
                    });
                    public constructor();
                    public exitEmergencyCallbackMode(): void;
                    public setListener(param0: com.android.ims.internal.IImsEcbmListener): void;
                }
                export module IImsEcbm {
                    export abstract class Stub implements com.android.ims.internal.IImsEcbm {
                        public static class: java.lang.Class<com.android.ims.internal.IImsEcbm.Stub>;
                        public constructor();
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public exitEmergencyCallbackMode(): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.ims.internal.IImsEcbm;
                        public setListener(param0: com.android.ims.internal.IImsEcbmListener): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.ims.internal.IImsEcbm {
                            public static class: java.lang.Class<com.android.ims.internal.IImsEcbm.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public exitEmergencyCallbackMode(): void;
                            public setListener(param0: com.android.ims.internal.IImsEcbmListener): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export class IImsEcbmListener extends java.lang.Object {
                    public static class: java.lang.Class<com.android.ims.internal.IImsEcbmListener>;
                    /**
                     * Constructs a new instance of the com.android.ims.internal.IImsEcbmListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        enteredECBM(): void;
                        exitedECBM(): void;
                    });
                    public constructor();
                    public enteredECBM(): void;
                    public exitedECBM(): void;
                }
                export module IImsEcbmListener {
                    export abstract class Stub implements com.android.ims.internal.IImsEcbmListener {
                        public static class: java.lang.Class<com.android.ims.internal.IImsEcbmListener.Stub>;
                        public constructor();
                        public exitedECBM(): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.ims.internal.IImsEcbmListener;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public enteredECBM(): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.ims.internal.IImsEcbmListener {
                            public static class: java.lang.Class<com.android.ims.internal.IImsEcbmListener.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public exitedECBM(): void;
                            public enteredECBM(): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export class IImsExternalCallStateListener extends java.lang.Object {
                    public static class: java.lang.Class<com.android.ims.internal.IImsExternalCallStateListener>;
                    /**
                     * Constructs a new instance of the com.android.ims.internal.IImsExternalCallStateListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        onImsExternalCallStateUpdate(param0: java.util.List<com.android.ims.ImsExternalCallState>): void;
                    });
                    public constructor();
                    public onImsExternalCallStateUpdate(param0: java.util.List<com.android.ims.ImsExternalCallState>): void;
                }
                export module IImsExternalCallStateListener {
                    export abstract class Stub implements com.android.ims.internal.IImsExternalCallStateListener {
                        public static class: java.lang.Class<com.android.ims.internal.IImsExternalCallStateListener.Stub>;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.ims.internal.IImsExternalCallStateListener;
                        public constructor();
                        public onImsExternalCallStateUpdate(param0: java.util.List<com.android.ims.ImsExternalCallState>): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                    }
                    export module Stub {
                        export class Proxy extends com.android.ims.internal.IImsExternalCallStateListener {
                            public static class: java.lang.Class<com.android.ims.internal.IImsExternalCallStateListener.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public onImsExternalCallStateUpdate(param0: java.util.List<com.android.ims.ImsExternalCallState>): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export class IImsFeatureStatusCallback extends java.lang.Object {
                    public static class: java.lang.Class<com.android.ims.internal.IImsFeatureStatusCallback>;
                    /**
                     * Constructs a new instance of the com.android.ims.internal.IImsFeatureStatusCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        notifyImsFeatureStatus(param0: number): void;
                    });
                    public constructor();
                    public notifyImsFeatureStatus(param0: number): void;
                }
                export module IImsFeatureStatusCallback {
                    export abstract class Stub implements com.android.ims.internal.IImsFeatureStatusCallback {
                        public static class: java.lang.Class<com.android.ims.internal.IImsFeatureStatusCallback.Stub>;
                        public constructor();
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.ims.internal.IImsFeatureStatusCallback;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public notifyImsFeatureStatus(param0: number): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.ims.internal.IImsFeatureStatusCallback {
                            public static class: java.lang.Class<com.android.ims.internal.IImsFeatureStatusCallback.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public notifyImsFeatureStatus(param0: number): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export class IImsMultiEndpoint extends java.lang.Object {
                    public static class: java.lang.Class<com.android.ims.internal.IImsMultiEndpoint>;
                    /**
                     * Constructs a new instance of the com.android.ims.internal.IImsMultiEndpoint interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        requestImsExternalCallStateInfo(): void;
                        setListener(param0: com.android.ims.internal.IImsExternalCallStateListener): void;
                    });
                    public constructor();
                    public setListener(param0: com.android.ims.internal.IImsExternalCallStateListener): void;
                    public requestImsExternalCallStateInfo(): void;
                }
                export module IImsMultiEndpoint {
                    export abstract class Stub implements com.android.ims.internal.IImsMultiEndpoint {
                        public static class: java.lang.Class<com.android.ims.internal.IImsMultiEndpoint.Stub>;
                        public setListener(param0: com.android.ims.internal.IImsExternalCallStateListener): void;
                        public constructor();
                        public requestImsExternalCallStateInfo(): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.ims.internal.IImsMultiEndpoint;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                    }
                    export module Stub {
                        export class Proxy extends com.android.ims.internal.IImsMultiEndpoint {
                            public static class: java.lang.Class<com.android.ims.internal.IImsMultiEndpoint.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public requestImsExternalCallStateInfo(): void;
                            public setListener(param0: com.android.ims.internal.IImsExternalCallStateListener): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export class IImsRegistrationListener extends java.lang.Object {
                    public static class: java.lang.Class<com.android.ims.internal.IImsRegistrationListener>;
                    /**
                     * Constructs a new instance of the com.android.ims.internal.IImsRegistrationListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        registrationAssociatedUriChanged(param0: globalAndroid.net.Uri[]): void;
                        registrationChangeFailed(param0: number, param1: com.android.ims.ImsReasonInfo): void;
                        registrationConnected(): void;
                        registrationConnectedWithRadioTech(param0: number): void;
                        registrationDisconnected(param0: com.android.ims.ImsReasonInfo): void;
                        registrationFeatureCapabilityChanged(param0: number, param1: number[], param2: number[]): void;
                        registrationProgressing(): void;
                        registrationProgressingWithRadioTech(param0: number): void;
                        registrationResumed(): void;
                        registrationServiceCapabilityChanged(param0: number, param1: number): void;
                        registrationSuspended(): void;
                        voiceMessageCountUpdate(param0: number): void;
                    });
                    public constructor();
                    public registrationProgressingWithRadioTech(param0: number): void;
                    public registrationConnectedWithRadioTech(param0: number): void;
                    public registrationAssociatedUriChanged(param0: globalAndroid.net.Uri[]): void;
                    public registrationDisconnected(param0: com.android.ims.ImsReasonInfo): void;
                    public registrationFeatureCapabilityChanged(param0: number, param1: number[], param2: number[]): void;
                    public registrationProgressing(): void;
                    public registrationResumed(): void;
                    public registrationSuspended(): void;
                    public registrationConnected(): void;
                    public registrationChangeFailed(param0: number, param1: com.android.ims.ImsReasonInfo): void;
                    public registrationServiceCapabilityChanged(param0: number, param1: number): void;
                    public voiceMessageCountUpdate(param0: number): void;
                }
                export module IImsRegistrationListener {
                    export abstract class Stub implements com.android.ims.internal.IImsRegistrationListener {
                        public static class: java.lang.Class<com.android.ims.internal.IImsRegistrationListener.Stub>;
                        public constructor();
                        public registrationChangeFailed(param0: number, param1: com.android.ims.ImsReasonInfo): void;
                        public registrationFeatureCapabilityChanged(param0: number, param1: number[], param2: number[]): void;
                        public registrationServiceCapabilityChanged(param0: number, param1: number): void;
                        public voiceMessageCountUpdate(param0: number): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.ims.internal.IImsRegistrationListener;
                        public registrationResumed(): void;
                        public registrationDisconnected(param0: com.android.ims.ImsReasonInfo): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public registrationAssociatedUriChanged(param0: globalAndroid.net.Uri[]): void;
                        public registrationConnected(): void;
                        public registrationProgressing(): void;
                        public registrationProgressingWithRadioTech(param0: number): void;
                        public registrationSuspended(): void;
                        public asBinder(): globalAndroid.os.IBinder;
                        public registrationConnectedWithRadioTech(param0: number): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.ims.internal.IImsRegistrationListener {
                            public static class: java.lang.Class<com.android.ims.internal.IImsRegistrationListener.Stub.Proxy>;
                            public registrationServiceCapabilityChanged(param0: number, param1: number): void;
                            public voiceMessageCountUpdate(param0: number): void;
                            public registrationProgressing(): void;
                            public registrationResumed(): void;
                            public registrationChangeFailed(param0: number, param1: com.android.ims.ImsReasonInfo): void;
                            public registrationConnectedWithRadioTech(param0: number): void;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public registrationSuspended(): void;
                            public registrationAssociatedUriChanged(param0: globalAndroid.net.Uri[]): void;
                            public registrationConnected(): void;
                            public registrationDisconnected(param0: com.android.ims.ImsReasonInfo): void;
                            public registrationProgressingWithRadioTech(param0: number): void;
                            public registrationFeatureCapabilityChanged(param0: number, param1: number[], param2: number[]): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export class IImsService extends java.lang.Object {
                    public static class: java.lang.Class<com.android.ims.internal.IImsService>;
                    /**
                     * Constructs a new instance of the com.android.ims.internal.IImsService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        addRegistrationListener(param0: number, param1: number, param2: com.android.ims.internal.IImsRegistrationListener): void;
                        close(param0: number): void;
                        createCallProfile(param0: number, param1: number, param2: number): com.android.ims.ImsCallProfile;
                        createCallSession(param0: number, param1: com.android.ims.ImsCallProfile, param2: com.android.ims.internal.IImsCallSessionListener): com.android.ims.internal.IImsCallSession;
                        getConfigInterface(param0: number): com.android.ims.internal.IImsConfig;
                        getEcbmInterface(param0: number): com.android.ims.internal.IImsEcbm;
                        getMultiEndpointInterface(param0: number): com.android.ims.internal.IImsMultiEndpoint;
                        getPendingCallSession(param0: number, param1: string): com.android.ims.internal.IImsCallSession;
                        getUtInterface(param0: number): com.android.ims.internal.IImsUt;
                        isConnected(param0: number, param1: number, param2: number): boolean;
                        isOpened(param0: number): boolean;
                        open(param0: number, param1: number, param2: globalAndroid.app.PendingIntent, param3: com.android.ims.internal.IImsRegistrationListener): number;
                        setRegistrationListener(param0: number, param1: com.android.ims.internal.IImsRegistrationListener): void;
                        setUiTTYMode(param0: number, param1: number, param2: globalAndroid.os.Message): void;
                        turnOffIms(param0: number): void;
                        turnOnIms(param0: number): void;
                    });
                    public constructor();
                    public isConnected(param0: number, param1: number, param2: number): boolean;
                    public turnOffIms(param0: number): void;
                    public createCallSession(param0: number, param1: com.android.ims.ImsCallProfile, param2: com.android.ims.internal.IImsCallSessionListener): com.android.ims.internal.IImsCallSession;
                    public isOpened(param0: number): boolean;
                    public getPendingCallSession(param0: number, param1: string): com.android.ims.internal.IImsCallSession;
                    public getUtInterface(param0: number): com.android.ims.internal.IImsUt;
                    public getMultiEndpointInterface(param0: number): com.android.ims.internal.IImsMultiEndpoint;
                    public turnOnIms(param0: number): void;
                    public setRegistrationListener(param0: number, param1: com.android.ims.internal.IImsRegistrationListener): void;
                    public close(param0: number): void;
                    public getConfigInterface(param0: number): com.android.ims.internal.IImsConfig;
                    public open(param0: number, param1: number, param2: globalAndroid.app.PendingIntent, param3: com.android.ims.internal.IImsRegistrationListener): number;
                    public setUiTTYMode(param0: number, param1: number, param2: globalAndroid.os.Message): void;
                    public getEcbmInterface(param0: number): com.android.ims.internal.IImsEcbm;
                    public createCallProfile(param0: number, param1: number, param2: number): com.android.ims.ImsCallProfile;
                    public addRegistrationListener(param0: number, param1: number, param2: com.android.ims.internal.IImsRegistrationListener): void;
                }
                export module IImsService {
                    export abstract class Stub implements com.android.ims.internal.IImsService {
                        public static class: java.lang.Class<com.android.ims.internal.IImsService.Stub>;
                        public constructor();
                        public getUtInterface(param0: number): com.android.ims.internal.IImsUt;
                        public createCallProfile(param0: number, param1: number, param2: number): com.android.ims.ImsCallProfile;
                        public turnOffIms(param0: number): void;
                        public createCallSession(param0: number, param1: com.android.ims.ImsCallProfile, param2: com.android.ims.internal.IImsCallSessionListener): com.android.ims.internal.IImsCallSession;
                        public isConnected(param0: number, param1: number, param2: number): boolean;
                        public setUiTTYMode(param0: number, param1: number, param2: globalAndroid.os.Message): void;
                        public close(param0: number): void;
                        public isOpened(param0: number): boolean;
                        public getConfigInterface(param0: number): com.android.ims.internal.IImsConfig;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.ims.internal.IImsService;
                        public addRegistrationListener(param0: number, param1: number, param2: com.android.ims.internal.IImsRegistrationListener): void;
                        public setRegistrationListener(param0: number, param1: com.android.ims.internal.IImsRegistrationListener): void;
                        public open(param0: number, param1: number, param2: globalAndroid.app.PendingIntent, param3: com.android.ims.internal.IImsRegistrationListener): number;
                        public getEcbmInterface(param0: number): com.android.ims.internal.IImsEcbm;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public turnOnIms(param0: number): void;
                        public asBinder(): globalAndroid.os.IBinder;
                        public getMultiEndpointInterface(param0: number): com.android.ims.internal.IImsMultiEndpoint;
                        public getPendingCallSession(param0: number, param1: string): com.android.ims.internal.IImsCallSession;
                    }
                    export module Stub {
                        export class Proxy extends com.android.ims.internal.IImsService {
                            public static class: java.lang.Class<com.android.ims.internal.IImsService.Stub.Proxy>;
                            public close(param0: number): void;
                            public turnOffIms(param0: number): void;
                            public addRegistrationListener(param0: number, param1: number, param2: com.android.ims.internal.IImsRegistrationListener): void;
                            public open(param0: number, param1: number, param2: globalAndroid.app.PendingIntent, param3: com.android.ims.internal.IImsRegistrationListener): number;
                            public setRegistrationListener(param0: number, param1: com.android.ims.internal.IImsRegistrationListener): void;
                            public getMultiEndpointInterface(param0: number): com.android.ims.internal.IImsMultiEndpoint;
                            public isConnected(param0: number, param1: number, param2: number): boolean;
                            public getConfigInterface(param0: number): com.android.ims.internal.IImsConfig;
                            public getPendingCallSession(param0: number, param1: string): com.android.ims.internal.IImsCallSession;
                            public setUiTTYMode(param0: number, param1: number, param2: globalAndroid.os.Message): void;
                            public turnOnIms(param0: number): void;
                            public createCallProfile(param0: number, param1: number, param2: number): com.android.ims.ImsCallProfile;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public isOpened(param0: number): boolean;
                            public getEcbmInterface(param0: number): com.android.ims.internal.IImsEcbm;
                            public createCallSession(param0: number, param1: com.android.ims.ImsCallProfile, param2: com.android.ims.internal.IImsCallSessionListener): com.android.ims.internal.IImsCallSession;
                            public getUtInterface(param0: number): com.android.ims.internal.IImsUt;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export class IImsServiceController extends java.lang.Object {
                    public static class: java.lang.Class<com.android.ims.internal.IImsServiceController>;
                    /**
                     * Constructs a new instance of the com.android.ims.internal.IImsServiceController interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        addRegistrationListener(param0: number, param1: number, param2: com.android.ims.internal.IImsRegistrationListener): void;
                        createCallProfile(param0: number, param1: number, param2: number, param3: number, param4: number): com.android.ims.ImsCallProfile;
                        createCallSession(param0: number, param1: number, param2: number, param3: com.android.ims.ImsCallProfile, param4: com.android.ims.internal.IImsCallSessionListener): com.android.ims.internal.IImsCallSession;
                        createImsFeature(param0: number, param1: number, param2: com.android.ims.internal.IImsFeatureStatusCallback): void;
                        endSession(param0: number, param1: number, param2: number): void;
                        getConfigInterface(param0: number, param1: number): com.android.ims.internal.IImsConfig;
                        getEcbmInterface(param0: number, param1: number): com.android.ims.internal.IImsEcbm;
                        getFeatureStatus(param0: number, param1: number): number;
                        getMultiEndpointInterface(param0: number, param1: number): com.android.ims.internal.IImsMultiEndpoint;
                        getPendingCallSession(param0: number, param1: number, param2: number, param3: string): com.android.ims.internal.IImsCallSession;
                        getUtInterface(param0: number, param1: number): com.android.ims.internal.IImsUt;
                        isConnected(param0: number, param1: number, param2: number, param3: number): boolean;
                        isOpened(param0: number, param1: number): boolean;
                        removeImsFeature(param0: number, param1: number, param2: com.android.ims.internal.IImsFeatureStatusCallback): void;
                        removeRegistrationListener(param0: number, param1: number, param2: com.android.ims.internal.IImsRegistrationListener): void;
                        setUiTTYMode(param0: number, param1: number, param2: number, param3: globalAndroid.os.Message): void;
                        startSession(param0: number, param1: number, param2: globalAndroid.app.PendingIntent, param3: com.android.ims.internal.IImsRegistrationListener): number;
                        turnOffIms(param0: number, param1: number): void;
                        turnOnIms(param0: number, param1: number): void;
                    });
                    public constructor();
                    public getConfigInterface(param0: number, param1: number): com.android.ims.internal.IImsConfig;
                    public turnOffIms(param0: number, param1: number): void;
                    public createCallProfile(param0: number, param1: number, param2: number, param3: number, param4: number): com.android.ims.ImsCallProfile;
                    public getFeatureStatus(param0: number, param1: number): number;
                    public getUtInterface(param0: number, param1: number): com.android.ims.internal.IImsUt;
                    public setUiTTYMode(param0: number, param1: number, param2: number, param3: globalAndroid.os.Message): void;
                    public getEcbmInterface(param0: number, param1: number): com.android.ims.internal.IImsEcbm;
                    public turnOnIms(param0: number, param1: number): void;
                    public removeRegistrationListener(param0: number, param1: number, param2: com.android.ims.internal.IImsRegistrationListener): void;
                    public getMultiEndpointInterface(param0: number, param1: number): com.android.ims.internal.IImsMultiEndpoint;
                    public isOpened(param0: number, param1: number): boolean;
                    public startSession(param0: number, param1: number, param2: globalAndroid.app.PendingIntent, param3: com.android.ims.internal.IImsRegistrationListener): number;
                    public removeImsFeature(param0: number, param1: number, param2: com.android.ims.internal.IImsFeatureStatusCallback): void;
                    public createImsFeature(param0: number, param1: number, param2: com.android.ims.internal.IImsFeatureStatusCallback): void;
                    public createCallSession(param0: number, param1: number, param2: number, param3: com.android.ims.ImsCallProfile, param4: com.android.ims.internal.IImsCallSessionListener): com.android.ims.internal.IImsCallSession;
                    public endSession(param0: number, param1: number, param2: number): void;
                    public isConnected(param0: number, param1: number, param2: number, param3: number): boolean;
                    public addRegistrationListener(param0: number, param1: number, param2: com.android.ims.internal.IImsRegistrationListener): void;
                    public getPendingCallSession(param0: number, param1: number, param2: number, param3: string): com.android.ims.internal.IImsCallSession;
                }
                export module IImsServiceController {
                    export abstract class Stub implements com.android.ims.internal.IImsServiceController {
                        public static class: java.lang.Class<com.android.ims.internal.IImsServiceController.Stub>;
                        public turnOnIms(param0: number, param1: number): void;
                        public constructor();
                        public getPendingCallSession(param0: number, param1: number, param2: number, param3: string): com.android.ims.internal.IImsCallSession;
                        public getEcbmInterface(param0: number, param1: number): com.android.ims.internal.IImsEcbm;
                        public createCallProfile(param0: number, param1: number, param2: number, param3: number, param4: number): com.android.ims.ImsCallProfile;
                        public getConfigInterface(param0: number, param1: number): com.android.ims.internal.IImsConfig;
                        public getUtInterface(param0: number, param1: number): com.android.ims.internal.IImsUt;
                        public getMultiEndpointInterface(param0: number, param1: number): com.android.ims.internal.IImsMultiEndpoint;
                        public removeImsFeature(param0: number, param1: number, param2: com.android.ims.internal.IImsFeatureStatusCallback): void;
                        public addRegistrationListener(param0: number, param1: number, param2: com.android.ims.internal.IImsRegistrationListener): void;
                        public createCallSession(param0: number, param1: number, param2: number, param3: com.android.ims.ImsCallProfile, param4: com.android.ims.internal.IImsCallSessionListener): com.android.ims.internal.IImsCallSession;
                        public startSession(param0: number, param1: number, param2: globalAndroid.app.PendingIntent, param3: com.android.ims.internal.IImsRegistrationListener): number;
                        public isOpened(param0: number, param1: number): boolean;
                        public removeRegistrationListener(param0: number, param1: number, param2: com.android.ims.internal.IImsRegistrationListener): void;
                        public endSession(param0: number, param1: number, param2: number): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.ims.internal.IImsServiceController;
                        public turnOffIms(param0: number, param1: number): void;
                        public isConnected(param0: number, param1: number, param2: number, param3: number): boolean;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public setUiTTYMode(param0: number, param1: number, param2: number, param3: globalAndroid.os.Message): void;
                        public asBinder(): globalAndroid.os.IBinder;
                        public createImsFeature(param0: number, param1: number, param2: com.android.ims.internal.IImsFeatureStatusCallback): void;
                        public getFeatureStatus(param0: number, param1: number): number;
                    }
                    export module Stub {
                        export class Proxy extends com.android.ims.internal.IImsServiceController {
                            public static class: java.lang.Class<com.android.ims.internal.IImsServiceController.Stub.Proxy>;
                            public addRegistrationListener(param0: number, param1: number, param2: com.android.ims.internal.IImsRegistrationListener): void;
                            public turnOffIms(param0: number, param1: number): void;
                            public getMultiEndpointInterface(param0: number, param1: number): com.android.ims.internal.IImsMultiEndpoint;
                            public isOpened(param0: number, param1: number): boolean;
                            public createCallProfile(param0: number, param1: number, param2: number, param3: number, param4: number): com.android.ims.ImsCallProfile;
                            public isConnected(param0: number, param1: number, param2: number, param3: number): boolean;
                            public getConfigInterface(param0: number, param1: number): com.android.ims.internal.IImsConfig;
                            public createImsFeature(param0: number, param1: number, param2: com.android.ims.internal.IImsFeatureStatusCallback): void;
                            public getInterfaceDescriptor(): string;
                            public removeImsFeature(param0: number, param1: number, param2: com.android.ims.internal.IImsFeatureStatusCallback): void;
                            public asBinder(): globalAndroid.os.IBinder;
                            public endSession(param0: number, param1: number, param2: number): void;
                            public getUtInterface(param0: number, param1: number): com.android.ims.internal.IImsUt;
                            public getPendingCallSession(param0: number, param1: number, param2: number, param3: string): com.android.ims.internal.IImsCallSession;
                            public getFeatureStatus(param0: number, param1: number): number;
                            public getEcbmInterface(param0: number, param1: number): com.android.ims.internal.IImsEcbm;
                            public setUiTTYMode(param0: number, param1: number, param2: number, param3: globalAndroid.os.Message): void;
                            public removeRegistrationListener(param0: number, param1: number, param2: com.android.ims.internal.IImsRegistrationListener): void;
                            public turnOnIms(param0: number, param1: number): void;
                            public createCallSession(param0: number, param1: number, param2: number, param3: com.android.ims.ImsCallProfile, param4: com.android.ims.internal.IImsCallSessionListener): com.android.ims.internal.IImsCallSession;
                            public startSession(param0: number, param1: number, param2: globalAndroid.app.PendingIntent, param3: com.android.ims.internal.IImsRegistrationListener): number;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export class IImsServiceFeatureListener extends java.lang.Object {
                    public static class: java.lang.Class<com.android.ims.internal.IImsServiceFeatureListener>;
                    /**
                     * Constructs a new instance of the com.android.ims.internal.IImsServiceFeatureListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        imsFeatureCreated(param0: number, param1: number): void;
                        imsFeatureRemoved(param0: number, param1: number): void;
                        imsStatusChanged(param0: number, param1: number, param2: number): void;
                    });
                    public constructor();
                    public imsFeatureRemoved(param0: number, param1: number): void;
                    public imsFeatureCreated(param0: number, param1: number): void;
                    public imsStatusChanged(param0: number, param1: number, param2: number): void;
                }
                export module IImsServiceFeatureListener {
                    export abstract class Stub implements com.android.ims.internal.IImsServiceFeatureListener {
                        public static class: java.lang.Class<com.android.ims.internal.IImsServiceFeatureListener.Stub>;
                        public imsFeatureRemoved(param0: number, param1: number): void;
                        public constructor();
                        public imsFeatureCreated(param0: number, param1: number): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.ims.internal.IImsServiceFeatureListener;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public imsStatusChanged(param0: number, param1: number, param2: number): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.ims.internal.IImsServiceFeatureListener {
                            public static class: java.lang.Class<com.android.ims.internal.IImsServiceFeatureListener.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public imsFeatureCreated(param0: number, param1: number): void;
                            public imsFeatureRemoved(param0: number, param1: number): void;
                            public imsStatusChanged(param0: number, param1: number, param2: number): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export class IImsStreamMediaSession extends java.lang.Object {
                    public static class: java.lang.Class<com.android.ims.internal.IImsStreamMediaSession>;
                    /**
                     * Constructs a new instance of the com.android.ims.internal.IImsStreamMediaSession interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        close(): void;
                    });
                    public constructor();
                    public close(): void;
                }
                export module IImsStreamMediaSession {
                    export abstract class Stub implements com.android.ims.internal.IImsStreamMediaSession {
                        public static class: java.lang.Class<com.android.ims.internal.IImsStreamMediaSession.Stub>;
                        public constructor();
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.ims.internal.IImsStreamMediaSession;
                        public close(): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                    }
                    export module Stub {
                        export class Proxy extends com.android.ims.internal.IImsStreamMediaSession {
                            public static class: java.lang.Class<com.android.ims.internal.IImsStreamMediaSession.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public close(): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export class IImsUt extends java.lang.Object {
                    public static class: java.lang.Class<com.android.ims.internal.IImsUt>;
                    /**
                     * Constructs a new instance of the com.android.ims.internal.IImsUt interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        close(): void;
                        queryCFForServiceClass(param0: number, param1: string, param2: number): number;
                        queryCLIP(): number;
                        queryCLIR(): number;
                        queryCOLP(): number;
                        queryCOLR(): number;
                        queryCallBarring(param0: number): number;
                        queryCallBarringForServiceClass(param0: number, param1: number): number;
                        queryCallForward(param0: number, param1: string): number;
                        queryCallWaiting(): number;
                        setListener(param0: com.android.ims.internal.IImsUtListener): void;
                        transact(param0: globalAndroid.os.Bundle): number;
                        updateCLIP(param0: boolean): number;
                        updateCLIR(param0: number): number;
                        updateCOLP(param0: boolean): number;
                        updateCOLR(param0: number): number;
                        updateCallBarring(param0: number, param1: number, param2: string[]): number;
                        updateCallBarringForServiceClass(param0: number, param1: number, param2: number, param3: string[]): number;
                        updateCallForward(param0: number, param1: number, param2: string, param3: number, param4: number): number;
                        updateCallWaiting(param0: boolean, param1: number): number;
                    });
                    public constructor();
                    public queryCOLR(): number;
                    public updateCallForward(param0: number, param1: number, param2: string, param3: number, param4: number): number;
                    public queryCLIR(): number;
                    public queryCallWaiting(): number;
                    public updateCallBarringForServiceClass(param0: number, param1: number, param2: number, param3: string[]): number;
                    public updateCOLR(param0: number): number;
                    public queryCallForward(param0: number, param1: string): number;
                    public queryCFForServiceClass(param0: number, param1: string, param2: number): number;
                    public transact(param0: globalAndroid.os.Bundle): number;
                    public queryCallBarring(param0: number): number;
                    public updateCallBarring(param0: number, param1: number, param2: string[]): number;
                    public updateCLIP(param0: boolean): number;
                    public close(): void;
                    public updateCOLP(param0: boolean): number;
                    public updateCallWaiting(param0: boolean, param1: number): number;
                    public queryCallBarringForServiceClass(param0: number, param1: number): number;
                    public updateCLIR(param0: number): number;
                    public queryCLIP(): number;
                    public queryCOLP(): number;
                    public setListener(param0: com.android.ims.internal.IImsUtListener): void;
                }
                export module IImsUt {
                    export abstract class Stub implements com.android.ims.internal.IImsUt {
                        public static class: java.lang.Class<com.android.ims.internal.IImsUt.Stub>;
                        public queryCallForward(param0: number, param1: string): number;
                        public updateCLIP(param0: boolean): number;
                        public constructor();
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.ims.internal.IImsUt;
                        public close(): void;
                        public queryCLIP(): number;
                        public setListener(param0: com.android.ims.internal.IImsUtListener): void;
                        public queryCallBarringForServiceClass(param0: number, param1: number): number;
                        public updateCallBarringForServiceClass(param0: number, param1: number, param2: number, param3: string[]): number;
                        public updateCLIR(param0: number): number;
                        public updateCOLP(param0: boolean): number;
                        public queryCallWaiting(): number;
                        public updateCallForward(param0: number, param1: number, param2: string, param3: number, param4: number): number;
                        public queryCallBarring(param0: number): number;
                        public updateCallBarring(param0: number, param1: number, param2: string[]): number;
                        public queryCOLP(): number;
                        public updateCOLR(param0: number): number;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public queryCFForServiceClass(param0: number, param1: string, param2: number): number;
                        public queryCLIR(): number;
                        public transact(param0: globalAndroid.os.Bundle): number;
                        public asBinder(): globalAndroid.os.IBinder;
                        public queryCOLR(): number;
                        public updateCallWaiting(param0: boolean, param1: number): number;
                    }
                    export module Stub {
                        export class Proxy extends com.android.ims.internal.IImsUt {
                            public static class: java.lang.Class<com.android.ims.internal.IImsUt.Stub.Proxy>;
                            public queryCallForward(param0: number, param1: string): number;
                            public updateCLIP(param0: boolean): number;
                            public updateCallWaiting(param0: boolean, param1: number): number;
                            public close(): void;
                            public queryCallBarring(param0: number): number;
                            public updateCOLP(param0: boolean): number;
                            public updateCallBarring(param0: number, param1: number, param2: string[]): number;
                            public queryCFForServiceClass(param0: number, param1: string, param2: number): number;
                            public setListener(param0: com.android.ims.internal.IImsUtListener): void;
                            public updateCallForward(param0: number, param1: number, param2: string, param3: number, param4: number): number;
                            public queryCLIP(): number;
                            public queryCOLR(): number;
                            public queryCLIR(): number;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public queryCOLP(): number;
                            public queryCallWaiting(): number;
                            public queryCallBarringForServiceClass(param0: number, param1: number): number;
                            public updateCLIR(param0: number): number;
                            public updateCallBarringForServiceClass(param0: number, param1: number, param2: number, param3: string[]): number;
                            public transact(param0: globalAndroid.os.Bundle): number;
                            public updateCOLR(param0: number): number;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export class IImsUtListener extends java.lang.Object {
                    public static class: java.lang.Class<com.android.ims.internal.IImsUtListener>;
                    /**
                     * Constructs a new instance of the com.android.ims.internal.IImsUtListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        utConfigurationCallBarringQueried(param0: com.android.ims.internal.IImsUt, param1: number, param2: com.android.ims.ImsSsInfo[]): void;
                        utConfigurationCallForwardQueried(param0: com.android.ims.internal.IImsUt, param1: number, param2: com.android.ims.ImsCallForwardInfo[]): void;
                        utConfigurationCallWaitingQueried(param0: com.android.ims.internal.IImsUt, param1: number, param2: com.android.ims.ImsSsInfo[]): void;
                        utConfigurationQueried(param0: com.android.ims.internal.IImsUt, param1: number, param2: globalAndroid.os.Bundle): void;
                        utConfigurationQueryFailed(param0: com.android.ims.internal.IImsUt, param1: number, param2: com.android.ims.ImsReasonInfo): void;
                        utConfigurationUpdateFailed(param0: com.android.ims.internal.IImsUt, param1: number, param2: com.android.ims.ImsReasonInfo): void;
                        utConfigurationUpdated(param0: com.android.ims.internal.IImsUt, param1: number): void;
                    });
                    public constructor();
                    public utConfigurationQueried(param0: com.android.ims.internal.IImsUt, param1: number, param2: globalAndroid.os.Bundle): void;
                    public utConfigurationQueryFailed(param0: com.android.ims.internal.IImsUt, param1: number, param2: com.android.ims.ImsReasonInfo): void;
                    public utConfigurationUpdateFailed(param0: com.android.ims.internal.IImsUt, param1: number, param2: com.android.ims.ImsReasonInfo): void;
                    public utConfigurationUpdated(param0: com.android.ims.internal.IImsUt, param1: number): void;
                    public utConfigurationCallBarringQueried(param0: com.android.ims.internal.IImsUt, param1: number, param2: com.android.ims.ImsSsInfo[]): void;
                    public utConfigurationCallForwardQueried(param0: com.android.ims.internal.IImsUt, param1: number, param2: com.android.ims.ImsCallForwardInfo[]): void;
                    public utConfigurationCallWaitingQueried(param0: com.android.ims.internal.IImsUt, param1: number, param2: com.android.ims.ImsSsInfo[]): void;
                }
                export module IImsUtListener {
                    export abstract class Stub implements com.android.ims.internal.IImsUtListener {
                        public static class: java.lang.Class<com.android.ims.internal.IImsUtListener.Stub>;
                        public utConfigurationUpdated(param0: com.android.ims.internal.IImsUt, param1: number): void;
                        public constructor();
                        public utConfigurationCallWaitingQueried(param0: com.android.ims.internal.IImsUt, param1: number, param2: com.android.ims.ImsSsInfo[]): void;
                        public utConfigurationCallBarringQueried(param0: com.android.ims.internal.IImsUt, param1: number, param2: com.android.ims.ImsSsInfo[]): void;
                        public utConfigurationQueryFailed(param0: com.android.ims.internal.IImsUt, param1: number, param2: com.android.ims.ImsReasonInfo): void;
                        public utConfigurationQueried(param0: com.android.ims.internal.IImsUt, param1: number, param2: globalAndroid.os.Bundle): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.ims.internal.IImsUtListener;
                        public asBinder(): globalAndroid.os.IBinder;
                        public utConfigurationCallForwardQueried(param0: com.android.ims.internal.IImsUt, param1: number, param2: com.android.ims.ImsCallForwardInfo[]): void;
                        public utConfigurationUpdateFailed(param0: com.android.ims.internal.IImsUt, param1: number, param2: com.android.ims.ImsReasonInfo): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.ims.internal.IImsUtListener {
                            public static class: java.lang.Class<com.android.ims.internal.IImsUtListener.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public utConfigurationQueryFailed(param0: com.android.ims.internal.IImsUt, param1: number, param2: com.android.ims.ImsReasonInfo): void;
                            public utConfigurationCallBarringQueried(param0: com.android.ims.internal.IImsUt, param1: number, param2: com.android.ims.ImsSsInfo[]): void;
                            public utConfigurationCallForwardQueried(param0: com.android.ims.internal.IImsUt, param1: number, param2: com.android.ims.ImsCallForwardInfo[]): void;
                            public utConfigurationCallWaitingQueried(param0: com.android.ims.internal.IImsUt, param1: number, param2: com.android.ims.ImsSsInfo[]): void;
                            public utConfigurationUpdated(param0: com.android.ims.internal.IImsUt, param1: number): void;
                            public utConfigurationUpdateFailed(param0: com.android.ims.internal.IImsUt, param1: number, param2: com.android.ims.ImsReasonInfo): void;
                            public utConfigurationQueried(param0: com.android.ims.internal.IImsUt, param1: number, param2: globalAndroid.os.Bundle): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export class IImsVideoCallCallback extends java.lang.Object {
                    public static class: java.lang.Class<com.android.ims.internal.IImsVideoCallCallback>;
                    /**
                     * Constructs a new instance of the com.android.ims.internal.IImsVideoCallCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        changeCallDataUsage(param0: number): void;
                        changeCameraCapabilities(param0: globalAndroid.telecom.VideoProfile.CameraCapabilities): void;
                        changePeerDimensions(param0: number, param1: number): void;
                        changeVideoQuality(param0: number): void;
                        handleCallSessionEvent(param0: number): void;
                        receiveSessionModifyRequest(param0: globalAndroid.telecom.VideoProfile): void;
                        receiveSessionModifyResponse(param0: number, param1: globalAndroid.telecom.VideoProfile, param2: globalAndroid.telecom.VideoProfile): void;
                    });
                    public constructor();
                    public changePeerDimensions(param0: number, param1: number): void;
                    public handleCallSessionEvent(param0: number): void;
                    public receiveSessionModifyResponse(param0: number, param1: globalAndroid.telecom.VideoProfile, param2: globalAndroid.telecom.VideoProfile): void;
                    public receiveSessionModifyRequest(param0: globalAndroid.telecom.VideoProfile): void;
                    public changeCameraCapabilities(param0: globalAndroid.telecom.VideoProfile.CameraCapabilities): void;
                    public changeCallDataUsage(param0: number): void;
                    public changeVideoQuality(param0: number): void;
                }
                export module IImsVideoCallCallback {
                    export abstract class Stub implements com.android.ims.internal.IImsVideoCallCallback {
                        public static class: java.lang.Class<com.android.ims.internal.IImsVideoCallCallback.Stub>;
                        public changeVideoQuality(param0: number): void;
                        public handleCallSessionEvent(param0: number): void;
                        public constructor();
                        public receiveSessionModifyRequest(param0: globalAndroid.telecom.VideoProfile): void;
                        public receiveSessionModifyResponse(param0: number, param1: globalAndroid.telecom.VideoProfile, param2: globalAndroid.telecom.VideoProfile): void;
                        public changeCallDataUsage(param0: number): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.ims.internal.IImsVideoCallCallback;
                        public asBinder(): globalAndroid.os.IBinder;
                        public changeCameraCapabilities(param0: globalAndroid.telecom.VideoProfile.CameraCapabilities): void;
                        public changePeerDimensions(param0: number, param1: number): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.ims.internal.IImsVideoCallCallback {
                            public static class: java.lang.Class<com.android.ims.internal.IImsVideoCallCallback.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public changePeerDimensions(param0: number, param1: number): void;
                            public receiveSessionModifyResponse(param0: number, param1: globalAndroid.telecom.VideoProfile, param2: globalAndroid.telecom.VideoProfile): void;
                            public changeCallDataUsage(param0: number): void;
                            public changeCameraCapabilities(param0: globalAndroid.telecom.VideoProfile.CameraCapabilities): void;
                            public changeVideoQuality(param0: number): void;
                            public handleCallSessionEvent(param0: number): void;
                            public receiveSessionModifyRequest(param0: globalAndroid.telecom.VideoProfile): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export class IImsVideoCallProvider extends java.lang.Object {
                    public static class: java.lang.Class<com.android.ims.internal.IImsVideoCallProvider>;
                    /**
                     * Constructs a new instance of the com.android.ims.internal.IImsVideoCallProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        requestCallDataUsage(): void;
                        requestCameraCapabilities(): void;
                        sendSessionModifyRequest(param0: globalAndroid.telecom.VideoProfile, param1: globalAndroid.telecom.VideoProfile): void;
                        sendSessionModifyResponse(param0: globalAndroid.telecom.VideoProfile): void;
                        setCallback(param0: com.android.ims.internal.IImsVideoCallCallback): void;
                        setCamera(param0: string, param1: number): void;
                        setDeviceOrientation(param0: number): void;
                        setDisplaySurface(param0: globalAndroid.view.Surface): void;
                        setPauseImage(param0: globalAndroid.net.Uri): void;
                        setPreviewSurface(param0: globalAndroid.view.Surface): void;
                        setZoom(param0: number): void;
                    });
                    public constructor();
                    public sendSessionModifyRequest(param0: globalAndroid.telecom.VideoProfile, param1: globalAndroid.telecom.VideoProfile): void;
                    public setPreviewSurface(param0: globalAndroid.view.Surface): void;
                    public requestCallDataUsage(): void;
                    public setDeviceOrientation(param0: number): void;
                    public setCamera(param0: string, param1: number): void;
                    public setPauseImage(param0: globalAndroid.net.Uri): void;
                    public setDisplaySurface(param0: globalAndroid.view.Surface): void;
                    public sendSessionModifyResponse(param0: globalAndroid.telecom.VideoProfile): void;
                    public setZoom(param0: number): void;
                    public setCallback(param0: com.android.ims.internal.IImsVideoCallCallback): void;
                    public requestCameraCapabilities(): void;
                }
                export module IImsVideoCallProvider {
                    export abstract class Stub implements com.android.ims.internal.IImsVideoCallProvider {
                        public static class: java.lang.Class<com.android.ims.internal.IImsVideoCallProvider.Stub>;
                        public constructor();
                        public requestCallDataUsage(): void;
                        public sendSessionModifyRequest(param0: globalAndroid.telecom.VideoProfile, param1: globalAndroid.telecom.VideoProfile): void;
                        public setCamera(param0: string, param1: number): void;
                        public setDeviceOrientation(param0: number): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.ims.internal.IImsVideoCallProvider;
                        public setCallback(param0: com.android.ims.internal.IImsVideoCallCallback): void;
                        public setPauseImage(param0: globalAndroid.net.Uri): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public setZoom(param0: number): void;
                        public requestCameraCapabilities(): void;
                        public sendSessionModifyResponse(param0: globalAndroid.telecom.VideoProfile): void;
                        public asBinder(): globalAndroid.os.IBinder;
                        public setDisplaySurface(param0: globalAndroid.view.Surface): void;
                        public setPreviewSurface(param0: globalAndroid.view.Surface): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.ims.internal.IImsVideoCallProvider {
                            public static class: java.lang.Class<com.android.ims.internal.IImsVideoCallProvider.Stub.Proxy>;
                            public requestCallDataUsage(): void;
                            public sendSessionModifyResponse(param0: globalAndroid.telecom.VideoProfile): void;
                            public setDeviceOrientation(param0: number): void;
                            public setDisplaySurface(param0: globalAndroid.view.Surface): void;
                            public setPreviewSurface(param0: globalAndroid.view.Surface): void;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public requestCameraCapabilities(): void;
                            public setCallback(param0: com.android.ims.internal.IImsVideoCallCallback): void;
                            public sendSessionModifyRequest(param0: globalAndroid.telecom.VideoProfile, param1: globalAndroid.telecom.VideoProfile): void;
                            public setZoom(param0: number): void;
                            public setPauseImage(param0: globalAndroid.net.Uri): void;
                            public setCamera(param0: string, param1: number): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export class ImsCallSession extends java.lang.Object {
                    public static class: java.lang.Class<com.android.ims.internal.ImsCallSession>;
                    public getCallId(): string;
                    public start(param0: string, param1: com.android.ims.ImsCallProfile): void;
                    public startDtmf(param0: string): void;
                    public extendToConference(param0: string[]): void;
                    public reject(param0: number): void;
                    public removeParticipants(param0: string[]): void;
                    public sendRttModifyResponse(param0: boolean): void;
                    public update(param0: number, param1: com.android.ims.ImsStreamMediaProfile): void;
                    public getRemoteCallProfile(): com.android.ims.ImsCallProfile;
                    public start(param0: string[], param1: com.android.ims.ImsCallProfile): void;
                    public inviteParticipants(param0: string[]): void;
                    public toString(): string;
                    public sendUssd(param0: string): void;
                    public close(): void;
                    public isInCall(): boolean;
                    public getSession(): com.android.ims.internal.IImsCallSession;
                    public getCallProfile(): com.android.ims.ImsCallProfile;
                    public isAlive(): boolean;
                    public getVideoCallProvider(): com.android.ims.internal.IImsVideoCallProvider;
                    public stopDtmf(): void;
                    public setListener(param0: com.android.ims.internal.ImsCallSession.Listener): void;
                    public merge(): void;
                    public setMute(param0: boolean): void;
                    public sendDtmf(param0: string, param1: globalAndroid.os.Message): void;
                    public sendRttMessage(param0: string): void;
                    public isMultiparty(): boolean;
                    public getLocalCallProfile(): com.android.ims.ImsCallProfile;
                    public sendRttModifyRequest(param0: com.android.ims.ImsCallProfile): void;
                    public hold(param0: com.android.ims.ImsStreamMediaProfile): void;
                    public constructor(param0: com.android.ims.internal.IImsCallSession);
                    public accept(param0: number, param1: com.android.ims.ImsStreamMediaProfile): void;
                    public resume(param0: com.android.ims.ImsStreamMediaProfile): void;
                    public constructor(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.internal.ImsCallSession.Listener);
                    public getProperty(param0: string): string;
                    public terminate(param0: number): void;
                    public getState(): number;
                }
                export module ImsCallSession {
                    export class IImsCallSessionListenerProxy extends globalAndroid.telephony.ims.stub.ImsCallSessionListenerImplBase {
                        public static class: java.lang.Class<com.android.ims.internal.ImsCallSession.IImsCallSessionListenerProxy>;
                        public callSessionRttMessageReceived(param0: string): void;
                        public callSessionConferenceExtendReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.internal.IImsCallSession, param2: com.android.ims.ImsCallProfile): void;
                        public callSessionHandover(param0: com.android.ims.internal.IImsCallSession, param1: number, param2: number, param3: com.android.ims.ImsReasonInfo): void;
                        public callSessionRemoveParticipantsRequestDelivered(param0: com.android.ims.internal.IImsCallSession): void;
                        public callSessionUpdateReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        public callSessionHandoverFailed(param0: com.android.ims.internal.IImsCallSession, param1: number, param2: number, param3: com.android.ims.ImsReasonInfo): void;
                        public callSessionMayHandover(param0: com.android.ims.internal.IImsCallSession, param1: number, param2: number): void;
                        public callSessionRemoveParticipantsRequestFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        public callSessionMergeFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        public callSessionSuppServiceReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsSuppServiceNotification): void;
                        public callSessionTtyModeReceived(param0: com.android.ims.internal.IImsCallSession, param1: number): void;
                        public callSessionConferenceExtendFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        public callSessionConferenceExtended(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.internal.IImsCallSession, param2: com.android.ims.ImsCallProfile): void;
                        public callSessionHoldFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        public callSessionInviteParticipantsRequestFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        public callSessionConferenceStateUpdated(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsConferenceState): void;
                        public callSessionMultipartyStateChanged(param0: com.android.ims.internal.IImsCallSession, param1: boolean): void;
                        public callSessionInviteParticipantsRequestDelivered(param0: com.android.ims.internal.IImsCallSession): void;
                        public callSessionUssdMessageReceived(param0: com.android.ims.internal.IImsCallSession, param1: number, param2: string): void;
                        public callSessionRttModifyRequestReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        public callSessionResumeReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        public callSessionMergeStarted(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.internal.IImsCallSession, param2: com.android.ims.ImsCallProfile): void;
                        public callSessionUpdated(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        public callSessionTerminated(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        public callSessionRttModifyResponseReceived(param0: number): void;
                        public callSessionHeld(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        public callSessionMergeComplete(param0: com.android.ims.internal.IImsCallSession): void;
                        public callSessionResumeFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        public callSessionResumed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        public callSessionStartFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        public callSessionHoldReceived(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        public callSessionStarted(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        public callSessionUpdateFailed(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        public callSessionProgressing(param0: com.android.ims.internal.IImsCallSession, param1: com.android.ims.ImsStreamMediaProfile): void;
                    }
                    export class Listener extends java.lang.Object {
                        public static class: java.lang.Class<com.android.ims.internal.ImsCallSession.Listener>;
                        public callSessionRttMessageReceived(param0: string): void;
                        public callSessionConferenceStateUpdated(param0: com.android.ims.internal.ImsCallSession, param1: com.android.ims.ImsConferenceState): void;
                        public callSessionRemoveParticipantsRequestDelivered(param0: com.android.ims.internal.ImsCallSession): void;
                        public callSessionUssdMessageReceived(param0: com.android.ims.internal.ImsCallSession, param1: number, param2: string): void;
                        public callSessionUpdateFailed(param0: com.android.ims.internal.ImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        public callSessionTerminated(param0: com.android.ims.internal.ImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        public callSessionMergeStarted(param0: com.android.ims.internal.ImsCallSession, param1: com.android.ims.internal.ImsCallSession, param2: com.android.ims.ImsCallProfile): void;
                        public callSessionConferenceExtendFailed(param0: com.android.ims.internal.ImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        public callSessionHoldReceived(param0: com.android.ims.internal.ImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        public callSessionTtyModeReceived(param0: com.android.ims.internal.ImsCallSession, param1: number): void;
                        public callSessionStartFailed(param0: com.android.ims.internal.ImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        public callSessionUpdated(param0: com.android.ims.internal.ImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        public callSessionMayHandover(param0: com.android.ims.internal.ImsCallSession, param1: number, param2: number): void;
                        public callSessionSuppServiceReceived(param0: com.android.ims.internal.ImsCallSession, param1: com.android.ims.ImsSuppServiceNotification): void;
                        public callSessionConferenceExtendReceived(param0: com.android.ims.internal.ImsCallSession, param1: com.android.ims.internal.ImsCallSession, param2: com.android.ims.ImsCallProfile): void;
                        public callSessionHeld(param0: com.android.ims.internal.ImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        public callSessionHoldFailed(param0: com.android.ims.internal.ImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        public callSessionRemoveParticipantsRequestFailed(param0: com.android.ims.internal.ImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        public constructor();
                        public callSessionRttModifyRequestReceived(param0: com.android.ims.internal.ImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        public callSessionProgressing(param0: com.android.ims.internal.ImsCallSession, param1: com.android.ims.ImsStreamMediaProfile): void;
                        public callSessionResumed(param0: com.android.ims.internal.ImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        public callSessionRttModifyResponseReceived(param0: number): void;
                        public callSessionConferenceExtended(param0: com.android.ims.internal.ImsCallSession, param1: com.android.ims.internal.ImsCallSession, param2: com.android.ims.ImsCallProfile): void;
                        public callSessionMultipartyStateChanged(param0: com.android.ims.internal.ImsCallSession, param1: boolean): void;
                        public callSessionMergeFailed(param0: com.android.ims.internal.ImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        public callSessionMergeComplete(param0: com.android.ims.internal.ImsCallSession): void;
                        public callSessionHandover(param0: com.android.ims.internal.ImsCallSession, param1: number, param2: number, param3: com.android.ims.ImsReasonInfo): void;
                        public callSessionResumeReceived(param0: com.android.ims.internal.ImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        public callSessionHandoverFailed(param0: com.android.ims.internal.ImsCallSession, param1: number, param2: number, param3: com.android.ims.ImsReasonInfo): void;
                        public callSessionUpdateReceived(param0: com.android.ims.internal.ImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                        public callSessionInviteParticipantsRequestDelivered(param0: com.android.ims.internal.ImsCallSession): void;
                        public callSessionInviteParticipantsRequestFailed(param0: com.android.ims.internal.ImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        public callSessionResumeFailed(param0: com.android.ims.internal.ImsCallSession, param1: com.android.ims.ImsReasonInfo): void;
                        public callSessionStarted(param0: com.android.ims.internal.ImsCallSession, param1: com.android.ims.ImsCallProfile): void;
                    }
                    export class State extends java.lang.Object {
                        public static class: java.lang.Class<com.android.ims.internal.ImsCallSession.State>;
                        public static ESTABLISHED: number;
                        public static ESTABLISHING: number;
                        public static IDLE: number;
                        public static INITIATED: number;
                        public static INVALID: number;
                        public static NEGOTIATING: number;
                        public static REESTABLISHING: number;
                        public static RENEGOTIATING: number;
                        public static TERMINATED: number;
                        public static TERMINATING: number;
                        public static toString(param0: number): string;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export abstract class ImsVideoCallProvider {
                    public static class: java.lang.Class<com.android.ims.internal.ImsVideoCallProvider>;
                    public onSetPauseImage(param0: globalAndroid.net.Uri): void;
                    public receiveSessionModifyResponse(param0: number, param1: globalAndroid.telecom.VideoProfile, param2: globalAndroid.telecom.VideoProfile): void;
                    public receiveSessionModifyRequest(param0: globalAndroid.telecom.VideoProfile): void;
                    public onSetDeviceOrientation(param0: number): void;
                    public onRequestCallDataUsage(): void;
                    public onSetDisplaySurface(param0: globalAndroid.view.Surface): void;
                    public onSendSessionModifyRequest(param0: globalAndroid.telecom.VideoProfile, param1: globalAndroid.telecom.VideoProfile): void;
                    public changePeerDimensions(param0: number, param1: number): void;
                    public handleCallSessionEvent(param0: number): void;
                    public onSetZoom(param0: number): void;
                    public onSendSessionModifyResponse(param0: globalAndroid.telecom.VideoProfile): void;
                    public getInterface(): com.android.ims.internal.IImsVideoCallProvider;
                    public constructor();
                    public changeCameraCapabilities(param0: globalAndroid.telecom.VideoProfile.CameraCapabilities): void;
                    public onSetPreviewSurface(param0: globalAndroid.view.Surface): void;
                    public changeCallDataUsage(param0: number): void;
                    public onRequestCameraCapabilities(): void;
                    public onSetCamera(param0: string): void;
                    public changeVideoQuality(param0: number): void;
                    public onSetCamera(param0: string, param1: number): void;
                }
                export module ImsVideoCallProvider {
                    export class ImsVideoCallProviderBinder extends com.android.ims.internal.IImsVideoCallProvider.Stub {
                        public static class: java.lang.Class<com.android.ims.internal.ImsVideoCallProvider.ImsVideoCallProviderBinder>;
                        public setCamera(param0: string, param1: number): void;
                        public setDeviceOrientation(param0: number): void;
                        public requestCallDataUsage(): void;
                        public setCallback(param0: com.android.ims.internal.IImsVideoCallCallback): void;
                        public setPauseImage(param0: globalAndroid.net.Uri): void;
                        public setZoom(param0: number): void;
                        public requestCameraCapabilities(): void;
                        public sendSessionModifyResponse(param0: globalAndroid.telecom.VideoProfile): void;
                        public setDisplaySurface(param0: globalAndroid.view.Surface): void;
                        public setPreviewSurface(param0: globalAndroid.view.Surface): void;
                        public sendSessionModifyRequest(param0: globalAndroid.telecom.VideoProfile, param1: globalAndroid.telecom.VideoProfile): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export module uce {
                    export abstract class UceServiceBase {
                        public static class: java.lang.Class<com.android.ims.internal.uce.UceServiceBase>;
                        public onGetPresenceService(): com.android.ims.internal.uce.presence.IPresenceService;
                        public constructor();
                        public getBinder(): com.android.ims.internal.uce.UceServiceBase.UceServiceBinder;
                        public onCreatePresService(param0: com.android.ims.internal.uce.presence.IPresenceListener, param1: com.android.ims.internal.uce.common.UceLong): number;
                        public onGetPresenceService(param0: string): com.android.ims.internal.uce.presence.IPresenceService;
                        public onGetOptionsService(param0: string): com.android.ims.internal.uce.options.IOptionsService;
                        public onServiceStart(param0: com.android.ims.internal.uce.uceservice.IUceListener): boolean;
                        public onGetServiceStatus(): boolean;
                        public onStopService(): boolean;
                        public onCreateOptionsService(param0: com.android.ims.internal.uce.options.IOptionsListener, param1: com.android.ims.internal.uce.common.UceLong, param2: string): number;
                        public onGetOptionsService(): com.android.ims.internal.uce.options.IOptionsService;
                        public onCreatePresService(param0: com.android.ims.internal.uce.presence.IPresenceListener, param1: com.android.ims.internal.uce.common.UceLong, param2: string): number;
                        public onCreateOptionsService(param0: com.android.ims.internal.uce.options.IOptionsListener, param1: com.android.ims.internal.uce.common.UceLong): number;
                        public onDestroyOptionsService(param0: number): void;
                        public onDestroyPresService(param0: number): void;
                        public onIsServiceStarted(): boolean;
                    }
                    export module UceServiceBase {
                        export class UceServiceBinder extends com.android.ims.internal.uce.uceservice.IUceService.Stub {
                            public static class: java.lang.Class<com.android.ims.internal.uce.UceServiceBase.UceServiceBinder>;
                            public createPresenceService(param0: com.android.ims.internal.uce.presence.IPresenceListener, param1: com.android.ims.internal.uce.common.UceLong): number;
                            public getPresenceService(): com.android.ims.internal.uce.presence.IPresenceService;
                            public createPresenceServiceForSubscription(param0: com.android.ims.internal.uce.presence.IPresenceListener, param1: com.android.ims.internal.uce.common.UceLong, param2: string): number;
                            public destroyPresenceService(param0: number): void;
                            public getOptionsService(): com.android.ims.internal.uce.options.IOptionsService;
                            public createOptionsServiceForSubscription(param0: com.android.ims.internal.uce.options.IOptionsListener, param1: com.android.ims.internal.uce.common.UceLong, param2: string): number;
                            public isServiceStarted(): boolean;
                            public createOptionsService(param0: com.android.ims.internal.uce.options.IOptionsListener, param1: com.android.ims.internal.uce.common.UceLong): number;
                            public getPresenceServiceForSubscription(param0: string): com.android.ims.internal.uce.presence.IPresenceService;
                            public destroyOptionsService(param0: number): void;
                            public getOptionsServiceForSubscription(param0: string): com.android.ims.internal.uce.options.IOptionsService;
                            public stopService(): boolean;
                            public startService(param0: com.android.ims.internal.uce.uceservice.IUceListener): boolean;
                            public getServiceStatus(): boolean;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export module uce {
                    export module common {
                        export class CapInfo extends java.lang.Object {
                            public static class: java.lang.Class<com.android.ims.internal.uce.common.CapInfo>;
                            public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.ims.internal.uce.common.CapInfo>;
                            public setFtHttpSupported(param0: boolean): void;
                            public isGeoPullFtSupported(): boolean;
                            public setFtSnFSupported(param0: boolean): void;
                            public setGeoPullFtSupported(param0: boolean): void;
                            public setIpVoiceSupported(param0: boolean): void;
                            public isFtSupported(): boolean;
                            public setFtThumbSupported(param0: boolean): void;
                            public isIpVideoSupported(): boolean;
                            public setGeoPullSupported(param0: boolean): void;
                            public readFromParcel(param0: globalAndroid.os.Parcel): void;
                            public setSpSupported(param0: boolean): void;
                            public setSmSupported(param0: boolean): void;
                            public setIpVideoSupported(param0: boolean): void;
                            public setRcsIpVoiceCallSupported(param0: boolean): void;
                            public describeContents(): number;
                            public isFtSnFSupported(): boolean;
                            public isSmSupported(): boolean;
                            public setGeoPushSupported(param0: boolean): void;
                            public setFullSnFGroupChatSupported(param0: boolean): void;
                            public setIsSupported(param0: boolean): void;
                            public isImSupported(): boolean;
                            public getExts(): string[];
                            public constructor();
                            public setImSupported(param0: boolean): void;
                            public isSpSupported(): boolean;
                            public setFtSupported(param0: boolean): void;
                            public setRcsIpVideoCallSupported(param0: boolean): void;
                            public isGeoPullSupported(): boolean;
                            public isGeoPushSupported(): boolean;
                            public isIpVoiceSupported(): boolean;
                            public setCdViaPresenceSupported(param0: boolean): void;
                            public setRcsIpVideoOnlyCallSupported(param0: boolean): void;
                            public isFtThumbSupported(): boolean;
                            public isRcsIpVoiceCallSupported(): boolean;
                            public setVsSupported(param0: boolean): void;
                            public isVsSupported(): boolean;
                            public setVsDuringCSSupported(param0: boolean): void;
                            public setExts(param0: string[]): void;
                            public isRcsIpVideoCallSupported(): boolean;
                            public isRcsIpVideoOnlyCallSupported(): boolean;
                            public isVsDuringCSSupported(): boolean;
                            public isFtHttpSupported(): boolean;
                            public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                            public isFullSnFGroupChatSupported(): boolean;
                            public isIsSupported(): boolean;
                            public getCapTimestamp(): number;
                            public isCdViaPresenceSupported(): boolean;
                            public setCapTimestamp(param0: number): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export module uce {
                    export module common {
                        export class StatusCode extends java.lang.Object {
                            public static class: java.lang.Class<com.android.ims.internal.uce.common.StatusCode>;
                            public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.ims.internal.uce.common.StatusCode>;
                            public static UCE_FAILURE: number;
                            public static UCE_FETCH_ERROR: number;
                            public static UCE_INSUFFICIENT_MEMORY: number;
                            public static UCE_INVALID_FEATURE_TAG: number;
                            public static UCE_INVALID_LISTENER_HANDLE: number;
                            public static UCE_INVALID_PARAM: number;
                            public static UCE_INVALID_SERVICE_HANDLE: number;
                            public static UCE_LOST_NET: number;
                            public static UCE_NOT_FOUND: number;
                            public static UCE_NOT_SUPPORTED: number;
                            public static UCE_NO_CHANGE_IN_CAP: number;
                            public static UCE_REQUEST_TIMEOUT: number;
                            public static UCE_SERVICE_AVAILABLE: number;
                            public static UCE_SERVICE_UNAVAILABLE: number;
                            public static UCE_SERVICE_UNKNOWN: number;
                            public static UCE_SUCCESS: number;
                            public static UCE_SUCCESS_ASYC_UPDATE: number;
                            public constructor();
                            public getStatusCode(): number;
                            public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                            public describeContents(): number;
                            public readFromParcel(param0: globalAndroid.os.Parcel): void;
                            public setStatusCode(param0: number): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export module uce {
                    export module common {
                        export class UceLong extends java.lang.Object {
                            public static class: java.lang.Class<com.android.ims.internal.uce.common.UceLong>;
                            public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.ims.internal.uce.common.UceLong>;
                            public constructor();
                            public getUceLong(): number;
                            public setUceLong(param0: number): void;
                            public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                            public static getUceLongInstance(): com.android.ims.internal.uce.common.UceLong;
                            public describeContents(): number;
                            public setClientId(param0: number): void;
                            public getClientId(): number;
                            public readFromParcel(param0: globalAndroid.os.Parcel): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export module uce {
                    export module options {
                        export class IOptionsListener extends java.lang.Object {
                            public static class: java.lang.Class<com.android.ims.internal.uce.options.IOptionsListener>;
                            /**
                             * Constructs a new instance of the com.android.ims.internal.uce.options.IOptionsListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                             */
                            public constructor(implementation: {
                                cmdStatus(param0: com.android.ims.internal.uce.options.OptionsCmdStatus): void;
                                getVersionCb(param0: string): void;
                                incomingOptions(param0: string, param1: com.android.ims.internal.uce.options.OptionsCapInfo, param2: number): void;
                                serviceAvailable(param0: com.android.ims.internal.uce.common.StatusCode): void;
                                serviceUnavailable(param0: com.android.ims.internal.uce.common.StatusCode): void;
                                sipResponseReceived(param0: string, param1: com.android.ims.internal.uce.options.OptionsSipResponse, param2: com.android.ims.internal.uce.options.OptionsCapInfo): void;
                            });
                            public constructor();
                            public serviceAvailable(param0: com.android.ims.internal.uce.common.StatusCode): void;
                            public serviceUnavailable(param0: com.android.ims.internal.uce.common.StatusCode): void;
                            public incomingOptions(param0: string, param1: com.android.ims.internal.uce.options.OptionsCapInfo, param2: number): void;
                            public cmdStatus(param0: com.android.ims.internal.uce.options.OptionsCmdStatus): void;
                            public sipResponseReceived(param0: string, param1: com.android.ims.internal.uce.options.OptionsSipResponse, param2: com.android.ims.internal.uce.options.OptionsCapInfo): void;
                            public getVersionCb(param0: string): void;
                        }
                        export module IOptionsListener {
                            export abstract class Stub implements com.android.ims.internal.uce.options.IOptionsListener {
                                public static class: java.lang.Class<com.android.ims.internal.uce.options.IOptionsListener.Stub>;
                                public serviceAvailable(param0: com.android.ims.internal.uce.common.StatusCode): void;
                                public static asInterface(param0: globalAndroid.os.IBinder): com.android.ims.internal.uce.options.IOptionsListener;
                                public incomingOptions(param0: string, param1: com.android.ims.internal.uce.options.OptionsCapInfo, param2: number): void;
                                public constructor();
                                public asBinder(): globalAndroid.os.IBinder;
                                public cmdStatus(param0: com.android.ims.internal.uce.options.OptionsCmdStatus): void;
                                public serviceUnavailable(param0: com.android.ims.internal.uce.common.StatusCode): void;
                                public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                                public getVersionCb(param0: string): void;
                                public sipResponseReceived(param0: string, param1: com.android.ims.internal.uce.options.OptionsSipResponse, param2: com.android.ims.internal.uce.options.OptionsCapInfo): void;
                            }
                            export module Stub {
                                export class Proxy extends com.android.ims.internal.uce.options.IOptionsListener {
                                    public static class: java.lang.Class<com.android.ims.internal.uce.options.IOptionsListener.Stub.Proxy>;
                                    public cmdStatus(param0: com.android.ims.internal.uce.options.OptionsCmdStatus): void;
                                    public asBinder(): globalAndroid.os.IBinder;
                                    public serviceUnavailable(param0: com.android.ims.internal.uce.common.StatusCode): void;
                                    public serviceAvailable(param0: com.android.ims.internal.uce.common.StatusCode): void;
                                    public incomingOptions(param0: string, param1: com.android.ims.internal.uce.options.OptionsCapInfo, param2: number): void;
                                    public getInterfaceDescriptor(): string;
                                    public getVersionCb(param0: string): void;
                                    public sipResponseReceived(param0: string, param1: com.android.ims.internal.uce.options.OptionsSipResponse, param2: com.android.ims.internal.uce.options.OptionsCapInfo): void;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export module uce {
                    export module options {
                        export class IOptionsService extends java.lang.Object {
                            public static class: java.lang.Class<com.android.ims.internal.uce.options.IOptionsService>;
                            /**
                             * Constructs a new instance of the com.android.ims.internal.uce.options.IOptionsService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                             */
                            public constructor(implementation: {
                                addListener(param0: number, param1: com.android.ims.internal.uce.options.IOptionsListener, param2: com.android.ims.internal.uce.common.UceLong): com.android.ims.internal.uce.common.StatusCode;
                                getContactCap(param0: number, param1: string, param2: number): com.android.ims.internal.uce.common.StatusCode;
                                getContactListCap(param0: number, param1: string[], param2: number): com.android.ims.internal.uce.common.StatusCode;
                                getMyInfo(param0: number, param1: number): com.android.ims.internal.uce.common.StatusCode;
                                getVersion(param0: number): com.android.ims.internal.uce.common.StatusCode;
                                removeListener(param0: number, param1: com.android.ims.internal.uce.common.UceLong): com.android.ims.internal.uce.common.StatusCode;
                                responseIncomingOptions(param0: number, param1: number, param2: number, param3: string, param4: com.android.ims.internal.uce.options.OptionsCapInfo, param5: boolean): com.android.ims.internal.uce.common.StatusCode;
                                setMyInfo(param0: number, param1: com.android.ims.internal.uce.common.CapInfo, param2: number): com.android.ims.internal.uce.common.StatusCode;
                            });
                            public constructor();
                            public getContactListCap(param0: number, param1: string[], param2: number): com.android.ims.internal.uce.common.StatusCode;
                            public setMyInfo(param0: number, param1: com.android.ims.internal.uce.common.CapInfo, param2: number): com.android.ims.internal.uce.common.StatusCode;
                            public addListener(param0: number, param1: com.android.ims.internal.uce.options.IOptionsListener, param2: com.android.ims.internal.uce.common.UceLong): com.android.ims.internal.uce.common.StatusCode;
                            public removeListener(param0: number, param1: com.android.ims.internal.uce.common.UceLong): com.android.ims.internal.uce.common.StatusCode;
                            public responseIncomingOptions(param0: number, param1: number, param2: number, param3: string, param4: com.android.ims.internal.uce.options.OptionsCapInfo, param5: boolean): com.android.ims.internal.uce.common.StatusCode;
                            public getContactCap(param0: number, param1: string, param2: number): com.android.ims.internal.uce.common.StatusCode;
                            public getVersion(param0: number): com.android.ims.internal.uce.common.StatusCode;
                            public getMyInfo(param0: number, param1: number): com.android.ims.internal.uce.common.StatusCode;
                        }
                        export module IOptionsService {
                            export abstract class Stub implements com.android.ims.internal.uce.options.IOptionsService {
                                public static class: java.lang.Class<com.android.ims.internal.uce.options.IOptionsService.Stub>;
                                public getMyInfo(param0: number, param1: number): com.android.ims.internal.uce.common.StatusCode;
                                public addListener(param0: number, param1: com.android.ims.internal.uce.options.IOptionsListener, param2: com.android.ims.internal.uce.common.UceLong): com.android.ims.internal.uce.common.StatusCode;
                                public responseIncomingOptions(param0: number, param1: number, param2: number, param3: string, param4: com.android.ims.internal.uce.options.OptionsCapInfo, param5: boolean): com.android.ims.internal.uce.common.StatusCode;
                                public setMyInfo(param0: number, param1: com.android.ims.internal.uce.common.CapInfo, param2: number): com.android.ims.internal.uce.common.StatusCode;
                                public getContactCap(param0: number, param1: string, param2: number): com.android.ims.internal.uce.common.StatusCode;
                                public removeListener(param0: number, param1: com.android.ims.internal.uce.common.UceLong): com.android.ims.internal.uce.common.StatusCode;
                                public constructor();
                                public static asInterface(param0: globalAndroid.os.IBinder): com.android.ims.internal.uce.options.IOptionsService;
                                public asBinder(): globalAndroid.os.IBinder;
                                public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                                public getContactListCap(param0: number, param1: string[], param2: number): com.android.ims.internal.uce.common.StatusCode;
                                public getVersion(param0: number): com.android.ims.internal.uce.common.StatusCode;
                            }
                            export module Stub {
                                export class Proxy extends com.android.ims.internal.uce.options.IOptionsService {
                                    public static class: java.lang.Class<com.android.ims.internal.uce.options.IOptionsService.Stub.Proxy>;
                                    public asBinder(): globalAndroid.os.IBinder;
                                    public addListener(param0: number, param1: com.android.ims.internal.uce.options.IOptionsListener, param2: com.android.ims.internal.uce.common.UceLong): com.android.ims.internal.uce.common.StatusCode;
                                    public removeListener(param0: number, param1: com.android.ims.internal.uce.common.UceLong): com.android.ims.internal.uce.common.StatusCode;
                                    public getMyInfo(param0: number, param1: number): com.android.ims.internal.uce.common.StatusCode;
                                    public getVersion(param0: number): com.android.ims.internal.uce.common.StatusCode;
                                    public getContactListCap(param0: number, param1: string[], param2: number): com.android.ims.internal.uce.common.StatusCode;
                                    public getInterfaceDescriptor(): string;
                                    public responseIncomingOptions(param0: number, param1: number, param2: number, param3: string, param4: com.android.ims.internal.uce.options.OptionsCapInfo, param5: boolean): com.android.ims.internal.uce.common.StatusCode;
                                    public setMyInfo(param0: number, param1: com.android.ims.internal.uce.common.CapInfo, param2: number): com.android.ims.internal.uce.common.StatusCode;
                                    public getContactCap(param0: number, param1: string, param2: number): com.android.ims.internal.uce.common.StatusCode;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export module uce {
                    export module options {
                        export class OptionsCapInfo extends java.lang.Object {
                            public static class: java.lang.Class<com.android.ims.internal.uce.options.OptionsCapInfo>;
                            public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.ims.internal.uce.options.OptionsCapInfo>;
                            public constructor();
                            public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                            public getSdp(): string;
                            public describeContents(): number;
                            public getCapInfo(): com.android.ims.internal.uce.common.CapInfo;
                            public setSdp(param0: string): void;
                            public static getOptionsCapInfoInstance(): com.android.ims.internal.uce.options.OptionsCapInfo;
                            public readFromParcel(param0: globalAndroid.os.Parcel): void;
                            public setCapInfo(param0: com.android.ims.internal.uce.common.CapInfo): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export module uce {
                    export module options {
                        export class OptionsCmdId extends java.lang.Object {
                            public static class: java.lang.Class<com.android.ims.internal.uce.options.OptionsCmdId>;
                            public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.ims.internal.uce.options.OptionsCmdId>;
                            public static UCE_OPTIONS_CMD_GETCONTACTCAP: number;
                            public static UCE_OPTIONS_CMD_GETCONTACTLISTCAP: number;
                            public static UCE_OPTIONS_CMD_GETMYCDINFO: number;
                            public static UCE_OPTIONS_CMD_GET_VERSION: number;
                            public static UCE_OPTIONS_CMD_RESPONSEINCOMINGOPTIONS: number;
                            public static UCE_OPTIONS_CMD_SETMYCDINFO: number;
                            public static UCE_OPTIONS_CMD_UNKNOWN: number;
                            public constructor();
                            public getCmdId(): number;
                            public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                            public describeContents(): number;
                            public setCmdId(param0: number): void;
                            public readFromParcel(param0: globalAndroid.os.Parcel): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export module uce {
                    export module options {
                        export class OptionsCmdStatus extends java.lang.Object {
                            public static class: java.lang.Class<com.android.ims.internal.uce.options.OptionsCmdStatus>;
                            public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.ims.internal.uce.options.OptionsCmdStatus>;
                            public constructor();
                            public static getOptionsCmdStatusInstance(): com.android.ims.internal.uce.options.OptionsCmdStatus;
                            public getUserData(): number;
                            public readFromParcel(param0: globalAndroid.os.Parcel): void;
                            public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                            public setUserData(param0: number): void;
                            public describeContents(): number;
                            public setStatus(param0: com.android.ims.internal.uce.common.StatusCode): void;
                            public getStatus(): com.android.ims.internal.uce.common.StatusCode;
                            public getCapInfo(): com.android.ims.internal.uce.common.CapInfo;
                            public getCmdId(): com.android.ims.internal.uce.options.OptionsCmdId;
                            public setCapInfo(param0: com.android.ims.internal.uce.common.CapInfo): void;
                            public setCmdId(param0: com.android.ims.internal.uce.options.OptionsCmdId): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export module uce {
                    export module options {
                        export class OptionsSipResponse extends java.lang.Object {
                            public static class: java.lang.Class<com.android.ims.internal.uce.options.OptionsSipResponse>;
                            public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.ims.internal.uce.options.OptionsSipResponse>;
                            public constructor();
                            public getRetryAfter(): number;
                            public setReasonPhrase(param0: string): void;
                            public getReasonPhrase(): string;
                            public readFromParcel(param0: globalAndroid.os.Parcel): void;
                            public setRequestId(param0: number): void;
                            public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                            public setSipResponseCode(param0: number): void;
                            public describeContents(): number;
                            public getRequestId(): number;
                            public getCmdId(): com.android.ims.internal.uce.options.OptionsCmdId;
                            public getSipResponseCode(): number;
                            public setRetryAfter(param0: number): void;
                            public setCmdId(param0: com.android.ims.internal.uce.options.OptionsCmdId): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export module uce {
                    export module presence {
                        export class IPresenceListener extends java.lang.Object {
                            public static class: java.lang.Class<com.android.ims.internal.uce.presence.IPresenceListener>;
                            /**
                             * Constructs a new instance of the com.android.ims.internal.uce.presence.IPresenceListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                             */
                            public constructor(implementation: {
                                capInfoReceived(param0: string, param1: com.android.ims.internal.uce.presence.PresTupleInfo[]): void;
                                cmdStatus(param0: com.android.ims.internal.uce.presence.PresCmdStatus): void;
                                getVersionCb(param0: string): void;
                                listCapInfoReceived(param0: com.android.ims.internal.uce.presence.PresRlmiInfo, param1: com.android.ims.internal.uce.presence.PresResInfo[]): void;
                                publishTriggering(param0: com.android.ims.internal.uce.presence.PresPublishTriggerType): void;
                                serviceAvailable(param0: com.android.ims.internal.uce.common.StatusCode): void;
                                serviceUnAvailable(param0: com.android.ims.internal.uce.common.StatusCode): void;
                                sipResponseReceived(param0: com.android.ims.internal.uce.presence.PresSipResponse): void;
                                unpublishMessageSent(): void;
                            });
                            public constructor();
                            public cmdStatus(param0: com.android.ims.internal.uce.presence.PresCmdStatus): void;
                            public sipResponseReceived(param0: com.android.ims.internal.uce.presence.PresSipResponse): void;
                            public serviceAvailable(param0: com.android.ims.internal.uce.common.StatusCode): void;
                            public capInfoReceived(param0: string, param1: com.android.ims.internal.uce.presence.PresTupleInfo[]): void;
                            public unpublishMessageSent(): void;
                            public listCapInfoReceived(param0: com.android.ims.internal.uce.presence.PresRlmiInfo, param1: com.android.ims.internal.uce.presence.PresResInfo[]): void;
                            public getVersionCb(param0: string): void;
                            public publishTriggering(param0: com.android.ims.internal.uce.presence.PresPublishTriggerType): void;
                            public serviceUnAvailable(param0: com.android.ims.internal.uce.common.StatusCode): void;
                        }
                        export module IPresenceListener {
                            export abstract class Stub implements com.android.ims.internal.uce.presence.IPresenceListener {
                                public static class: java.lang.Class<com.android.ims.internal.uce.presence.IPresenceListener.Stub>;
                                public cmdStatus(param0: com.android.ims.internal.uce.presence.PresCmdStatus): void;
                                public listCapInfoReceived(param0: com.android.ims.internal.uce.presence.PresRlmiInfo, param1: com.android.ims.internal.uce.presence.PresResInfo[]): void;
                                public constructor();
                                public sipResponseReceived(param0: com.android.ims.internal.uce.presence.PresSipResponse): void;
                                public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                                public unpublishMessageSent(): void;
                                public serviceAvailable(param0: com.android.ims.internal.uce.common.StatusCode): void;
                                public static asInterface(param0: globalAndroid.os.IBinder): com.android.ims.internal.uce.presence.IPresenceListener;
                                public capInfoReceived(param0: string, param1: com.android.ims.internal.uce.presence.PresTupleInfo[]): void;
                                public publishTriggering(param0: com.android.ims.internal.uce.presence.PresPublishTriggerType): void;
                                public serviceUnAvailable(param0: com.android.ims.internal.uce.common.StatusCode): void;
                                public asBinder(): globalAndroid.os.IBinder;
                                public getVersionCb(param0: string): void;
                            }
                            export module Stub {
                                export class Proxy extends com.android.ims.internal.uce.presence.IPresenceListener {
                                    public static class: java.lang.Class<com.android.ims.internal.uce.presence.IPresenceListener.Stub.Proxy>;
                                    public capInfoReceived(param0: string, param1: com.android.ims.internal.uce.presence.PresTupleInfo[]): void;
                                    public cmdStatus(param0: com.android.ims.internal.uce.presence.PresCmdStatus): void;
                                    public asBinder(): globalAndroid.os.IBinder;
                                    public serviceAvailable(param0: com.android.ims.internal.uce.common.StatusCode): void;
                                    public getInterfaceDescriptor(): string;
                                    public getVersionCb(param0: string): void;
                                    public sipResponseReceived(param0: com.android.ims.internal.uce.presence.PresSipResponse): void;
                                    public listCapInfoReceived(param0: com.android.ims.internal.uce.presence.PresRlmiInfo, param1: com.android.ims.internal.uce.presence.PresResInfo[]): void;
                                    public unpublishMessageSent(): void;
                                    public publishTriggering(param0: com.android.ims.internal.uce.presence.PresPublishTriggerType): void;
                                    public serviceUnAvailable(param0: com.android.ims.internal.uce.common.StatusCode): void;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export module uce {
                    export module presence {
                        export class IPresenceService extends java.lang.Object {
                            public static class: java.lang.Class<com.android.ims.internal.uce.presence.IPresenceService>;
                            /**
                             * Constructs a new instance of the com.android.ims.internal.uce.presence.IPresenceService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                             */
                            public constructor(implementation: {
                                addListener(param0: number, param1: com.android.ims.internal.uce.presence.IPresenceListener, param2: com.android.ims.internal.uce.common.UceLong): com.android.ims.internal.uce.common.StatusCode;
                                getContactCap(param0: number, param1: string, param2: number): com.android.ims.internal.uce.common.StatusCode;
                                getContactListCap(param0: number, param1: string[], param2: number): com.android.ims.internal.uce.common.StatusCode;
                                getVersion(param0: number): com.android.ims.internal.uce.common.StatusCode;
                                publishMyCap(param0: number, param1: com.android.ims.internal.uce.presence.PresCapInfo, param2: number): com.android.ims.internal.uce.common.StatusCode;
                                reenableService(param0: number, param1: number): com.android.ims.internal.uce.common.StatusCode;
                                removeListener(param0: number, param1: com.android.ims.internal.uce.common.UceLong): com.android.ims.internal.uce.common.StatusCode;
                                setNewFeatureTag(param0: number, param1: string, param2: com.android.ims.internal.uce.presence.PresServiceInfo, param3: number): com.android.ims.internal.uce.common.StatusCode;
                            });
                            public constructor();
                            public getContactListCap(param0: number, param1: string[], param2: number): com.android.ims.internal.uce.common.StatusCode;
                            public publishMyCap(param0: number, param1: com.android.ims.internal.uce.presence.PresCapInfo, param2: number): com.android.ims.internal.uce.common.StatusCode;
                            public addListener(param0: number, param1: com.android.ims.internal.uce.presence.IPresenceListener, param2: com.android.ims.internal.uce.common.UceLong): com.android.ims.internal.uce.common.StatusCode;
                            public setNewFeatureTag(param0: number, param1: string, param2: com.android.ims.internal.uce.presence.PresServiceInfo, param3: number): com.android.ims.internal.uce.common.StatusCode;
                            public removeListener(param0: number, param1: com.android.ims.internal.uce.common.UceLong): com.android.ims.internal.uce.common.StatusCode;
                            public getContactCap(param0: number, param1: string, param2: number): com.android.ims.internal.uce.common.StatusCode;
                            public reenableService(param0: number, param1: number): com.android.ims.internal.uce.common.StatusCode;
                            public getVersion(param0: number): com.android.ims.internal.uce.common.StatusCode;
                        }
                        export module IPresenceService {
                            export abstract class Stub implements com.android.ims.internal.uce.presence.IPresenceService {
                                public static class: java.lang.Class<com.android.ims.internal.uce.presence.IPresenceService.Stub>;
                                public addListener(param0: number, param1: com.android.ims.internal.uce.presence.IPresenceListener, param2: com.android.ims.internal.uce.common.UceLong): com.android.ims.internal.uce.common.StatusCode;
                                public publishMyCap(param0: number, param1: com.android.ims.internal.uce.presence.PresCapInfo, param2: number): com.android.ims.internal.uce.common.StatusCode;
                                public reenableService(param0: number, param1: number): com.android.ims.internal.uce.common.StatusCode;
                                public getContactCap(param0: number, param1: string, param2: number): com.android.ims.internal.uce.common.StatusCode;
                                public removeListener(param0: number, param1: com.android.ims.internal.uce.common.UceLong): com.android.ims.internal.uce.common.StatusCode;
                                public constructor();
                                public asBinder(): globalAndroid.os.IBinder;
                                public static asInterface(param0: globalAndroid.os.IBinder): com.android.ims.internal.uce.presence.IPresenceService;
                                public setNewFeatureTag(param0: number, param1: string, param2: com.android.ims.internal.uce.presence.PresServiceInfo, param3: number): com.android.ims.internal.uce.common.StatusCode;
                                public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                                public getContactListCap(param0: number, param1: string[], param2: number): com.android.ims.internal.uce.common.StatusCode;
                                public getVersion(param0: number): com.android.ims.internal.uce.common.StatusCode;
                            }
                            export module Stub {
                                export class Proxy extends com.android.ims.internal.uce.presence.IPresenceService {
                                    public static class: java.lang.Class<com.android.ims.internal.uce.presence.IPresenceService.Stub.Proxy>;
                                    public setNewFeatureTag(param0: number, param1: string, param2: com.android.ims.internal.uce.presence.PresServiceInfo, param3: number): com.android.ims.internal.uce.common.StatusCode;
                                    public publishMyCap(param0: number, param1: com.android.ims.internal.uce.presence.PresCapInfo, param2: number): com.android.ims.internal.uce.common.StatusCode;
                                    public asBinder(): globalAndroid.os.IBinder;
                                    public removeListener(param0: number, param1: com.android.ims.internal.uce.common.UceLong): com.android.ims.internal.uce.common.StatusCode;
                                    public addListener(param0: number, param1: com.android.ims.internal.uce.presence.IPresenceListener, param2: com.android.ims.internal.uce.common.UceLong): com.android.ims.internal.uce.common.StatusCode;
                                    public getVersion(param0: number): com.android.ims.internal.uce.common.StatusCode;
                                    public reenableService(param0: number, param1: number): com.android.ims.internal.uce.common.StatusCode;
                                    public getContactListCap(param0: number, param1: string[], param2: number): com.android.ims.internal.uce.common.StatusCode;
                                    public getInterfaceDescriptor(): string;
                                    public getContactCap(param0: number, param1: string, param2: number): com.android.ims.internal.uce.common.StatusCode;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export module uce {
                    export module presence {
                        export class PresCapInfo extends java.lang.Object {
                            public static class: java.lang.Class<com.android.ims.internal.uce.presence.PresCapInfo>;
                            public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.ims.internal.uce.presence.PresCapInfo>;
                            public constructor();
                            public getContactUri(): string;
                            public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                            public describeContents(): number;
                            public setContactUri(param0: string): void;
                            public getCapInfo(): com.android.ims.internal.uce.common.CapInfo;
                            public readFromParcel(param0: globalAndroid.os.Parcel): void;
                            public setCapInfo(param0: com.android.ims.internal.uce.common.CapInfo): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export module uce {
                    export module presence {
                        export class PresCmdId extends java.lang.Object {
                            public static class: java.lang.Class<com.android.ims.internal.uce.presence.PresCmdId>;
                            public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.ims.internal.uce.presence.PresCmdId>;
                            public static UCE_PRES_CMD_GETCONTACTCAP: number;
                            public static UCE_PRES_CMD_GETCONTACTLISTCAP: number;
                            public static UCE_PRES_CMD_GET_VERSION: number;
                            public static UCE_PRES_CMD_PUBLISHMYCAP: number;
                            public static UCE_PRES_CMD_REENABLE_SERVICE: number;
                            public static UCE_PRES_CMD_SETNEWFEATURETAG: number;
                            public static UCE_PRES_CMD_UNKNOWN: number;
                            public constructor();
                            public getCmdId(): number;
                            public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                            public describeContents(): number;
                            public setCmdId(param0: number): void;
                            public readFromParcel(param0: globalAndroid.os.Parcel): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export module uce {
                    export module presence {
                        export class PresCmdStatus extends java.lang.Object {
                            public static class: java.lang.Class<com.android.ims.internal.uce.presence.PresCmdStatus>;
                            public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.ims.internal.uce.presence.PresCmdStatus>;
                            public constructor();
                            public getCmdId(): com.android.ims.internal.uce.presence.PresCmdId;
                            public setCmdId(param0: com.android.ims.internal.uce.presence.PresCmdId): void;
                            public setRequestId(param0: number): void;
                            public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                            public setUserData(param0: number): void;
                            public describeContents(): number;
                            public getRequestId(): number;
                            public getUserData(): number;
                            public setStatus(param0: com.android.ims.internal.uce.common.StatusCode): void;
                            public getStatus(): com.android.ims.internal.uce.common.StatusCode;
                            public readFromParcel(param0: globalAndroid.os.Parcel): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export module uce {
                    export module presence {
                        export class PresPublishTriggerType extends java.lang.Object {
                            public static class: java.lang.Class<com.android.ims.internal.uce.presence.PresPublishTriggerType>;
                            public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.ims.internal.uce.presence.PresPublishTriggerType>;
                            public static UCE_PRES_PUBLISH_TRIGGER_ETAG_EXPIRED: number;
                            public static UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_2G: number;
                            public static UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_3G: number;
                            public static UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_EHRPD: number;
                            public static UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_HSPAPLUS: number;
                            public static UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_IWLAN: number;
                            public static UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_LTE_VOPS_DISABLED: number;
                            public static UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_LTE_VOPS_ENABLED: number;
                            public static UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_WLAN: number;
                            public static UCE_PRES_PUBLISH_TRIGGER_UNKNOWN: number;
                            public constructor();
                            public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                            public describeContents(): number;
                            public setPublishTrigeerType(param0: number): void;
                            public getPublishTrigeerType(): number;
                            public readFromParcel(param0: globalAndroid.os.Parcel): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export module uce {
                    export module presence {
                        export class PresResInfo extends java.lang.Object {
                            public static class: java.lang.Class<com.android.ims.internal.uce.presence.PresResInfo>;
                            public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.ims.internal.uce.presence.PresResInfo>;
                            public constructor();
                            public setInstanceInfo(param0: com.android.ims.internal.uce.presence.PresResInstanceInfo): void;
                            public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                            public getInstanceInfo(): com.android.ims.internal.uce.presence.PresResInstanceInfo;
                            public setResUri(param0: string): void;
                            public describeContents(): number;
                            public getResUri(): string;
                            public setDisplayName(param0: string): void;
                            public getDisplayName(): string;
                            public readFromParcel(param0: globalAndroid.os.Parcel): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export module uce {
                    export module presence {
                        export class PresResInstanceInfo extends java.lang.Object {
                            public static class: java.lang.Class<com.android.ims.internal.uce.presence.PresResInstanceInfo>;
                            public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.ims.internal.uce.presence.PresResInstanceInfo>;
                            public static UCE_PRES_RES_INSTANCE_STATE_ACTIVE: number;
                            public static UCE_PRES_RES_INSTANCE_STATE_PENDING: number;
                            public static UCE_PRES_RES_INSTANCE_STATE_TERMINATED: number;
                            public static UCE_PRES_RES_INSTANCE_STATE_UNKNOWN: number;
                            public static UCE_PRES_RES_INSTANCE_UNKNOWN: number;
                            public constructor();
                            public getResId(): string;
                            public setTupleInfo(param0: com.android.ims.internal.uce.presence.PresTupleInfo[]): void;
                            public setReason(param0: string): void;
                            public getReason(): string;
                            public readFromParcel(param0: globalAndroid.os.Parcel): void;
                            public setResInstanceState(param0: number): void;
                            public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                            public setPresentityUri(param0: string): void;
                            public describeContents(): number;
                            public getPresentityUri(): string;
                            public getResInstanceState(): number;
                            public setResId(param0: string): void;
                            public getTupleInfo(): com.android.ims.internal.uce.presence.PresTupleInfo[];
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export module uce {
                    export module presence {
                        export class PresRlmiInfo extends java.lang.Object {
                            public static class: java.lang.Class<com.android.ims.internal.uce.presence.PresRlmiInfo>;
                            public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.ims.internal.uce.presence.PresRlmiInfo>;
                            public constructor();
                            public getVersion(): number;
                            public setUri(param0: string): void;
                            public setListName(param0: string): void;
                            public isFullState(): boolean;
                            public setSubscriptionExpireTime(param0: number): void;
                            public getUri(): string;
                            public getSubscriptionTerminatedReason(): string;
                            public setPresSubscriptionState(param0: com.android.ims.internal.uce.presence.PresSubscriptionState): void;
                            public getListName(): string;
                            public readFromParcel(param0: globalAndroid.os.Parcel): void;
                            public setSubscriptionTerminatedReason(param0: string): void;
                            public setRequestId(param0: number): void;
                            public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                            public describeContents(): number;
                            public getRequestId(): number;
                            public setVersion(param0: number): void;
                            public getPresSubscriptionState(): com.android.ims.internal.uce.presence.PresSubscriptionState;
                            public getSubscriptionExpireTime(): number;
                            public setFullState(param0: boolean): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export module uce {
                    export module presence {
                        export class PresServiceInfo extends java.lang.Object {
                            public static class: java.lang.Class<com.android.ims.internal.uce.presence.PresServiceInfo>;
                            public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.ims.internal.uce.presence.PresServiceInfo>;
                            public static UCE_PRES_MEDIA_CAP_FULL_AUDIO_AND_VIDEO: number;
                            public static UCE_PRES_MEDIA_CAP_FULL_AUDIO_ONLY: number;
                            public static UCE_PRES_MEDIA_CAP_NONE: number;
                            public static UCE_PRES_MEDIA_CAP_UNKNOWN: number;
                            public constructor();
                            public setServiceDesc(param0: string): void;
                            public setServiceVer(param0: string): void;
                            public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                            public describeContents(): number;
                            public getServiceId(): string;
                            public setMediaType(param0: number): void;
                            public getServiceVer(): string;
                            public setServiceId(param0: string): void;
                            public getServiceDesc(): string;
                            public getMediaType(): number;
                            public readFromParcel(param0: globalAndroid.os.Parcel): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export module uce {
                    export module presence {
                        export class PresSipResponse extends java.lang.Object {
                            public static class: java.lang.Class<com.android.ims.internal.uce.presence.PresSipResponse>;
                            public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.ims.internal.uce.presence.PresSipResponse>;
                            public constructor();
                            public getCmdId(): com.android.ims.internal.uce.presence.PresCmdId;
                            public setCmdId(param0: com.android.ims.internal.uce.presence.PresCmdId): void;
                            public getRetryAfter(): number;
                            public setReasonPhrase(param0: string): void;
                            public getReasonPhrase(): string;
                            public readFromParcel(param0: globalAndroid.os.Parcel): void;
                            public setRequestId(param0: number): void;
                            public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                            public setSipResponseCode(param0: number): void;
                            public describeContents(): number;
                            public getRequestId(): number;
                            public getSipResponseCode(): number;
                            public setRetryAfter(param0: number): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export module uce {
                    export module presence {
                        export class PresSubscriptionState extends java.lang.Object {
                            public static class: java.lang.Class<com.android.ims.internal.uce.presence.PresSubscriptionState>;
                            public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.ims.internal.uce.presence.PresSubscriptionState>;
                            public static UCE_PRES_SUBSCRIPTION_STATE_ACTIVE: number;
                            public static UCE_PRES_SUBSCRIPTION_STATE_PENDING: number;
                            public static UCE_PRES_SUBSCRIPTION_STATE_TERMINATED: number;
                            public static UCE_PRES_SUBSCRIPTION_STATE_UNKNOWN: number;
                            public constructor();
                            public setPresSubscriptionState(param0: number): void;
                            public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                            public describeContents(): number;
                            public getPresSubscriptionStateValue(): number;
                            public readFromParcel(param0: globalAndroid.os.Parcel): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export module uce {
                    export module presence {
                        export class PresTupleInfo extends java.lang.Object {
                            public static class: java.lang.Class<com.android.ims.internal.uce.presence.PresTupleInfo>;
                            public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.ims.internal.uce.presence.PresTupleInfo>;
                            public constructor();
                            public getContactUri(): string;
                            public setFeatureTag(param0: string): void;
                            public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                            public setTimestamp(param0: string): void;
                            public describeContents(): number;
                            public getFeatureTag(): string;
                            public setContactUri(param0: string): void;
                            public getTimestamp(): string;
                            public readFromParcel(param0: globalAndroid.os.Parcel): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export module uce {
                    export module uceservice {
                        export class IUceListener extends java.lang.Object {
                            public static class: java.lang.Class<com.android.ims.internal.uce.uceservice.IUceListener>;
                            /**
                             * Constructs a new instance of the com.android.ims.internal.uce.uceservice.IUceListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                             */
                            public constructor(implementation: {
                                setStatus(param0: number): void;
                            });
                            public constructor();
                            public setStatus(param0: number): void;
                        }
                        export module IUceListener {
                            export abstract class Stub implements com.android.ims.internal.uce.uceservice.IUceListener {
                                public static class: java.lang.Class<com.android.ims.internal.uce.uceservice.IUceListener.Stub>;
                                public static asInterface(param0: globalAndroid.os.IBinder): com.android.ims.internal.uce.uceservice.IUceListener;
                                public constructor();
                                public asBinder(): globalAndroid.os.IBinder;
                                public setStatus(param0: number): void;
                                public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                            }
                            export module Stub {
                                export class Proxy extends com.android.ims.internal.uce.uceservice.IUceListener {
                                    public static class: java.lang.Class<com.android.ims.internal.uce.uceservice.IUceListener.Stub.Proxy>;
                                    public asBinder(): globalAndroid.os.IBinder;
                                    public getInterfaceDescriptor(): string;
                                    public setStatus(param0: number): void;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export module uce {
                    export module uceservice {
                        export class IUceService extends java.lang.Object {
                            public static class: java.lang.Class<com.android.ims.internal.uce.uceservice.IUceService>;
                            /**
                             * Constructs a new instance of the com.android.ims.internal.uce.uceservice.IUceService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                             */
                            public constructor(implementation: {
                                createOptionsService(param0: com.android.ims.internal.uce.options.IOptionsListener, param1: com.android.ims.internal.uce.common.UceLong): number;
                                createOptionsServiceForSubscription(param0: com.android.ims.internal.uce.options.IOptionsListener, param1: com.android.ims.internal.uce.common.UceLong, param2: string): number;
                                createPresenceService(param0: com.android.ims.internal.uce.presence.IPresenceListener, param1: com.android.ims.internal.uce.common.UceLong): number;
                                createPresenceServiceForSubscription(param0: com.android.ims.internal.uce.presence.IPresenceListener, param1: com.android.ims.internal.uce.common.UceLong, param2: string): number;
                                destroyOptionsService(param0: number): void;
                                destroyPresenceService(param0: number): void;
                                getOptionsService(): com.android.ims.internal.uce.options.IOptionsService;
                                getOptionsServiceForSubscription(param0: string): com.android.ims.internal.uce.options.IOptionsService;
                                getPresenceService(): com.android.ims.internal.uce.presence.IPresenceService;
                                getPresenceServiceForSubscription(param0: string): com.android.ims.internal.uce.presence.IPresenceService;
                                getServiceStatus(): boolean;
                                isServiceStarted(): boolean;
                                startService(param0: com.android.ims.internal.uce.uceservice.IUceListener): boolean;
                                stopService(): boolean;
                            });
                            public constructor();
                            public createPresenceService(param0: com.android.ims.internal.uce.presence.IPresenceListener, param1: com.android.ims.internal.uce.common.UceLong): number;
                            public getPresenceService(): com.android.ims.internal.uce.presence.IPresenceService;
                            public createPresenceServiceForSubscription(param0: com.android.ims.internal.uce.presence.IPresenceListener, param1: com.android.ims.internal.uce.common.UceLong, param2: string): number;
                            public destroyPresenceService(param0: number): void;
                            public getOptionsService(): com.android.ims.internal.uce.options.IOptionsService;
                            public createOptionsServiceForSubscription(param0: com.android.ims.internal.uce.options.IOptionsListener, param1: com.android.ims.internal.uce.common.UceLong, param2: string): number;
                            public isServiceStarted(): boolean;
                            public createOptionsService(param0: com.android.ims.internal.uce.options.IOptionsListener, param1: com.android.ims.internal.uce.common.UceLong): number;
                            public getPresenceServiceForSubscription(param0: string): com.android.ims.internal.uce.presence.IPresenceService;
                            public destroyOptionsService(param0: number): void;
                            public getOptionsServiceForSubscription(param0: string): com.android.ims.internal.uce.options.IOptionsService;
                            public stopService(): boolean;
                            public startService(param0: com.android.ims.internal.uce.uceservice.IUceListener): boolean;
                            public getServiceStatus(): boolean;
                        }
                        export module IUceService {
                            export abstract class Stub implements com.android.ims.internal.uce.uceservice.IUceService {
                                public static class: java.lang.Class<com.android.ims.internal.uce.uceservice.IUceService.Stub>;
                                public destroyOptionsService(param0: number): void;
                                public static asInterface(param0: globalAndroid.os.IBinder): com.android.ims.internal.uce.uceservice.IUceService;
                                public getPresenceService(): com.android.ims.internal.uce.presence.IPresenceService;
                                public createOptionsService(param0: com.android.ims.internal.uce.options.IOptionsListener, param1: com.android.ims.internal.uce.common.UceLong): number;
                                public constructor();
                                public startService(param0: com.android.ims.internal.uce.uceservice.IUceListener): boolean;
                                public getOptionsService(): com.android.ims.internal.uce.options.IOptionsService;
                                public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                                public createPresenceServiceForSubscription(param0: com.android.ims.internal.uce.presence.IPresenceListener, param1: com.android.ims.internal.uce.common.UceLong, param2: string): number;
                                public destroyPresenceService(param0: number): void;
                                public getPresenceServiceForSubscription(param0: string): com.android.ims.internal.uce.presence.IPresenceService;
                                public createOptionsServiceForSubscription(param0: com.android.ims.internal.uce.options.IOptionsListener, param1: com.android.ims.internal.uce.common.UceLong, param2: string): number;
                                public createPresenceService(param0: com.android.ims.internal.uce.presence.IPresenceListener, param1: com.android.ims.internal.uce.common.UceLong): number;
                                public getServiceStatus(): boolean;
                                public isServiceStarted(): boolean;
                                public getOptionsServiceForSubscription(param0: string): com.android.ims.internal.uce.options.IOptionsService;
                                public stopService(): boolean;
                                public asBinder(): globalAndroid.os.IBinder;
                            }
                            export module Stub {
                                export class Proxy extends com.android.ims.internal.uce.uceservice.IUceService {
                                    public static class: java.lang.Class<com.android.ims.internal.uce.uceservice.IUceService.Stub.Proxy>;
                                    public asBinder(): globalAndroid.os.IBinder;
                                    public getPresenceServiceForSubscription(param0: string): com.android.ims.internal.uce.presence.IPresenceService;
                                    public createPresenceService(param0: com.android.ims.internal.uce.presence.IPresenceListener, param1: com.android.ims.internal.uce.common.UceLong): number;
                                    public getPresenceService(): com.android.ims.internal.uce.presence.IPresenceService;
                                    public destroyPresenceService(param0: number): void;
                                    public getInterfaceDescriptor(): string;
                                    public stopService(): boolean;
                                    public createOptionsServiceForSubscription(param0: com.android.ims.internal.uce.options.IOptionsListener, param1: com.android.ims.internal.uce.common.UceLong, param2: string): number;
                                    public destroyOptionsService(param0: number): void;
                                    public isServiceStarted(): boolean;
                                    public getServiceStatus(): boolean;
                                    public createOptionsService(param0: com.android.ims.internal.uce.options.IOptionsListener, param1: com.android.ims.internal.uce.common.UceLong): number;
                                    public getOptionsService(): com.android.ims.internal.uce.options.IOptionsService;
                                    public startService(param0: com.android.ims.internal.uce.uceservice.IUceListener): boolean;
                                    public getOptionsServiceForSubscription(param0: string): com.android.ims.internal.uce.options.IOptionsService;
                                    public createPresenceServiceForSubscription(param0: com.android.ims.internal.uce.presence.IPresenceListener, param1: com.android.ims.internal.uce.common.UceLong, param2: string): number;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module ims {
            export module internal {
                export module uce {
                    export module uceservice {
                        export class ImsUceManager extends java.lang.Object {
                            public static class: java.lang.Class<com.android.ims.internal.uce.uceservice.ImsUceManager>;
                            public static ACTION_UCE_SERVICE_DOWN: string;
                            public static ACTION_UCE_SERVICE_UP: string;
                            public static EXTRA_PHONE_ID: string;
                            public static UCE_SERVICE_STATUS_CLOSED: number;
                            public static UCE_SERVICE_STATUS_FAILURE: number;
                            public static UCE_SERVICE_STATUS_ON: number;
                            public static UCE_SERVICE_STATUS_READY: number;
                            public static getInstance(param0: globalAndroid.content.Context, param1: number): com.android.ims.internal.uce.uceservice.ImsUceManager;
                            public getUceServiceInstance(): com.android.ims.internal.uce.uceservice.IUceService;
                            public createUceService(param0: boolean): void;
                        }
                        export module ImsUceManager {
                            export class UceServiceDeathRecipient extends java.lang.Object {
                                public static class: java.lang.Class<com.android.ims.internal.uce.uceservice.ImsUceManager.UceServiceDeathRecipient>;
                                public binderDied(): void;
                            }
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export class R extends java.lang.Object {
                public static class: java.lang.Class<com.android.internal.R>;
                public constructor();
            }
            export module R {
                export class anim extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.R.anim>;
                    public static accelerate_decelerate_interpolator: number;
                    public static accelerate_interpolator: number;
                    public static anticipate_interpolator: number;
                    public static anticipate_overshoot_interpolator: number;
                    public static app_starting_exit: number;
                    public static bounce_interpolator: number;
                    public static cycle_interpolator: number;
                    public static decelerate_interpolator: number;
                    public static dock_bottom_enter: number;
                    public static dock_bottom_exit: number;
                    public static dock_bottom_exit_keyguard: number;
                    public static dock_left_enter: number;
                    public static dock_left_exit: number;
                    public static dock_right_enter: number;
                    public static dock_right_exit: number;
                    public static dock_top_enter: number;
                    public static dock_top_exit: number;
                    public static fade_in: number;
                    public static fade_out: number;
                    public static launch_task_behind_source: number;
                    public static linear_interpolator: number;
                    public static lock_screen_behind_enter: number;
                    public static lock_screen_behind_enter_fade_in: number;
                    public static lock_screen_behind_enter_wallpaper: number;
                    public static lock_screen_wallpaper_exit: number;
                    public static overshoot_interpolator: number;
                    public static push_down_in: number;
                    public static push_down_out: number;
                    public static push_up_in: number;
                    public static push_up_out: number;
                    public static rotation_animation_enter: number;
                    public static rotation_animation_jump_exit: number;
                    public static rotation_animation_xfade_exit: number;
                    public static screen_rotate_0_enter: number;
                    public static screen_rotate_0_exit: number;
                    public static screen_rotate_0_frame: number;
                    public static screen_rotate_180_enter: number;
                    public static screen_rotate_180_exit: number;
                    public static screen_rotate_180_frame: number;
                    public static screen_rotate_finish_enter: number;
                    public static screen_rotate_finish_exit: number;
                    public static screen_rotate_finish_frame: number;
                    public static screen_rotate_minus_90_enter: number;
                    public static screen_rotate_minus_90_exit: number;
                    public static screen_rotate_minus_90_frame: number;
                    public static screen_rotate_plus_90_enter: number;
                    public static screen_rotate_plus_90_exit: number;
                    public static screen_rotate_plus_90_frame: number;
                    public static screen_rotate_start_enter: number;
                    public static screen_rotate_start_exit: number;
                    public static screen_rotate_start_frame: number;
                    public static screen_user_enter: number;
                    public static screen_user_exit: number;
                    public static slide_in_child_bottom: number;
                    public static slide_in_left: number;
                    public static slide_in_right: number;
                    public static slide_out_left: number;
                    public static slide_out_right: number;
                    public static voice_activity_close_enter: number;
                    public static voice_activity_close_exit: number;
                    public static voice_activity_open_enter: number;
                    public static voice_activity_open_exit: number;
                    public static wallpaper_open_exit: number;
                    public static window_move_from_decor: number;
                    public constructor();
                }
                export class animator extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.R.animator>;
                    public static fade_in: number;
                    public static fade_out: number;
                    public constructor();
                }
                export class array extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.R.array>;
                    public static app_ops_labels: number;
                    public static carrier_properties: number;
                    public static common_nicknames: number;
                    public static config_allowedGlobalInstantAppSettings: number;
                    public static config_allowedSecureInstantAppSettings: number;
                    public static config_allowedSystemInstantAppSettings: number;
                    public static config_autoBrightnessButtonBacklightValues: number;
                    public static config_autoBrightnessKeyboardBacklightValues: number;
                    public static config_autoBrightnessLcdBacklightValues: number;
                    public static config_autoBrightnessLevels: number;
                    public static config_autoRotationTiltTolerance: number;
                    public static config_batteryPackageTypeService: number;
                    public static config_batteryPackageTypeSystem: number;
                    public static config_calendarDateVibePattern: number;
                    public static config_callBarringMMI: number;
                    public static config_cdma_dun_supported_types: number;
                    public static config_cdma_home_system: number;
                    public static config_cdma_international_roaming_indicators: number;
                    public static config_cell_retries_per_error_code: number;
                    public static config_clockTickVibePattern: number;
                    public static config_contextClickVibePattern: number;
                    public static config_convert_to_emergency_number_map: number;
                    public static config_defaultFirstUserRestrictions: number;
                    public static config_defaultNotificationVibePattern: number;
                    public static config_defaultPinnerServiceFiles: number;
                    public static config_default_vm_number: number;
                    public static config_disabledUntilUsedPreinstalledCarrierApps: number;
                    public static config_disabledUntilUsedPreinstalledImes: number;
                    public static config_dynamicHysteresisBrightLevels: number;
                    public static config_dynamicHysteresisDarkLevels: number;
                    public static config_dynamicHysteresisLuxLevels: number;
                    public static config_emergency_mcc_codes: number;
                    public static config_ephemeralResolverPackage: number;
                    public static config_exceptionPackagesInTotalSilence: number;
                    public static config_fac_list: number;
                    public static config_fpEnrollSuccessVibePattern: number;
                    public static config_globalActionsList: number;
                    public static config_gpsParameters: number;
                    public static config_hideWhenDisabled_packageNames: number;
                    public static config_keySystemUuidMapping: number;
                    public static config_keyboardTapVibePattern: number;
                    public static config_locationProviderPackageNames: number;
                    public static config_longPressVibePattern: number;
                    public static config_lteDbmThresholds: number;
                    public static config_mobile_hotspot_provision_app: number;
                    public static config_mobile_tcp_buffers: number;
                    public static config_networkNotifySwitches: number;
                    public static config_nonBlockableNotificationPackages: number;
                    public static config_notificationFallbackVibePattern: number;
                    public static config_notificationSignalExtractors: number;
                    public static config_oemUsbModeOverride: number;
                    public static config_operatorConsideredNonRoaming: number;
                    public static config_protectedNetworks: number;
                    public static config_safeModeDisabledVibePattern: number;
                    public static config_safeModeEnabledVibePattern: number;
                    public static config_sameNamedOperatorConsideredRoaming: number;
                    public static config_serialPorts: number;
                    public static config_silentSmsPackageList: number;
                    public static config_sms_enabled_locking_shift_tables: number;
                    public static config_sms_enabled_single_shift_tables: number;
                    public static config_statusBarIcons: number;
                    public static config_system_condition_providers: number;
                    public static config_tcp_udp_packet_privateApns: number;
                    public static config_telephonyHardware: number;
                    public static config_testLocationProviders: number;
                    public static config_tether_apndata: number;
                    public static config_tether_bluetooth_regexs: number;
                    public static config_tether_dhcp_range: number;
                    public static config_tether_upstream_types: number;
                    public static config_tether_usb_regexs: number;
                    public static config_tether_wifi_regexs: number;
                    public static config_trustedInstallersPackageList: number;
                    public static config_twoDigitNumberPattern: number;
                    public static config_umtsDbmThresholds: number;
                    public static config_usbHostBlacklist: number;
                    public static config_virtualKeyVibePattern: number;
                    public static config_vvmSmsFilterRegexes: number;
                    public static config_wakeLockCallerTag: number;
                    public static config_wifi_dual_sap_interfaces: number;
                    public static dial_string_replace: number;
                    public static emailAddressTypes: number;
                    public static fingerprint_acquired_vendor: number;
                    public static fingerprint_error_vendor: number;
                    public static imProtocols: number;
                    public static maps_starting_lat_lng: number;
                    public static maps_starting_zoom: number;
                    public static networkAttributes: number;
                    public static network_switch_type_name: number;
                    public static networks_not_clear_data: number;
                    public static no_ems_support_sim_operators: number;
                    public static organizationTypes: number;
                    public static phoneTypes: number;
                    public static postalAddressTypes: number;
                    public static preloaded_color_state_lists: number;
                    public static preloaded_drawables: number;
                    public static preloaded_freeform_multi_window_drawables: number;
                    public static radioAttributes: number;
                    public static resolver_target_actions_pin: number;
                    public static resolver_target_actions_unpin: number;
                    public static sim_colors: number;
                    public static special_locale_codes: number;
                    public static special_locale_names: number;
                    public static supported_locales: number;
                    public static wfcOperatorErrorAlertMessages: number;
                    public static wfcOperatorErrorNotificationMessages: number;
                    public static wfcSpnFormats: number;
                    public constructor();
                }
                export class attr extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.R.attr>;
                    public static absListViewStyle: number;
                    public static accessibilityEventTypes: number;
                    public static accessibilityFeedbackType: number;
                    public static accessibilityFlags: number;
                    public static accessibilityFocusedDrawable: number;
                    public static accessibilityLiveRegion: number;
                    public static accessibilityTraversalAfter: number;
                    public static accessibilityTraversalBefore: number;
                    public static accountPreferences: number;
                    public static accountType: number;
                    public static action: number;
                    public static actionBarDivider: number;
                    public static actionBarItemBackground: number;
                    public static actionBarPopupTheme: number;
                    public static actionBarSize: number;
                    public static actionBarSplitStyle: number;
                    public static actionBarStyle: number;
                    public static actionBarTabBarStyle: number;
                    public static actionBarTabStyle: number;
                    public static actionBarTabTextStyle: number;
                    public static actionBarTheme: number;
                    public static actionBarWidgetTheme: number;
                    public static actionButtonStyle: number;
                    public static actionDropDownStyle: number;
                    public static actionLayout: number;
                    public static actionMenuTextAppearance: number;
                    public static actionMenuTextColor: number;
                    public static actionModeBackground: number;
                    public static actionModeCloseButtonStyle: number;
                    public static actionModeCloseDrawable: number;
                    public static actionModeCopyDrawable: number;
                    public static actionModeCutDrawable: number;
                    public static actionModeFindDrawable: number;
                    public static actionModePasteDrawable: number;
                    public static actionModePopupWindowStyle: number;
                    public static actionModeSelectAllDrawable: number;
                    public static actionModeShareDrawable: number;
                    public static actionModeSplitBackground: number;
                    public static actionModeStyle: number;
                    public static actionModeWebSearchDrawable: number;
                    public static actionOverflowButtonStyle: number;
                    public static actionOverflowMenuStyle: number;
                    public static actionProviderClass: number;
                    public static actionViewClass: number;
                    public static activatedBackgroundIndicator: number;
                    public static activityCloseEnterAnimation: number;
                    public static activityCloseExitAnimation: number;
                    public static activityOpenEnterAnimation: number;
                    public static activityOpenExitAnimation: number;
                    public static addPrintersActivity: number;
                    public static addStatesFromChildren: number;
                    public static adjustViewBounds: number;
                    public static advancedPrintOptionsActivity: number;
                    public static alertDialogCenterButtons: number;
                    public static alertDialogIcon: number;
                    public static alertDialogStyle: number;
                    public static alertDialogTheme: number;
                    public static alignmentMode: number;
                    public static allContactsName: number;
                    public static allowBackup: number;
                    public static allowClearUserData: number;
                    public static allowEmbedded: number;
                    public static allowParallelSyncs: number;
                    public static allowSingleTap: number;
                    public static allowTaskReparenting: number;
                    public static allowUndo: number;
                    public static alpha: number;
                    public static alphabeticModifiers: number;
                    public static alphabeticShortcut: number;
                    public static alwaysDrawnWithCache: number;
                    public static alwaysRetainTaskState: number;
                    public static amPmBackgroundColor: number;
                    public static amPmTextColor: number;
                    public static ambientShadowAlpha: number;
                    public static angle: number;
                    public static animateFirstView: number;
                    public static animateLayoutChanges: number;
                    public static animateOnClick: number;
                    public static animation: number;
                    public static animationCache: number;
                    public static animationDuration: number;
                    public static animationOrder: number;
                    public static animationResolution: number;
                    public static antialias: number;
                    public static anyDensity: number;
                    public static apduServiceBanner: number;
                    public static apiKey: number;
                    public static appCategory: number;
                    public static author: number;
                    public static authorities: number;
                    public static autoAdvanceViewId: number;
                    public static autoCompleteTextViewStyle: number;
                    public static autoLink: number;
                    public static autoMirrored: number;
                    public static autoRemoveFromRecents: number;
                    public static autoSizeMaxTextSize: number;
                    public static autoSizeMinTextSize: number;
                    public static autoSizePresetSizes: number;
                    public static autoSizeStepGranularity: number;
                    public static autoSizeTextType: number;
                    public static autoStart: number;
                    public static autoText: number;
                    public static autoUrlDetect: number;
                    public static autoVerify: number;
                    public static autofillDatasetPickerMaxHeight: number;
                    public static autofillDatasetPickerMaxWidth: number;
                    public static autofillHints: number;
                    public static autofilledHighlight: number;
                    public static background: number;
                    public static backgroundDimAmount: number;
                    public static backgroundDimEnabled: number;
                    public static backgroundSplit: number;
                    public static backgroundStacked: number;
                    public static backgroundTint: number;
                    public static backgroundTintMode: number;
                    public static backupAgent: number;
                    public static backupInForeground: number;
                    public static banner: number;
                    public static baseline: number;
                    public static baselineAlignBottom: number;
                    public static baselineAligned: number;
                    public static baselineAlignedChildIndex: number;
                    public static bitmap: number;
                    public static borderlessButtonStyle: number;
                    public static bottom: number;
                    public static bottomBright: number;
                    public static bottomDark: number;
                    public static bottomLeftRadius: number;
                    public static bottomMedium: number;
                    public static bottomOffset: number;
                    public static bottomRightRadius: number;
                    public static breadCrumbShortTitle: number;
                    public static breadCrumbTitle: number;
                    public static breakStrategy: number;
                    public static bufferType: number;
                    public static button: number;
                    public static buttonBarButtonStyle: number;
                    public static buttonBarNegativeButtonStyle: number;
                    public static buttonBarNeutralButtonStyle: number;
                    public static buttonBarPositiveButtonStyle: number;
                    public static buttonBarStyle: number;
                    public static buttonGravity: number;
                    public static buttonStyle: number;
                    public static buttonStyleInset: number;
                    public static buttonStyleSmall: number;
                    public static buttonStyleToggle: number;
                    public static buttonTint: number;
                    public static buttonTintMode: number;
                    public static cacheColorHint: number;
                    public static calendarTextColor: number;
                    public static calendarViewShown: number;
                    public static calendarViewStyle: number;
                    public static canControlMagnification: number;
                    public static canPerformGestures: number;
                    public static canRecord: number;
                    public static canRequestEnhancedWebAccessibility: number;
                    public static canRequestFilterKeyEvents: number;
                    public static canRequestFingerprintGestures: number;
                    public static canRequestTouchExplorationMode: number;
                    public static canRetrieveWindowContent: number;
                    public static candidatesTextStyleSpans: number;
                    public static capitalize: number;
                    public static category: number;
                    public static centerBright: number;
                    public static centerColor: number;
                    public static centerDark: number;
                    public static centerMedium: number;
                    public static centerX: number;
                    public static centerY: number;
                    public static certDigest: number;
                    public static checkBoxPreferenceStyle: number;
                    public static checkMark: number;
                    public static checkMarkGravity: number;
                    public static checkMarkTint: number;
                    public static checkMarkTintMode: number;
                    public static checkable: number;
                    public static checkableBehavior: number;
                    public static checkboxStyle: number;
                    public static checked: number;
                    public static checkedButton: number;
                    public static checkedTextViewStyle: number;
                    public static childDivider: number;
                    public static childIndicator: number;
                    public static childIndicatorEnd: number;
                    public static childIndicatorLeft: number;
                    public static childIndicatorRight: number;
                    public static childIndicatorStart: number;
                    public static choiceMode: number;
                    public static clearTaskOnLaunch: number;
                    public static clickable: number;
                    public static clipChildren: number;
                    public static clipOrientation: number;
                    public static clipToPadding: number;
                    public static closeIcon: number;
                    public static closeItemLayout: number;
                    public static codes: number;
                    public static collapseColumns: number;
                    public static collapseContentDescription: number;
                    public static collapseIcon: number;
                    public static color: number;
                    public static colorAccent: number;
                    public static colorActivatedHighlight: number;
                    public static colorBackground: number;
                    public static colorBackgroundCacheHint: number;
                    public static colorBackgroundFloating: number;
                    public static colorButtonNormal: number;
                    public static colorControlActivated: number;
                    public static colorControlHighlight: number;
                    public static colorControlNormal: number;
                    public static colorEdgeEffect: number;
                    public static colorError: number;
                    public static colorFocusedHighlight: number;
                    public static colorForeground: number;
                    public static colorForegroundInverse: number;
                    public static colorLongPressedHighlight: number;
                    public static colorMode: number;
                    public static colorMultiSelectHighlight: number;
                    public static colorPressedHighlight: number;
                    public static colorPrimary: number;
                    public static colorPrimaryDark: number;
                    public static colorSecondary: number;
                    public static columnCount: number;
                    public static columnDelay: number;
                    public static columnOrderPreserved: number;
                    public static columnWidth: number;
                    public static commitIcon: number;
                    public static compatibleWidthLimitDp: number;
                    public static completionHint: number;
                    public static completionHintView: number;
                    public static completionThreshold: number;
                    public static configChanges: number;
                    public static configure: number;
                    public static constantSize: number;
                    public static content: number;
                    public static contentAgeHint: number;
                    public static contentAuthority: number;
                    public static contentDescription: number;
                    public static contentInsetEnd: number;
                    public static contentInsetEndWithActions: number;
                    public static contentInsetLeft: number;
                    public static contentInsetRight: number;
                    public static contentInsetStart: number;
                    public static contentInsetStartWithNavigation: number;
                    public static contextClickable: number;
                    public static contextDescription: number;
                    public static contextPopupMenuStyle: number;
                    public static contextUri: number;
                    public static controlX1: number;
                    public static controlX2: number;
                    public static controlY1: number;
                    public static controlY2: number;
                    public static countDown: number;
                    public static country: number;
                    public static cropToPadding: number;
                    public static cursorVisible: number;
                    public static customNavigationLayout: number;
                    public static customTokens: number;
                    public static cycles: number;
                    public static dashGap: number;
                    public static dashWidth: number;
                    public static data: number;
                    public static datePickerDialogTheme: number;
                    public static datePickerMode: number;
                    public static datePickerStyle: number;
                    public static dateTextAppearance: number;
                    public static dayOfWeekBackground: number;
                    public static dayOfWeekTextAppearance: number;
                    public static debuggable: number;
                    public static defaultFocusHighlightEnabled: number;
                    public static defaultHeight: number;
                    public static defaultToDeviceProtectedStorage: number;
                    public static defaultValue: number;
                    public static defaultWidth: number;
                    public static delay: number;
                    public static dependency: number;
                    public static descendantFocusability: number;
                    public static description: number;
                    public static detachWallpaper: number;
                    public static detailColumn: number;
                    public static detailSocialSummary: number;
                    public static detailsElementBackground: number;
                    public static dial: number;
                    public static dialogCustomTitleDecorLayout: number;
                    public static dialogIcon: number;
                    public static dialogLayout: number;
                    public static dialogMessage: number;
                    public static dialogPreferenceStyle: number;
                    public static dialogPreferredPadding: number;
                    public static dialogTheme: number;
                    public static dialogTitle: number;
                    public static dialogTitleDecorLayout: number;
                    public static dialogTitleIconsDecorLayout: number;
                    public static digits: number;
                    public static directBootAware: number;
                    public static direction: number;
                    public static directionDescriptions: number;
                    public static directionPriority: number;
                    public static disableDependentsState: number;
                    public static disabledAlpha: number;
                    public static displayOptions: number;
                    public static dither: number;
                    public static divider: number;
                    public static dividerHeight: number;
                    public static dividerHorizontal: number;
                    public static dividerPadding: number;
                    public static dividerVertical: number;
                    public static documentLaunchMode: number;
                    public static drawSelectorOnTop: number;
                    public static drawable: number;
                    public static drawableBottom: number;
                    public static drawableEnd: number;
                    public static drawableLeft: number;
                    public static drawablePadding: number;
                    public static drawableRight: number;
                    public static drawableStart: number;
                    public static drawableTint: number;
                    public static drawableTintMode: number;
                    public static drawableTop: number;
                    public static drawingCacheQuality: number;
                    public static dropDownAnchor: number;
                    public static dropDownHeight: number;
                    public static dropDownHintAppearance: number;
                    public static dropDownHorizontalOffset: number;
                    public static dropDownItemStyle: number;
                    public static dropDownListViewStyle: number;
                    public static dropDownSelector: number;
                    public static dropDownSpinnerStyle: number;
                    public static dropDownVerticalOffset: number;
                    public static dropDownWidth: number;
                    public static duplicateParentState: number;
                    public static duration: number;
                    public static editTextBackground: number;
                    public static editTextColor: number;
                    public static editTextPreferenceStyle: number;
                    public static editTextStyle: number;
                    public static editable: number;
                    public static editorExtras: number;
                    public static elegantTextHeight: number;
                    public static elevation: number;
                    public static ellipsize: number;
                    public static ems: number;
                    public static enableVrMode: number;
                    public static enabled: number;
                    public static end: number;
                    public static endColor: number;
                    public static endX: number;
                    public static endY: number;
                    public static endYear: number;
                    public static enterFadeDuration: number;
                    public static entries: number;
                    public static entryValues: number;
                    public static eventsInterceptionEnabled: number;
                    public static excludeClass: number;
                    public static excludeFromRecents: number;
                    public static excludeId: number;
                    public static excludeName: number;
                    public static exitFadeDuration: number;
                    public static expandableListPreferredChildIndicatorLeft: number;
                    public static expandableListPreferredChildIndicatorRight: number;
                    public static expandableListPreferredChildPaddingLeft: number;
                    public static expandableListPreferredItemIndicatorLeft: number;
                    public static expandableListPreferredItemIndicatorRight: number;
                    public static expandableListPreferredItemPaddingLeft: number;
                    public static expandableListViewStyle: number;
                    public static expandableListViewWhiteStyle: number;
                    public static exported: number;
                    public static externalRouteEnabledDrawable: number;
                    public static externalService: number;
                    public static extraTension: number;
                    public static extractNativeLibs: number;
                    public static factor: number;
                    public static fadeDuration: number;
                    public static fadeEnabled: number;
                    public static fadeOffset: number;
                    public static fadeScrollbars: number;
                    public static fadingEdge: number;
                    public static fadingEdgeLength: number;
                    public static fadingMode: number;
                    public static fastScrollAlwaysVisible: number;
                    public static fastScrollEnabled: number;
                    public static fastScrollOverlayPosition: number;
                    public static fastScrollPreviewBackgroundLeft: number;
                    public static fastScrollPreviewBackgroundRight: number;
                    public static fastScrollStyle: number;
                    public static fastScrollTextColor: number;
                    public static fastScrollThumbDrawable: number;
                    public static fastScrollTrackDrawable: number;
                    public static fillAfter: number;
                    public static fillAlpha: number;
                    public static fillBefore: number;
                    public static fillColor: number;
                    public static fillEnabled: number;
                    public static fillType: number;
                    public static fillViewport: number;
                    public static filter: number;
                    public static filterTouchesWhenObscured: number;
                    public static fingerprintAuthDrawable: number;
                    public static finishOnCloseSystemDialogs: number;
                    public static finishOnTaskLaunch: number;
                    public static firstDayOfWeek: number;
                    public static fitsSystemWindows: number;
                    public static flipInterval: number;
                    public static floatingToolbarDividerColor: number;
                    public static focusable: number;
                    public static focusableInTouchMode: number;
                    public static focusedByDefault: number;
                    public static focusedMonthDateColor: number;
                    public static font: number;
                    public static fontFamily: number;
                    public static fontFeatureSettings: number;
                    public static fontProviderAuthority: number;
                    public static fontProviderCerts: number;
                    public static fontProviderPackage: number;
                    public static fontProviderQuery: number;
                    public static fontStyle: number;
                    public static fontWeight: number;
                    public static footerDividersEnabled: number;
                    public static forceHasOverlappingRendering: number;
                    public static foreground: number;
                    public static foregroundGravity: number;
                    public static foregroundTint: number;
                    public static foregroundTintMode: number;
                    public static format: number;
                    public static format12Hour: number;
                    public static format24Hour: number;
                    public static fraction: number;
                    public static fragment: number;
                    public static fragmentAllowEnterTransitionOverlap: number;
                    public static fragmentAllowReturnTransitionOverlap: number;
                    public static fragmentBreadCrumbsStyle: number;
                    public static fragmentCloseEnterAnimation: number;
                    public static fragmentCloseExitAnimation: number;
                    public static fragmentEnterTransition: number;
                    public static fragmentExitTransition: number;
                    public static fragmentFadeEnterAnimation: number;
                    public static fragmentFadeExitAnimation: number;
                    public static fragmentOpenEnterAnimation: number;
                    public static fragmentOpenExitAnimation: number;
                    public static fragmentReenterTransition: number;
                    public static fragmentReturnTransition: number;
                    public static fragmentSharedElementEnterTransition: number;
                    public static fragmentSharedElementReturnTransition: number;
                    public static freezesText: number;
                    public static fromAlpha: number;
                    public static fromDegrees: number;
                    public static fromId: number;
                    public static fromScene: number;
                    public static fromXDelta: number;
                    public static fromXScale: number;
                    public static fromYDelta: number;
                    public static fromYScale: number;
                    public static fullBackupContent: number;
                    public static fullBackupOnly: number;
                    public static fullBright: number;
                    public static fullDark: number;
                    public static functionalTest: number;
                    public static galleryItemBackground: number;
                    public static galleryStyle: number;
                    public static gestureColor: number;
                    public static gestureOverlayViewStyle: number;
                    public static gestureStrokeAngleThreshold: number;
                    public static gestureStrokeLengthThreshold: number;
                    public static gestureStrokeSquarenessThreshold: number;
                    public static gestureStrokeType: number;
                    public static gestureStrokeWidth: number;
                    public static glEsVersion: number;
                    public static goIcon: number;
                    public static gradientRadius: number;
                    public static grantUriPermissions: number;
                    public static gravity: number;
                    public static gridViewStyle: number;
                    public static groupIndicator: number;
                    public static hand_hour: number;
                    public static hand_minute: number;
                    public static handle: number;
                    public static handleProfiling: number;
                    public static hapticFeedbackEnabled: number;
                    public static hardwareAccelerated: number;
                    public static hasCode: number;
                    public static hash: number;
                    public static headerAmPmTextAppearance: number;
                    public static headerBackground: number;
                    public static headerDayOfMonthTextAppearance: number;
                    public static headerDividersEnabled: number;
                    public static headerMonthTextAppearance: number;
                    public static headerTimeTextAppearance: number;
                    public static headerYearTextAppearance: number;
                    public static height: number;
                    public static hideOnContentScroll: number;
                    public static hint: number;
                    public static homeAsUpIndicator: number;
                    public static homeLayout: number;
                    public static horizontalDivider: number;
                    public static horizontalGap: number;
                    public static horizontalScrollViewStyle: number;
                    public static horizontalSpacing: number;
                    public static host: number;
                    public static hotSpotX: number;
                    public static hotSpotY: number;
                    public static hyphenationFrequency: number;
                    public static icon: number;
                    public static iconPreview: number;
                    public static iconSpaceReserved: number;
                    public static iconTint: number;
                    public static iconTintMode: number;
                    public static iconifiedByDefault: number;
                    public static id: number;
                    public static ignoreGravity: number;
                    public static imageButtonStyle: number;
                    public static imageWellStyle: number;
                    public static imeActionId: number;
                    public static imeActionLabel: number;
                    public static imeExtractEnterAnimation: number;
                    public static imeExtractExitAnimation: number;
                    public static imeFullscreenBackground: number;
                    public static imeOptions: number;
                    public static imeSubtypeExtraValue: number;
                    public static imeSubtypeLocale: number;
                    public static imeSubtypeMode: number;
                    public static immersive: number;
                    public static importantForAccessibility: number;
                    public static importantForAutofill: number;
                    public static inAnimation: number;
                    public static includeFontPadding: number;
                    public static includeInGlobalSearch: number;
                    public static indeterminate: number;
                    public static indeterminateBehavior: number;
                    public static indeterminateDrawable: number;
                    public static indeterminateDuration: number;
                    public static indeterminateOnly: number;
                    public static indeterminateProgressStyle: number;
                    public static indeterminateTint: number;
                    public static indeterminateTintMode: number;
                    public static indicatorEnd: number;
                    public static indicatorLeft: number;
                    public static indicatorRight: number;
                    public static indicatorStart: number;
                    public static inflatedId: number;
                    public static initOrder: number;
                    public static initialKeyguardLayout: number;
                    public static initialLayout: number;
                    public static innerRadius: number;
                    public static innerRadiusRatio: number;
                    public static inputMethod: number;
                    public static inputType: number;
                    public static inset: number;
                    public static insetBottom: number;
                    public static insetLeft: number;
                    public static insetRight: number;
                    public static insetTop: number;
                    public static installLocation: number;
                    public static interpolator: number;
                    public static isAlwaysSyncable: number;
                    public static isAsciiCapable: number;
                    public static isAuxiliary: number;
                    public static isDefault: number;
                    public static isFeatureSplit: number;
                    public static isGame: number;
                    public static isIndicator: number;
                    public static isLightTheme: number;
                    public static isModifier: number;
                    public static isRepeatable: number;
                    public static isScrollContainer: number;
                    public static isStatic: number;
                    public static isSticky: number;
                    public static isolatedProcess: number;
                    public static isolatedSplits: number;
                    public static itemBackground: number;
                    public static itemIconDisabledAlpha: number;
                    public static itemPadding: number;
                    public static itemTextAppearance: number;
                    public static justificationMode: number;
                    public static keepScreenOn: number;
                    public static key: number;
                    public static keyBackground: number;
                    public static keyEdgeFlags: number;
                    public static keyHeight: number;
                    public static keyIcon: number;
                    public static keyLabel: number;
                    public static keyOutputText: number;
                    public static keyPreviewHeight: number;
                    public static keyPreviewLayout: number;
                    public static keyPreviewOffset: number;
                    public static keySet: number;
                    public static keyTextColor: number;
                    public static keyTextSize: number;
                    public static keyWidth: number;
                    public static keyboardLayout: number;
                    public static keyboardMode: number;
                    public static keyboardNavigationCluster: number;
                    public static keyboardViewStyle: number;
                    public static keycode: number;
                    public static killAfterRestore: number;
                    public static label: number;
                    public static labelFor: number;
                    public static labelTextSize: number;
                    public static languageTag: number;
                    public static largeHeap: number;
                    public static largeScreens: number;
                    public static largestWidthLimitDp: number;
                    public static launchMode: number;
                    public static launchTaskBehindSourceAnimation: number;
                    public static launchTaskBehindTargetAnimation: number;
                    public static layerType: number;
                    public static layout: number;
                    public static layoutAnimation: number;
                    public static layoutDirection: number;
                    public static layoutMode: number;
                    public static layout_above: number;
                    public static layout_alignBaseline: number;
                    public static layout_alignBottom: number;
                    public static layout_alignEnd: number;
                    public static layout_alignLeft: number;
                    public static layout_alignParentBottom: number;
                    public static layout_alignParentEnd: number;
                    public static layout_alignParentLeft: number;
                    public static layout_alignParentRight: number;
                    public static layout_alignParentStart: number;
                    public static layout_alignParentTop: number;
                    public static layout_alignRight: number;
                    public static layout_alignStart: number;
                    public static layout_alignTop: number;
                    public static layout_alignWithParentIfMissing: number;
                    public static layout_below: number;
                    public static layout_centerHorizontal: number;
                    public static layout_centerInParent: number;
                    public static layout_centerVertical: number;
                    public static layout_column: number;
                    public static layout_columnSpan: number;
                    public static layout_columnWeight: number;
                    public static layout_gravity: number;
                    public static layout_height: number;
                    public static layout_margin: number;
                    public static layout_marginBottom: number;
                    public static layout_marginEnd: number;
                    public static layout_marginHorizontal: number;
                    public static layout_marginLeft: number;
                    public static layout_marginRight: number;
                    public static layout_marginStart: number;
                    public static layout_marginTop: number;
                    public static layout_marginVertical: number;
                    public static layout_row: number;
                    public static layout_rowSpan: number;
                    public static layout_rowWeight: number;
                    public static layout_scale: number;
                    public static layout_span: number;
                    public static layout_toEndOf: number;
                    public static layout_toLeftOf: number;
                    public static layout_toRightOf: number;
                    public static layout_toStartOf: number;
                    public static layout_weight: number;
                    public static layout_width: number;
                    public static layout_x: number;
                    public static layout_y: number;
                    public static left: number;
                    public static letterSpacing: number;
                    public static level: number;
                    public static lightRadius: number;
                    public static lightY: number;
                    public static lightZ: number;
                    public static lineSpacingExtra: number;
                    public static lineSpacingMultiplier: number;
                    public static lines: number;
                    public static linksClickable: number;
                    public static listChoiceBackgroundIndicator: number;
                    public static listChoiceIndicatorMultiple: number;
                    public static listChoiceIndicatorSingle: number;
                    public static listDivider: number;
                    public static listDividerAlertDialog: number;
                    public static listMenuViewStyle: number;
                    public static listPopupWindowStyle: number;
                    public static listPreferredItemHeight: number;
                    public static listPreferredItemHeightLarge: number;
                    public static listPreferredItemHeightSmall: number;
                    public static listPreferredItemPaddingEnd: number;
                    public static listPreferredItemPaddingLeft: number;
                    public static listPreferredItemPaddingRight: number;
                    public static listPreferredItemPaddingStart: number;
                    public static listSelector: number;
                    public static listSeparatorTextViewStyle: number;
                    public static listViewStyle: number;
                    public static listViewWhiteStyle: number;
                    public static lockPatternStyle: number;
                    public static lockTaskMode: number;
                    public static logo: number;
                    public static logoDescription: number;
                    public static longClickable: number;
                    public static loopViews: number;
                    public static manageSpaceActivity: number;
                    public static mapViewStyle: number;
                    public static marqueeRepeatLimit: number;
                    public static matchOrder: number;
                    public static max: number;
                    public static maxAspectRatio: number;
                    public static maxButtonHeight: number;
                    public static maxDate: number;
                    public static maxEms: number;
                    public static maxHeight: number;
                    public static maxItemsPerRow: number;
                    public static maxLength: number;
                    public static maxLevel: number;
                    public static maxLines: number;
                    public static maxRecents: number;
                    public static maxRows: number;
                    public static maxSdkVersion: number;
                    public static maxWidth: number;
                    public static maximumAngle: number;
                    public static measureAllChildren: number;
                    public static measureWithLargestChild: number;
                    public static mediaRouteButtonStyle: number;
                    public static mediaRouteTypes: number;
                    public static menuCategory: number;
                    public static mimeType: number;
                    public static min: number;
                    public static minDate: number;
                    public static minEms: number;
                    public static minHeight: number;
                    public static minLevel: number;
                    public static minLines: number;
                    public static minResizeHeight: number;
                    public static minResizeWidth: number;
                    public static minSdkVersion: number;
                    public static minWidth: number;
                    public static minimumHorizontalAngle: number;
                    public static minimumVerticalAngle: number;
                    public static mipMap: number;
                    public static mirrorForRtl: number;
                    public static mode: number;
                    public static moreIcon: number;
                    public static multiArch: number;
                    public static multiprocess: number;
                    public static name: number;
                    public static navigationBarColor: number;
                    public static navigationContentDescription: number;
                    public static navigationIcon: number;
                    public static navigationMode: number;
                    public static negativeButtonText: number;
                    public static nestedScrollingEnabled: number;
                    public static networkSecurityConfig: number;
                    public static nextClusterForward: number;
                    public static nextFocusDown: number;
                    public static nextFocusForward: number;
                    public static nextFocusLeft: number;
                    public static nextFocusRight: number;
                    public static nextFocusUp: number;
                    public static noHistory: number;
                    public static normalScreens: number;
                    public static notificationTimeout: number;
                    public static numColumns: number;
                    public static numStars: number;
                    public static numberPickerStyle: number;
                    public static numbersBackgroundColor: number;
                    public static numbersInnerTextColor: number;
                    public static numbersSelectorColor: number;
                    public static numbersTextColor: number;
                    public static numeric: number;
                    public static numericModifiers: number;
                    public static numericShortcut: number;
                    public static offset: number;
                    public static onClick: number;
                    public static oneshot: number;
                    public static opacity: number;
                    public static order: number;
                    public static orderInCategory: number;
                    public static ordering: number;
                    public static orderingFromXml: number;
                    public static orientation: number;
                    public static outAnimation: number;
                    public static outlineProvider: number;
                    public static overScrollFooter: number;
                    public static overScrollHeader: number;
                    public static overScrollMode: number;
                    public static overlapAnchor: number;
                    public static overridesImplicitlyEnabledSubtype: number;
                    public static packageNames: number;
                    public static padding: number;
                    public static paddingBottom: number;
                    public static paddingEnd: number;
                    public static paddingHorizontal: number;
                    public static paddingLeft: number;
                    public static paddingMode: number;
                    public static paddingRight: number;
                    public static paddingStart: number;
                    public static paddingTop: number;
                    public static paddingVertical: number;
                    public static panelBackground: number;
                    public static panelColorBackground: number;
                    public static panelColorForeground: number;
                    public static panelFullBackground: number;
                    public static panelTextAppearance: number;
                    public static parentActivityName: number;
                    public static password: number;
                    public static path: number;
                    public static pathData: number;
                    public static pathPattern: number;
                    public static pathPrefix: number;
                    public static patternPathData: number;
                    public static permission: number;
                    public static permissionFlags: number;
                    public static permissionGroup: number;
                    public static permissionGroupFlags: number;
                    public static persistableMode: number;
                    public static persistent: number;
                    public static persistentDrawingCache: number;
                    public static persistentWhenFeatureAvailable: number;
                    public static phoneNumber: number;
                    public static pivotX: number;
                    public static pivotY: number;
                    public static pointerIcon: number;
                    public static popupAnimationStyle: number;
                    public static popupBackground: number;
                    public static popupCharacters: number;
                    public static popupElevation: number;
                    public static popupEnterTransition: number;
                    public static popupExitTransition: number;
                    public static popupKeyboard: number;
                    public static popupLayout: number;
                    public static popupMenuStyle: number;
                    public static popupTheme: number;
                    public static popupWindowStyle: number;
                    public static port: number;
                    public static positiveButtonText: number;
                    public static preferenceActivityStyle: number;
                    public static preferenceCategoryStyle: number;
                    public static preferenceFragmentStyle: number;
                    public static preferenceFrameLayoutStyle: number;
                    public static preferenceInformationStyle: number;
                    public static preferenceLayoutChild: number;
                    public static preferenceScreenStyle: number;
                    public static preferenceStyle: number;
                    public static presentationTheme: number;
                    public static previewImage: number;
                    public static primaryContentAlpha: number;
                    public static priority: number;
                    public static privateImeOptions: number;
                    public static process: number;
                    public static progress: number;
                    public static progressBackgroundTint: number;
                    public static progressBackgroundTintMode: number;
                    public static progressBarPadding: number;
                    public static progressBarStyle: number;
                    public static progressBarStyleHorizontal: number;
                    public static progressBarStyleInverse: number;
                    public static progressBarStyleLarge: number;
                    public static progressBarStyleLargeInverse: number;
                    public static progressBarStyleSmall: number;
                    public static progressBarStyleSmallInverse: number;
                    public static progressBarStyleSmallTitle: number;
                    public static progressDrawable: number;
                    public static progressTint: number;
                    public static progressTintMode: number;
                    public static prompt: number;
                    public static propertyName: number;
                    public static propertyXName: number;
                    public static propertyYName: number;
                    public static protectionLevel: number;
                    public static publicKey: number;
                    public static queryActionMsg: number;
                    public static queryAfterZeroResults: number;
                    public static queryBackground: number;
                    public static queryHint: number;
                    public static quickContactBadgeStyleSmallWindowLarge: number;
                    public static quickContactBadgeStyleSmallWindowMedium: number;
                    public static quickContactBadgeStyleSmallWindowSmall: number;
                    public static quickContactBadgeStyleWindowLarge: number;
                    public static quickContactBadgeStyleWindowMedium: number;
                    public static quickContactBadgeStyleWindowSmall: number;
                    public static radioButtonStyle: number;
                    public static radius: number;
                    public static rating: number;
                    public static ratingBarStyle: number;
                    public static ratingBarStyleIndicator: number;
                    public static ratingBarStyleSmall: number;
                    public static readPermission: number;
                    public static recognitionService: number;
                    public static recreateOnConfigChanges: number;
                    public static recycleEnabled: number;
                    public static relinquishTaskIdentity: number;
                    public static reparent: number;
                    public static reparentWithOverlay: number;
                    public static repeatCount: number;
                    public static repeatMode: number;
                    public static reqFiveWayNav: number;
                    public static reqHardKeyboard: number;
                    public static reqKeyboardType: number;
                    public static reqNavigation: number;
                    public static reqTouchScreen: number;
                    public static requireDeviceUnlock: number;
                    public static required: number;
                    public static requiredAccountType: number;
                    public static requiredFeature: number;
                    public static requiredForAllUsers: number;
                    public static requiredNotFeature: number;
                    public static requiredSystemPropertyName: number;
                    public static requiredSystemPropertyValue: number;
                    public static requiresFadingEdge: number;
                    public static requiresSmallestWidthDp: number;
                    public static resizeClip: number;
                    public static resizeMode: number;
                    public static resizeable: number;
                    public static resizeableActivity: number;
                    public static resource: number;
                    public static restoreAnyVersion: number;
                    public static restoreNeedsApplication: number;
                    public static restrictedAccountType: number;
                    public static restrictionType: number;
                    public static resumeWhilePausing: number;
                    public static reversible: number;
                    public static revisionCode: number;
                    public static right: number;
                    public static ringtonePreferenceStyle: number;
                    public static ringtoneType: number;
                    public static rotation: number;
                    public static rotationAnimation: number;
                    public static rotationX: number;
                    public static rotationY: number;
                    public static roundIcon: number;
                    public static rowCount: number;
                    public static rowDelay: number;
                    public static rowEdgeFlags: number;
                    public static rowHeight: number;
                    public static rowOrderPreserved: number;
                    public static saveEnabled: number;
                    public static scaleGravity: number;
                    public static scaleHeight: number;
                    public static scaleType: number;
                    public static scaleWidth: number;
                    public static scaleX: number;
                    public static scaleY: number;
                    public static scheme: number;
                    public static screenDensity: number;
                    public static screenOrientation: number;
                    public static screenSize: number;
                    public static scrollHorizontally: number;
                    public static scrollIndicators: number;
                    public static scrollViewStyle: number;
                    public static scrollX: number;
                    public static scrollY: number;
                    public static scrollbarAlwaysDrawHorizontalTrack: number;
                    public static scrollbarAlwaysDrawVerticalTrack: number;
                    public static scrollbarDefaultDelayBeforeFade: number;
                    public static scrollbarFadeDuration: number;
                    public static scrollbarSize: number;
                    public static scrollbarStyle: number;
                    public static scrollbarThumbHorizontal: number;
                    public static scrollbarThumbVertical: number;
                    public static scrollbarTrackHorizontal: number;
                    public static scrollbarTrackVertical: number;
                    public static scrollbars: number;
                    public static scrollingCache: number;
                    public static searchButtonText: number;
                    public static searchDialogTheme: number;
                    public static searchHintIcon: number;
                    public static searchIcon: number;
                    public static searchKeyphrase: number;
                    public static searchKeyphraseId: number;
                    public static searchKeyphraseRecognitionFlags: number;
                    public static searchKeyphraseSupportedLocales: number;
                    public static searchMode: number;
                    public static searchSettingsDescription: number;
                    public static searchSuggestAuthority: number;
                    public static searchSuggestIntentAction: number;
                    public static searchSuggestIntentData: number;
                    public static searchSuggestPath: number;
                    public static searchSuggestSelection: number;
                    public static searchSuggestThreshold: number;
                    public static searchViewStyle: number;
                    public static secondaryContentAlpha: number;
                    public static secondaryProgress: number;
                    public static secondaryProgressTint: number;
                    public static secondaryProgressTintMode: number;
                    public static seekBarDialogPreferenceStyle: number;
                    public static seekBarPreferenceStyle: number;
                    public static seekBarStyle: number;
                    public static segmentedButtonStyle: number;
                    public static selectAllOnFocus: number;
                    public static selectable: number;
                    public static selectableItemBackground: number;
                    public static selectableItemBackgroundBorderless: number;
                    public static selectedDateVerticalBar: number;
                    public static selectedWeekBackgroundColor: number;
                    public static sessionService: number;
                    public static settingsActivity: number;
                    public static setupActivity: number;
                    public static shadowColor: number;
                    public static shadowDx: number;
                    public static shadowDy: number;
                    public static shadowRadius: number;
                    public static shape: number;
                    public static shareInterpolator: number;
                    public static sharedUserId: number;
                    public static sharedUserLabel: number;
                    public static shortcutDisabledMessage: number;
                    public static shortcutId: number;
                    public static shortcutLongLabel: number;
                    public static shortcutShortLabel: number;
                    public static shouldDisableView: number;
                    public static showAsAction: number;
                    public static showDefault: number;
                    public static showDividers: number;
                    public static showForAllUsers: number;
                    public static showMetadataInPreview: number;
                    public static showOnLockScreen: number;
                    public static showSilent: number;
                    public static showText: number;
                    public static showWeekNumber: number;
                    public static shownWeekCount: number;
                    public static shrinkColumns: number;
                    public static singleLine: number;
                    public static singleLineTitle: number;
                    public static singleUser: number;
                    public static slideEdge: number;
                    public static smallIcon: number;
                    public static smallScreens: number;
                    public static smoothScrollbar: number;
                    public static solidColor: number;
                    public static soundEffectsEnabled: number;
                    public static spacing: number;
                    public static spinnerDropDownItemStyle: number;
                    public static spinnerItemStyle: number;
                    public static spinnerMode: number;
                    public static spinnerStyle: number;
                    public static spinnersShown: number;
                    public static splitMotionEvents: number;
                    public static splitName: number;
                    public static splitTrack: number;
                    public static spotShadowAlpha: number;
                    public static src: number;
                    public static ssp: number;
                    public static sspPattern: number;
                    public static sspPrefix: number;
                    public static stackFromBottom: number;
                    public static stackViewStyle: number;
                    public static starStyle: number;
                    public static start: number;
                    public static startColor: number;
                    public static startDelay: number;
                    public static startOffset: number;
                    public static startX: number;
                    public static startY: number;
                    public static startYear: number;
                    public static stateListAnimator: number;
                    public static stateNotNeeded: number;
                    public static state_above_anchor: number;
                    public static state_accelerated: number;
                    public static state_activated: number;
                    public static state_active: number;
                    public static state_checkable: number;
                    public static state_checked: number;
                    public static state_drag_can_accept: number;
                    public static state_drag_hovered: number;
                    public static state_empty: number;
                    public static state_enabled: number;
                    public static state_expanded: number;
                    public static state_first: number;
                    public static state_focused: number;
                    public static state_hovered: number;
                    public static state_last: number;
                    public static state_long_pressable: number;
                    public static state_middle: number;
                    public static state_multiline: number;
                    public static state_pressed: number;
                    public static state_selected: number;
                    public static state_single: number;
                    public static state_window_focused: number;
                    public static staticWallpaperPreview: number;
                    public static statusBarColor: number;
                    public static stepSize: number;
                    public static stopWithTask: number;
                    public static streamType: number;
                    public static stretchColumns: number;
                    public static stretchMode: number;
                    public static strokeAlpha: number;
                    public static strokeColor: number;
                    public static strokeLineCap: number;
                    public static strokeLineJoin: number;
                    public static strokeMiterLimit: number;
                    public static strokeWidth: number;
                    public static subMenuArrow: number;
                    public static submitBackground: number;
                    public static subtitle: number;
                    public static subtitleTextAppearance: number;
                    public static subtitleTextColor: number;
                    public static subtitleTextStyle: number;
                    public static subtypeExtraValue: number;
                    public static subtypeId: number;
                    public static subtypeLocale: number;
                    public static suggestActionMsg: number;
                    public static suggestActionMsgColumn: number;
                    public static suggestionRowLayout: number;
                    public static summary: number;
                    public static summaryColumn: number;
                    public static summaryOff: number;
                    public static summaryOn: number;
                    public static supportsAssist: number;
                    public static supportsLaunchVoiceAssistFromKeyguard: number;
                    public static supportsLocalInteraction: number;
                    public static supportsPictureInPicture: number;
                    public static supportsRtl: number;
                    public static supportsSwitchingToNextInputMethod: number;
                    public static supportsUploading: number;
                    public static switchMinWidth: number;
                    public static switchPadding: number;
                    public static switchPreferenceStyle: number;
                    public static switchStyle: number;
                    public static switchTextAppearance: number;
                    public static switchTextOff: number;
                    public static switchTextOn: number;
                    public static syncable: number;
                    public static tabStripEnabled: number;
                    public static tabStripLeft: number;
                    public static tabStripRight: number;
                    public static tabWidgetStyle: number;
                    public static tag: number;
                    public static targetActivity: number;
                    public static targetClass: number;
                    public static targetDescriptions: number;
                    public static targetId: number;
                    public static targetName: number;
                    public static targetPackage: number;
                    public static targetProcesses: number;
                    public static targetSandboxVersion: number;
                    public static targetSdkVersion: number;
                    public static taskAffinity: number;
                    public static taskCloseEnterAnimation: number;
                    public static taskCloseExitAnimation: number;
                    public static taskOpenEnterAnimation: number;
                    public static taskOpenExitAnimation: number;
                    public static taskToBackEnterAnimation: number;
                    public static taskToBackExitAnimation: number;
                    public static taskToFrontEnterAnimation: number;
                    public static taskToFrontExitAnimation: number;
                    public static tension: number;
                    public static testOnly: number;
                    public static text: number;
                    public static textAlignment: number;
                    public static textAllCaps: number;
                    public static textAppearance: number;
                    public static textAppearanceAutoCorrectionSuggestion: number;
                    public static textAppearanceButton: number;
                    public static textAppearanceEasyCorrectSuggestion: number;
                    public static textAppearanceInverse: number;
                    public static textAppearanceLarge: number;
                    public static textAppearanceLargeInverse: number;
                    public static textAppearanceLargePopupMenu: number;
                    public static textAppearanceListItem: number;
                    public static textAppearanceListItemSecondary: number;
                    public static textAppearanceListItemSmall: number;
                    public static textAppearanceMedium: number;
                    public static textAppearanceMediumInverse: number;
                    public static textAppearanceMisspelledSuggestion: number;
                    public static textAppearancePopupMenuHeader: number;
                    public static textAppearanceSearchResultSubtitle: number;
                    public static textAppearanceSearchResultTitle: number;
                    public static textAppearanceSmall: number;
                    public static textAppearanceSmallInverse: number;
                    public static textAppearanceSmallPopupMenu: number;
                    public static textCheckMark: number;
                    public static textCheckMarkInverse: number;
                    public static textColor: number;
                    public static textColorAlertDialogListItem: number;
                    public static textColorHighlight: number;
                    public static textColorHighlightInverse: number;
                    public static textColorHint: number;
                    public static textColorHintInverse: number;
                    public static textColorLink: number;
                    public static textColorLinkInverse: number;
                    public static textColorPrimary: number;
                    public static textColorPrimaryDisableOnly: number;
                    public static textColorPrimaryInverse: number;
                    public static textColorPrimaryInverseDisableOnly: number;
                    public static textColorPrimaryInverseNoDisable: number;
                    public static textColorPrimaryNoDisable: number;
                    public static textColorSearchUrl: number;
                    public static textColorSecondary: number;
                    public static textColorSecondaryInverse: number;
                    public static textColorSecondaryInverseNoDisable: number;
                    public static textColorSecondaryNoDisable: number;
                    public static textColorTertiary: number;
                    public static textColorTertiaryInverse: number;
                    public static textCursorDrawable: number;
                    public static textDirection: number;
                    public static textEditNoPasteWindowLayout: number;
                    public static textEditPasteWindowLayout: number;
                    public static textEditSideNoPasteWindowLayout: number;
                    public static textEditSidePasteWindowLayout: number;
                    public static textEditSuggestionItemLayout: number;
                    public static textFilterEnabled: number;
                    public static textIsSelectable: number;
                    public static textOff: number;
                    public static textOn: number;
                    public static textScaleX: number;
                    public static textSelectHandle: number;
                    public static textSelectHandleLeft: number;
                    public static textSelectHandleRight: number;
                    public static textSelectHandleWindowStyle: number;
                    public static textSize: number;
                    public static textStyle: number;
                    public static textSuggestionsWindowStyle: number;
                    public static textViewStyle: number;
                    public static theme: number;
                    public static thickness: number;
                    public static thicknessRatio: number;
                    public static thumb: number;
                    public static thumbOffset: number;
                    public static thumbPosition: number;
                    public static thumbTextPadding: number;
                    public static thumbTint: number;
                    public static thumbTintMode: number;
                    public static thumbnail: number;
                    public static tickMark: number;
                    public static tickMarkTint: number;
                    public static tickMarkTintMode: number;
                    public static tileMode: number;
                    public static tileModeX: number;
                    public static tileModeY: number;
                    public static timePickerDialogTheme: number;
                    public static timePickerMode: number;
                    public static timePickerStyle: number;
                    public static timeZone: number;
                    public static tint: number;
                    public static tintMode: number;
                    public static title: number;
                    public static titleCondensed: number;
                    public static titleMargin: number;
                    public static titleMarginBottom: number;
                    public static titleMarginEnd: number;
                    public static titleMarginStart: number;
                    public static titleMarginTop: number;
                    public static titleTextAppearance: number;
                    public static titleTextColor: number;
                    public static titleTextStyle: number;
                    public static toAlpha: number;
                    public static toDegrees: number;
                    public static toId: number;
                    public static toScene: number;
                    public static toXDelta: number;
                    public static toXScale: number;
                    public static toYDelta: number;
                    public static toYScale: number;
                    public static toolbarStyle: number;
                    public static tooltipText: number;
                    public static top: number;
                    public static topBright: number;
                    public static topDark: number;
                    public static topLeftRadius: number;
                    public static topOffset: number;
                    public static topRightRadius: number;
                    public static touchscreenBlocksFocus: number;
                    public static track: number;
                    public static trackTint: number;
                    public static trackTintMode: number;
                    public static transcriptMode: number;
                    public static transformPivotX: number;
                    public static transformPivotY: number;
                    public static transition: number;
                    public static transitionGroup: number;
                    public static transitionName: number;
                    public static transitionOrdering: number;
                    public static transitionVisibilityMode: number;
                    public static translateX: number;
                    public static translateY: number;
                    public static translationX: number;
                    public static translationY: number;
                    public static translationZ: number;
                    public static trimPathEnd: number;
                    public static trimPathOffset: number;
                    public static trimPathStart: number;
                    public static tunerCount: number;
                    public static type: number;
                    public static typeface: number;
                    public static uiOptions: number;
                    public static uncertainGestureColor: number;
                    public static unfocusedMonthDateColor: number;
                    public static unselectedAlpha: number;
                    public static updatePeriodMillis: number;
                    public static use32bitAbi: number;
                    public static useDefaultMargins: number;
                    public static useIntrinsicSizeAsMinimum: number;
                    public static useLevel: number;
                    public static userVisible: number;
                    public static usesCleartextTraffic: number;
                    public static value: number;
                    public static valueFrom: number;
                    public static valueTo: number;
                    public static valueType: number;
                    public static variablePadding: number;
                    public static vendor: number;
                    public static version: number;
                    public static versionCode: number;
                    public static versionName: number;
                    public static verticalCorrection: number;
                    public static verticalDivider: number;
                    public static verticalGap: number;
                    public static verticalScrollbarPosition: number;
                    public static verticalSpacing: number;
                    public static viewportHeight: number;
                    public static viewportWidth: number;
                    public static visibility: number;
                    public static visible: number;
                    public static visibleToInstantApps: number;
                    public static vmSafeMode: number;
                    public static voiceIcon: number;
                    public static voiceLanguage: number;
                    public static voiceLanguageModel: number;
                    public static voiceMaxResults: number;
                    public static voicePromptText: number;
                    public static voiceSearchMode: number;
                    public static wallpaperCloseEnterAnimation: number;
                    public static wallpaperCloseExitAnimation: number;
                    public static wallpaperIntraCloseEnterAnimation: number;
                    public static wallpaperIntraCloseExitAnimation: number;
                    public static wallpaperIntraOpenEnterAnimation: number;
                    public static wallpaperIntraOpenExitAnimation: number;
                    public static wallpaperOpenEnterAnimation: number;
                    public static wallpaperOpenExitAnimation: number;
                    public static webTextViewStyle: number;
                    public static webViewStyle: number;
                    public static weekDayTextAppearance: number;
                    public static weekNumberColor: number;
                    public static weekSeparatorLineColor: number;
                    public static weightSum: number;
                    public static widgetCategory: number;
                    public static widgetLayout: number;
                    public static width: number;
                    public static windowActionBar: number;
                    public static windowActionBarFullscreenDecorLayout: number;
                    public static windowActionBarOverlay: number;
                    public static windowActionModeOverlay: number;
                    public static windowActivityTransitions: number;
                    public static windowAllowEnterTransitionOverlap: number;
                    public static windowAllowReturnTransitionOverlap: number;
                    public static windowAnimationStyle: number;
                    public static windowBackground: number;
                    public static windowBackgroundFallback: number;
                    public static windowClipToOutline: number;
                    public static windowCloseOnTouchOutside: number;
                    public static windowContentOverlay: number;
                    public static windowContentTransitionManager: number;
                    public static windowContentTransitions: number;
                    public static windowDisablePreview: number;
                    public static windowDrawsSystemBarBackgrounds: number;
                    public static windowElevation: number;
                    public static windowEnableSplitTouch: number;
                    public static windowEnterAnimation: number;
                    public static windowEnterTransition: number;
                    public static windowExitAnimation: number;
                    public static windowExitTransition: number;
                    public static windowFixedHeightMajor: number;
                    public static windowFixedHeightMinor: number;
                    public static windowFixedWidthMajor: number;
                    public static windowFixedWidthMinor: number;
                    public static windowFrame: number;
                    public static windowFullscreen: number;
                    public static windowHideAnimation: number;
                    public static windowIsFloating: number;
                    public static windowIsTranslucent: number;
                    public static windowLightStatusBar: number;
                    public static windowMinWidthMajor: number;
                    public static windowMinWidthMinor: number;
                    public static windowNoDisplay: number;
                    public static windowNoTitle: number;
                    public static windowOverscan: number;
                    public static windowReenterTransition: number;
                    public static windowReturnTransition: number;
                    public static windowSharedElementEnterTransition: number;
                    public static windowSharedElementExitTransition: number;
                    public static windowSharedElementReenterTransition: number;
                    public static windowSharedElementReturnTransition: number;
                    public static windowSharedElementsUseOverlay: number;
                    public static windowShowAnimation: number;
                    public static windowShowWallpaper: number;
                    public static windowSoftInputMode: number;
                    public static windowSplashscreenContent: number;
                    public static windowSwipeToDismiss: number;
                    public static windowTitleBackgroundStyle: number;
                    public static windowTitleSize: number;
                    public static windowTitleStyle: number;
                    public static windowTransitionBackgroundFadeDuration: number;
                    public static windowTranslucentNavigation: number;
                    public static windowTranslucentStatus: number;
                    public static writePermission: number;
                    public static x: number;
                    public static xlargeScreens: number;
                    public static y: number;
                    public static yearListItemTextAppearance: number;
                    public static yearListSelectorColor: number;
                    public static yesNoPreferenceStyle: number;
                    public static zAdjustment: number;
                    public constructor();
                }
                export class bool extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.R.bool>;
                    public static action_bar_embed_tabs: number;
                    public static action_bar_expanded_action_views_exclusive: number;
                    public static config_LTE_eri_for_network_name: number;
                    public static config_allow3rdPartyAppOnInternal: number;
                    public static config_allowAllRotations: number;
                    public static config_allowAnimationsInLowPowerMode: number;
                    public static config_allowAutoBrightnessWhileDozing: number;
                    public static config_allowDisablingAssistDisclosure: number;
                    public static config_allowEscrowTokenForTrustAgent: number;
                    public static config_allowPriorityVibrationsInLowPowerMode: number;
                    public static config_allowTheaterModeWakeFromCameraLens: number;
                    public static config_allowTheaterModeWakeFromDock: number;
                    public static config_allowTheaterModeWakeFromGesture: number;
                    public static config_allowTheaterModeWakeFromKey: number;
                    public static config_allowTheaterModeWakeFromLidSwitch: number;
                    public static config_allowTheaterModeWakeFromMotion: number;
                    public static config_allowTheaterModeWakeFromMotionWhenNotDreaming: number;
                    public static config_allowTheaterModeWakeFromPowerKey: number;
                    public static config_allowTheaterModeWakeFromUnplug: number;
                    public static config_allowTheaterModeWakeFromWindowLayout: number;
                    public static config_alwaysUseCdmaRssi: number;
                    public static config_animateScreenLights: number;
                    public static config_annoy_dianne: number;
                    public static config_autoBrightnessResetAmbientLuxAfterWarmUp: number;
                    public static config_autoPowerModePreferWristTilt: number;
                    public static config_autoPowerModePrefetchLocation: number;
                    public static config_auto_attach_data_on_creation: number;
                    public static config_automatic_brightness_available: number;
                    public static config_avoidGfxAccel: number;
                    public static config_bluetooth_address_validation: number;
                    public static config_bluetooth_default_profiles: number;
                    public static config_bluetooth_hfp_inband_ringing_support: number;
                    public static config_bluetooth_le_peripheral_mode_supported: number;
                    public static config_bluetooth_pan_enable_autoconnect: number;
                    public static config_bluetooth_reload_supported_profiles_when_enabled: number;
                    public static config_bluetooth_sco_off_call: number;
                    public static config_bootAnimationSoundEnabled: number;
                    public static config_built_in_sip_phone: number;
                    public static config_cameraDoubleTapPowerGestureEnabled: number;
                    public static config_camera_sound_forced: number;
                    public static config_carDockEnablesAccelerometer: number;
                    public static config_carrier_volte_available: number;
                    public static config_carrier_volte_tty_supported: number;
                    public static config_carrier_vt_available: number;
                    public static config_carrier_wfc_ims_available: number;
                    public static config_cellBroadcastAppLinks: number;
                    public static config_customUserSwitchUi: number;
                    public static config_defaultInTouchMode: number;
                    public static config_defaultWindowFeatureContextMenu: number;
                    public static config_defaultWindowFeatureOptionsPanel: number;
                    public static config_deskDockEnablesAccelerometer: number;
                    public static config_device_respects_hold_carrier_config: number;
                    public static config_device_volte_available: number;
                    public static config_device_vt_available: number;
                    public static config_device_wfc_ims_available: number;
                    public static config_disableLockscreenByDefault: number;
                    public static config_disableMenuKeyInLockScreen: number;
                    public static config_disableUsbPermissionDialogs: number;
                    public static config_dontPreferApn: number;
                    public static config_dozeAfterScreenOff: number;
                    public static config_dozePulsePickup: number;
                    public static config_dreamsActivatedOnDockByDefault: number;
                    public static config_dreamsActivatedOnSleepByDefault: number;
                    public static config_dreamsEnabledByDefault: number;
                    public static config_dreamsEnabledOnBattery: number;
                    public static config_dreamsSupported: number;
                    public static config_duplicate_port_omadm_wappush: number;
                    public static config_dynamic_bind_ims: number;
                    public static config_eap_sim_based_auth_supported: number;
                    public static config_enableActivityRecognitionHardwareOverlay: number;
                    public static config_enableAppWidgetService: number;
                    public static config_enableAutoPowerModes: number;
                    public static config_enableBurnInProtection: number;
                    public static config_enableCarDockHomeLaunch: number;
                    public static config_enableCpuBoostForOrientation: number;
                    public static config_enableFusedLocationOverlay: number;
                    public static config_enableGeocoderOverlay: number;
                    public static config_enableGeofenceOverlay: number;
                    public static config_enableHardwareFlpOverlay: number;
                    public static config_enableLockBeforeUnlockScreen: number;
                    public static config_enableLockScreenRotation: number;
                    public static config_enableLockScreenTranslucentDecor: number;
                    public static config_enableMultiUserUI: number;
                    public static config_enableNetworkLocationOverlay: number;
                    public static config_enableScreenshotChord: number;
                    public static config_enableTranslucentDecor: number;
                    public static config_enableWallpaperService: number;
                    public static config_enableWifiDisplay: number;
                    public static config_enable_cbs_with_mobile_data_off: number;
                    public static config_enable_data_failure_dialog: number;
                    public static config_enable_default_preferred_apn: number;
                    public static config_enable_emergency_call_while_sim_locked: number;
                    public static config_enable_extend_EONS: number;
                    public static config_enable_glove_mode: number;
                    public static config_enable_hos_apn_for_mms_type_vowifi: number;
                    public static config_enable_puk_unlock_screen: number;
                    public static config_enable_spn_plmn_rule_by_roaming: number;
                    public static config_enable_volte_default_value: number;
                    public static config_enable_wfc_use_modem_spn: number;
                    public static config_forceDefaultOrientation: number;
                    public static config_forceWindowDrawsStatusBarBackground: number;
                    public static config_force_snap_docked_stack_to_middle_target_after_rotation: number;
                    public static config_freeformWindowManagement: number;
                    public static config_goToSleepOnButtonPressTheaterMode: number;
                    public static config_gsm_enable_hd_icon: number;
                    public static config_guestUserEphemeral: number;
                    public static config_handleVolumeKeysInWindowManager: number;
                    public static config_hasPermanentDpad: number;
                    public static config_hasRecents: number;
                    public static config_hotswapCapable: number;
                    public static config_intrusiveNotificationLed: number;
                    public static config_lidControlsScreenLock: number;
                    public static config_lidControlsSleep: number;
                    public static config_localDisplaysMirrorContent: number;
                    public static config_lockDayNightMode: number;
                    public static config_lockUiMode: number;
                    public static config_mainBuiltInDisplayIsRound: number;
                    public static config_mms_content_disposition_support: number;
                    public static config_networkSamplingWakesDevice: number;
                    public static config_nightDisplayAvailable: number;
                    public static config_noHomeScreen: number;
                    public static config_notificationBadging: number;
                    public static config_overrideRemoteViewsActivityTransition: number;
                    public static config_permissionReviewRequired: number;
                    public static config_pinnerCameraApp: number;
                    public static config_powerDecoupleAutoSuspendModeFromDisplay: number;
                    public static config_powerDecoupleInteractiveModeFromDisplay: number;
                    public static config_quickSettingsSupported: number;
                    public static config_regional_lte_singnal_threshold: number;
                    public static config_requestNetworkLocation: number;
                    public static config_requireCallCapableAccountForHandle: number;
                    public static config_requireRadioPowerOffOnSimRefreshReset: number;
                    public static config_restartRadioAfterProvisioning: number;
                    public static config_restart_radio_on_pdp_fail_regular_deactivation: number;
                    public static config_reverseDefaultRotation: number;
                    public static config_safe_media_volume_enabled: number;
                    public static config_sendAudioBecomingNoisy: number;
                    public static config_sendPackageName: number;
                    public static config_setColorTransformAccelerated: number;
                    public static config_sf_limitedAlpha: number;
                    public static config_sf_slowBlur: number;
                    public static config_showMenuShortcutsWhenKeyboardPresent: number;
                    public static config_showNavigationBar: number;
                    public static config_sim_phonebook_batch_operation: number;
                    public static config_single_volume: number;
                    public static config_sip_wifi_only: number;
                    public static config_skipScreenOnBrightnessRamp: number;
                    public static config_sms_authorization_enabled: number;
                    public static config_sms_capable: number;
                    public static config_sms_decode_gsm_8bit_data: number;
                    public static config_sms_force_7bit_encoding: number;
                    public static config_sms_utf8_support: number;
                    public static config_softap_extension: number;
                    public static config_speed_up_audio_on_mt_calls: number;
                    public static config_stkNoAlphaUsrCnf: number;
                    public static config_strongAuthRequiredOnBoot: number;
                    public static config_supportAudioSourceUnprocessed: number;
                    public static config_supportAutoRotation: number;
                    public static config_supportDoubleTapWake: number;
                    public static config_supportLongPressPowerWhenNonInteractive: number;
                    public static config_supportMicNearUltrasound: number;
                    public static config_supportPreRebootSecurityLogs: number;
                    public static config_supportSpeakerNearUltrasound: number;
                    public static config_supportSystemNavigationKeys: number;
                    public static config_support_mdsp: number;
                    public static config_supportsMultiDisplay: number;
                    public static config_supportsMultiWindow: number;
                    public static config_supportsSplitScreenMultiWindow: number;
                    public static config_suspendWhenScreenOffDueToProximity: number;
                    public static config_sustainedPerformanceModeSupported: number;
                    public static config_swipeDisambiguation: number;
                    public static config_switch_phone_on_voice_reg_state_change: number;
                    public static config_syncstorageengine_masterSyncAutomatically: number;
                    public static config_telephony_enable_apn_switch: number;
                    public static config_telephony_use_own_number_for_voicemail: number;
                    public static config_ui_enableFadingMarquee: number;
                    public static config_unplugTurnsOnScreen: number;
                    public static config_usbChargingMessage: number;
                    public static config_useAttentionLight: number;
                    public static config_useDefaultFocusHighlight: number;
                    public static config_useDevInputEventForAudioJack: number;
                    public static config_useFixedVolume: number;
                    public static config_useRoundIcon: number;
                    public static config_useVideoPauseWorkaround: number;
                    public static config_useVolumeKeySounds: number;
                    public static config_use_sim_language_file: number;
                    public static config_use_strict_phone_number_comparation: number;
                    public static config_use_voip_mode_for_ims: number;
                    public static config_user_notification_of_restrictied_mobile_access: number;
                    public static config_vf_wfc_provisioning: number;
                    public static config_voice_capable: number;
                    public static config_wifiDisplaySupportsProtectedBuffers: number;
                    public static config_wifi_background_scan_support: number;
                    public static config_wifi_batched_scan_supported: number;
                    public static config_wifi_dual_band_support: number;
                    public static config_wifi_dual_sap_mode_enabled: number;
                    public static config_wifi_enable_disconnection_debounce: number;
                    public static config_wifi_enable_wifi_firmware_debugging: number;
                    public static config_wifi_fast_bss_transition_enabled: number;
                    public static config_wifi_framework_cellular_handover_enable_user_triggered_adjustment: number;
                    public static config_wifi_framework_enable_associated_network_selection: number;
                    public static config_wifi_hotspot2_enabled: number;
                    public static config_wifi_only_link_same_credential_configurations: number;
                    public static config_wifi_revert_country_code_on_cellular_loss: number;
                    public static config_wifi_turn_off_during_emergency_call: number;
                    public static config_wimaxEnabled: number;
                    public static config_windowEnableCircularEmulatorDisplayOverlay: number;
                    public static config_windowShowCircularMask: number;
                    public static disable_charge_popups: number;
                    public static enable_pbap_pce_profile: number;
                    public static imsServiceAllowTurnOff: number;
                    public static national_data_roaming_visibility: number;
                    public static preferences_prefer_dual_pane: number;
                    public static show_ongoing_ime_switcher: number;
                    public static skipHoldBeforeMerge: number;
                    public static skip_restoring_network_selection: number;
                    public static split_action_bar_is_narrow: number;
                    public static target_honeycomb_needs_options_menu: number;
                    public static use_lock_pattern_drawable: number;
                    public constructor();
                }
                export class color extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.R.color>;
                    public static background_dark: number;
                    public static background_light: number;
                    public static black: number;
                    public static chooser_service_row_background_color: number;
                    public static config_defaultNotificationColor: number;
                    public static darker_gray: number;
                    public static decor_button_dark_color: number;
                    public static decor_button_light_color: number;
                    public static holo_blue_bright: number;
                    public static holo_blue_dark: number;
                    public static holo_blue_light: number;
                    public static holo_green_dark: number;
                    public static holo_green_light: number;
                    public static holo_orange_dark: number;
                    public static holo_orange_light: number;
                    public static holo_purple: number;
                    public static holo_red_dark: number;
                    public static holo_red_light: number;
                    public static input_method_navigation_guard: number;
                    public static instant_app_badge: number;
                    public static lock_pattern_view_regular_color: number;
                    public static lock_pattern_view_success_color: number;
                    public static notification_action_list: number;
                    public static notification_action_list_dark: number;
                    public static notification_icon_default_color: number;
                    public static notification_material_background_color: number;
                    public static notification_primary_text_color_dark: number;
                    public static notification_primary_text_color_light: number;
                    public static notification_progress_background_color: number;
                    public static notification_secondary_text_color_dark: number;
                    public static notification_secondary_text_color_light: number;
                    public static primary_text_dark: number;
                    public static primary_text_dark_nodisable: number;
                    public static primary_text_light: number;
                    public static primary_text_light_nodisable: number;
                    public static profile_badge_1: number;
                    public static profile_badge_2: number;
                    public static profile_badge_3: number;
                    public static resize_shadow_end_color: number;
                    public static resize_shadow_start_color: number;
                    public static secondary_text_dark: number;
                    public static secondary_text_dark_nodisable: number;
                    public static secondary_text_light: number;
                    public static secondary_text_light_nodisable: number;
                    public static system_bar_background_semi_transparent: number;
                    public static system_notification_accent_color: number;
                    public static tab_indicator_text: number;
                    public static tab_indicator_text_v4: number;
                    public static tertiary_text_dark: number;
                    public static tertiary_text_light: number;
                    public static timepicker_default_ampm_selected_background_color_material: number;
                    public static timepicker_default_ampm_unselected_background_color_material: number;
                    public static timepicker_default_numbers_background_color_material: number;
                    public static timepicker_default_selector_color_material: number;
                    public static timepicker_default_text_color_material: number;
                    public static transparent: number;
                    public static user_icon_1: number;
                    public static user_icon_2: number;
                    public static user_icon_3: number;
                    public static user_icon_4: number;
                    public static user_icon_5: number;
                    public static user_icon_6: number;
                    public static user_icon_7: number;
                    public static user_icon_8: number;
                    public static user_icon_default_gray: number;
                    public static user_icon_default_white: number;
                    public static white: number;
                    public static widget_edittext_dark: number;
                    public constructor();
                }
                export class dimen extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.R.dimen>;
                    public static accessibility_magnification_indicator_width: number;
                    public static accessibility_touch_slop: number;
                    public static action_bar_stacked_max_height: number;
                    public static action_bar_stacked_tab_max_width: number;
                    public static alert_dialog_round_padding: number;
                    public static app_icon_size: number;
                    public static autofill_dataset_picker_max_size: number;
                    public static cascading_menus_min_smallest_width: number;
                    public static circular_display_mask_thickness: number;
                    public static config_appTransitionAnimationDurationScaleDefault: number;
                    public static config_brightness_correction_offset: number;
                    public static config_brightness_correction_scaling_factor: number;
                    public static config_brightness_ramp_rate_dark_adaptive: number;
                    public static config_brightness_ramp_rate_light_adaptive: number;
                    public static config_exponentialBrightnessModulatorExponentBias: number;
                    public static config_exponentialBrightnessModulatorSlope: number;
                    public static config_horizontalScrollFactor: number;
                    public static config_linearBrightnessModulatorIntercept: number;
                    public static config_linearBrightnessModulatorSlope: number;
                    public static config_lowBrightnessThresholdForModulation: number;
                    public static config_mediaMetadataBitmapMaxSize: number;
                    public static config_minScalingSpan: number;
                    public static config_minScalingTouchMajor: number;
                    public static config_minScrollbarTouchTarget: number;
                    public static config_pictureInPictureAspectRatioLimitForMinSize: number;
                    public static config_pictureInPictureDefaultAspectRatio: number;
                    public static config_pictureInPictureDefaultSizePercent: number;
                    public static config_pictureInPictureMaxAspectRatio: number;
                    public static config_pictureInPictureMinAspectRatio: number;
                    public static config_prefDialogWidth: number;
                    public static config_screen_magnification_scaling_threshold: number;
                    public static config_scrollFactor: number;
                    public static config_verticalScrollFactor: number;
                    public static config_viewConfigurationTouchSlop: number;
                    public static config_viewMaxFlingVelocity: number;
                    public static config_viewMinFlingVelocity: number;
                    public static content_rect_bottom_clip_allowance: number;
                    public static date_picker_day_height: number;
                    public static date_picker_day_of_week_height: number;
                    public static date_picker_day_of_week_text_size: number;
                    public static date_picker_day_selector_radius: number;
                    public static date_picker_day_text_size: number;
                    public static date_picker_day_width: number;
                    public static date_picker_month_height: number;
                    public static date_picker_month_text_size: number;
                    public static datepicker_view_animator_height: number;
                    public static datepicker_year_label_height: number;
                    public static day_picker_padding_top: number;
                    public static default_app_widget_padding_bottom: number;
                    public static default_app_widget_padding_left: number;
                    public static default_app_widget_padding_right: number;
                    public static default_app_widget_padding_top: number;
                    public static default_gap: number;
                    public static default_minimal_size_pip_resizable_task: number;
                    public static default_minimal_size_resizable_task: number;
                    public static dialog_min_width_major: number;
                    public static dialog_min_width_minor: number;
                    public static docked_stack_divider_insets: number;
                    public static docked_stack_divider_thickness: number;
                    public static docked_stack_minimize_thickness: number;
                    public static dropdownitem_icon_width: number;
                    public static dropdownitem_text_padding_left: number;
                    public static fast_scroller_minimum_touch_target: number;
                    public static floating_toolbar_height: number;
                    public static floating_toolbar_horizontal_margin: number;
                    public static floating_toolbar_maximum_overflow_height: number;
                    public static floating_toolbar_menu_button_minimum_width: number;
                    public static floating_toolbar_menu_button_side_padding: number;
                    public static floating_toolbar_minimum_overflow_height: number;
                    public static floating_toolbar_overflow_side_padding: number;
                    public static floating_toolbar_preferred_width: number;
                    public static floating_toolbar_text_size: number;
                    public static floating_toolbar_vertical_margin: number;
                    public static immersive_mode_cling_width: number;
                    public static input_extract_action_button_height: number;
                    public static input_extract_action_button_width: number;
                    public static item_touch_helper_max_drag_scroll_per_frame: number;
                    public static item_touch_helper_swipe_escape_max_velocity: number;
                    public static item_touch_helper_swipe_escape_velocity: number;
                    public static lock_pattern_dot_line_width: number;
                    public static lock_pattern_dot_size: number;
                    public static lock_pattern_dot_size_activated: number;
                    public static media_notification_expanded_image_margin_bottom: number;
                    public static media_notification_expanded_image_small_size: number;
                    public static navigation_bar_height: number;
                    public static navigation_bar_height_car_mode: number;
                    public static navigation_bar_height_landscape: number;
                    public static navigation_bar_height_landscape_car_mode: number;
                    public static navigation_bar_width: number;
                    public static navigation_bar_width_car_mode: number;
                    public static notification_action_list_height: number;
                    public static notification_badge_size: number;
                    public static notification_content_image_margin_end: number;
                    public static notification_content_margin_bottom: number;
                    public static notification_content_margin_end: number;
                    public static notification_content_margin_start: number;
                    public static notification_content_margin_top: number;
                    public static notification_content_picture_margin: number;
                    public static notification_content_plus_picture_margin_end: number;
                    public static notification_header_background_height: number;
                    public static notification_header_shrink_min_width: number;
                    public static notification_inbox_item_top_padding: number;
                    public static notification_large_icon_circle_padding: number;
                    public static notification_large_icon_height: number;
                    public static notification_large_icon_width: number;
                    public static notification_messaging_spacing: number;
                    public static notification_min_content_height: number;
                    public static notification_subtext_size: number;
                    public static notification_text_margin_top: number;
                    public static notification_text_size: number;
                    public static notification_title_text_size: number;
                    public static notification_top_pad: number;
                    public static notification_top_pad_large_text: number;
                    public static notification_top_pad_large_text_narrow: number;
                    public static notification_top_pad_narrow: number;
                    public static password_keyboard_spacebar_vertical_correction: number;
                    public static pip_minimized_visible_size: number;
                    public static preference_fragment_padding_bottom: number;
                    public static preference_fragment_padding_side: number;
                    public static resize_shadow_size: number;
                    public static search_view_preferred_height: number;
                    public static search_view_preferred_width: number;
                    public static status_bar_height: number;
                    public static status_bar_icon_size: number;
                    public static subtitle_corner_radius: number;
                    public static subtitle_outline_width: number;
                    public static subtitle_shadow_offset: number;
                    public static subtitle_shadow_radius: number;
                    public static task_height_of_minimized_mode: number;
                    public static text_handle_min_size: number;
                    public static text_size_small_material: number;
                    public static textview_error_popup_default_width: number;
                    public static thumbnail_height: number;
                    public static thumbnail_width: number;
                    public static timepicker_center_dot_radius: number;
                    public static timepicker_selector_dot_radius: number;
                    public static timepicker_selector_radius: number;
                    public static timepicker_selector_stroke: number;
                    public static timepicker_text_inset_inner: number;
                    public static timepicker_text_inset_normal: number;
                    public static timepicker_text_size_inner: number;
                    public static timepicker_text_size_normal: number;
                    public static toast_y_offset: number;
                    public static tooltip_precise_anchor_extra_offset: number;
                    public static tooltip_precise_anchor_threshold: number;
                    public static tooltip_y_offset_non_touch: number;
                    public static tooltip_y_offset_touch: number;
                    public constructor();
                }
                export class drawable extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.R.drawable>;
                    public static alert_dark_frame: number;
                    public static alert_light_frame: number;
                    public static alert_window_layer: number;
                    public static arrow_down_float: number;
                    public static arrow_up_float: number;
                    public static autofill_dataset_picker_background: number;
                    public static autofilled_highlight: number;
                    public static bottom_bar: number;
                    public static btn_check_off: number;
                    public static btn_clock_material: number;
                    public static btn_default: number;
                    public static btn_default_small: number;
                    public static btn_dialog: number;
                    public static btn_dropdown: number;
                    public static btn_keyboard_key_material: number;
                    public static btn_minus: number;
                    public static btn_plus: number;
                    public static btn_radio: number;
                    public static btn_star: number;
                    public static btn_star_big_off: number;
                    public static btn_star_big_on: number;
                    public static button_onoff_indicator_off: number;
                    public static button_onoff_indicator_on: number;
                    public static call_contact: number;
                    public static checkbox_off_background: number;
                    public static checkbox_on_background: number;
                    public static cling_arrow_up: number;
                    public static cling_bg: number;
                    public static cling_button: number;
                    public static clock_dial: number;
                    public static clock_hand_hour: number;
                    public static clock_hand_minute: number;
                    public static compass_arrow: number;
                    public static compass_base: number;
                    public static conv_notify_sending_failed: number;
                    public static create_contact: number;
                    public static dark_header: number;
                    public static decor_caption_title_focused: number;
                    public static decor_close_button_dark: number;
                    public static decor_close_button_light: number;
                    public static decor_maximize_button_dark: number;
                    public static decor_maximize_button_light: number;
                    public static default_lock_wallpaper: number;
                    public static default_wallpaper: number;
                    public static dialog_frame: number;
                    public static dialog_holo_dark_frame: number;
                    public static dialog_holo_light_frame: number;
                    public static divider_horizontal_bright: number;
                    public static divider_horizontal_dark: number;
                    public static divider_horizontal_dim_dark: number;
                    public static divider_horizontal_textfield: number;
                    public static edit_text: number;
                    public static editbox_background: number;
                    public static editbox_background_normal: number;
                    public static editbox_dropdown_dark_frame: number;
                    public static editbox_dropdown_light_frame: number;
                    public static emergency_icon: number;
                    public static emo_im_angel: number;
                    public static emo_im_cool: number;
                    public static emo_im_crying: number;
                    public static emo_im_embarrassed: number;
                    public static emo_im_foot_in_mouth: number;
                    public static emo_im_happy: number;
                    public static emo_im_kissing: number;
                    public static emo_im_laughing: number;
                    public static emo_im_lips_are_sealed: number;
                    public static emo_im_money_mouth: number;
                    public static emo_im_sad: number;
                    public static emo_im_surprised: number;
                    public static emo_im_tongue_sticking_out: number;
                    public static emo_im_undecided: number;
                    public static emo_im_winking: number;
                    public static emo_im_wtf: number;
                    public static emo_im_yelling: number;
                    public static emulator_circular_window_overlay: number;
                    public static expander_close_holo_dark: number;
                    public static expander_ic_maximized: number;
                    public static expander_ic_minimized: number;
                    public static expander_open_holo_dark: number;
                    public static ft_avd_toarrow: number;
                    public static ft_avd_toarrow_animation: number;
                    public static ft_avd_tooverflow: number;
                    public static ft_avd_tooverflow_animation: number;
                    public static gallery_thumb: number;
                    public static ic_accessibility_magnification: number;
                    public static ic_account_circle: number;
                    public static ic_action_assist_focused: number;
                    public static ic_audio_alarm: number;
                    public static ic_audio_alarm_mute: number;
                    public static ic_audio_media: number;
                    public static ic_audio_media_mute: number;
                    public static ic_audio_notification: number;
                    public static ic_audio_notification_mute: number;
                    public static ic_audio_ring_notif: number;
                    public static ic_audio_ring_notif_mute: number;
                    public static ic_audio_ring_notif_vibrate: number;
                    public static ic_audio_vol: number;
                    public static ic_audio_vol_mute: number;
                    public static ic_btn_speak_now: number;
                    public static ic_bullet_key_permission: number;
                    public static ic_check_circle_24px: number;
                    public static ic_collapse_bundle: number;
                    public static ic_collapse_notification: number;
                    public static ic_contact_picture: number;
                    public static ic_corp_badge_case: number;
                    public static ic_corp_badge_color: number;
                    public static ic_corp_badge_no_background: number;
                    public static ic_corp_badge_off: number;
                    public static ic_corp_icon: number;
                    public static ic_corp_icon_badge_case: number;
                    public static ic_corp_icon_badge_color: number;
                    public static ic_corp_icon_badge_shadow: number;
                    public static ic_corp_statusbar_icon: number;
                    public static ic_corp_user_badge: number;
                    public static ic_delete: number;
                    public static ic_dialog_alert: number;
                    public static ic_dialog_alert_material: number;
                    public static ic_dialog_dialer: number;
                    public static ic_dialog_email: number;
                    public static ic_dialog_info: number;
                    public static ic_dialog_map: number;
                    public static ic_dialog_usb: number;
                    public static ic_doc_apk: number;
                    public static ic_doc_audio: number;
                    public static ic_doc_certificate: number;
                    public static ic_doc_codes: number;
                    public static ic_doc_compressed: number;
                    public static ic_doc_contact: number;
                    public static ic_doc_document: number;
                    public static ic_doc_event: number;
                    public static ic_doc_excel: number;
                    public static ic_doc_folder: number;
                    public static ic_doc_font: number;
                    public static ic_doc_generic: number;
                    public static ic_doc_image: number;
                    public static ic_doc_pdf: number;
                    public static ic_doc_powerpoint: number;
                    public static ic_doc_presentation: number;
                    public static ic_doc_spreadsheet: number;
                    public static ic_doc_text: number;
                    public static ic_doc_video: number;
                    public static ic_doc_word: number;
                    public static ic_eject_24dp: number;
                    public static ic_emergency: number;
                    public static ic_expand_bundle: number;
                    public static ic_expand_notification: number;
                    public static ic_folder_24dp: number;
                    public static ic_grayedout_printer: number;
                    public static ic_info_outline: number;
                    public static ic_input_add: number;
                    public static ic_input_delete: number;
                    public static ic_input_extract_action_done: number;
                    public static ic_input_extract_action_go: number;
                    public static ic_input_extract_action_next: number;
                    public static ic_input_extract_action_previous: number;
                    public static ic_input_extract_action_return: number;
                    public static ic_input_extract_action_search: number;
                    public static ic_input_extract_action_send: number;
                    public static ic_input_get: number;
                    public static ic_instant_icon_badge_bolt: number;
                    public static ic_jog_dial_sound_off: number;
                    public static ic_jog_dial_sound_on: number;
                    public static ic_jog_dial_unlock: number;
                    public static ic_jog_dial_vibrate_on: number;
                    public static ic_list_gps_denied: number;
                    public static ic_lock_airplane_mode: number;
                    public static ic_lock_airplane_mode_off: number;
                    public static ic_lock_bugreport: number;
                    public static ic_lock_idle_alarm: number;
                    public static ic_lock_idle_charging: number;
                    public static ic_lock_idle_lock: number;
                    public static ic_lock_idle_low_battery: number;
                    public static ic_lock_lock: number;
                    public static ic_lock_power_off: number;
                    public static ic_lock_silent_mode: number;
                    public static ic_lock_silent_mode_off: number;
                    public static ic_maps_indicator_current_position_anim: number;
                    public static ic_media_ff: number;
                    public static ic_media_next: number;
                    public static ic_media_pause: number;
                    public static ic_media_play: number;
                    public static ic_media_previous: number;
                    public static ic_media_rew: number;
                    public static ic_media_route_connecting_holo_dark: number;
                    public static ic_media_route_disabled_holo_dark: number;
                    public static ic_media_route_off_holo_dark: number;
                    public static ic_media_route_on_holo_dark: number;
                    public static ic_media_stop: number;
                    public static ic_media_video_poster: number;
                    public static ic_menu_add: number;
                    public static ic_menu_agenda: number;
                    public static ic_menu_always_landscape_portrait: number;
                    public static ic_menu_archive: number;
                    public static ic_menu_call: number;
                    public static ic_menu_camera: number;
                    public static ic_menu_cc: number;
                    public static ic_menu_close_clear_cancel: number;
                    public static ic_menu_compass: number;
                    public static ic_menu_crop: number;
                    public static ic_menu_day: number;
                    public static ic_menu_delete: number;
                    public static ic_menu_directions: number;
                    public static ic_menu_edit: number;
                    public static ic_menu_gallery: number;
                    public static ic_menu_goto: number;
                    public static ic_menu_help: number;
                    public static ic_menu_info_details: number;
                    public static ic_menu_manage: number;
                    public static ic_menu_mapmode: number;
                    public static ic_menu_month: number;
                    public static ic_menu_more: number;
                    public static ic_menu_moreoverflow_normal_holo_dark: number;
                    public static ic_menu_my_calendar: number;
                    public static ic_menu_mylocation: number;
                    public static ic_menu_myplaces: number;
                    public static ic_menu_play_clip: number;
                    public static ic_menu_preferences: number;
                    public static ic_menu_recent_history: number;
                    public static ic_menu_refresh: number;
                    public static ic_menu_report_image: number;
                    public static ic_menu_revert: number;
                    public static ic_menu_rotate: number;
                    public static ic_menu_save: number;
                    public static ic_menu_search: number;
                    public static ic_menu_send: number;
                    public static ic_menu_set_as: number;
                    public static ic_menu_share: number;
                    public static ic_menu_slideshow: number;
                    public static ic_menu_sort_alphabetically: number;
                    public static ic_menu_sort_by_size: number;
                    public static ic_menu_today: number;
                    public static ic_menu_upload: number;
                    public static ic_menu_upload_you_tube: number;
                    public static ic_menu_view: number;
                    public static ic_menu_week: number;
                    public static ic_menu_zoom: number;
                    public static ic_more_items: number;
                    public static ic_mtp_device_icon: number;
                    public static ic_notification_clear_all: number;
                    public static ic_notification_ime_default: number;
                    public static ic_notification_overlay: number;
                    public static ic_partial_secure: number;
                    public static ic_perm_device_info: number;
                    public static ic_popup_disk_full: number;
                    public static ic_popup_reminder: number;
                    public static ic_popup_sync: number;
                    public static ic_print: number;
                    public static ic_print_error: number;
                    public static ic_restart: number;
                    public static ic_sd_card_48dp: number;
                    public static ic_search_category_default: number;
                    public static ic_secure: number;
                    public static ic_semc_ic_dialog_screenshot: number;
                    public static ic_settings: number;
                    public static ic_settings_24dp: number;
                    public static ic_settings_language: number;
                    public static ic_signal_wifi_badged_0_bars: number;
                    public static ic_signal_wifi_badged_1_bar: number;
                    public static ic_signal_wifi_badged_2_bars: number;
                    public static ic_signal_wifi_badged_3_bars: number;
                    public static ic_signal_wifi_badged_4_bars: number;
                    public static ic_signal_wifi_badged_4k: number;
                    public static ic_signal_wifi_badged_hd: number;
                    public static ic_signal_wifi_badged_ld: number;
                    public static ic_signal_wifi_badged_sd: number;
                    public static ic_sim_card_multi_24px_clr: number;
                    public static ic_sim_card_multi_48px_clr: number;
                    public static ic_storage_48dp: number;
                    public static ic_text_dot: number;
                    public static ic_usb_48dp: number;
                    public static ic_user_secure: number;
                    public static ic_voice_search: number;
                    public static ic_volume: number;
                    public static ic_wifi_signal_0: number;
                    public static ic_wifi_signal_1: number;
                    public static ic_wifi_signal_2: number;
                    public static ic_wifi_signal_3: number;
                    public static ic_wifi_signal_4: number;
                    public static indicator_input_error: number;
                    public static jog_dial_arrow_long_left_green: number;
                    public static jog_dial_arrow_long_right_red: number;
                    public static jog_dial_arrow_short_left_and_right: number;
                    public static jog_dial_bg: number;
                    public static jog_dial_dimple: number;
                    public static jog_dial_dimple_dim: number;
                    public static jog_tab_bar_left_generic: number;
                    public static jog_tab_bar_left_unlock: number;
                    public static jog_tab_bar_right_generic: number;
                    public static jog_tab_bar_right_sound_off: number;
                    public static jog_tab_bar_right_sound_on: number;
                    public static jog_tab_left_generic: number;
                    public static jog_tab_left_unlock: number;
                    public static jog_tab_right_generic: number;
                    public static jog_tab_right_sound_off: number;
                    public static jog_tab_right_sound_on: number;
                    public static jog_tab_target_gray: number;
                    public static jog_tab_target_green: number;
                    public static jog_tab_target_yellow: number;
                    public static list_selector_background: number;
                    public static list_selector_pressed_holo_dark: number;
                    public static loading_tile_android: number;
                    public static lockscreen_notselected: number;
                    public static lockscreen_selected: number;
                    public static lut_action_power_menu: number;
                    public static magnified_region_frame: number;
                    public static maps_google_logo: number;
                    public static menu_background: number;
                    public static menu_frame: number;
                    public static menu_full_frame: number;
                    public static menuitem_background: number;
                    public static no_tile_256: number;
                    public static noti_remotecontrol: number;
                    public static notification_template_icon_bg: number;
                    public static notification_template_icon_low_bg: number;
                    public static picture_emergency: number;
                    public static picture_frame: number;
                    public static platlogo: number;
                    public static platlogo_m: number;
                    public static popup_bottom_bright: number;
                    public static popup_bottom_dark: number;
                    public static popup_bottom_medium: number;
                    public static popup_center_bright: number;
                    public static popup_center_dark: number;
                    public static popup_full_bright: number;
                    public static popup_full_dark: number;
                    public static popup_top_bright: number;
                    public static popup_top_dark: number;
                    public static presence_audio_away: number;
                    public static presence_audio_busy: number;
                    public static presence_audio_online: number;
                    public static presence_away: number;
                    public static presence_busy: number;
                    public static presence_invisible: number;
                    public static presence_offline: number;
                    public static presence_online: number;
                    public static presence_video_away: number;
                    public static presence_video_busy: number;
                    public static presence_video_online: number;
                    public static progress_horizontal: number;
                    public static progress_indeterminate_horizontal: number;
                    public static quickcontact_badge_overlay_dark: number;
                    public static radiobutton_off_background: number;
                    public static radiobutton_on_background: number;
                    public static remote_control: number;
                    public static remote_control_stop_action: number;
                    public static resolver_icon_placeholder: number;
                    public static reticle: number;
                    public static screen_background_dark: number;
                    public static screen_background_dark_transparent: number;
                    public static screen_background_light: number;
                    public static screen_background_light_transparent: number;
                    public static scroll_indicator_material: number;
                    public static scrubber_control_disabled_holo: number;
                    public static scrubber_control_selector_holo: number;
                    public static scrubber_progress_horizontal_holo_dark: number;
                    public static search_spinner: number;
                    public static sim_dark_blue: number;
                    public static sim_dark_green: number;
                    public static sim_dark_orange: number;
                    public static sim_dark_purple: number;
                    public static sim_light_blue: number;
                    public static sim_light_green: number;
                    public static sim_light_orange: number;
                    public static sim_light_purple: number;
                    public static somc_ic_dialog_screenrecording: number;
                    public static sound_level_alert: number;
                    public static spinner_background: number;
                    public static spinner_dropdown_background: number;
                    public static star_big_off: number;
                    public static star_big_on: number;
                    public static star_off: number;
                    public static star_on: number;
                    public static stat_notify_call_mute: number;
                    public static stat_notify_car_mode: number;
                    public static stat_notify_chat: number;
                    public static stat_notify_disabled: number;
                    public static stat_notify_disabled_data: number;
                    public static stat_notify_disk_full: number;
                    public static stat_notify_error: number;
                    public static stat_notify_missed_call: number;
                    public static stat_notify_mmcc_indication_icn: number;
                    public static stat_notify_more: number;
                    public static stat_notify_rssi_in_range: number;
                    public static stat_notify_sdcard: number;
                    public static stat_notify_sdcard_prepare: number;
                    public static stat_notify_sdcard_usb: number;
                    public static stat_notify_sim_toolkit: number;
                    public static stat_notify_sync: number;
                    public static stat_notify_sync_error: number;
                    public static stat_notify_sync_noanim: number;
                    public static stat_notify_voicemail: number;
                    public static stat_notify_wifi_in_range: number;
                    public static stat_sys_adb: number;
                    public static stat_sys_audio_recording_off: number;
                    public static stat_sys_auto_sync_data_off: number;
                    public static stat_sys_battery: number;
                    public static stat_sys_battery_charge: number;
                    public static stat_sys_battery_unknown: number;
                    public static stat_sys_certificate_info: number;
                    public static stat_sys_data_bluetooth: number;
                    public static stat_sys_data_roaming_off: number;
                    public static stat_sys_data_usb: number;
                    public static stat_sys_download: number;
                    public static stat_sys_download_done: number;
                    public static stat_sys_gps_on: number;
                    public static stat_sys_headset: number;
                    public static stat_sys_massstorage_off: number;
                    public static stat_sys_mobile_data_off: number;
                    public static stat_sys_nfc_off: number;
                    public static stat_sys_phone_call: number;
                    public static stat_sys_phone_call_forward: number;
                    public static stat_sys_phone_call_on_hold: number;
                    public static stat_sys_roaming_auto_sync_off: number;
                    public static stat_sys_screenshot_off: number;
                    public static stat_sys_sdcard_off: number;
                    public static stat_sys_speakerphone: number;
                    public static stat_sys_tether_bluetooth: number;
                    public static stat_sys_tether_bluetooth_off: number;
                    public static stat_sys_tether_general: number;
                    public static stat_sys_tether_usb: number;
                    public static stat_sys_tether_usb_off: number;
                    public static stat_sys_tether_wifi: number;
                    public static stat_sys_tether_wifi_off: number;
                    public static stat_sys_throttled: number;
                    public static stat_sys_unknownsources_off: number;
                    public static stat_sys_upload: number;
                    public static stat_sys_upload_done: number;
                    public static stat_sys_usb_debugging_off: number;
                    public static stat_sys_vitals: number;
                    public static stat_sys_voice_roaming_off: number;
                    public static stat_sys_vp_phone_call: number;
                    public static stat_sys_vp_phone_call_on_hold: number;
                    public static stat_sys_warning: number;
                    public static status_bar_background: number;
                    public static status_bar_item_app_background: number;
                    public static status_bar_item_background: number;
                    public static statusbar_bluetooth_off: number;
                    public static statusbar_wifi_off: number;
                    public static sym_action_call: number;
                    public static sym_action_chat: number;
                    public static sym_action_email: number;
                    public static sym_app_on_sd_unavailable_icon: number;
                    public static sym_call_incoming: number;
                    public static sym_call_missed: number;
                    public static sym_call_outgoing: number;
                    public static sym_contact_card: number;
                    public static sym_def_app_icon: number;
                    public static sym_keyboard_return_holo: number;
                    public static sym_keyboard_shift: number;
                    public static sym_keyboard_shift_locked: number;
                    public static tab_bottom_left: number;
                    public static tab_bottom_left_v4: number;
                    public static tab_bottom_right: number;
                    public static tab_bottom_right_v4: number;
                    public static tab_indicator_v4: number;
                    public static text_edit_paste_window: number;
                    public static text_edit_side_paste_window: number;
                    public static title_bar: number;
                    public static title_bar_medium: number;
                    public static title_bar_tall: number;
                    public static toast_frame: number;
                    public static unknown_image: number;
                    public static unlock_default: number;
                    public static unlock_halo: number;
                    public static unlock_ring: number;
                    public static unlock_wave: number;
                    public static vpn_connected: number;
                    public static vpn_disconnected: number;
                    public static zoom_plate: number;
                    public constructor();
                }
                export class fraction extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.R.fraction>;
                    public static config_autoBrightnessAdjustmentMaxGamma: number;
                    public static config_dimBehindFadeDuration: number;
                    public static config_maximumScreenDimRatio: number;
                    public static config_screenAutoBrightnessDozeScaleFactor: number;
                    public static docked_stack_divider_fixed_ratio: number;
                    public static input_extract_action_margin_bottom: number;
                    public static input_extract_layout_height: number;
                    public static input_extract_layout_padding_left: number;
                    public static input_extract_layout_padding_left_no_action: number;
                    public static input_extract_layout_padding_right: number;
                    public static input_extract_text_margin_bottom: number;
                    public static thumbnail_fullscreen_scale: number;
                    public constructor();
                }
                export class id extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.R.id>;
                    public static accessibilityActionClickOnClickableSpan: number;
                    public static accessibilityActionContextClick: number;
                    public static accessibilityActionMoveWindow: number;
                    public static accessibilityActionScrollDown: number;
                    public static accessibilityActionScrollLeft: number;
                    public static accessibilityActionScrollRight: number;
                    public static accessibilityActionScrollToPosition: number;
                    public static accessibilityActionScrollUp: number;
                    public static accessibilityActionSetProgress: number;
                    public static accessibilityActionShowOnScreen: number;
                    public static accessibility_button_chooser_grid: number;
                    public static accessibility_button_prompt: number;
                    public static accessibility_button_target_icon: number;
                    public static accessibility_button_target_label: number;
                    public static account_name: number;
                    public static account_row_icon: number;
                    public static account_row_text: number;
                    public static account_type: number;
                    public static action0: number;
                    public static action1: number;
                    public static action2: number;
                    public static action_bar: number;
                    public static action_bar_container: number;
                    public static action_bar_spinner: number;
                    public static action_bar_subtitle: number;
                    public static action_bar_title: number;
                    public static action_context_bar: number;
                    public static action_menu_presenter: number;
                    public static action_mode_bar_stub: number;
                    public static action_mode_close_button: number;
                    public static actions: number;
                    public static actions_container: number;
                    public static activity_chooser_view_content: number;
                    public static addToDictionary: number;
                    public static addToDictionaryButton: number;
                    public static aerr_close: number;
                    public static aerr_mute: number;
                    public static aerr_report: number;
                    public static aerr_restart: number;
                    public static aerr_wait: number;
                    public static alertTitle: number;
                    public static allow_button: number;
                    public static alwaysUse: number;
                    public static amPm: number;
                    public static am_label: number;
                    public static am_pm_spinner: number;
                    public static ampm_layout: number;
                    public static animator: number;
                    public static app_name_text: number;
                    public static ask_checkbox: number;
                    public static authtoken_type: number;
                    public static autofill: number;
                    public static autofill_dataset_list: number;
                    public static autofill_dataset_picker: number;
                    public static autofill_save_close: number;
                    public static autofill_save_no: number;
                    public static autofill_save_subtitle: number;
                    public static autofill_save_title: number;
                    public static autofill_save_yes: number;
                    public static back_button: number;
                    public static background: number;
                    public static big_picture: number;
                    public static big_text: number;
                    public static body: number;
                    public static breadcrumb_section: number;
                    public static button0: number;
                    public static button1: number;
                    public static button2: number;
                    public static button3: number;
                    public static button4: number;
                    public static button5: number;
                    public static button6: number;
                    public static button7: number;
                    public static buttonPanel: number;
                    public static button_always: number;
                    public static button_bar: number;
                    public static button_holder: number;
                    public static button_once: number;
                    public static by_common: number;
                    public static by_org: number;
                    public static by_org_unit: number;
                    public static calendar_view: number;
                    public static cancel: number;
                    public static candidatesArea: number;
                    public static certificate_name: number;
                    public static characterPicker: number;
                    public static checkbox: number;
                    public static chronometer: number;
                    public static clearDefaultHint: number;
                    public static closeButton: number;
                    public static close_window: number;
                    public static compat_checkbox: number;
                    public static content: number;
                    public static contentPanel: number;
                    public static copy: number;
                    public static copyUrl: number;
                    public static cross_task_transition: number;
                    public static current_scene: number;
                    public static custom: number;
                    public static customPanel: number;
                    public static cut: number;
                    public static date: number;
                    public static datePicker: number;
                    public static date_picker_day_picker: number;
                    public static date_picker_header: number;
                    public static date_picker_header_date: number;
                    public static date_picker_header_year: number;
                    public static date_picker_year_picker: number;
                    public static day: number;
                    public static day_names: number;
                    public static day_picker_view_pager: number;
                    public static decor_content_parent: number;
                    public static decrement: number;
                    public static default_activity_button: number;
                    public static deleteButton: number;
                    public static deny_button: number;
                    public static description: number;
                    public static divider: number;
                    public static edit: number;
                    public static edit_query: number;
                    public static edittext_container: number;
                    public static eight: number;
                    public static emergency_master_reset_btn: number;
                    public static emergency_master_reset_exit_btn: number;
                    public static empty: number;
                    public static enter_pin_section: number;
                    public static expand_activities_button: number;
                    public static expand_button: number;
                    public static expires_on: number;
                    public static extractArea: number;
                    public static ffwd: number;
                    public static fillInIntent: number;
                    public static find: number;
                    public static find_next: number;
                    public static find_prev: number;
                    public static five: number;
                    public static floating_toolbar_menu_item_image: number;
                    public static floating_toolbar_menu_item_text: number;
                    public static four: number;
                    public static fullscreenArea: number;
                    public static global_actions_double_item_group1: number;
                    public static global_actions_double_item_group2: number;
                    public static global_actions_double_item_icon1: number;
                    public static global_actions_double_item_icon2: number;
                    public static global_actions_double_item_message1: number;
                    public static global_actions_double_item_message2: number;
                    public static hard_keyboard_section: number;
                    public static hard_keyboard_switch: number;
                    public static header_text: number;
                    public static header_text_divider: number;
                    public static headers: number;
                    public static hint: number;
                    public static home: number;
                    public static hour: number;
                    public static hours: number;
                    public static icon: number;
                    public static icon1: number;
                    public static icon2: number;
                    public static icon_frame: number;
                    public static icon_menu_presenter: number;
                    public static image: number;
                    public static inbox_text0: number;
                    public static inbox_text1: number;
                    public static inbox_text2: number;
                    public static inbox_text3: number;
                    public static inbox_text4: number;
                    public static inbox_text5: number;
                    public static inbox_text6: number;
                    public static increment: number;
                    public static info: number;
                    public static input: number;
                    public static inputArea: number;
                    public static inputExtractAccessories: number;
                    public static inputExtractAction: number;
                    public static inputExtractEditText: number;
                    public static input_header: number;
                    public static input_hour: number;
                    public static input_minute: number;
                    public static input_mode: number;
                    public static input_separator: number;
                    public static insertion_handle: number;
                    public static internalEmpty: number;
                    public static issued_on: number;
                    public static item_touch_helper_previous_elevation: number;
                    public static keyboard: number;
                    public static keyboardView: number;
                    public static label_error: number;
                    public static label_hour: number;
                    public static label_minute: number;
                    public static leftSpacer: number;
                    public static left_icon: number;
                    public static line1: number;
                    public static list: number;
                    public static listContainer: number;
                    public static list_container: number;
                    public static list_footer: number;
                    public static list_item: number;
                    public static list_menu_presenter: number;
                    public static locale: number;
                    public static locale_search_menu: number;
                    public static lock_screen: number;
                    public static mask: number;
                    public static matches: number;
                    public static maximize_window: number;
                    public static media_actions: number;
                    public static media_route_control_frame: number;
                    public static media_route_extended_settings_button: number;
                    public static media_route_list: number;
                    public static media_route_volume_layout: number;
                    public static media_route_volume_slider: number;
                    public static mediacontroller_progress: number;
                    public static message: number;
                    public static minute: number;
                    public static minutes: number;
                    public static mode_normal: number;
                    public static month: number;
                    public static month_name: number;
                    public static month_view: number;
                    public static name: number;
                    public static navigationBarBackground: number;
                    public static new_app_action: number;
                    public static new_app_description: number;
                    public static new_app_icon: number;
                    public static next: number;
                    public static next_button: number;
                    public static nine: number;
                    public static no_applications_message: number;
                    public static no_permissions: number;
                    public static notification_action_list_margin_target: number;
                    public static notification_content_container: number;
                    public static notification_header: number;
                    public static notification_main_column: number;
                    public static notification_material_reply_container: number;
                    public static notification_material_reply_text_1: number;
                    public static notification_material_reply_text_2: number;
                    public static notification_material_reply_text_3: number;
                    public static notification_messaging: number;
                    public static numberpicker_input: number;
                    public static ok: number;
                    public static old_app_action: number;
                    public static old_app_description: number;
                    public static old_app_icon: number;
                    public static one: number;
                    public static option1: number;
                    public static option2: number;
                    public static option3: number;
                    public static original_app_icon: number;
                    public static original_message: number;
                    public static overflow: number;
                    public static overlay_display_window_texture: number;
                    public static overlay_display_window_title: number;
                    public static package_content: number;
                    public static package_label: number;
                    public static packages_list: number;
                    public static parentMatrix: number;
                    public static parentPanel: number;
                    public static paste: number;
                    public static pasteAsPlainText: number;
                    public static pause: number;
                    public static perm_icon: number;
                    public static perm_name: number;
                    public static permission_group: number;
                    public static permission_list: number;
                    public static permission_text: number;
                    public static perms_list: number;
                    public static pickers: number;
                    public static pin_cancel_button: number;
                    public static pin_confirm_text: number;
                    public static pin_error_message: number;
                    public static pin_new_text: number;
                    public static pin_ok_button: number;
                    public static pin_text: number;
                    public static placeholder: number;
                    public static pm_label: number;
                    public static prefs: number;
                    public static prefs_container: number;
                    public static prefs_frame: number;
                    public static prev: number;
                    public static primary: number;
                    public static profile_badge: number;
                    public static profile_button: number;
                    public static progress: number;
                    public static progressContainer: number;
                    public static progress_circular: number;
                    public static progress_horizontal: number;
                    public static progress_number: number;
                    public static progress_percent: number;
                    public static radial_picker: number;
                    public static radio: number;
                    public static reask_hint: number;
                    public static redo: number;
                    public static remote_input_tag: number;
                    public static replaceText: number;
                    public static replace_app_icon: number;
                    public static replace_message: number;
                    public static resolver_list: number;
                    public static rew: number;
                    public static rightSpacer: number;
                    public static right_icon: number;
                    public static rowTypeId: number;
                    public static scene_layoutid_cache: number;
                    public static scrollView: number;
                    public static search_app_icon: number;
                    public static search_badge: number;
                    public static search_bar: number;
                    public static search_button: number;
                    public static search_close_btn: number;
                    public static search_edit_frame: number;
                    public static search_go_btn: number;
                    public static search_mag_icon: number;
                    public static search_plate: number;
                    public static search_src_text: number;
                    public static search_view: number;
                    public static search_voice_btn: number;
                    public static secondaryProgress: number;
                    public static seekbar: number;
                    public static selectAll: number;
                    public static selectTextMode: number;
                    public static select_all: number;
                    public static selectedIcon: number;
                    public static selection_end_handle: number;
                    public static selection_start_handle: number;
                    public static separator: number;
                    public static serial_number: number;
                    public static seven: number;
                    public static sha1_fingerprint: number;
                    public static sha256_fingerprint: number;
                    public static share: number;
                    public static shareText: number;
                    public static shortcut: number;
                    public static six: number;
                    public static skip_button: number;
                    public static sms_short_code_confirm_message: number;
                    public static sms_short_code_detail_layout: number;
                    public static sms_short_code_detail_message: number;
                    public static sms_short_code_remember_choice_checkbox: number;
                    public static sms_short_code_remember_undo_instruction: number;
                    public static spacer: number;
                    public static split_action_bar: number;
                    public static startSelectingText: number;
                    public static status: number;
                    public static statusBarBackground: number;
                    public static status_bar_latest_event_content: number;
                    public static stopSelectingText: number;
                    public static submenuarrow: number;
                    public static submit_area: number;
                    public static suggestionContainer: number;
                    public static suggestionWindowContainer: number;
                    public static summary: number;
                    public static switchInputMethod: number;
                    public static switch_new: number;
                    public static switch_old: number;
                    public static switch_widget: number;
                    public static tabcontent: number;
                    public static tabhost: number;
                    public static tabs: number;
                    public static target_badge: number;
                    public static text: number;
                    public static text1: number;
                    public static text2: number;
                    public static textAssist: number;
                    public static textSpacerNoButtons: number;
                    public static textSpacerNoTitle: number;
                    public static text_line_1: number;
                    public static three: number;
                    public static time: number;
                    public static timePicker: number;
                    public static timePickerLayout: number;
                    public static time_current: number;
                    public static time_divider: number;
                    public static time_header: number;
                    public static title: number;
                    public static titleDivider: number;
                    public static titleDividerNoCustom: number;
                    public static titleDividerTop: number;
                    public static title_container: number;
                    public static title_icon: number;
                    public static title_template: number;
                    public static to_common: number;
                    public static to_org: number;
                    public static to_org_unit: number;
                    public static toggle: number;
                    public static toggle_mode: number;
                    public static topPanel: number;
                    public static transitionPosition: number;
                    public static transitionTransform: number;
                    public static two: number;
                    public static undo: number;
                    public static unlaunchable_app_message: number;
                    public static unlaunchable_app_title: number;
                    public static up: number;
                    public static value: number;
                    public static websearch: number;
                    public static widget_frame: number;
                    public static wifi_p2p_wps_pin: number;
                    public static work_widget_app_icon: number;
                    public static work_widget_badge_icon: number;
                    public static work_widget_mask_frame: number;
                    public static year: number;
                    public static zero: number;
                    public static zoomControls: number;
                    public static zoomIn: number;
                    public static zoomMagnify: number;
                    public static zoomOut: number;
                    public constructor();
                }
                export class integer extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.R.integer>;
                    public static config_MaxConcurrentDownloadsAllowed: number;
                    public static config_autoBrightnessAmbientLightHorizon: number;
                    public static config_autoBrightnessBrighteningLightDebounce: number;
                    public static config_autoBrightnessDarkeningLightDebounce: number;
                    public static config_autoBrightnessInitialLightSensorRate: number;
                    public static config_autoBrightnessLightSensorRate: number;
                    public static config_autoPowerModeAnyMotionSensor: number;
                    public static config_autoPowerModeThresholdAngle: number;
                    public static config_backPanicBehavior: number;
                    public static config_bluetooth_idle_cur_ma: number;
                    public static config_bluetooth_max_advertisers: number;
                    public static config_bluetooth_max_scan_filters: number;
                    public static config_bluetooth_operating_voltage_mv: number;
                    public static config_bluetooth_rx_cur_ma: number;
                    public static config_bluetooth_tx_cur_ma: number;
                    public static config_brightness_ramp_rate_fast: number;
                    public static config_burnInProtectionMaxHorizontalOffset: number;
                    public static config_burnInProtectionMaxRadius: number;
                    public static config_burnInProtectionMaxVerticalOffset: number;
                    public static config_burnInProtectionMinHorizontalOffset: number;
                    public static config_burnInProtectionMinVerticalOffset: number;
                    public static config_cameraLaunchGestureSensorType: number;
                    public static config_carDockKeepsScreenOn: number;
                    public static config_carDockRotation: number;
                    public static config_cdma_3waycall_flash_delay: number;
                    public static config_criticalBatteryWarningLevel: number;
                    public static config_cursorWindowSize: number;
                    public static config_datause_notification_type: number;
                    public static config_datause_polling_period_sec: number;
                    public static config_datause_threshold_bytes: number;
                    public static config_datause_throttle_kbitsps: number;
                    public static config_defaultDisplayDefaultColorMode: number;
                    public static config_defaultNightDisplayAutoMode: number;
                    public static config_defaultNightDisplayCustomEndTime: number;
                    public static config_defaultNightDisplayCustomStartTime: number;
                    public static config_defaultNightMode: number;
                    public static config_defaultNotificationLedOff: number;
                    public static config_defaultNotificationLedOn: number;
                    public static config_defaultPictureInPictureGravity: number;
                    public static config_defaultUiModeType: number;
                    public static config_defaultVibrationAmplitude: number;
                    public static config_deskDockKeepsScreenOn: number;
                    public static config_deskDockRotation: number;
                    public static config_dockedStackDividerSnapMode: number;
                    public static config_doublePressOnPowerBehavior: number;
                    public static config_doubleTapOnHomeBehavior: number;
                    public static config_downloadDataDirLowSpaceThreshold: number;
                    public static config_downloadDataDirSize: number;
                    public static config_drawLockTimeoutMillis: number;
                    public static config_dreamsBatteryLevelDrainCutoff: number;
                    public static config_dreamsBatteryLevelMinimumWhenNotPowered: number;
                    public static config_dreamsBatteryLevelMinimumWhenPowered: number;
                    public static config_externalHardKeyboardBehavior: number;
                    public static config_extraFreeKbytesAbsolute: number;
                    public static config_extraFreeKbytesAdjust: number;
                    public static config_fingerprintMaxTemplatesPerUser: number;
                    public static config_globalActionsKeyTimeout: number;
                    public static config_immersive_mode_confirmation_panic: number;
                    public static config_inCallNotificationVolumeRelative: number;
                    public static config_jobSchedulerIdleWindowSlop: number;
                    public static config_jobSchedulerInactivityIdleThreshold: number;
                    public static config_keepPreloadsMinDays: number;
                    public static config_lidKeyboardAccessibility: number;
                    public static config_lidNavigationAccessibility: number;
                    public static config_lidOpenRotation: number;
                    public static config_lightSensorWarmupTime: number;
                    public static config_lockSoundVolumeDb: number;
                    public static config_longAnimTime: number;
                    public static config_longPressOnBackBehavior: number;
                    public static config_longPressOnHomeBehavior: number;
                    public static config_longPressOnPowerBehavior: number;
                    public static config_lowBatteryCloseWarningBump: number;
                    public static config_lowBatteryWarningLevel: number;
                    public static config_lowMemoryKillerCachedMinFreeKbytesAdjust: number;
                    public static config_lowMemoryKillerMinFreeKbytesAbsolute: number;
                    public static config_lowMemoryKillerMinFreeKbytesAdjust: number;
                    public static config_maxResolverActivityColumns: number;
                    public static config_maxUiWidth: number;
                    public static config_max_pan_devices: number;
                    public static config_maximumScreenDimDuration: number;
                    public static config_mdc_initial_max_retry: number;
                    public static config_mediumAnimTime: number;
                    public static config_minimumScreenOffTimeout: number;
                    public static config_mobile_hotspot_provision_check_period: number;
                    public static config_mobile_mtu: number;
                    public static config_multiuserMaximumUsers: number;
                    public static config_navBarOpacityMode: number;
                    public static config_networkAvoidBadWifi: number;
                    public static config_networkMeteredMultipathPreference: number;
                    public static config_networkNotifySwitchType: number;
                    public static config_networkPolicyDefaultWarning: number;
                    public static config_networkTransitionTimeout: number;
                    public static config_nightDisplayColorTemperatureDefault: number;
                    public static config_nightDisplayColorTemperatureMax: number;
                    public static config_nightDisplayColorTemperatureMin: number;
                    public static config_notificationServiceArchiveSize: number;
                    public static config_notificationsBatteryFullARGB: number;
                    public static config_notificationsBatteryLedOff: number;
                    public static config_notificationsBatteryLedOn: number;
                    public static config_notificationsBatteryLowARGB: number;
                    public static config_notificationsBatteryMediumARGB: number;
                    public static config_ntpPollingInterval: number;
                    public static config_ntpPollingIntervalShorter: number;
                    public static config_ntpRetry: number;
                    public static config_ntpThreshold: number;
                    public static config_ntpTimeout: number;
                    public static config_overrideHasPermanentMenuKey: number;
                    public static config_pictureInPictureSnapMode: number;
                    public static config_previousVibrationsDumpLimit: number;
                    public static config_radioScanningTimeout: number;
                    public static config_safe_media_volume_index: number;
                    public static config_screenBrightnessDark: number;
                    public static config_screenBrightnessDim: number;
                    public static config_screenBrightnessDoze: number;
                    public static config_screenBrightnessForVrSettingDefault: number;
                    public static config_screenBrightnessForVrSettingMaximum: number;
                    public static config_screenBrightnessForVrSettingMinimum: number;
                    public static config_screenBrightnessSettingDefault: number;
                    public static config_screenBrightnessSettingMaximum: number;
                    public static config_screenBrightnessSettingMinimum: number;
                    public static config_screen_magnification_multi_tap_adjustment: number;
                    public static config_shortAnimTime: number;
                    public static config_shortPressOnPowerBehavior: number;
                    public static config_shortPressOnSleepBehavior: number;
                    public static config_shutdownBatteryTemperature: number;
                    public static config_sms_authorization_timeout_ms: number;
                    public static config_soundEffectVolumeDb: number;
                    public static config_toastDefaultGravity: number;
                    public static config_triplePressOnPowerBehavior: number;
                    public static config_undockedHdmiRotation: number;
                    public static config_valid_wappush_index: number;
                    public static config_virtualKeyQuietTimeMillis: number;
                    public static config_volte_replacement_rat: number;
                    public static config_wifi_active_rx_cur_ma: number;
                    public static config_wifi_associated_short_scan_interval: number;
                    public static config_wifi_disconnected_short_scan_interval: number;
                    public static config_wifi_framework_5GHz_preference_boost_factor: number;
                    public static config_wifi_framework_5GHz_preference_boost_threshold: number;
                    public static config_wifi_framework_5GHz_preference_penalty_threshold: number;
                    public static config_wifi_framework_LAST_SELECTION_AWARD: number;
                    public static config_wifi_framework_PASSPOINT_SECURITY_AWARD: number;
                    public static config_wifi_framework_RSSI_SCORE_OFFSET: number;
                    public static config_wifi_framework_RSSI_SCORE_SLOPE: number;
                    public static config_wifi_framework_SAME_BSSID_AWARD: number;
                    public static config_wifi_framework_SECURITY_AWARD: number;
                    public static config_wifi_framework_associated_full_scan_backoff: number;
                    public static config_wifi_framework_associated_full_scan_max_interval: number;
                    public static config_wifi_framework_associated_full_scan_max_total_dwell_time: number;
                    public static config_wifi_framework_associated_full_scan_rx_packet_threshold: number;
                    public static config_wifi_framework_associated_full_scan_tx_packet_threshold: number;
                    public static config_wifi_framework_associated_partial_scan_max_num_active_channels: number;
                    public static config_wifi_framework_associated_partial_scan_rx_packet_threshold: number;
                    public static config_wifi_framework_associated_partial_scan_tx_packet_threshold: number;
                    public static config_wifi_framework_current_network_boost: number;
                    public static config_wifi_framework_network_switch_rx_packet_threshold: number;
                    public static config_wifi_framework_network_switch_tx_packet_threshold: number;
                    public static config_wifi_framework_scan_interval: number;
                    public static config_wifi_framework_scan_result_rssi_level_patchup_value: number;
                    public static config_wifi_framework_wifi_score_bad_link_speed_24: number;
                    public static config_wifi_framework_wifi_score_bad_link_speed_5: number;
                    public static config_wifi_framework_wifi_score_bad_rssi_threshold_24GHz: number;
                    public static config_wifi_framework_wifi_score_bad_rssi_threshold_5GHz: number;
                    public static config_wifi_framework_wifi_score_good_link_speed_24: number;
                    public static config_wifi_framework_wifi_score_good_link_speed_5: number;
                    public static config_wifi_framework_wifi_score_good_rssi_threshold_24GHz: number;
                    public static config_wifi_framework_wifi_score_good_rssi_threshold_5GHz: number;
                    public static config_wifi_framework_wifi_score_low_rssi_threshold_24GHz: number;
                    public static config_wifi_framework_wifi_score_low_rssi_threshold_5GHz: number;
                    public static config_wifi_idle_receive_cur_ma: number;
                    public static config_wifi_logger_ring_buffer_default_size_limit_kb: number;
                    public static config_wifi_logger_ring_buffer_verbose_size_limit_kb: number;
                    public static config_wifi_network_switching_blacklist_time: number;
                    public static config_wifi_no_network_periodic_scan_interval: number;
                    public static config_wifi_operating_voltage_mv: number;
                    public static config_wifi_scan_interval_p2p_connected: number;
                    public static config_wifi_supplicant_scan_interval: number;
                    public static config_wifi_tx_cur_ma: number;
                    public static config_wifi_wakeup_available: number;
                    public static config_windowOutsetBottom: number;
                    public static config_zen_repeat_callers_threshold: number;
                    public static date_picker_mode: number;
                    public static db_connection_pool_size: number;
                    public static db_journal_size_limit: number;
                    public static db_wal_autocheckpoint: number;
                    public static default_data_warning_level_mb: number;
                    public static dock_enter_exit_duration: number;
                    public static orientationboost_cpuboost_param: number;
                    public static orientationboost_pcdisbl_param: number;
                    public static orientationboost_schedboost_param: number;
                    public static orientationboost_timeout_param: number;
                    public static status_bar_notification_info_maxnum: number;
                    public static thumbnail_width_tv: number;
                    public static time_picker_mode: number;
                    public constructor();
                }
                export class interpolator extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.R.interpolator>;
                    public static accelerate_cubic: number;
                    public static accelerate_decelerate: number;
                    public static accelerate_quad: number;
                    public static accelerate_quint: number;
                    public static anticipate: number;
                    public static anticipate_overshoot: number;
                    public static bounce: number;
                    public static cycle: number;
                    public static decelerate_cubic: number;
                    public static decelerate_quad: number;
                    public static decelerate_quint: number;
                    public static fast_out_linear_in: number;
                    public static fast_out_slow_in: number;
                    public static linear: number;
                    public static linear_out_slow_in: number;
                    public static overshoot: number;
                    public constructor();
                }
                export class layout extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.R.layout>;
                    public static accessibility_button_chooser: number;
                    public static accessibility_button_chooser_item: number;
                    public static action_bar_home: number;
                    public static action_bar_title_item: number;
                    public static action_bar_up_container: number;
                    public static action_menu_item_layout: number;
                    public static action_menu_layout: number;
                    public static action_mode_close_item: number;
                    public static activity_chooser_view: number;
                    public static activity_chooser_view_list_item: number;
                    public static activity_list: number;
                    public static activity_list_item: number;
                    public static activity_list_item_2: number;
                    public static alert_dialog: number;
                    public static alert_dialog_progress: number;
                    public static always_use_checkbox: number;
                    public static am_compat_mode_dialog: number;
                    public static app_anr_dialog: number;
                    public static app_error_dialog: number;
                    public static app_not_authorized: number;
                    public static app_permission_item: number;
                    public static app_permission_item_money: number;
                    public static app_permission_item_old: number;
                    public static app_perms_summary: number;
                    public static auto_complete_list: number;
                    public static autofill_dataset_picker: number;
                    public static autofill_save: number;
                    public static browser_link_context_header: number;
                    public static calendar_view: number;
                    public static character_picker: number;
                    public static character_picker_button: number;
                    public static choose_account: number;
                    public static choose_account_row: number;
                    public static choose_account_type: number;
                    public static choose_type_and_account: number;
                    public static chooser_grid: number;
                    public static chooser_row: number;
                    public static common_tab_settings: number;
                    public static date_picker_dialog: number;
                    public static date_picker_legacy: number;
                    public static date_picker_material: number;
                    public static date_picker_month_item_material: number;
                    public static day_picker_content_material: number;
                    public static decor_caption: number;
                    public static expandable_list_content: number;
                    public static expanded_menu_layout: number;
                    public static floating_popup_close_overflow_button: number;
                    public static floating_popup_container: number;
                    public static floating_popup_menu_button: number;
                    public static floating_popup_open_overflow_button: number;
                    public static floating_popup_overflow_button: number;
                    public static fragment_bread_crumb_item: number;
                    public static fragment_bread_crumbs: number;
                    public static global_actions_double_item: number;
                    public static global_actions_item: number;
                    public static global_actions_silent_mode: number;
                    public static grant_credentials_permission: number;
                    public static heavy_weight_switcher: number;
                    public static icon_menu_item_layout: number;
                    public static icon_menu_layout: number;
                    public static immersive_mode_cling: number;
                    public static input_method: number;
                    public static input_method_extract_view: number;
                    public static input_method_switch_dialog_title: number;
                    public static input_method_switch_item: number;
                    public static install_credential_dialog: number;
                    public static js_prompt: number;
                    public static language_picker_item: number;
                    public static language_picker_section_header: number;
                    public static launch_warning: number;
                    public static list_content: number;
                    public static list_content_simple: number;
                    public static list_menu_item_checkbox: number;
                    public static list_menu_item_icon: number;
                    public static list_menu_item_layout: number;
                    public static list_menu_item_radio: number;
                    public static locale_picker_item: number;
                    public static media_controller: number;
                    public static media_route_chooser_dialog: number;
                    public static media_route_controller_dialog: number;
                    public static media_route_list_item: number;
                    public static notification_intruder_content: number;
                    public static notification_material_action: number;
                    public static notification_material_action_emphasized: number;
                    public static notification_material_action_list: number;
                    public static notification_material_action_tombstone: number;
                    public static notification_material_media_action: number;
                    public static notification_template_ambient_header: number;
                    public static notification_template_header: number;
                    public static notification_template_material_ambient: number;
                    public static notification_template_material_base: number;
                    public static notification_template_material_big_base: number;
                    public static notification_template_material_big_media: number;
                    public static notification_template_material_big_picture: number;
                    public static notification_template_material_big_text: number;
                    public static notification_template_material_inbox: number;
                    public static notification_template_material_media: number;
                    public static notification_template_material_messaging: number;
                    public static number_picker: number;
                    public static overlay_display_window: number;
                    public static permission_confirmation_dialog: number;
                    public static permissions_package_list_item: number;
                    public static popup_menu_header_item_layout: number;
                    public static popup_menu_item_layout: number;
                    public static preference: number;
                    public static preference_category: number;
                    public static preference_header_item: number;
                    public static preference_list_content: number;
                    public static preference_list_content_single: number;
                    public static preference_list_fragment: number;
                    public static preference_widget_seekbar: number;
                    public static progress_dialog: number;
                    public static recent_apps_dialog: number;
                    public static remote_views_adapter_default_loading_view: number;
                    public static resolve_grid_item: number;
                    public static resolve_list_item: number;
                    public static resolver_different_item_header: number;
                    public static resolver_list: number;
                    public static resolver_list_with_default: number;
                    public static restrictions_pin_challenge: number;
                    public static restrictions_pin_setup: number;
                    public static safe_mode: number;
                    public static screen_action_bar: number;
                    public static screen_custom_title: number;
                    public static screen_progress: number;
                    public static screen_simple: number;
                    public static screen_simple_overlay_action_mode: number;
                    public static screen_swipe_dismiss: number;
                    public static screen_title: number;
                    public static screen_title_icons: number;
                    public static search_bar: number;
                    public static search_dropdown_item_icons_2line: number;
                    public static search_view: number;
                    public static select_dialog: number;
                    public static select_dialog_item: number;
                    public static select_dialog_multichoice: number;
                    public static select_dialog_multichoice_material: number;
                    public static select_dialog_singlechoice: number;
                    public static select_dialog_singlechoice_holo: number;
                    public static select_dialog_singlechoice_material: number;
                    public static semc_emergency_master_reset_layout: number;
                    public static simple_account_item: number;
                    public static simple_dropdown_hint: number;
                    public static simple_dropdown_item_1line: number;
                    public static simple_expandable_list_item_1: number;
                    public static simple_expandable_list_item_2: number;
                    public static simple_gallery_item: number;
                    public static simple_list_item_1: number;
                    public static simple_list_item_2: number;
                    public static simple_list_item_2_single_choice: number;
                    public static simple_list_item_activated_1: number;
                    public static simple_list_item_activated_2: number;
                    public static simple_list_item_checked: number;
                    public static simple_list_item_multiple_choice: number;
                    public static simple_list_item_single_choice: number;
                    public static simple_selectable_list_item: number;
                    public static simple_spinner_dropdown_item: number;
                    public static simple_spinner_item: number;
                    public static sms_short_code_confirmation_dialog: number;
                    public static sound_level_alert_dialog: number;
                    public static ssl_certificate: number;
                    public static status_bar_latest_event_content: number;
                    public static tab_content: number;
                    public static tab_indicator_holo: number;
                    public static test_list_item: number;
                    public static text_drag_thumbnail: number;
                    public static text_edit_action_popup_text: number;
                    public static textview_hint: number;
                    public static time_picker_dialog: number;
                    public static time_picker_header_material: number;
                    public static time_picker_legacy: number;
                    public static time_picker_material: number;
                    public static time_picker_text_input_material: number;
                    public static tooltip: number;
                    public static transient_notification: number;
                    public static two_line_list_item: number;
                    public static typing_filter: number;
                    public static unlaunchable_app_activity: number;
                    public static unsupported_display_size_dialog_content: number;
                    public static user_switching_dialog: number;
                    public static voice_interaction_session: number;
                    public static web_text_view_dropdown: number;
                    public static webview_find: number;
                    public static webview_select_singlechoice: number;
                    public static wifi_p2p_dialog: number;
                    public static wifi_p2p_dialog_row: number;
                    public static work_widget_mask_view: number;
                    public static year_label_text_view: number;
                    public static zoom_container: number;
                    public static zoom_controls: number;
                    public static zoom_magnify: number;
                    public constructor();
                }
                export class menu extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.R.menu>;
                    public static language_selection_list: number;
                    public static webview_copy: number;
                    public static webview_find: number;
                    public constructor();
                }
                export class mipmap extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.R.mipmap>;
                    public static sym_def_app_icon: number;
                    public constructor();
                }
                export class plurals extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.R.plurals>;
                    public static autofill_picker_some_suggestions: number;
                    public static bugreport_countdown: number;
                    public static duration_days_relative: number;
                    public static duration_days_relative_future: number;
                    public static duration_days_shortest: number;
                    public static duration_days_shortest_future: number;
                    public static duration_hours_relative: number;
                    public static duration_hours_relative_future: number;
                    public static duration_hours_shortest: number;
                    public static duration_hours_shortest_future: number;
                    public static duration_minutes_relative: number;
                    public static duration_minutes_relative_future: number;
                    public static duration_minutes_shortest: number;
                    public static duration_minutes_shortest_future: number;
                    public static duration_years_relative: number;
                    public static duration_years_relative_future: number;
                    public static duration_years_shortest: number;
                    public static duration_years_shortest_future: number;
                    public static last_num_days: number;
                    public static matches_found: number;
                    public static pinpuk_attempts: number;
                    public static restr_pin_countdown: number;
                    public static selected_count: number;
                    public static ssl_ca_cert_warning: number;
                    public static wifi_available: number;
                    public static wifi_available_detailed: number;
                    public static zen_mode_duration_hours: number;
                    public static zen_mode_duration_hours_short: number;
                    public static zen_mode_duration_hours_summary: number;
                    public static zen_mode_duration_hours_summary_short: number;
                    public static zen_mode_duration_minutes: number;
                    public static zen_mode_duration_minutes_short: number;
                    public static zen_mode_duration_minutes_summary: number;
                    public static zen_mode_duration_minutes_summary_short: number;
                    public constructor();
                }
                export class raw extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.R.raw>;
                    public static color_fade_frag: number;
                    public static color_fade_vert: number;
                    public static fallback_categories: number;
                    public static fallbackring: number;
                    public static loaderror: number;
                    public static nodomain: number;
                    public constructor();
                }
                export class style extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.R.style>;
                    public static ActiveWallpaperSettings: number;
                    public static Animation: number;
                    public static Animation_Activity: number;
                    public static Animation_Dialog: number;
                    public static Animation_Dream: number;
                    public static Animation_DropDownDown: number;
                    public static Animation_DropDownUp: number;
                    public static Animation_ImmersiveModeConfirmation: number;
                    public static Animation_InputMethod: number;
                    public static Animation_InputMethodFancy: number;
                    public static Animation_LockScreen: number;
                    public static Animation_PopupWindow: number;
                    public static Animation_RecentApplications: number;
                    public static Animation_Toast: number;
                    public static Animation_Tooltip: number;
                    public static Animation_Translucent: number;
                    public static Animation_TypingFilter: number;
                    public static Animation_TypingFilterRestore: number;
                    public static Animation_VolumePanel: number;
                    public static Animation_Wallpaper: number;
                    public static Animation_ZoomButtons: number;
                    public static AutofillDatasetPicker: number;
                    public static ButtonBar: number;
                    public static DeviceDefault_ButtonBar: number;
                    public static DeviceDefault_ButtonBar_AlertDialog: number;
                    public static DeviceDefault_Light_ButtonBar: number;
                    public static DeviceDefault_Light_ButtonBar_AlertDialog: number;
                    public static DeviceDefault_Light_SegmentedButton: number;
                    public static DeviceDefault_SegmentedButton: number;
                    public static Holo_ButtonBar: number;
                    public static Holo_ButtonBar_AlertDialog: number;
                    public static Holo_Light_ButtonBar: number;
                    public static Holo_Light_ButtonBar_AlertDialog: number;
                    public static Holo_Light_SegmentedButton: number;
                    public static Holo_SegmentedButton: number;
                    public static LargePointer: number;
                    public static MediaButton: number;
                    public static MediaButton_Ffwd: number;
                    public static MediaButton_Next: number;
                    public static MediaButton_Pause: number;
                    public static MediaButton_Play: number;
                    public static MediaButton_Previous: number;
                    public static MediaButton_Rew: number;
                    public static Pointer: number;
                    public static PreviewWallpaperSettings: number;
                    public static TextAppearance: number;
                    public static TextAppearance_DeviceDefault: number;
                    public static TextAppearance_DeviceDefault_DialogWindowTitle: number;
                    public static TextAppearance_DeviceDefault_Inverse: number;
                    public static TextAppearance_DeviceDefault_Large: number;
                    public static TextAppearance_DeviceDefault_Large_Inverse: number;
                    public static TextAppearance_DeviceDefault_Medium: number;
                    public static TextAppearance_DeviceDefault_Medium_Inverse: number;
                    public static TextAppearance_DeviceDefault_SearchResult_Subtitle: number;
                    public static TextAppearance_DeviceDefault_SearchResult_Title: number;
                    public static TextAppearance_DeviceDefault_Small: number;
                    public static TextAppearance_DeviceDefault_Small_Inverse: number;
                    public static TextAppearance_DeviceDefault_Widget: number;
                    public static TextAppearance_DeviceDefault_Widget_ActionBar_Menu: number;
                    public static TextAppearance_DeviceDefault_Widget_ActionBar_Subtitle: number;
                    public static TextAppearance_DeviceDefault_Widget_ActionBar_Subtitle_Inverse: number;
                    public static TextAppearance_DeviceDefault_Widget_ActionBar_Title: number;
                    public static TextAppearance_DeviceDefault_Widget_ActionBar_Title_Inverse: number;
                    public static TextAppearance_DeviceDefault_Widget_ActionMode_Subtitle: number;
                    public static TextAppearance_DeviceDefault_Widget_ActionMode_Subtitle_Inverse: number;
                    public static TextAppearance_DeviceDefault_Widget_ActionMode_Title: number;
                    public static TextAppearance_DeviceDefault_Widget_ActionMode_Title_Inverse: number;
                    public static TextAppearance_DeviceDefault_Widget_Button: number;
                    public static TextAppearance_DeviceDefault_Widget_DropDownHint: number;
                    public static TextAppearance_DeviceDefault_Widget_DropDownItem: number;
                    public static TextAppearance_DeviceDefault_Widget_EditText: number;
                    public static TextAppearance_DeviceDefault_Widget_IconMenu_Item: number;
                    public static TextAppearance_DeviceDefault_Widget_PopupMenu: number;
                    public static TextAppearance_DeviceDefault_Widget_PopupMenu_Large: number;
                    public static TextAppearance_DeviceDefault_Widget_PopupMenu_Small: number;
                    public static TextAppearance_DeviceDefault_Widget_TabWidget: number;
                    public static TextAppearance_DeviceDefault_Widget_TextView: number;
                    public static TextAppearance_DeviceDefault_Widget_TextView_PopupMenu: number;
                    public static TextAppearance_DeviceDefault_Widget_TextView_SpinnerItem: number;
                    public static TextAppearance_DeviceDefault_WindowTitle: number;
                    public static TextAppearance_DialogWindowTitle: number;
                    public static TextAppearance_Holo: number;
                    public static TextAppearance_Holo_DialogWindowTitle: number;
                    public static TextAppearance_Holo_Inverse: number;
                    public static TextAppearance_Holo_Large: number;
                    public static TextAppearance_Holo_Large_Inverse: number;
                    public static TextAppearance_Holo_Medium: number;
                    public static TextAppearance_Holo_Medium_Inverse: number;
                    public static TextAppearance_Holo_SearchResult_Subtitle: number;
                    public static TextAppearance_Holo_SearchResult_Title: number;
                    public static TextAppearance_Holo_Small: number;
                    public static TextAppearance_Holo_Small_Inverse: number;
                    public static TextAppearance_Holo_Widget: number;
                    public static TextAppearance_Holo_Widget_ActionBar_Menu: number;
                    public static TextAppearance_Holo_Widget_ActionBar_Subtitle: number;
                    public static TextAppearance_Holo_Widget_ActionBar_Subtitle_Inverse: number;
                    public static TextAppearance_Holo_Widget_ActionBar_Title: number;
                    public static TextAppearance_Holo_Widget_ActionBar_Title_Inverse: number;
                    public static TextAppearance_Holo_Widget_ActionMode_Subtitle: number;
                    public static TextAppearance_Holo_Widget_ActionMode_Subtitle_Inverse: number;
                    public static TextAppearance_Holo_Widget_ActionMode_Title: number;
                    public static TextAppearance_Holo_Widget_ActionMode_Title_Inverse: number;
                    public static TextAppearance_Holo_Widget_Button: number;
                    public static TextAppearance_Holo_Widget_DropDownHint: number;
                    public static TextAppearance_Holo_Widget_DropDownItem: number;
                    public static TextAppearance_Holo_Widget_EditText: number;
                    public static TextAppearance_Holo_Widget_IconMenu_Item: number;
                    public static TextAppearance_Holo_Widget_PopupMenu: number;
                    public static TextAppearance_Holo_Widget_PopupMenu_Large: number;
                    public static TextAppearance_Holo_Widget_PopupMenu_Small: number;
                    public static TextAppearance_Holo_Widget_TabWidget: number;
                    public static TextAppearance_Holo_Widget_TextView: number;
                    public static TextAppearance_Holo_Widget_TextView_PopupMenu: number;
                    public static TextAppearance_Holo_Widget_TextView_SpinnerItem: number;
                    public static TextAppearance_Holo_WindowTitle: number;
                    public static TextAppearance_Inverse: number;
                    public static TextAppearance_Large: number;
                    public static TextAppearance_Large_Inverse: number;
                    public static TextAppearance_Material: number;
                    public static TextAppearance_Material_Body1: number;
                    public static TextAppearance_Material_Body2: number;
                    public static TextAppearance_Material_Button: number;
                    public static TextAppearance_Material_Caption: number;
                    public static TextAppearance_Material_DatePicker_List_YearLabel: number;
                    public static TextAppearance_Material_DatePicker_List_YearLabel_Activated: number;
                    public static TextAppearance_Material_DialogWindowTitle: number;
                    public static TextAppearance_Material_Display1: number;
                    public static TextAppearance_Material_Display2: number;
                    public static TextAppearance_Material_Display3: number;
                    public static TextAppearance_Material_Display4: number;
                    public static TextAppearance_Material_Headline: number;
                    public static TextAppearance_Material_Inverse: number;
                    public static TextAppearance_Material_Large: number;
                    public static TextAppearance_Material_Large_Inverse: number;
                    public static TextAppearance_Material_Medium: number;
                    public static TextAppearance_Material_Medium_Inverse: number;
                    public static TextAppearance_Material_Menu: number;
                    public static TextAppearance_Material_Notification: number;
                    public static TextAppearance_Material_Notification_Emphasis: number;
                    public static TextAppearance_Material_Notification_Info: number;
                    public static TextAppearance_Material_Notification_Line2: number;
                    public static TextAppearance_Material_Notification_Time: number;
                    public static TextAppearance_Material_Notification_Title: number;
                    public static TextAppearance_Material_SearchResult_Subtitle: number;
                    public static TextAppearance_Material_SearchResult_Title: number;
                    public static TextAppearance_Material_Small: number;
                    public static TextAppearance_Material_Small_Inverse: number;
                    public static TextAppearance_Material_Subhead: number;
                    public static TextAppearance_Material_TimePicker_TimeLabel: number;
                    public static TextAppearance_Material_Title: number;
                    public static TextAppearance_Material_Widget: number;
                    public static TextAppearance_Material_Widget_ActionBar_Menu: number;
                    public static TextAppearance_Material_Widget_ActionBar_Subtitle: number;
                    public static TextAppearance_Material_Widget_ActionBar_Subtitle_Inverse: number;
                    public static TextAppearance_Material_Widget_ActionBar_Title: number;
                    public static TextAppearance_Material_Widget_ActionBar_Title_Inverse: number;
                    public static TextAppearance_Material_Widget_ActionMode_Subtitle: number;
                    public static TextAppearance_Material_Widget_ActionMode_Subtitle_Inverse: number;
                    public static TextAppearance_Material_Widget_ActionMode_Title: number;
                    public static TextAppearance_Material_Widget_ActionMode_Title_Inverse: number;
                    public static TextAppearance_Material_Widget_Button: number;
                    public static TextAppearance_Material_Widget_Button_Borderless_Colored: number;
                    public static TextAppearance_Material_Widget_Button_Colored: number;
                    public static TextAppearance_Material_Widget_Button_Inverse: number;
                    public static TextAppearance_Material_Widget_Calendar_Day: number;
                    public static TextAppearance_Material_Widget_Calendar_DayOfWeek: number;
                    public static TextAppearance_Material_Widget_Calendar_Month: number;
                    public static TextAppearance_Material_Widget_DropDownHint: number;
                    public static TextAppearance_Material_Widget_DropDownItem: number;
                    public static TextAppearance_Material_Widget_EditText: number;
                    public static TextAppearance_Material_Widget_IconMenu_Item: number;
                    public static TextAppearance_Material_Widget_PopupMenu: number;
                    public static TextAppearance_Material_Widget_PopupMenu_Large: number;
                    public static TextAppearance_Material_Widget_PopupMenu_Small: number;
                    public static TextAppearance_Material_Widget_TabWidget: number;
                    public static TextAppearance_Material_Widget_TextView: number;
                    public static TextAppearance_Material_Widget_TextView_PopupMenu: number;
                    public static TextAppearance_Material_Widget_TextView_SpinnerItem: number;
                    public static TextAppearance_Material_Widget_Toolbar_Subtitle: number;
                    public static TextAppearance_Material_Widget_Toolbar_Title: number;
                    public static TextAppearance_Material_WindowTitle: number;
                    public static TextAppearance_Medium: number;
                    public static TextAppearance_Medium_Inverse: number;
                    public static TextAppearance_SearchResult_Subtitle: number;
                    public static TextAppearance_SearchResult_Title: number;
                    public static TextAppearance_SlidingTabActive: number;
                    public static TextAppearance_SlidingTabNormal: number;
                    public static TextAppearance_Small: number;
                    public static TextAppearance_Small_Inverse: number;
                    public static TextAppearance_StatusBar_EventContent: number;
                    public static TextAppearance_StatusBar_EventContent_Title: number;
                    public static TextAppearance_StatusBar_Icon: number;
                    public static TextAppearance_StatusBar_Title: number;
                    public static TextAppearance_SuggestionHighlight: number;
                    public static TextAppearance_Theme: number;
                    public static TextAppearance_Theme_Dialog: number;
                    public static TextAppearance_Widget: number;
                    public static TextAppearance_Widget_Button: number;
                    public static TextAppearance_Widget_DropDownHint: number;
                    public static TextAppearance_Widget_DropDownItem: number;
                    public static TextAppearance_Widget_EditText: number;
                    public static TextAppearance_Widget_IconMenu_Item: number;
                    public static TextAppearance_Widget_PopupMenu_Large: number;
                    public static TextAppearance_Widget_PopupMenu_Small: number;
                    public static TextAppearance_Widget_TabWidget: number;
                    public static TextAppearance_Widget_TextView: number;
                    public static TextAppearance_Widget_TextView_PopupMenu: number;
                    public static TextAppearance_Widget_TextView_SpinnerItem: number;
                    public static TextAppearance_WindowTitle: number;
                    public static Theme: number;
                    public static ThemeOverlay: number;
                    public static ThemeOverlay_Material: number;
                    public static ThemeOverlay_Material_ActionBar: number;
                    public static ThemeOverlay_Material_Dark: number;
                    public static ThemeOverlay_Material_Dark_ActionBar: number;
                    public static ThemeOverlay_Material_Dialog: number;
                    public static ThemeOverlay_Material_Dialog_Alert: number;
                    public static ThemeOverlay_Material_Light: number;
                    public static Theme_Black: number;
                    public static Theme_Black_NoTitleBar: number;
                    public static Theme_Black_NoTitleBar_Fullscreen: number;
                    public static Theme_DeviceDefault: number;
                    public static Theme_DeviceDefault_Dialog: number;
                    public static Theme_DeviceDefault_DialogWhenLarge: number;
                    public static Theme_DeviceDefault_DialogWhenLarge_NoActionBar: number;
                    public static Theme_DeviceDefault_Dialog_Alert: number;
                    public static Theme_DeviceDefault_Dialog_MinWidth: number;
                    public static Theme_DeviceDefault_Dialog_NoActionBar: number;
                    public static Theme_DeviceDefault_Dialog_NoActionBar_MinWidth: number;
                    public static Theme_DeviceDefault_Dialog_NoFrame: number;
                    public static Theme_DeviceDefault_InputMethod: number;
                    public static Theme_DeviceDefault_Light: number;
                    public static Theme_DeviceDefault_Light_DarkActionBar: number;
                    public static Theme_DeviceDefault_Light_Dialog: number;
                    public static Theme_DeviceDefault_Light_DialogWhenLarge: number;
                    public static Theme_DeviceDefault_Light_DialogWhenLarge_NoActionBar: number;
                    public static Theme_DeviceDefault_Light_Dialog_Alert: number;
                    public static Theme_DeviceDefault_Light_Dialog_MinWidth: number;
                    public static Theme_DeviceDefault_Light_Dialog_NoActionBar: number;
                    public static Theme_DeviceDefault_Light_Dialog_NoActionBar_MinWidth: number;
                    public static Theme_DeviceDefault_Light_NoActionBar: number;
                    public static Theme_DeviceDefault_Light_NoActionBar_Fullscreen: number;
                    public static Theme_DeviceDefault_Light_NoActionBar_Overscan: number;
                    public static Theme_DeviceDefault_Light_NoActionBar_TranslucentDecor: number;
                    public static Theme_DeviceDefault_Light_Panel: number;
                    public static Theme_DeviceDefault_NoActionBar: number;
                    public static Theme_DeviceDefault_NoActionBar_Fullscreen: number;
                    public static Theme_DeviceDefault_NoActionBar_Overscan: number;
                    public static Theme_DeviceDefault_NoActionBar_TranslucentDecor: number;
                    public static Theme_DeviceDefault_Panel: number;
                    public static Theme_DeviceDefault_QuickSettings: number;
                    public static Theme_DeviceDefault_Resolver: number;
                    public static Theme_DeviceDefault_Settings: number;
                    public static Theme_DeviceDefault_System: number;
                    public static Theme_DeviceDefault_VoiceInteractionSession: number;
                    public static Theme_DeviceDefault_Wallpaper: number;
                    public static Theme_DeviceDefault_Wallpaper_NoTitleBar: number;
                    public static Theme_Dialog: number;
                    public static Theme_Dialog_Alert: number;
                    public static Theme_Dialog_AppError: number;
                    public static Theme_Dialog_RecentApplications: number;
                    public static Theme_ExpandedMenu: number;
                    public static Theme_Holo: number;
                    public static Theme_Holo_Dialog: number;
                    public static Theme_Holo_DialogWhenLarge: number;
                    public static Theme_Holo_DialogWhenLarge_NoActionBar: number;
                    public static Theme_Holo_Dialog_Alert: number;
                    public static Theme_Holo_Dialog_MinWidth: number;
                    public static Theme_Holo_Dialog_NoActionBar: number;
                    public static Theme_Holo_Dialog_NoActionBar_MinWidth: number;
                    public static Theme_Holo_InputMethod: number;
                    public static Theme_Holo_Light: number;
                    public static Theme_Holo_Light_DarkActionBar: number;
                    public static Theme_Holo_Light_Dialog: number;
                    public static Theme_Holo_Light_DialogWhenLarge: number;
                    public static Theme_Holo_Light_DialogWhenLarge_NoActionBar: number;
                    public static Theme_Holo_Light_Dialog_Alert: number;
                    public static Theme_Holo_Light_Dialog_MinWidth: number;
                    public static Theme_Holo_Light_Dialog_NoActionBar: number;
                    public static Theme_Holo_Light_Dialog_NoActionBar_MinWidth: number;
                    public static Theme_Holo_Light_NoActionBar: number;
                    public static Theme_Holo_Light_NoActionBar_Fullscreen: number;
                    public static Theme_Holo_Light_NoActionBar_Overscan: number;
                    public static Theme_Holo_Light_NoActionBar_TranslucentDecor: number;
                    public static Theme_Holo_Light_Panel: number;
                    public static Theme_Holo_NoActionBar: number;
                    public static Theme_Holo_NoActionBar_Fullscreen: number;
                    public static Theme_Holo_NoActionBar_Overscan: number;
                    public static Theme_Holo_NoActionBar_TranslucentDecor: number;
                    public static Theme_Holo_Panel: number;
                    public static Theme_Holo_Wallpaper: number;
                    public static Theme_Holo_Wallpaper_NoTitleBar: number;
                    public static Theme_IconMenu: number;
                    public static Theme_InputMethod: number;
                    public static Theme_Leanback_Dialog_Alert: number;
                    public static Theme_Leanback_FormWizard: number;
                    public static Theme_Light: number;
                    public static Theme_Light_NoTitleBar: number;
                    public static Theme_Light_NoTitleBar_Fullscreen: number;
                    public static Theme_Light_Panel: number;
                    public static Theme_Light_WallpaperSettings: number;
                    public static Theme_Material: number;
                    public static Theme_Material_Dialog: number;
                    public static Theme_Material_DialogWhenLarge: number;
                    public static Theme_Material_DialogWhenLarge_NoActionBar: number;
                    public static Theme_Material_Dialog_Alert: number;
                    public static Theme_Material_Dialog_MinWidth: number;
                    public static Theme_Material_Dialog_NoActionBar: number;
                    public static Theme_Material_Dialog_NoActionBar_MinWidth: number;
                    public static Theme_Material_Dialog_Presentation: number;
                    public static Theme_Material_InputMethod: number;
                    public static Theme_Material_Light: number;
                    public static Theme_Material_Light_DarkActionBar: number;
                    public static Theme_Material_Light_Dialog: number;
                    public static Theme_Material_Light_DialogWhenLarge: number;
                    public static Theme_Material_Light_DialogWhenLarge_DarkActionBar: number;
                    public static Theme_Material_Light_DialogWhenLarge_NoActionBar: number;
                    public static Theme_Material_Light_Dialog_Alert: number;
                    public static Theme_Material_Light_Dialog_MinWidth: number;
                    public static Theme_Material_Light_Dialog_NoActionBar: number;
                    public static Theme_Material_Light_Dialog_NoActionBar_MinWidth: number;
                    public static Theme_Material_Light_Dialog_Presentation: number;
                    public static Theme_Material_Light_LightStatusBar: number;
                    public static Theme_Material_Light_NoActionBar: number;
                    public static Theme_Material_Light_NoActionBar_Fullscreen: number;
                    public static Theme_Material_Light_NoActionBar_Overscan: number;
                    public static Theme_Material_Light_NoActionBar_TranslucentDecor: number;
                    public static Theme_Material_Light_Panel: number;
                    public static Theme_Material_Light_Voice: number;
                    public static Theme_Material_NoActionBar: number;
                    public static Theme_Material_NoActionBar_Fullscreen: number;
                    public static Theme_Material_NoActionBar_Overscan: number;
                    public static Theme_Material_NoActionBar_TranslucentDecor: number;
                    public static Theme_Material_Panel: number;
                    public static Theme_Material_Settings: number;
                    public static Theme_Material_Voice: number;
                    public static Theme_Material_Wallpaper: number;
                    public static Theme_Material_Wallpaper_NoTitleBar: number;
                    public static Theme_NoDisplay: number;
                    public static Theme_NoTitleBar: number;
                    public static Theme_NoTitleBar_Fullscreen: number;
                    public static Theme_NoTitleBar_OverlayActionModes: number;
                    public static Theme_Panel: number;
                    public static Theme_Toast: number;
                    public static Theme_Translucent: number;
                    public static Theme_Translucent_NoTitleBar: number;
                    public static Theme_Translucent_NoTitleBar_Fullscreen: number;
                    public static Theme_Wallpaper: number;
                    public static Theme_WallpaperSettings: number;
                    public static Theme_Wallpaper_NoTitleBar: number;
                    public static Theme_Wallpaper_NoTitleBar_Fullscreen: number;
                    public static Theme_WithActionBar: number;
                    public static Widget: number;
                    public static Widget_AbsListView: number;
                    public static Widget_ActionBar: number;
                    public static Widget_ActionBar_TabBar: number;
                    public static Widget_ActionBar_TabText: number;
                    public static Widget_ActionBar_TabView: number;
                    public static Widget_ActionButton: number;
                    public static Widget_ActionButton_CloseMode: number;
                    public static Widget_ActionButton_Overflow: number;
                    public static Widget_AutoCompleteTextView: number;
                    public static Widget_Button: number;
                    public static Widget_Button_Inset: number;
                    public static Widget_Button_Small: number;
                    public static Widget_Button_Toggle: number;
                    public static Widget_CalendarView: number;
                    public static Widget_CompoundButton: number;
                    public static Widget_CompoundButton_CheckBox: number;
                    public static Widget_CompoundButton_RadioButton: number;
                    public static Widget_CompoundButton_Star: number;
                    public static Widget_DatePicker: number;
                    public static Widget_DeviceDefault: number;
                    public static Widget_DeviceDefault_ActionBar: number;
                    public static Widget_DeviceDefault_ActionBar_Solid: number;
                    public static Widget_DeviceDefault_ActionBar_TabBar: number;
                    public static Widget_DeviceDefault_ActionBar_TabText: number;
                    public static Widget_DeviceDefault_ActionBar_TabView: number;
                    public static Widget_DeviceDefault_ActionButton: number;
                    public static Widget_DeviceDefault_ActionButton_CloseMode: number;
                    public static Widget_DeviceDefault_ActionButton_Overflow: number;
                    public static Widget_DeviceDefault_ActionButton_TextButton: number;
                    public static Widget_DeviceDefault_ActionMode: number;
                    public static Widget_DeviceDefault_AutoCompleteTextView: number;
                    public static Widget_DeviceDefault_Button: number;
                    public static Widget_DeviceDefault_Button_Borderless: number;
                    public static Widget_DeviceDefault_Button_Borderless_Small: number;
                    public static Widget_DeviceDefault_Button_Inset: number;
                    public static Widget_DeviceDefault_Button_Small: number;
                    public static Widget_DeviceDefault_Button_Toggle: number;
                    public static Widget_DeviceDefault_CalendarView: number;
                    public static Widget_DeviceDefault_CheckedTextView: number;
                    public static Widget_DeviceDefault_CompoundButton_CheckBox: number;
                    public static Widget_DeviceDefault_CompoundButton_RadioButton: number;
                    public static Widget_DeviceDefault_CompoundButton_Star: number;
                    public static Widget_DeviceDefault_DatePicker: number;
                    public static Widget_DeviceDefault_DropDownItem: number;
                    public static Widget_DeviceDefault_DropDownItem_Spinner: number;
                    public static Widget_DeviceDefault_EditText: number;
                    public static Widget_DeviceDefault_ExpandableListView: number;
                    public static Widget_DeviceDefault_FastScroll: number;
                    public static Widget_DeviceDefault_GridView: number;
                    public static Widget_DeviceDefault_HorizontalScrollView: number;
                    public static Widget_DeviceDefault_ImageButton: number;
                    public static Widget_DeviceDefault_Light: number;
                    public static Widget_DeviceDefault_Light_ActionBar: number;
                    public static Widget_DeviceDefault_Light_ActionBar_Solid: number;
                    public static Widget_DeviceDefault_Light_ActionBar_Solid_Inverse: number;
                    public static Widget_DeviceDefault_Light_ActionBar_TabBar: number;
                    public static Widget_DeviceDefault_Light_ActionBar_TabBar_Inverse: number;
                    public static Widget_DeviceDefault_Light_ActionBar_TabText: number;
                    public static Widget_DeviceDefault_Light_ActionBar_TabText_Inverse: number;
                    public static Widget_DeviceDefault_Light_ActionBar_TabView: number;
                    public static Widget_DeviceDefault_Light_ActionBar_TabView_Inverse: number;
                    public static Widget_DeviceDefault_Light_ActionButton: number;
                    public static Widget_DeviceDefault_Light_ActionButton_CloseMode: number;
                    public static Widget_DeviceDefault_Light_ActionButton_Overflow: number;
                    public static Widget_DeviceDefault_Light_ActionMode: number;
                    public static Widget_DeviceDefault_Light_ActionMode_Inverse: number;
                    public static Widget_DeviceDefault_Light_AutoCompleteTextView: number;
                    public static Widget_DeviceDefault_Light_Button: number;
                    public static Widget_DeviceDefault_Light_Button_Borderless_Small: number;
                    public static Widget_DeviceDefault_Light_Button_Inset: number;
                    public static Widget_DeviceDefault_Light_Button_Small: number;
                    public static Widget_DeviceDefault_Light_Button_Toggle: number;
                    public static Widget_DeviceDefault_Light_CalendarView: number;
                    public static Widget_DeviceDefault_Light_CheckedTextView: number;
                    public static Widget_DeviceDefault_Light_CompoundButton_CheckBox: number;
                    public static Widget_DeviceDefault_Light_CompoundButton_RadioButton: number;
                    public static Widget_DeviceDefault_Light_CompoundButton_Star: number;
                    public static Widget_DeviceDefault_Light_DropDownItem: number;
                    public static Widget_DeviceDefault_Light_DropDownItem_Spinner: number;
                    public static Widget_DeviceDefault_Light_EditText: number;
                    public static Widget_DeviceDefault_Light_ExpandableListView: number;
                    public static Widget_DeviceDefault_Light_FastScroll: number;
                    public static Widget_DeviceDefault_Light_GridView: number;
                    public static Widget_DeviceDefault_Light_HorizontalScrollView: number;
                    public static Widget_DeviceDefault_Light_ImageButton: number;
                    public static Widget_DeviceDefault_Light_ListPopupWindow: number;
                    public static Widget_DeviceDefault_Light_ListView: number;
                    public static Widget_DeviceDefault_Light_ListView_DropDown: number;
                    public static Widget_DeviceDefault_Light_MediaRouteButton: number;
                    public static Widget_DeviceDefault_Light_PopupMenu: number;
                    public static Widget_DeviceDefault_Light_PopupWindow: number;
                    public static Widget_DeviceDefault_Light_ProgressBar: number;
                    public static Widget_DeviceDefault_Light_ProgressBar_Horizontal: number;
                    public static Widget_DeviceDefault_Light_ProgressBar_Inverse: number;
                    public static Widget_DeviceDefault_Light_ProgressBar_Large: number;
                    public static Widget_DeviceDefault_Light_ProgressBar_Large_Inverse: number;
                    public static Widget_DeviceDefault_Light_ProgressBar_Small: number;
                    public static Widget_DeviceDefault_Light_ProgressBar_Small_Inverse: number;
                    public static Widget_DeviceDefault_Light_ProgressBar_Small_Title: number;
                    public static Widget_DeviceDefault_Light_RatingBar: number;
                    public static Widget_DeviceDefault_Light_RatingBar_Indicator: number;
                    public static Widget_DeviceDefault_Light_RatingBar_Small: number;
                    public static Widget_DeviceDefault_Light_ScrollView: number;
                    public static Widget_DeviceDefault_Light_SeekBar: number;
                    public static Widget_DeviceDefault_Light_Spinner: number;
                    public static Widget_DeviceDefault_Light_StackView: number;
                    public static Widget_DeviceDefault_Light_Tab: number;
                    public static Widget_DeviceDefault_Light_TabWidget: number;
                    public static Widget_DeviceDefault_Light_TextView: number;
                    public static Widget_DeviceDefault_Light_TextView_SpinnerItem: number;
                    public static Widget_DeviceDefault_Light_WebTextView: number;
                    public static Widget_DeviceDefault_Light_WebView: number;
                    public static Widget_DeviceDefault_ListPopupWindow: number;
                    public static Widget_DeviceDefault_ListView: number;
                    public static Widget_DeviceDefault_ListView_DropDown: number;
                    public static Widget_DeviceDefault_MediaRouteButton: number;
                    public static Widget_DeviceDefault_PopupMenu: number;
                    public static Widget_DeviceDefault_PopupWindow: number;
                    public static Widget_DeviceDefault_ProgressBar: number;
                    public static Widget_DeviceDefault_ProgressBar_Horizontal: number;
                    public static Widget_DeviceDefault_ProgressBar_Large: number;
                    public static Widget_DeviceDefault_ProgressBar_Small: number;
                    public static Widget_DeviceDefault_ProgressBar_Small_Title: number;
                    public static Widget_DeviceDefault_RatingBar: number;
                    public static Widget_DeviceDefault_RatingBar_Indicator: number;
                    public static Widget_DeviceDefault_RatingBar_Small: number;
                    public static Widget_DeviceDefault_ScrollView: number;
                    public static Widget_DeviceDefault_SeekBar: number;
                    public static Widget_DeviceDefault_Spinner: number;
                    public static Widget_DeviceDefault_StackView: number;
                    public static Widget_DeviceDefault_Tab: number;
                    public static Widget_DeviceDefault_TabWidget: number;
                    public static Widget_DeviceDefault_TextView: number;
                    public static Widget_DeviceDefault_TextView_SpinnerItem: number;
                    public static Widget_DeviceDefault_WebTextView: number;
                    public static Widget_DeviceDefault_WebView: number;
                    public static Widget_DropDownItem: number;
                    public static Widget_DropDownItem_Spinner: number;
                    public static Widget_EditText: number;
                    public static Widget_ExpandableListView: number;
                    public static Widget_FastScroll: number;
                    public static Widget_FragmentBreadCrumbs: number;
                    public static Widget_Gallery: number;
                    public static Widget_GridView: number;
                    public static Widget_Holo: number;
                    public static Widget_Holo_ActionBar: number;
                    public static Widget_Holo_ActionBar_Solid: number;
                    public static Widget_Holo_ActionBar_TabBar: number;
                    public static Widget_Holo_ActionBar_TabText: number;
                    public static Widget_Holo_ActionBar_TabView: number;
                    public static Widget_Holo_ActionButton: number;
                    public static Widget_Holo_ActionButton_CloseMode: number;
                    public static Widget_Holo_ActionButton_Overflow: number;
                    public static Widget_Holo_ActionButton_TextButton: number;
                    public static Widget_Holo_ActionMode: number;
                    public static Widget_Holo_AutoCompleteTextView: number;
                    public static Widget_Holo_Button: number;
                    public static Widget_Holo_Button_Borderless: number;
                    public static Widget_Holo_Button_Borderless_Small: number;
                    public static Widget_Holo_Button_Inset: number;
                    public static Widget_Holo_Button_Small: number;
                    public static Widget_Holo_Button_Toggle: number;
                    public static Widget_Holo_CalendarView: number;
                    public static Widget_Holo_CheckedTextView: number;
                    public static Widget_Holo_CompoundButton_CheckBox: number;
                    public static Widget_Holo_CompoundButton_RadioButton: number;
                    public static Widget_Holo_CompoundButton_Star: number;
                    public static Widget_Holo_DatePicker: number;
                    public static Widget_Holo_DropDownItem: number;
                    public static Widget_Holo_DropDownItem_Spinner: number;
                    public static Widget_Holo_EditText: number;
                    public static Widget_Holo_ExpandableListView: number;
                    public static Widget_Holo_GridView: number;
                    public static Widget_Holo_HorizontalScrollView: number;
                    public static Widget_Holo_ImageButton: number;
                    public static Widget_Holo_Light: number;
                    public static Widget_Holo_Light_ActionBar: number;
                    public static Widget_Holo_Light_ActionBar_Solid: number;
                    public static Widget_Holo_Light_ActionBar_Solid_Inverse: number;
                    public static Widget_Holo_Light_ActionBar_TabBar: number;
                    public static Widget_Holo_Light_ActionBar_TabBar_Inverse: number;
                    public static Widget_Holo_Light_ActionBar_TabText: number;
                    public static Widget_Holo_Light_ActionBar_TabText_Inverse: number;
                    public static Widget_Holo_Light_ActionBar_TabView: number;
                    public static Widget_Holo_Light_ActionBar_TabView_Inverse: number;
                    public static Widget_Holo_Light_ActionButton: number;
                    public static Widget_Holo_Light_ActionButton_CloseMode: number;
                    public static Widget_Holo_Light_ActionButton_Overflow: number;
                    public static Widget_Holo_Light_ActionMode: number;
                    public static Widget_Holo_Light_ActionMode_Inverse: number;
                    public static Widget_Holo_Light_AutoCompleteTextView: number;
                    public static Widget_Holo_Light_Button: number;
                    public static Widget_Holo_Light_Button_Borderless_Small: number;
                    public static Widget_Holo_Light_Button_Inset: number;
                    public static Widget_Holo_Light_Button_Small: number;
                    public static Widget_Holo_Light_Button_Toggle: number;
                    public static Widget_Holo_Light_CalendarView: number;
                    public static Widget_Holo_Light_CheckedTextView: number;
                    public static Widget_Holo_Light_CompoundButton_CheckBox: number;
                    public static Widget_Holo_Light_CompoundButton_RadioButton: number;
                    public static Widget_Holo_Light_CompoundButton_Star: number;
                    public static Widget_Holo_Light_DropDownItem: number;
                    public static Widget_Holo_Light_DropDownItem_Spinner: number;
                    public static Widget_Holo_Light_EditText: number;
                    public static Widget_Holo_Light_ExpandableListView: number;
                    public static Widget_Holo_Light_GridView: number;
                    public static Widget_Holo_Light_HorizontalScrollView: number;
                    public static Widget_Holo_Light_ImageButton: number;
                    public static Widget_Holo_Light_ListPopupWindow: number;
                    public static Widget_Holo_Light_ListView: number;
                    public static Widget_Holo_Light_ListView_DropDown: number;
                    public static Widget_Holo_Light_MediaRouteButton: number;
                    public static Widget_Holo_Light_PopupMenu: number;
                    public static Widget_Holo_Light_PopupWindow: number;
                    public static Widget_Holo_Light_ProgressBar: number;
                    public static Widget_Holo_Light_ProgressBar_Horizontal: number;
                    public static Widget_Holo_Light_ProgressBar_Inverse: number;
                    public static Widget_Holo_Light_ProgressBar_Large: number;
                    public static Widget_Holo_Light_ProgressBar_Large_Inverse: number;
                    public static Widget_Holo_Light_ProgressBar_Small: number;
                    public static Widget_Holo_Light_ProgressBar_Small_Inverse: number;
                    public static Widget_Holo_Light_ProgressBar_Small_Title: number;
                    public static Widget_Holo_Light_RatingBar: number;
                    public static Widget_Holo_Light_RatingBar_Indicator: number;
                    public static Widget_Holo_Light_RatingBar_Small: number;
                    public static Widget_Holo_Light_ScrollView: number;
                    public static Widget_Holo_Light_SeekBar: number;
                    public static Widget_Holo_Light_Spinner: number;
                    public static Widget_Holo_Light_Tab: number;
                    public static Widget_Holo_Light_TabWidget: number;
                    public static Widget_Holo_Light_TextView: number;
                    public static Widget_Holo_Light_TextView_SpinnerItem: number;
                    public static Widget_Holo_Light_WebTextView: number;
                    public static Widget_Holo_Light_WebView: number;
                    public static Widget_Holo_ListPopupWindow: number;
                    public static Widget_Holo_ListView: number;
                    public static Widget_Holo_ListView_DropDown: number;
                    public static Widget_Holo_MediaRouteButton: number;
                    public static Widget_Holo_PopupMenu: number;
                    public static Widget_Holo_PopupWindow: number;
                    public static Widget_Holo_ProgressBar: number;
                    public static Widget_Holo_ProgressBar_Horizontal: number;
                    public static Widget_Holo_ProgressBar_Large: number;
                    public static Widget_Holo_ProgressBar_Small: number;
                    public static Widget_Holo_ProgressBar_Small_Title: number;
                    public static Widget_Holo_RatingBar: number;
                    public static Widget_Holo_RatingBar_Indicator: number;
                    public static Widget_Holo_RatingBar_Small: number;
                    public static Widget_Holo_ScrollView: number;
                    public static Widget_Holo_SeekBar: number;
                    public static Widget_Holo_Spinner: number;
                    public static Widget_Holo_Tab: number;
                    public static Widget_Holo_TabWidget: number;
                    public static Widget_Holo_TextView: number;
                    public static Widget_Holo_TextView_SpinnerItem: number;
                    public static Widget_Holo_WebTextView: number;
                    public static Widget_Holo_WebView: number;
                    public static Widget_ImageButton: number;
                    public static Widget_ImageWell: number;
                    public static Widget_KeyboardView: number;
                    public static Widget_ListPopupWindow: number;
                    public static Widget_ListView: number;
                    public static Widget_ListView_DropDown: number;
                    public static Widget_ListView_Menu: number;
                    public static Widget_ListView_White: number;
                    public static Widget_LockPatternView: number;
                    public static Widget_Material: number;
                    public static Widget_Material_ActionBar: number;
                    public static Widget_Material_ActionBar_Solid: number;
                    public static Widget_Material_ActionBar_TabBar: number;
                    public static Widget_Material_ActionBar_TabText: number;
                    public static Widget_Material_ActionBar_TabView: number;
                    public static Widget_Material_ActionButton: number;
                    public static Widget_Material_ActionButton_CloseMode: number;
                    public static Widget_Material_ActionButton_Overflow: number;
                    public static Widget_Material_ActionMode: number;
                    public static Widget_Material_AutoCompleteTextView: number;
                    public static Widget_Material_Button: number;
                    public static Widget_Material_ButtonBar: number;
                    public static Widget_Material_ButtonBar_AlertDialog: number;
                    public static Widget_Material_Button_Borderless: number;
                    public static Widget_Material_Button_Borderless_Colored: number;
                    public static Widget_Material_Button_Borderless_Small: number;
                    public static Widget_Material_Button_Colored: number;
                    public static Widget_Material_Button_Inset: number;
                    public static Widget_Material_Button_Small: number;
                    public static Widget_Material_Button_Toggle: number;
                    public static Widget_Material_CalendarView: number;
                    public static Widget_Material_CheckedTextView: number;
                    public static Widget_Material_CompoundButton_CheckBox: number;
                    public static Widget_Material_CompoundButton_RadioButton: number;
                    public static Widget_Material_CompoundButton_Star: number;
                    public static Widget_Material_CompoundButton_Switch: number;
                    public static Widget_Material_DatePicker: number;
                    public static Widget_Material_DropDownItem: number;
                    public static Widget_Material_DropDownItem_Spinner: number;
                    public static Widget_Material_EditText: number;
                    public static Widget_Material_ExpandableListView: number;
                    public static Widget_Material_FastScroll: number;
                    public static Widget_Material_GridView: number;
                    public static Widget_Material_HorizontalScrollView: number;
                    public static Widget_Material_ImageButton: number;
                    public static Widget_Material_Light: number;
                    public static Widget_Material_Light_ActionBar: number;
                    public static Widget_Material_Light_ActionBar_Solid: number;
                    public static Widget_Material_Light_ActionBar_TabBar: number;
                    public static Widget_Material_Light_ActionBar_TabText: number;
                    public static Widget_Material_Light_ActionBar_TabView: number;
                    public static Widget_Material_Light_ActionButton: number;
                    public static Widget_Material_Light_ActionButton_CloseMode: number;
                    public static Widget_Material_Light_ActionButton_Overflow: number;
                    public static Widget_Material_Light_ActionMode: number;
                    public static Widget_Material_Light_AutoCompleteTextView: number;
                    public static Widget_Material_Light_Button: number;
                    public static Widget_Material_Light_ButtonBar: number;
                    public static Widget_Material_Light_ButtonBar_AlertDialog: number;
                    public static Widget_Material_Light_Button_Borderless: number;
                    public static Widget_Material_Light_Button_Borderless_Colored: number;
                    public static Widget_Material_Light_Button_Borderless_Small: number;
                    public static Widget_Material_Light_Button_Inset: number;
                    public static Widget_Material_Light_Button_Small: number;
                    public static Widget_Material_Light_Button_Toggle: number;
                    public static Widget_Material_Light_CalendarView: number;
                    public static Widget_Material_Light_CheckedTextView: number;
                    public static Widget_Material_Light_CompoundButton_CheckBox: number;
                    public static Widget_Material_Light_CompoundButton_RadioButton: number;
                    public static Widget_Material_Light_CompoundButton_Star: number;
                    public static Widget_Material_Light_CompoundButton_Switch: number;
                    public static Widget_Material_Light_DatePicker: number;
                    public static Widget_Material_Light_DropDownItem: number;
                    public static Widget_Material_Light_DropDownItem_Spinner: number;
                    public static Widget_Material_Light_EditText: number;
                    public static Widget_Material_Light_ExpandableListView: number;
                    public static Widget_Material_Light_FastScroll: number;
                    public static Widget_Material_Light_GridView: number;
                    public static Widget_Material_Light_HorizontalScrollView: number;
                    public static Widget_Material_Light_ImageButton: number;
                    public static Widget_Material_Light_ListPopupWindow: number;
                    public static Widget_Material_Light_ListView: number;
                    public static Widget_Material_Light_ListView_DropDown: number;
                    public static Widget_Material_Light_MediaRouteButton: number;
                    public static Widget_Material_Light_NumberPicker: number;
                    public static Widget_Material_Light_PopupMenu: number;
                    public static Widget_Material_Light_PopupMenu_Overflow: number;
                    public static Widget_Material_Light_PopupWindow: number;
                    public static Widget_Material_Light_ProgressBar: number;
                    public static Widget_Material_Light_ProgressBar_Horizontal: number;
                    public static Widget_Material_Light_ProgressBar_Inverse: number;
                    public static Widget_Material_Light_ProgressBar_Large: number;
                    public static Widget_Material_Light_ProgressBar_Large_Inverse: number;
                    public static Widget_Material_Light_ProgressBar_Small: number;
                    public static Widget_Material_Light_ProgressBar_Small_Inverse: number;
                    public static Widget_Material_Light_ProgressBar_Small_Title: number;
                    public static Widget_Material_Light_RatingBar: number;
                    public static Widget_Material_Light_RatingBar_Indicator: number;
                    public static Widget_Material_Light_RatingBar_Small: number;
                    public static Widget_Material_Light_ScrollView: number;
                    public static Widget_Material_Light_SearchView: number;
                    public static Widget_Material_Light_SeekBar: number;
                    public static Widget_Material_Light_SegmentedButton: number;
                    public static Widget_Material_Light_Spinner: number;
                    public static Widget_Material_Light_Spinner_Underlined: number;
                    public static Widget_Material_Light_StackView: number;
                    public static Widget_Material_Light_Tab: number;
                    public static Widget_Material_Light_TabWidget: number;
                    public static Widget_Material_Light_TextView: number;
                    public static Widget_Material_Light_TextView_SpinnerItem: number;
                    public static Widget_Material_Light_TimePicker: number;
                    public static Widget_Material_Light_WebTextView: number;
                    public static Widget_Material_Light_WebView: number;
                    public static Widget_Material_ListPopupWindow: number;
                    public static Widget_Material_ListView: number;
                    public static Widget_Material_ListView_DropDown: number;
                    public static Widget_Material_MediaRouteButton: number;
                    public static Widget_Material_NumberPicker: number;
                    public static Widget_Material_PopupMenu: number;
                    public static Widget_Material_PopupMenu_Overflow: number;
                    public static Widget_Material_PopupWindow: number;
                    public static Widget_Material_ProgressBar: number;
                    public static Widget_Material_ProgressBar_Horizontal: number;
                    public static Widget_Material_ProgressBar_Large: number;
                    public static Widget_Material_ProgressBar_Small: number;
                    public static Widget_Material_ProgressBar_Small_Title: number;
                    public static Widget_Material_RatingBar: number;
                    public static Widget_Material_RatingBar_Indicator: number;
                    public static Widget_Material_RatingBar_Small: number;
                    public static Widget_Material_ScrollView: number;
                    public static Widget_Material_SearchView: number;
                    public static Widget_Material_SeekBar: number;
                    public static Widget_Material_SeekBar_Discrete: number;
                    public static Widget_Material_SegmentedButton: number;
                    public static Widget_Material_Spinner: number;
                    public static Widget_Material_Spinner_Underlined: number;
                    public static Widget_Material_StackView: number;
                    public static Widget_Material_Tab: number;
                    public static Widget_Material_TabWidget: number;
                    public static Widget_Material_TextView: number;
                    public static Widget_Material_TextView_SpinnerItem: number;
                    public static Widget_Material_TimePicker: number;
                    public static Widget_Material_Toolbar: number;
                    public static Widget_Material_Toolbar_Button_Navigation: number;
                    public static Widget_Material_WebTextView: number;
                    public static Widget_Material_WebView: number;
                    public static Widget_PopupMenu: number;
                    public static Widget_PopupWindow: number;
                    public static Widget_ProgressBar: number;
                    public static Widget_ProgressBar_Horizontal: number;
                    public static Widget_ProgressBar_Inverse: number;
                    public static Widget_ProgressBar_Large: number;
                    public static Widget_ProgressBar_Large_Inverse: number;
                    public static Widget_ProgressBar_Small: number;
                    public static Widget_ProgressBar_Small_Inverse: number;
                    public static Widget_RatingBar: number;
                    public static Widget_ScrollView: number;
                    public static Widget_SeekBar: number;
                    public static Widget_Spinner: number;
                    public static Widget_Spinner_DropDown: number;
                    public static Widget_StackView: number;
                    public static Widget_TabWidget: number;
                    public static Widget_TextView: number;
                    public static Widget_TextView_PopupMenu: number;
                    public static Widget_TextView_SpinnerItem: number;
                    public static Widget_Toolbar: number;
                    public static Widget_Toolbar_Button_Navigation: number;
                    public static Widget_WebView: number;
                    public constructor();
                }
                export class styleable extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.R.styleable>;
                    public static AbsListView: number[];
                    public static AbsListView_cacheColorHint: number;
                    public static AbsListView_choiceMode: number;
                    public static AbsListView_drawSelectorOnTop: number;
                    public static AbsListView_fastScrollAlwaysVisible: number;
                    public static AbsListView_fastScrollEnabled: number;
                    public static AbsListView_fastScrollStyle: number;
                    public static AbsListView_listSelector: number;
                    public static AbsListView_scrollingCache: number;
                    public static AbsListView_smoothScrollbar: number;
                    public static AbsListView_stackFromBottom: number;
                    public static AbsListView_textFilterEnabled: number;
                    public static AbsListView_transcriptMode: number;
                    public static AbsSpinner: number[];
                    public static AbsSpinner_entries: number;
                    public static AbsoluteLayout_Layout: number[];
                    public static AbsoluteLayout_Layout_layout_x: number;
                    public static AbsoluteLayout_Layout_layout_y: number;
                    public static AccelerateInterpolator: number[];
                    public static AccelerateInterpolator_factor: number;
                    public static AccessibilityService: number[];
                    public static AccessibilityService_accessibilityEventTypes: number;
                    public static AccessibilityService_accessibilityFeedbackType: number;
                    public static AccessibilityService_accessibilityFlags: number;
                    public static AccessibilityService_canControlMagnification: number;
                    public static AccessibilityService_canPerformGestures: number;
                    public static AccessibilityService_canRequestEnhancedWebAccessibility: number;
                    public static AccessibilityService_canRequestFilterKeyEvents: number;
                    public static AccessibilityService_canRequestFingerprintGestures: number;
                    public static AccessibilityService_canRequestTouchExplorationMode: number;
                    public static AccessibilityService_canRetrieveWindowContent: number;
                    public static AccessibilityService_description: number;
                    public static AccessibilityService_notificationTimeout: number;
                    public static AccessibilityService_packageNames: number;
                    public static AccessibilityService_settingsActivity: number;
                    public static AccessibilityService_summary: number;
                    public static AccountAuthenticator: number[];
                    public static AccountAuthenticator_accountPreferences: number;
                    public static AccountAuthenticator_accountType: number;
                    public static AccountAuthenticator_customTokens: number;
                    public static AccountAuthenticator_icon: number;
                    public static AccountAuthenticator_label: number;
                    public static AccountAuthenticator_smallIcon: number;
                    public static ActionBar: number[];
                    public static ActionBar_LayoutParams: number[];
                    public static ActionBar_LayoutParams_layout_gravity: number;
                    public static ActionBar_background: number;
                    public static ActionBar_backgroundSplit: number;
                    public static ActionBar_backgroundStacked: number;
                    public static ActionBar_contentInsetEnd: number;
                    public static ActionBar_contentInsetEndWithActions: number;
                    public static ActionBar_contentInsetLeft: number;
                    public static ActionBar_contentInsetRight: number;
                    public static ActionBar_contentInsetStart: number;
                    public static ActionBar_contentInsetStartWithNavigation: number;
                    public static ActionBar_customNavigationLayout: number;
                    public static ActionBar_displayOptions: number;
                    public static ActionBar_divider: number;
                    public static ActionBar_elevation: number;
                    public static ActionBar_height: number;
                    public static ActionBar_hideOnContentScroll: number;
                    public static ActionBar_homeAsUpIndicator: number;
                    public static ActionBar_homeLayout: number;
                    public static ActionBar_icon: number;
                    public static ActionBar_indeterminateProgressStyle: number;
                    public static ActionBar_itemPadding: number;
                    public static ActionBar_logo: number;
                    public static ActionBar_navigationMode: number;
                    public static ActionBar_popupTheme: number;
                    public static ActionBar_progressBarPadding: number;
                    public static ActionBar_progressBarStyle: number;
                    public static ActionBar_subtitle: number;
                    public static ActionBar_subtitleTextStyle: number;
                    public static ActionBar_title: number;
                    public static ActionBar_titleTextStyle: number;
                    public static ActionMenuItemView: number[];
                    public static ActionMenuItemView_minWidth: number;
                    public static ActionMode: number[];
                    public static ActionMode_background: number;
                    public static ActionMode_backgroundSplit: number;
                    public static ActionMode_closeItemLayout: number;
                    public static ActionMode_height: number;
                    public static ActionMode_subtitleTextStyle: number;
                    public static ActionMode_titleTextStyle: number;
                    public static ActivityChooserView: number[];
                    public static ActivityChooserView_expandActivityOverflowButtonDrawable: number;
                    public static ActivityChooserView_initialActivityCount: number;
                    public static ActivityTaskDescription: number[];
                    public static ActivityTaskDescription_colorBackground: number;
                    public static ActivityTaskDescription_colorPrimary: number;
                    public static ActivityTaskDescription_navigationBarColor: number;
                    public static ActivityTaskDescription_statusBarColor: number;
                    public static AdapterViewAnimator: number[];
                    public static AdapterViewAnimator_animateFirstView: number;
                    public static AdapterViewAnimator_inAnimation: number;
                    public static AdapterViewAnimator_loopViews: number;
                    public static AdapterViewAnimator_outAnimation: number;
                    public static AdapterViewFlipper: number[];
                    public static AdapterViewFlipper_autoStart: number;
                    public static AdapterViewFlipper_flipInterval: number;
                    public static AdaptiveIconDrawableLayer: number[];
                    public static AdaptiveIconDrawableLayer_drawable: number;
                    public static AidFilter: number[];
                    public static AidFilter_name: number;
                    public static AidGroup: number[];
                    public static AidGroup_category: number;
                    public static AidGroup_description: number;
                    public static AidPrefixFilter: number[];
                    public static AidPrefixFilter_name: number;
                    public static AlertDialog: number[];
                    public static AlertDialog_bottomBright: number;
                    public static AlertDialog_bottomDark: number;
                    public static AlertDialog_bottomMedium: number;
                    public static AlertDialog_buttonPanelSideLayout: number;
                    public static AlertDialog_centerBright: number;
                    public static AlertDialog_centerDark: number;
                    public static AlertDialog_centerMedium: number;
                    public static AlertDialog_controllerType: number;
                    public static AlertDialog_fullBright: number;
                    public static AlertDialog_fullDark: number;
                    public static AlertDialog_horizontalProgressLayout: number;
                    public static AlertDialog_layout: number;
                    public static AlertDialog_listItemLayout: number;
                    public static AlertDialog_listLayout: number;
                    public static AlertDialog_multiChoiceItemLayout: number;
                    public static AlertDialog_needsDefaultBackgrounds: number;
                    public static AlertDialog_progressLayout: number;
                    public static AlertDialog_selectionScrollOffset: number;
                    public static AlertDialog_showTitle: number;
                    public static AlertDialog_singleChoiceItemLayout: number;
                    public static AlertDialog_topBright: number;
                    public static AlertDialog_topDark: number;
                    public static AlphaAnimation: number[];
                    public static AlphaAnimation_fromAlpha: number;
                    public static AlphaAnimation_toAlpha: number;
                    public static AnalogClock: number[];
                    public static AnalogClock_dial: number;
                    public static AnalogClock_hand_hour: number;
                    public static AnalogClock_hand_minute: number;
                    public static AndroidManifest: number[];
                    public static AndroidManifestAction: number[];
                    public static AndroidManifestAction_name: number;
                    public static AndroidManifestActivity: number[];
                    public static AndroidManifestActivityAlias: number[];
                    public static AndroidManifestActivityAlias_banner: number;
                    public static AndroidManifestActivityAlias_description: number;
                    public static AndroidManifestActivityAlias_enabled: number;
                    public static AndroidManifestActivityAlias_exported: number;
                    public static AndroidManifestActivityAlias_icon: number;
                    public static AndroidManifestActivityAlias_label: number;
                    public static AndroidManifestActivityAlias_logo: number;
                    public static AndroidManifestActivityAlias_name: number;
                    public static AndroidManifestActivityAlias_parentActivityName: number;
                    public static AndroidManifestActivityAlias_permission: number;
                    public static AndroidManifestActivityAlias_roundIcon: number;
                    public static AndroidManifestActivityAlias_targetActivity: number;
                    public static AndroidManifestActivity_allowEmbedded: number;
                    public static AndroidManifestActivity_allowTaskReparenting: number;
                    public static AndroidManifestActivity_alwaysFocusable: number;
                    public static AndroidManifestActivity_alwaysRetainTaskState: number;
                    public static AndroidManifestActivity_autoRemoveFromRecents: number;
                    public static AndroidManifestActivity_banner: number;
                    public static AndroidManifestActivity_clearTaskOnLaunch: number;
                    public static AndroidManifestActivity_colorMode: number;
                    public static AndroidManifestActivity_configChanges: number;
                    public static AndroidManifestActivity_description: number;
                    public static AndroidManifestActivity_directBootAware: number;
                    public static AndroidManifestActivity_documentLaunchMode: number;
                    public static AndroidManifestActivity_enableVrMode: number;
                    public static AndroidManifestActivity_enabled: number;
                    public static AndroidManifestActivity_excludeFromRecents: number;
                    public static AndroidManifestActivity_exported: number;
                    public static AndroidManifestActivity_finishOnCloseSystemDialogs: number;
                    public static AndroidManifestActivity_finishOnTaskLaunch: number;
                    public static AndroidManifestActivity_hardwareAccelerated: number;
                    public static AndroidManifestActivity_icon: number;
                    public static AndroidManifestActivity_immersive: number;
                    public static AndroidManifestActivity_label: number;
                    public static AndroidManifestActivity_launchMode: number;
                    public static AndroidManifestActivity_lockTaskMode: number;
                    public static AndroidManifestActivity_logo: number;
                    public static AndroidManifestActivity_maxAspectRatio: number;
                    public static AndroidManifestActivity_maxRecents: number;
                    public static AndroidManifestActivity_multiprocess: number;
                    public static AndroidManifestActivity_name: number;
                    public static AndroidManifestActivity_noHistory: number;
                    public static AndroidManifestActivity_parentActivityName: number;
                    public static AndroidManifestActivity_permission: number;
                    public static AndroidManifestActivity_persistableMode: number;
                    public static AndroidManifestActivity_process: number;
                    public static AndroidManifestActivity_recreateOnConfigChanges: number;
                    public static AndroidManifestActivity_relinquishTaskIdentity: number;
                    public static AndroidManifestActivity_resizeableActivity: number;
                    public static AndroidManifestActivity_resumeWhilePausing: number;
                    public static AndroidManifestActivity_rotationAnimation: number;
                    public static AndroidManifestActivity_roundIcon: number;
                    public static AndroidManifestActivity_screenOrientation: number;
                    public static AndroidManifestActivity_showForAllUsers: number;
                    public static AndroidManifestActivity_showOnLockScreen: number;
                    public static AndroidManifestActivity_singleUser: number;
                    public static AndroidManifestActivity_splitName: number;
                    public static AndroidManifestActivity_stateNotNeeded: number;
                    public static AndroidManifestActivity_supportsPictureInPicture: number;
                    public static AndroidManifestActivity_systemUserOnly: number;
                    public static AndroidManifestActivity_taskAffinity: number;
                    public static AndroidManifestActivity_theme: number;
                    public static AndroidManifestActivity_uiOptions: number;
                    public static AndroidManifestActivity_visibleToInstantApps: number;
                    public static AndroidManifestActivity_windowSoftInputMode: number;
                    public static AndroidManifestApplication: number[];
                    public static AndroidManifestApplication_allowBackup: number;
                    public static AndroidManifestApplication_allowClearUserData: number;
                    public static AndroidManifestApplication_allowTaskReparenting: number;
                    public static AndroidManifestApplication_appCategory: number;
                    public static AndroidManifestApplication_backupAgent: number;
                    public static AndroidManifestApplication_backupInForeground: number;
                    public static AndroidManifestApplication_banner: number;
                    public static AndroidManifestApplication_cantSaveState: number;
                    public static AndroidManifestApplication_debuggable: number;
                    public static AndroidManifestApplication_defaultToDeviceProtectedStorage: number;
                    public static AndroidManifestApplication_description: number;
                    public static AndroidManifestApplication_directBootAware: number;
                    public static AndroidManifestApplication_enabled: number;
                    public static AndroidManifestApplication_extractNativeLibs: number;
                    public static AndroidManifestApplication_fullBackupContent: number;
                    public static AndroidManifestApplication_fullBackupOnly: number;
                    public static AndroidManifestApplication_hardwareAccelerated: number;
                    public static AndroidManifestApplication_hasCode: number;
                    public static AndroidManifestApplication_icon: number;
                    public static AndroidManifestApplication_isGame: number;
                    public static AndroidManifestApplication_killAfterRestore: number;
                    public static AndroidManifestApplication_label: number;
                    public static AndroidManifestApplication_largeHeap: number;
                    public static AndroidManifestApplication_logo: number;
                    public static AndroidManifestApplication_manageSpaceActivity: number;
                    public static AndroidManifestApplication_maxAspectRatio: number;
                    public static AndroidManifestApplication_multiArch: number;
                    public static AndroidManifestApplication_name: number;
                    public static AndroidManifestApplication_networkSecurityConfig: number;
                    public static AndroidManifestApplication_permission: number;
                    public static AndroidManifestApplication_persistent: number;
                    public static AndroidManifestApplication_persistentWhenFeatureAvailable: number;
                    public static AndroidManifestApplication_process: number;
                    public static AndroidManifestApplication_requiredAccountType: number;
                    public static AndroidManifestApplication_requiredForAllUsers: number;
                    public static AndroidManifestApplication_resizeableActivity: number;
                    public static AndroidManifestApplication_restoreAnyVersion: number;
                    public static AndroidManifestApplication_restoreNeedsApplication: number;
                    public static AndroidManifestApplication_restrictedAccountType: number;
                    public static AndroidManifestApplication_roundIcon: number;
                    public static AndroidManifestApplication_supportsRtl: number;
                    public static AndroidManifestApplication_taskAffinity: number;
                    public static AndroidManifestApplication_testOnly: number;
                    public static AndroidManifestApplication_theme: number;
                    public static AndroidManifestApplication_uiOptions: number;
                    public static AndroidManifestApplication_usesCleartextTraffic: number;
                    public static AndroidManifestApplication_vmSafeMode: number;
                    public static AndroidManifestCategory: number[];
                    public static AndroidManifestCategory_name: number;
                    public static AndroidManifestCompatibleScreensScreen: number[];
                    public static AndroidManifestCompatibleScreensScreen_screenDensity: number;
                    public static AndroidManifestCompatibleScreensScreen_screenSize: number;
                    public static AndroidManifestData: number[];
                    public static AndroidManifestData_host: number;
                    public static AndroidManifestData_mimeType: number;
                    public static AndroidManifestData_path: number;
                    public static AndroidManifestData_pathAdvancedPattern: number;
                    public static AndroidManifestData_pathPattern: number;
                    public static AndroidManifestData_pathPrefix: number;
                    public static AndroidManifestData_port: number;
                    public static AndroidManifestData_scheme: number;
                    public static AndroidManifestData_ssp: number;
                    public static AndroidManifestData_sspPattern: number;
                    public static AndroidManifestData_sspPrefix: number;
                    public static AndroidManifestFeatureGroup: number[];
                    public static AndroidManifestFeatureGroup_label: number;
                    public static AndroidManifestGrantUriPermission: number[];
                    public static AndroidManifestGrantUriPermission_path: number;
                    public static AndroidManifestGrantUriPermission_pathPattern: number;
                    public static AndroidManifestGrantUriPermission_pathPrefix: number;
                    public static AndroidManifestInstrumentation: number[];
                    public static AndroidManifestInstrumentation_banner: number;
                    public static AndroidManifestInstrumentation_functionalTest: number;
                    public static AndroidManifestInstrumentation_handleProfiling: number;
                    public static AndroidManifestInstrumentation_icon: number;
                    public static AndroidManifestInstrumentation_label: number;
                    public static AndroidManifestInstrumentation_logo: number;
                    public static AndroidManifestInstrumentation_name: number;
                    public static AndroidManifestInstrumentation_roundIcon: number;
                    public static AndroidManifestInstrumentation_targetPackage: number;
                    public static AndroidManifestInstrumentation_targetProcesses: number;
                    public static AndroidManifestIntentFilter: number[];
                    public static AndroidManifestIntentFilter_autoVerify: number;
                    public static AndroidManifestIntentFilter_banner: number;
                    public static AndroidManifestIntentFilter_icon: number;
                    public static AndroidManifestIntentFilter_label: number;
                    public static AndroidManifestIntentFilter_logo: number;
                    public static AndroidManifestIntentFilter_priority: number;
                    public static AndroidManifestIntentFilter_roundIcon: number;
                    public static AndroidManifestKeySet: number[];
                    public static AndroidManifestKeySet_name: number;
                    public static AndroidManifestLayout: number[];
                    public static AndroidManifestLayout_defaultHeight: number;
                    public static AndroidManifestLayout_defaultWidth: number;
                    public static AndroidManifestLayout_gravity: number;
                    public static AndroidManifestLayout_minHeight: number;
                    public static AndroidManifestLayout_minWidth: number;
                    public static AndroidManifestLibrary: number[];
                    public static AndroidManifestLibrary_name: number;
                    public static AndroidManifestMetaData: number[];
                    public static AndroidManifestMetaData_name: number;
                    public static AndroidManifestMetaData_resource: number;
                    public static AndroidManifestMetaData_value: number;
                    public static AndroidManifestOriginalPackage: number[];
                    public static AndroidManifestOriginalPackage_name: number;
                    public static AndroidManifestPackageVerifier: number[];
                    public static AndroidManifestPackageVerifier_name: number;
                    public static AndroidManifestPackageVerifier_publicKey: number;
                    public static AndroidManifestPathPermission: number[];
                    public static AndroidManifestPathPermission_path: number;
                    public static AndroidManifestPathPermission_pathAdvancedPattern: number;
                    public static AndroidManifestPathPermission_pathPattern: number;
                    public static AndroidManifestPathPermission_pathPrefix: number;
                    public static AndroidManifestPathPermission_permission: number;
                    public static AndroidManifestPathPermission_readPermission: number;
                    public static AndroidManifestPathPermission_writePermission: number;
                    public static AndroidManifestPermission: number[];
                    public static AndroidManifestPermissionGroup: number[];
                    public static AndroidManifestPermissionGroup_banner: number;
                    public static AndroidManifestPermissionGroup_description: number;
                    public static AndroidManifestPermissionGroup_icon: number;
                    public static AndroidManifestPermissionGroup_label: number;
                    public static AndroidManifestPermissionGroup_logo: number;
                    public static AndroidManifestPermissionGroup_name: number;
                    public static AndroidManifestPermissionGroup_permissionGroupFlags: number;
                    public static AndroidManifestPermissionGroup_priority: number;
                    public static AndroidManifestPermissionGroup_roundIcon: number;
                    public static AndroidManifestPermissionTree: number[];
                    public static AndroidManifestPermissionTree_banner: number;
                    public static AndroidManifestPermissionTree_icon: number;
                    public static AndroidManifestPermissionTree_label: number;
                    public static AndroidManifestPermissionTree_logo: number;
                    public static AndroidManifestPermissionTree_name: number;
                    public static AndroidManifestPermissionTree_roundIcon: number;
                    public static AndroidManifestPermission_banner: number;
                    public static AndroidManifestPermission_description: number;
                    public static AndroidManifestPermission_icon: number;
                    public static AndroidManifestPermission_label: number;
                    public static AndroidManifestPermission_logo: number;
                    public static AndroidManifestPermission_name: number;
                    public static AndroidManifestPermission_permissionFlags: number;
                    public static AndroidManifestPermission_permissionGroup: number;
                    public static AndroidManifestPermission_protectionLevel: number;
                    public static AndroidManifestPermission_roundIcon: number;
                    public static AndroidManifestProtectedBroadcast: number[];
                    public static AndroidManifestProtectedBroadcast_name: number;
                    public static AndroidManifestProvider: number[];
                    public static AndroidManifestProvider_authorities: number;
                    public static AndroidManifestProvider_banner: number;
                    public static AndroidManifestProvider_description: number;
                    public static AndroidManifestProvider_directBootAware: number;
                    public static AndroidManifestProvider_enabled: number;
                    public static AndroidManifestProvider_exported: number;
                    public static AndroidManifestProvider_grantUriPermissions: number;
                    public static AndroidManifestProvider_icon: number;
                    public static AndroidManifestProvider_initOrder: number;
                    public static AndroidManifestProvider_label: number;
                    public static AndroidManifestProvider_logo: number;
                    public static AndroidManifestProvider_multiprocess: number;
                    public static AndroidManifestProvider_name: number;
                    public static AndroidManifestProvider_permission: number;
                    public static AndroidManifestProvider_process: number;
                    public static AndroidManifestProvider_readPermission: number;
                    public static AndroidManifestProvider_roundIcon: number;
                    public static AndroidManifestProvider_singleUser: number;
                    public static AndroidManifestProvider_splitName: number;
                    public static AndroidManifestProvider_syncable: number;
                    public static AndroidManifestProvider_visibleToInstantApps: number;
                    public static AndroidManifestProvider_writePermission: number;
                    public static AndroidManifestPublicKey: number[];
                    public static AndroidManifestPublicKey_name: number;
                    public static AndroidManifestPublicKey_value: number;
                    public static AndroidManifestReceiver: number[];
                    public static AndroidManifestReceiver_banner: number;
                    public static AndroidManifestReceiver_description: number;
                    public static AndroidManifestReceiver_directBootAware: number;
                    public static AndroidManifestReceiver_enabled: number;
                    public static AndroidManifestReceiver_exported: number;
                    public static AndroidManifestReceiver_icon: number;
                    public static AndroidManifestReceiver_label: number;
                    public static AndroidManifestReceiver_logo: number;
                    public static AndroidManifestReceiver_name: number;
                    public static AndroidManifestReceiver_permission: number;
                    public static AndroidManifestReceiver_process: number;
                    public static AndroidManifestReceiver_roundIcon: number;
                    public static AndroidManifestReceiver_singleUser: number;
                    public static AndroidManifestResourceOverlay: number[];
                    public static AndroidManifestResourceOverlay_isStatic: number;
                    public static AndroidManifestResourceOverlay_priority: number;
                    public static AndroidManifestResourceOverlay_requiredSystemPropertyName: number;
                    public static AndroidManifestResourceOverlay_requiredSystemPropertyValue: number;
                    public static AndroidManifestResourceOverlay_targetPackage: number;
                    public static AndroidManifestRestrictUpdate: number[];
                    public static AndroidManifestRestrictUpdate_hash: number;
                    public static AndroidManifestService: number[];
                    public static AndroidManifestService_banner: number;
                    public static AndroidManifestService_description: number;
                    public static AndroidManifestService_directBootAware: number;
                    public static AndroidManifestService_enabled: number;
                    public static AndroidManifestService_exported: number;
                    public static AndroidManifestService_externalService: number;
                    public static AndroidManifestService_icon: number;
                    public static AndroidManifestService_isolatedProcess: number;
                    public static AndroidManifestService_label: number;
                    public static AndroidManifestService_logo: number;
                    public static AndroidManifestService_name: number;
                    public static AndroidManifestService_permission: number;
                    public static AndroidManifestService_process: number;
                    public static AndroidManifestService_roundIcon: number;
                    public static AndroidManifestService_singleUser: number;
                    public static AndroidManifestService_splitName: number;
                    public static AndroidManifestService_stopWithTask: number;
                    public static AndroidManifestService_visibleToInstantApps: number;
                    public static AndroidManifestStaticLibrary: number[];
                    public static AndroidManifestStaticLibrary_name: number;
                    public static AndroidManifestStaticLibrary_version: number;
                    public static AndroidManifestSupportsInputInputType: number[];
                    public static AndroidManifestSupportsInputInputType_name: number;
                    public static AndroidManifestSupportsScreens: number[];
                    public static AndroidManifestSupportsScreens_anyDensity: number;
                    public static AndroidManifestSupportsScreens_compatibleWidthLimitDp: number;
                    public static AndroidManifestSupportsScreens_largeScreens: number;
                    public static AndroidManifestSupportsScreens_largestWidthLimitDp: number;
                    public static AndroidManifestSupportsScreens_normalScreens: number;
                    public static AndroidManifestSupportsScreens_requiresSmallestWidthDp: number;
                    public static AndroidManifestSupportsScreens_resizeable: number;
                    public static AndroidManifestSupportsScreens_smallScreens: number;
                    public static AndroidManifestSupportsScreens_xlargeScreens: number;
                    public static AndroidManifestUpgradeKeySet: number[];
                    public static AndroidManifestUpgradeKeySet_name: number;
                    public static AndroidManifestUsesConfiguration: number[];
                    public static AndroidManifestUsesConfiguration_reqFiveWayNav: number;
                    public static AndroidManifestUsesConfiguration_reqHardKeyboard: number;
                    public static AndroidManifestUsesConfiguration_reqKeyboardType: number;
                    public static AndroidManifestUsesConfiguration_reqNavigation: number;
                    public static AndroidManifestUsesConfiguration_reqTouchScreen: number;
                    public static AndroidManifestUsesFeature: number[];
                    public static AndroidManifestUsesFeature_glEsVersion: number;
                    public static AndroidManifestUsesFeature_name: number;
                    public static AndroidManifestUsesFeature_required: number;
                    public static AndroidManifestUsesFeature_version: number;
                    public static AndroidManifestUsesLibrary: number[];
                    public static AndroidManifestUsesLibrary_name: number;
                    public static AndroidManifestUsesLibrary_required: number;
                    public static AndroidManifestUsesPermission: number[];
                    public static AndroidManifestUsesPermission_maxSdkVersion: number;
                    public static AndroidManifestUsesPermission_name: number;
                    public static AndroidManifestUsesPermission_requiredFeature: number;
                    public static AndroidManifestUsesPermission_requiredNotFeature: number;
                    public static AndroidManifestUsesSdk: number[];
                    public static AndroidManifestUsesSdk_maxSdkVersion: number;
                    public static AndroidManifestUsesSdk_minSdkVersion: number;
                    public static AndroidManifestUsesSdk_targetSdkVersion: number;
                    public static AndroidManifestUsesSplit: number[];
                    public static AndroidManifestUsesSplit_name: number;
                    public static AndroidManifestUsesStaticLibrary: number[];
                    public static AndroidManifestUsesStaticLibrary_certDigest: number;
                    public static AndroidManifestUsesStaticLibrary_name: number;
                    public static AndroidManifestUsesStaticLibrary_version: number;
                    public static AndroidManifest_installLocation: number;
                    public static AndroidManifest_isFeatureSplit: number;
                    public static AndroidManifest_isolatedSplits: number;
                    public static AndroidManifest_revisionCode: number;
                    public static AndroidManifest_sharedUserId: number;
                    public static AndroidManifest_sharedUserLabel: number;
                    public static AndroidManifest_targetSandboxVersion: number;
                    public static AndroidManifest_versionCode: number;
                    public static AndroidManifest_versionName: number;
                    public static AnimatedRotateDrawable: number[];
                    public static AnimatedRotateDrawable_drawable: number;
                    public static AnimatedRotateDrawable_frameDuration: number;
                    public static AnimatedRotateDrawable_framesCount: number;
                    public static AnimatedRotateDrawable_pivotX: number;
                    public static AnimatedRotateDrawable_pivotY: number;
                    public static AnimatedRotateDrawable_visible: number;
                    public static AnimatedStateListDrawable: number[];
                    public static AnimatedStateListDrawableItem: number[];
                    public static AnimatedStateListDrawableItem_drawable: number;
                    public static AnimatedStateListDrawableItem_id: number;
                    public static AnimatedStateListDrawableTransition: number[];
                    public static AnimatedStateListDrawableTransition_drawable: number;
                    public static AnimatedStateListDrawableTransition_fromId: number;
                    public static AnimatedStateListDrawableTransition_reversible: number;
                    public static AnimatedStateListDrawableTransition_toId: number;
                    public static AnimatedStateListDrawable_autoMirrored: number;
                    public static AnimatedStateListDrawable_constantSize: number;
                    public static AnimatedStateListDrawable_dither: number;
                    public static AnimatedStateListDrawable_enterFadeDuration: number;
                    public static AnimatedStateListDrawable_exitFadeDuration: number;
                    public static AnimatedStateListDrawable_variablePadding: number;
                    public static AnimatedStateListDrawable_visible: number;
                    public static AnimatedVectorDrawable: number[];
                    public static AnimatedVectorDrawableTarget: number[];
                    public static AnimatedVectorDrawableTarget_animation: number;
                    public static AnimatedVectorDrawableTarget_name: number;
                    public static AnimatedVectorDrawable_drawable: number;
                    public static Animation: number[];
                    public static AnimationDrawable: number[];
                    public static AnimationDrawableItem: number[];
                    public static AnimationDrawableItem_drawable: number;
                    public static AnimationDrawableItem_duration: number;
                    public static AnimationDrawable_oneshot: number;
                    public static AnimationDrawable_variablePadding: number;
                    public static AnimationDrawable_visible: number;
                    public static AnimationScaleListDrawable: number[];
                    public static AnimationScaleListDrawableItem: number[];
                    public static AnimationScaleListDrawableItem_drawable: number;
                    public static AnimationSet: number[];
                    public static AnimationSet_duration: number;
                    public static AnimationSet_fillAfter: number;
                    public static AnimationSet_fillBefore: number;
                    public static AnimationSet_repeatMode: number;
                    public static AnimationSet_shareInterpolator: number;
                    public static AnimationSet_startOffset: number;
                    public static Animation_background: number;
                    public static Animation_detachWallpaper: number;
                    public static Animation_duration: number;
                    public static Animation_fillAfter: number;
                    public static Animation_fillBefore: number;
                    public static Animation_fillEnabled: number;
                    public static Animation_interpolator: number;
                    public static Animation_repeatCount: number;
                    public static Animation_repeatMode: number;
                    public static Animation_startOffset: number;
                    public static Animation_zAdjustment: number;
                    public static Animator: number[];
                    public static AnimatorSet: number[];
                    public static AnimatorSet_ordering: number;
                    public static Animator_duration: number;
                    public static Animator_interpolator: number;
                    public static Animator_removeBeforeMRelease: number;
                    public static Animator_repeatCount: number;
                    public static Animator_repeatMode: number;
                    public static Animator_startOffset: number;
                    public static Animator_valueFrom: number;
                    public static Animator_valueTo: number;
                    public static Animator_valueType: number;
                    public static AnticipateInterpolator: number[];
                    public static AnticipateInterpolator_tension: number;
                    public static AnticipateOvershootInterpolator: number[];
                    public static AnticipateOvershootInterpolator_extraTension: number;
                    public static AnticipateOvershootInterpolator_tension: number;
                    public static AppWidgetProviderInfo: number[];
                    public static AppWidgetProviderInfo_autoAdvanceViewId: number;
                    public static AppWidgetProviderInfo_configure: number;
                    public static AppWidgetProviderInfo_initialKeyguardLayout: number;
                    public static AppWidgetProviderInfo_initialLayout: number;
                    public static AppWidgetProviderInfo_minHeight: number;
                    public static AppWidgetProviderInfo_minResizeHeight: number;
                    public static AppWidgetProviderInfo_minResizeWidth: number;
                    public static AppWidgetProviderInfo_minWidth: number;
                    public static AppWidgetProviderInfo_previewImage: number;
                    public static AppWidgetProviderInfo_resizeMode: number;
                    public static AppWidgetProviderInfo_updatePeriodMillis: number;
                    public static AppWidgetProviderInfo_widgetCategory: number;
                    public static ArcMotion: number[];
                    public static ArcMotion_maximumAngle: number;
                    public static ArcMotion_minimumHorizontalAngle: number;
                    public static ArcMotion_minimumVerticalAngle: number;
                    public static AutoCompleteTextView: number[];
                    public static AutoCompleteTextView_completionHint: number;
                    public static AutoCompleteTextView_completionHintView: number;
                    public static AutoCompleteTextView_completionThreshold: number;
                    public static AutoCompleteTextView_dropDownAnchor: number;
                    public static AutoCompleteTextView_dropDownHeight: number;
                    public static AutoCompleteTextView_dropDownSelector: number;
                    public static AutoCompleteTextView_dropDownWidth: number;
                    public static AutoCompleteTextView_inputType: number;
                    public static AutoCompleteTextView_popupTheme: number;
                    public static AutofillService: number[];
                    public static AutofillService_settingsActivity: number;
                    public static BitmapDrawable: number[];
                    public static BitmapDrawable_alpha: number;
                    public static BitmapDrawable_antialias: number;
                    public static BitmapDrawable_autoMirrored: number;
                    public static BitmapDrawable_dither: number;
                    public static BitmapDrawable_filter: number;
                    public static BitmapDrawable_gravity: number;
                    public static BitmapDrawable_mipMap: number;
                    public static BitmapDrawable_src: number;
                    public static BitmapDrawable_tileMode: number;
                    public static BitmapDrawable_tileModeX: number;
                    public static BitmapDrawable_tileModeY: number;
                    public static BitmapDrawable_tint: number;
                    public static BitmapDrawable_tintMode: number;
                    public static Button: number[];
                    public static ButtonBarLayout: number[];
                    public static ButtonBarLayout_allowStacking: number;
                    public static CalendarView: number[];
                    public static CalendarView_calendarViewMode: number;
                    public static CalendarView_dateTextAppearance: number;
                    public static CalendarView_dayHighlightColor: number;
                    public static CalendarView_daySelectorColor: number;
                    public static CalendarView_firstDayOfWeek: number;
                    public static CalendarView_focusedMonthDateColor: number;
                    public static CalendarView_maxDate: number;
                    public static CalendarView_minDate: number;
                    public static CalendarView_monthTextAppearance: number;
                    public static CalendarView_selectedDateVerticalBar: number;
                    public static CalendarView_selectedWeekBackgroundColor: number;
                    public static CalendarView_showWeekNumber: number;
                    public static CalendarView_shownWeekCount: number;
                    public static CalendarView_unfocusedMonthDateColor: number;
                    public static CalendarView_weekDayTextAppearance: number;
                    public static CalendarView_weekNumberColor: number;
                    public static CalendarView_weekSeparatorLineColor: number;
                    public static ChangeBounds: number[];
                    public static ChangeBounds_resizeClip: number;
                    public static ChangeTransform: number[];
                    public static ChangeTransform_reparent: number;
                    public static ChangeTransform_reparentWithOverlay: number;
                    public static CheckBoxPreference: number[];
                    public static CheckBoxPreference_disableDependentsState: number;
                    public static CheckBoxPreference_summaryOff: number;
                    public static CheckBoxPreference_summaryOn: number;
                    public static CheckedTextView: number[];
                    public static CheckedTextView_checkMark: number;
                    public static CheckedTextView_checkMarkGravity: number;
                    public static CheckedTextView_checkMarkTint: number;
                    public static CheckedTextView_checkMarkTintMode: number;
                    public static CheckedTextView_checked: number;
                    public static Chronometer: number[];
                    public static Chronometer_countDown: number;
                    public static Chronometer_format: number;
                    public static ClipDrawable: number[];
                    public static ClipDrawable_clipOrientation: number;
                    public static ClipDrawable_drawable: number;
                    public static ClipDrawable_gravity: number;
                    public static ColorDrawable: number[];
                    public static ColorDrawable_color: number;
                    public static ColorStateListItem: number[];
                    public static ColorStateListItem_alpha: number;
                    public static ColorStateListItem_color: number;
                    public static CompoundButton: number[];
                    public static CompoundButton_button: number;
                    public static CompoundButton_buttonTint: number;
                    public static CompoundButton_buttonTintMode: number;
                    public static CompoundButton_checked: number;
                    public static ContactsDataKind: number[];
                    public static ContactsDataKind_allContactsName: number;
                    public static ContactsDataKind_detailColumn: number;
                    public static ContactsDataKind_detailSocialSummary: number;
                    public static ContactsDataKind_icon: number;
                    public static ContactsDataKind_mimeType: number;
                    public static ContactsDataKind_summaryColumn: number;
                    public static CycleInterpolator: number[];
                    public static CycleInterpolator_cycles: number;
                    public static DatePicker: number[];
                    public static DatePicker_calendarTextColor: number;
                    public static DatePicker_calendarViewShown: number;
                    public static DatePicker_datePickerMode: number;
                    public static DatePicker_dayOfWeekBackground: number;
                    public static DatePicker_dayOfWeekTextAppearance: number;
                    public static DatePicker_dialogMode: number;
                    public static DatePicker_endYear: number;
                    public static DatePicker_firstDayOfWeek: number;
                    public static DatePicker_headerBackground: number;
                    public static DatePicker_headerDayOfMonthTextAppearance: number;
                    public static DatePicker_headerMonthTextAppearance: number;
                    public static DatePicker_headerTextColor: number;
                    public static DatePicker_headerYearTextAppearance: number;
                    public static DatePicker_internalLayout: number;
                    public static DatePicker_legacyLayout: number;
                    public static DatePicker_maxDate: number;
                    public static DatePicker_minDate: number;
                    public static DatePicker_spinnersShown: number;
                    public static DatePicker_startYear: number;
                    public static DatePicker_yearListItemActivatedTextAppearance: number;
                    public static DatePicker_yearListItemTextAppearance: number;
                    public static DatePicker_yearListSelectorColor: number;
                    public static DateTimeView: number[];
                    public static DateTimeView_showRelative: number;
                    public static DecelerateInterpolator: number[];
                    public static DecelerateInterpolator_factor: number;
                    public static DeviceAdmin: number[];
                    public static DeviceAdmin_visible: number;
                    public static DialogPreference: number[];
                    public static DialogPreference_dialogIcon: number;
                    public static DialogPreference_dialogLayout: number;
                    public static DialogPreference_dialogMessage: number;
                    public static DialogPreference_dialogTitle: number;
                    public static DialogPreference_negativeButtonText: number;
                    public static DialogPreference_positiveButtonText: number;
                    public static Drawable: number[];
                    public static DrawableCorners: number[];
                    public static DrawableCorners_bottomLeftRadius: number;
                    public static DrawableCorners_bottomRightRadius: number;
                    public static DrawableCorners_radius: number;
                    public static DrawableCorners_topLeftRadius: number;
                    public static DrawableCorners_topRightRadius: number;
                    public static DrawableStates: number[];
                    public static DrawableStates_state_accelerated: number;
                    public static DrawableStates_state_accessibility_focused: number;
                    public static DrawableStates_state_activated: number;
                    public static DrawableStates_state_active: number;
                    public static DrawableStates_state_checkable: number;
                    public static DrawableStates_state_checked: number;
                    public static DrawableStates_state_drag_can_accept: number;
                    public static DrawableStates_state_drag_hovered: number;
                    public static DrawableStates_state_enabled: number;
                    public static DrawableStates_state_first: number;
                    public static DrawableStates_state_focused: number;
                    public static DrawableStates_state_hovered: number;
                    public static DrawableStates_state_last: number;
                    public static DrawableStates_state_middle: number;
                    public static DrawableStates_state_pressed: number;
                    public static DrawableStates_state_selected: number;
                    public static DrawableStates_state_single: number;
                    public static DrawableStates_state_window_focused: number;
                    public static DrawableWrapper: number[];
                    public static DrawableWrapper_drawable: number;
                    public static Drawable_autoMirrored: number;
                    public static Drawable_visible: number;
                    public static Dream: number[];
                    public static Dream_settingsActivity: number;
                    public static EdgeEffect: number[];
                    public static EdgeEffect_colorEdgeEffect: number;
                    public static EditText: number[];
                    public static EpicenterTranslateClipReveal: number[];
                    public static EpicenterTranslateClipReveal_interpolatorX: number;
                    public static EpicenterTranslateClipReveal_interpolatorY: number;
                    public static EpicenterTranslateClipReveal_interpolatorZ: number;
                    public static ExpandableListChildIndicatorState: number[];
                    public static ExpandableListChildIndicatorState_state_last: number;
                    public static ExpandableListGroupIndicatorState: number[];
                    public static ExpandableListGroupIndicatorState_state_empty: number;
                    public static ExpandableListGroupIndicatorState_state_expanded: number;
                    public static ExpandableListView: number[];
                    public static ExpandableListView_childDivider: number;
                    public static ExpandableListView_childIndicator: number;
                    public static ExpandableListView_childIndicatorEnd: number;
                    public static ExpandableListView_childIndicatorLeft: number;
                    public static ExpandableListView_childIndicatorRight: number;
                    public static ExpandableListView_childIndicatorStart: number;
                    public static ExpandableListView_groupIndicator: number;
                    public static ExpandableListView_indicatorEnd: number;
                    public static ExpandableListView_indicatorLeft: number;
                    public static ExpandableListView_indicatorRight: number;
                    public static ExpandableListView_indicatorStart: number;
                    public static Extra: number[];
                    public static Extra_name: number;
                    public static Extra_value: number;
                    public static Fade: number[];
                    public static Fade_fadingMode: number;
                    public static FastScroll: number[];
                    public static FastScroll_backgroundLeft: number;
                    public static FastScroll_backgroundRight: number;
                    public static FastScroll_minHeight: number;
                    public static FastScroll_minWidth: number;
                    public static FastScroll_padding: number;
                    public static FastScroll_position: number;
                    public static FastScroll_textAppearance: number;
                    public static FastScroll_textColor: number;
                    public static FastScroll_textSize: number;
                    public static FastScroll_thumbDrawable: number;
                    public static FastScroll_thumbMinHeight: number;
                    public static FastScroll_thumbMinWidth: number;
                    public static FastScroll_thumbPosition: number;
                    public static FastScroll_trackDrawable: number;
                    public static FontFamily: number[];
                    public static FontFamilyFont: number[];
                    public static FontFamilyFont_font: number;
                    public static FontFamilyFont_fontStyle: number;
                    public static FontFamilyFont_fontWeight: number;
                    public static FontFamily_fontProviderAuthority: number;
                    public static FontFamily_fontProviderCerts: number;
                    public static FontFamily_fontProviderPackage: number;
                    public static FontFamily_fontProviderQuery: number;
                    public static Fragment: number[];
                    public static FragmentAnimation: number[];
                    public static FragmentAnimation_fragmentCloseEnterAnimation: number;
                    public static FragmentAnimation_fragmentCloseExitAnimation: number;
                    public static FragmentAnimation_fragmentFadeEnterAnimation: number;
                    public static FragmentAnimation_fragmentFadeExitAnimation: number;
                    public static FragmentAnimation_fragmentOpenEnterAnimation: number;
                    public static FragmentAnimation_fragmentOpenExitAnimation: number;
                    public static FragmentBreadCrumbs: number[];
                    public static FragmentBreadCrumbs_gravity: number;
                    public static FragmentBreadCrumbs_itemColor: number;
                    public static FragmentBreadCrumbs_itemLayout: number;
                    public static Fragment_fragmentAllowEnterTransitionOverlap: number;
                    public static Fragment_fragmentAllowReturnTransitionOverlap: number;
                    public static Fragment_fragmentEnterTransition: number;
                    public static Fragment_fragmentExitTransition: number;
                    public static Fragment_fragmentReenterTransition: number;
                    public static Fragment_fragmentReturnTransition: number;
                    public static Fragment_fragmentSharedElementEnterTransition: number;
                    public static Fragment_fragmentSharedElementReturnTransition: number;
                    public static Fragment_id: number;
                    public static Fragment_name: number;
                    public static Fragment_tag: number;
                    public static FrameLayout: number[];
                    public static FrameLayout_Layout: number[];
                    public static FrameLayout_Layout_layout_gravity: number;
                    public static FrameLayout_measureAllChildren: number;
                    public static Gallery: number[];
                    public static Gallery_animationDuration: number;
                    public static Gallery_gravity: number;
                    public static Gallery_spacing: number;
                    public static Gallery_unselectedAlpha: number;
                    public static GestureOverlayView: number[];
                    public static GestureOverlayView_eventsInterceptionEnabled: number;
                    public static GestureOverlayView_fadeDuration: number;
                    public static GestureOverlayView_fadeEnabled: number;
                    public static GestureOverlayView_fadeOffset: number;
                    public static GestureOverlayView_gestureColor: number;
                    public static GestureOverlayView_gestureStrokeAngleThreshold: number;
                    public static GestureOverlayView_gestureStrokeLengthThreshold: number;
                    public static GestureOverlayView_gestureStrokeSquarenessThreshold: number;
                    public static GestureOverlayView_gestureStrokeType: number;
                    public static GestureOverlayView_gestureStrokeWidth: number;
                    public static GestureOverlayView_orientation: number;
                    public static GestureOverlayView_uncertainGestureColor: number;
                    public static GlowPadView: number[];
                    public static GlowPadView_directionDescriptions: number;
                    public static GlowPadView_targetDescriptions: number;
                    public static GradientColor: number[];
                    public static GradientColorItem: number[];
                    public static GradientColorItem_color: number;
                    public static GradientColorItem_offset: number;
                    public static GradientColor_centerColor: number;
                    public static GradientColor_centerX: number;
                    public static GradientColor_centerY: number;
                    public static GradientColor_endColor: number;
                    public static GradientColor_endX: number;
                    public static GradientColor_endY: number;
                    public static GradientColor_gradientRadius: number;
                    public static GradientColor_startColor: number;
                    public static GradientColor_startX: number;
                    public static GradientColor_startY: number;
                    public static GradientColor_tileMode: number;
                    public static GradientColor_type: number;
                    public static GradientDrawable: number[];
                    public static GradientDrawableGradient: number[];
                    public static GradientDrawableGradient_angle: number;
                    public static GradientDrawableGradient_centerColor: number;
                    public static GradientDrawableGradient_centerX: number;
                    public static GradientDrawableGradient_centerY: number;
                    public static GradientDrawableGradient_endColor: number;
                    public static GradientDrawableGradient_gradientRadius: number;
                    public static GradientDrawableGradient_startColor: number;
                    public static GradientDrawableGradient_type: number;
                    public static GradientDrawableGradient_useLevel: number;
                    public static GradientDrawablePadding: number[];
                    public static GradientDrawablePadding_bottom: number;
                    public static GradientDrawablePadding_left: number;
                    public static GradientDrawablePadding_right: number;
                    public static GradientDrawablePadding_top: number;
                    public static GradientDrawableSize: number[];
                    public static GradientDrawableSize_height: number;
                    public static GradientDrawableSize_width: number;
                    public static GradientDrawableSolid: number[];
                    public static GradientDrawableSolid_color: number;
                    public static GradientDrawableStroke: number[];
                    public static GradientDrawableStroke_color: number;
                    public static GradientDrawableStroke_dashGap: number;
                    public static GradientDrawableStroke_dashWidth: number;
                    public static GradientDrawableStroke_width: number;
                    public static GradientDrawable_dither: number;
                    public static GradientDrawable_innerRadius: number;
                    public static GradientDrawable_innerRadiusRatio: number;
                    public static GradientDrawable_opticalInsetBottom: number;
                    public static GradientDrawable_opticalInsetLeft: number;
                    public static GradientDrawable_opticalInsetRight: number;
                    public static GradientDrawable_opticalInsetTop: number;
                    public static GradientDrawable_shape: number;
                    public static GradientDrawable_thickness: number;
                    public static GradientDrawable_thicknessRatio: number;
                    public static GradientDrawable_tint: number;
                    public static GradientDrawable_tintMode: number;
                    public static GradientDrawable_useLevel: number;
                    public static GradientDrawable_visible: number;
                    public static GridLayout: number[];
                    public static GridLayoutAnimation: number[];
                    public static GridLayoutAnimation_columnDelay: number;
                    public static GridLayoutAnimation_direction: number;
                    public static GridLayoutAnimation_directionPriority: number;
                    public static GridLayoutAnimation_rowDelay: number;
                    public static GridLayout_Layout: number[];
                    public static GridLayout_Layout_layout_column: number;
                    public static GridLayout_Layout_layout_columnSpan: number;
                    public static GridLayout_Layout_layout_columnWeight: number;
                    public static GridLayout_Layout_layout_gravity: number;
                    public static GridLayout_Layout_layout_row: number;
                    public static GridLayout_Layout_layout_rowSpan: number;
                    public static GridLayout_Layout_layout_rowWeight: number;
                    public static GridLayout_alignmentMode: number;
                    public static GridLayout_columnCount: number;
                    public static GridLayout_columnOrderPreserved: number;
                    public static GridLayout_orientation: number;
                    public static GridLayout_rowCount: number;
                    public static GridLayout_rowOrderPreserved: number;
                    public static GridLayout_useDefaultMargins: number;
                    public static GridView: number[];
                    public static GridView_columnWidth: number;
                    public static GridView_gravity: number;
                    public static GridView_horizontalSpacing: number;
                    public static GridView_numColumns: number;
                    public static GridView_stretchMode: number;
                    public static GridView_verticalSpacing: number;
                    public static HorizontalScrollView: number[];
                    public static HorizontalScrollView_fillViewport: number;
                    public static HostApduService: number[];
                    public static HostApduService_apduServiceBanner: number;
                    public static HostApduService_description: number;
                    public static HostApduService_requireDeviceUnlock: number;
                    public static HostApduService_settingsActivity: number;
                    public static HostNfcFService: number[];
                    public static HostNfcFService_description: number;
                    public static Icon: number[];
                    public static IconDefault: number[];
                    public static IconDefault_icon: number;
                    public static IconMenuView: number[];
                    public static IconMenuView_maxItems: number;
                    public static IconMenuView_maxItemsPerRow: number;
                    public static IconMenuView_maxRows: number;
                    public static IconMenuView_moreIcon: number;
                    public static IconMenuView_rowHeight: number;
                    public static Icon_icon: number;
                    public static Icon_mimeType: number;
                    public static ImageSwitcher: number[];
                    public static ImageView: number[];
                    public static ImageView_adjustViewBounds: number;
                    public static ImageView_baseline: number;
                    public static ImageView_baselineAlignBottom: number;
                    public static ImageView_cropToPadding: number;
                    public static ImageView_drawableAlpha: number;
                    public static ImageView_maxHeight: number;
                    public static ImageView_maxWidth: number;
                    public static ImageView_scaleType: number;
                    public static ImageView_src: number;
                    public static ImageView_tint: number;
                    public static ImageView_tintMode: number;
                    public static Include: number[];
                    public static Include_id: number;
                    public static Include_visibility: number;
                    public static InputExtras: number[];
                    public static InputMethod: number[];
                    public static InputMethodService: number[];
                    public static InputMethodService_imeExtractEnterAnimation: number;
                    public static InputMethodService_imeExtractExitAnimation: number;
                    public static InputMethodService_imeFullscreenBackground: number;
                    public static InputMethod_Subtype: number[];
                    public static InputMethod_Subtype_icon: number;
                    public static InputMethod_Subtype_imeSubtypeExtraValue: number;
                    public static InputMethod_Subtype_imeSubtypeLocale: number;
                    public static InputMethod_Subtype_imeSubtypeMode: number;
                    public static InputMethod_Subtype_isAsciiCapable: number;
                    public static InputMethod_Subtype_isAuxiliary: number;
                    public static InputMethod_Subtype_label: number;
                    public static InputMethod_Subtype_languageTag: number;
                    public static InputMethod_Subtype_overridesImplicitlyEnabledSubtype: number;
                    public static InputMethod_Subtype_subtypeId: number;
                    public static InputMethod___removed2: number;
                    public static InputMethod_isDefault: number;
                    public static InputMethod_settingsActivity: number;
                    public static InputMethod_supportsSwitchingToNextInputMethod: number;
                    public static InsetDrawable: number[];
                    public static InsetDrawable_drawable: number;
                    public static InsetDrawable_inset: number;
                    public static InsetDrawable_insetBottom: number;
                    public static InsetDrawable_insetLeft: number;
                    public static InsetDrawable_insetRight: number;
                    public static InsetDrawable_insetTop: number;
                    public static InsetDrawable_visible: number;
                    public static Intent: number[];
                    public static IntentCategory: number[];
                    public static IntentCategory_name: number;
                    public static Intent_action: number;
                    public static Intent_data: number;
                    public static Intent_mimeType: number;
                    public static Intent_targetClass: number;
                    public static Intent_targetPackage: number;
                    public static Keyboard: number[];
                    public static KeyboardLayout: number[];
                    public static KeyboardLayout_keyboardLayout: number;
                    public static KeyboardLayout_label: number;
                    public static KeyboardLayout_locale: number;
                    public static KeyboardLayout_name: number;
                    public static KeyboardLayout_productId: number;
                    public static KeyboardLayout_vendorId: number;
                    public static KeyboardView: number[];
                    public static KeyboardViewPreviewState: number[];
                    public static KeyboardViewPreviewState_state_long_pressable: number;
                    public static KeyboardView_keyBackground: number;
                    public static KeyboardView_keyPreviewHeight: number;
                    public static KeyboardView_keyPreviewLayout: number;
                    public static KeyboardView_keyPreviewOffset: number;
                    public static KeyboardView_keyTextColor: number;
                    public static KeyboardView_keyTextSize: number;
                    public static KeyboardView_keyboardViewStyle: number;
                    public static KeyboardView_labelTextSize: number;
                    public static KeyboardView_popupLayout: number;
                    public static KeyboardView_shadowColor: number;
                    public static KeyboardView_shadowRadius: number;
                    public static KeyboardView_verticalCorrection: number;
                    public static Keyboard_Key: number[];
                    public static Keyboard_Key_codes: number;
                    public static Keyboard_Key_iconPreview: number;
                    public static Keyboard_Key_isModifier: number;
                    public static Keyboard_Key_isRepeatable: number;
                    public static Keyboard_Key_isSticky: number;
                    public static Keyboard_Key_keyEdgeFlags: number;
                    public static Keyboard_Key_keyIcon: number;
                    public static Keyboard_Key_keyLabel: number;
                    public static Keyboard_Key_keyOutputText: number;
                    public static Keyboard_Key_keyboardMode: number;
                    public static Keyboard_Key_popupCharacters: number;
                    public static Keyboard_Key_popupKeyboard: number;
                    public static Keyboard_Row: number[];
                    public static Keyboard_Row_keyboardMode: number;
                    public static Keyboard_Row_rowEdgeFlags: number;
                    public static Keyboard_horizontalGap: number;
                    public static Keyboard_keyHeight: number;
                    public static Keyboard_keyWidth: number;
                    public static Keyboard_verticalGap: number;
                    public static Keyframe: number[];
                    public static Keyframe_fraction: number;
                    public static Keyframe_interpolator: number;
                    public static Keyframe_value: number;
                    public static Keyframe_valueType: number;
                    public static KeyguardGlowStripView: number[];
                    public static KeyguardGlowStripView_dotSize: number;
                    public static KeyguardGlowStripView_glowDot: number;
                    public static KeyguardGlowStripView_leftToRight: number;
                    public static KeyguardGlowStripView_numDots: number;
                    public static LayerDrawable: number[];
                    public static LayerDrawableItem: number[];
                    public static LayerDrawableItem_bottom: number;
                    public static LayerDrawableItem_drawable: number;
                    public static LayerDrawableItem_end: number;
                    public static LayerDrawableItem_gravity: number;
                    public static LayerDrawableItem_height: number;
                    public static LayerDrawableItem_id: number;
                    public static LayerDrawableItem_left: number;
                    public static LayerDrawableItem_right: number;
                    public static LayerDrawableItem_start: number;
                    public static LayerDrawableItem_top: number;
                    public static LayerDrawableItem_width: number;
                    public static LayerDrawable_autoMirrored: number;
                    public static LayerDrawable_opacity: number;
                    public static LayerDrawable_paddingBottom: number;
                    public static LayerDrawable_paddingEnd: number;
                    public static LayerDrawable_paddingLeft: number;
                    public static LayerDrawable_paddingMode: number;
                    public static LayerDrawable_paddingRight: number;
                    public static LayerDrawable_paddingStart: number;
                    public static LayerDrawable_paddingTop: number;
                    public static LayoutAnimation: number[];
                    public static LayoutAnimation_animation: number;
                    public static LayoutAnimation_animationOrder: number;
                    public static LayoutAnimation_delay: number;
                    public static LayoutAnimation_interpolator: number;
                    public static LevelListDrawableItem: number[];
                    public static LevelListDrawableItem_drawable: number;
                    public static LevelListDrawableItem_maxLevel: number;
                    public static LevelListDrawableItem_minLevel: number;
                    public static Lighting: number[];
                    public static Lighting_ambientShadowAlpha: number;
                    public static Lighting_lightRadius: number;
                    public static Lighting_lightY: number;
                    public static Lighting_lightZ: number;
                    public static Lighting_spotShadowAlpha: number;
                    public static LinearLayout: number[];
                    public static LinearLayout_Layout: number[];
                    public static LinearLayout_Layout_layout_gravity: number;
                    public static LinearLayout_Layout_layout_height: number;
                    public static LinearLayout_Layout_layout_weight: number;
                    public static LinearLayout_Layout_layout_width: number;
                    public static LinearLayout_baselineAligned: number;
                    public static LinearLayout_baselineAlignedChildIndex: number;
                    public static LinearLayout_divider: number;
                    public static LinearLayout_dividerPadding: number;
                    public static LinearLayout_gravity: number;
                    public static LinearLayout_measureWithLargestChild: number;
                    public static LinearLayout_orientation: number;
                    public static LinearLayout_showDividers: number;
                    public static LinearLayout_weightSum: number;
                    public static ListPopupWindow: number[];
                    public static ListPopupWindow_dropDownHorizontalOffset: number;
                    public static ListPopupWindow_dropDownVerticalOffset: number;
                    public static ListPreference: number[];
                    public static ListPreference_entries: number;
                    public static ListPreference_entryValues: number;
                    public static ListView: number[];
                    public static ListView_divider: number;
                    public static ListView_dividerHeight: number;
                    public static ListView_entries: number;
                    public static ListView_footerDividersEnabled: number;
                    public static ListView_headerDividersEnabled: number;
                    public static ListView_overScrollFooter: number;
                    public static ListView_overScrollHeader: number;
                    public static LockPatternView: number[];
                    public static LockPatternView_aspect: number;
                    public static LockPatternView_errorColor: number;
                    public static LockPatternView_pathColor: number;
                    public static LockPatternView_regularColor: number;
                    public static LockPatternView_successColor: number;
                    public static MapView: number[];
                    public static MapView_apiKey: number;
                    public static MaterialProgressDrawable: number[];
                    public static MaterialProgressDrawable_color: number;
                    public static MaterialProgressDrawable_height: number;
                    public static MaterialProgressDrawable_innerRadius: number;
                    public static MaterialProgressDrawable_thickness: number;
                    public static MaterialProgressDrawable_visible: number;
                    public static MaterialProgressDrawable_width: number;
                    public static MediaRouteButton: number[];
                    public static MediaRouteButton_externalRouteEnabledDrawable: number;
                    public static MediaRouteButton_mediaRouteTypes: number;
                    public static MediaRouteButton_minHeight: number;
                    public static MediaRouteButton_minWidth: number;
                    public static Menu: number[];
                    public static MenuGroup: number[];
                    public static MenuGroup_checkableBehavior: number;
                    public static MenuGroup_enabled: number;
                    public static MenuGroup_id: number;
                    public static MenuGroup_menuCategory: number;
                    public static MenuGroup_orderInCategory: number;
                    public static MenuGroup_visible: number;
                    public static MenuItem: number[];
                    public static MenuItemCheckedFocusedState: number[];
                    public static MenuItemCheckedFocusedState_state_checkable: number;
                    public static MenuItemCheckedFocusedState_state_checked: number;
                    public static MenuItemCheckedFocusedState_state_focused: number;
                    public static MenuItemCheckedState: number[];
                    public static MenuItemCheckedState_state_checkable: number;
                    public static MenuItemCheckedState_state_checked: number;
                    public static MenuItemUncheckedFocusedState: number[];
                    public static MenuItemUncheckedFocusedState_state_checkable: number;
                    public static MenuItemUncheckedFocusedState_state_focused: number;
                    public static MenuItemUncheckedState: number[];
                    public static MenuItemUncheckedState_state_checkable: number;
                    public static MenuItem_actionLayout: number;
                    public static MenuItem_actionProviderClass: number;
                    public static MenuItem_actionViewClass: number;
                    public static MenuItem_alphabeticModifiers: number;
                    public static MenuItem_alphabeticShortcut: number;
                    public static MenuItem_checkable: number;
                    public static MenuItem_checked: number;
                    public static MenuItem_contentDescription: number;
                    public static MenuItem_enabled: number;
                    public static MenuItem_icon: number;
                    public static MenuItem_iconTint: number;
                    public static MenuItem_iconTintMode: number;
                    public static MenuItem_id: number;
                    public static MenuItem_menuCategory: number;
                    public static MenuItem_numericModifiers: number;
                    public static MenuItem_numericShortcut: number;
                    public static MenuItem_onClick: number;
                    public static MenuItem_orderInCategory: number;
                    public static MenuItem_showAsAction: number;
                    public static MenuItem_title: number;
                    public static MenuItem_titleCondensed: number;
                    public static MenuItem_tooltipText: number;
                    public static MenuItem_visible: number;
                    public static MenuView: number[];
                    public static MenuView_headerBackground: number;
                    public static MenuView_horizontalDivider: number;
                    public static MenuView_itemBackground: number;
                    public static MenuView_itemIconDisabledAlpha: number;
                    public static MenuView_itemTextAppearance: number;
                    public static MenuView_preserveIconSpacing: number;
                    public static MenuView_subMenuArrow: number;
                    public static MenuView_verticalDivider: number;
                    public static MenuView_windowAnimationStyle: number;
                    public static MessagingLinearLayout: number[];
                    public static MessagingLinearLayout_spacing: number;
                    public static MultiSelectListPreference: number[];
                    public static MultiSelectListPreference_entries: number;
                    public static MultiSelectListPreference_entryValues: number;
                    public static Nfcid2Filter: number[];
                    public static Nfcid2Filter_name: number;
                    public static NinePatchDrawable: number[];
                    public static NinePatchDrawable_alpha: number;
                    public static NinePatchDrawable_autoMirrored: number;
                    public static NinePatchDrawable_dither: number;
                    public static NinePatchDrawable_src: number;
                    public static NinePatchDrawable_tint: number;
                    public static NinePatchDrawable_tintMode: number;
                    public static NotificationTheme: number[];
                    public static NotificationTheme_notificationHeaderIconSize: number;
                    public static NotificationTheme_notificationHeaderStyle: number;
                    public static NotificationTheme_notificationHeaderTextAppearance: number;
                    public static NumberPicker: number[];
                    public static NumberPicker_hideWheelUntilFocused: number;
                    public static NumberPicker_internalLayout: number;
                    public static NumberPicker_internalMaxHeight: number;
                    public static NumberPicker_internalMaxWidth: number;
                    public static NumberPicker_internalMinHeight: number;
                    public static NumberPicker_internalMinWidth: number;
                    public static NumberPicker_selectionDivider: number;
                    public static NumberPicker_selectionDividerHeight: number;
                    public static NumberPicker_selectionDividersDistance: number;
                    public static NumberPicker_solidColor: number;
                    public static NumberPicker_virtualButtonPressedDrawable: number;
                    public static OffHostApduService: number[];
                    public static OffHostApduService_apduServiceBanner: number;
                    public static OffHostApduService_description: number;
                    public static OffHostApduService_settingsActivity: number;
                    public static OvershootInterpolator: number[];
                    public static OvershootInterpolator_tension: number;
                    public static PagedView: number[];
                    public static PagedView_pageSpacing: number;
                    public static PagedView_scrollIndicatorPaddingLeft: number;
                    public static PagedView_scrollIndicatorPaddingRight: number;
                    public static PathInterpolator: number[];
                    public static PathInterpolator_controlX1: number;
                    public static PathInterpolator_controlX2: number;
                    public static PathInterpolator_controlY1: number;
                    public static PathInterpolator_controlY2: number;
                    public static PathInterpolator_pathData: number;
                    public static PatternPathMotion: number[];
                    public static PatternPathMotion_patternPathData: number;
                    public static Pointer: number[];
                    public static PointerIcon: number[];
                    public static PointerIcon_bitmap: number;
                    public static PointerIcon_hotSpotX: number;
                    public static PointerIcon_hotSpotY: number;
                    public static Pointer_pointerIconAlias: number;
                    public static Pointer_pointerIconAllScroll: number;
                    public static Pointer_pointerIconArrow: number;
                    public static Pointer_pointerIconCell: number;
                    public static Pointer_pointerIconContextMenu: number;
                    public static Pointer_pointerIconCopy: number;
                    public static Pointer_pointerIconCrosshair: number;
                    public static Pointer_pointerIconGrab: number;
                    public static Pointer_pointerIconGrabbing: number;
                    public static Pointer_pointerIconHand: number;
                    public static Pointer_pointerIconHelp: number;
                    public static Pointer_pointerIconHorizontalDoubleArrow: number;
                    public static Pointer_pointerIconNodrop: number;
                    public static Pointer_pointerIconSpotAnchor: number;
                    public static Pointer_pointerIconSpotHover: number;
                    public static Pointer_pointerIconSpotTouch: number;
                    public static Pointer_pointerIconText: number;
                    public static Pointer_pointerIconTopLeftDiagonalDoubleArrow: number;
                    public static Pointer_pointerIconTopRightDiagonalDoubleArrow: number;
                    public static Pointer_pointerIconVerticalDoubleArrow: number;
                    public static Pointer_pointerIconVerticalText: number;
                    public static Pointer_pointerIconWait: number;
                    public static Pointer_pointerIconZoomIn: number;
                    public static Pointer_pointerIconZoomOut: number;
                    public static PopupWindow: number[];
                    public static PopupWindowBackgroundState: number[];
                    public static PopupWindowBackgroundState_state_above_anchor: number;
                    public static PopupWindow_overlapAnchor: number;
                    public static PopupWindow_popupAnimationStyle: number;
                    public static PopupWindow_popupBackground: number;
                    public static PopupWindow_popupElevation: number;
                    public static PopupWindow_popupEnterTransition: number;
                    public static PopupWindow_popupExitTransition: number;
                    public static Preference: number[];
                    public static PreferenceActivity: number[];
                    public static PreferenceActivity_headerLayout: number;
                    public static PreferenceActivity_headerRemoveIconIfEmpty: number;
                    public static PreferenceActivity_layout: number;
                    public static PreferenceFragment: number[];
                    public static PreferenceFragment_divider: number;
                    public static PreferenceFragment_layout: number;
                    public static PreferenceFrameLayout: number[];
                    public static PreferenceFrameLayout_Layout: number[];
                    public static PreferenceFrameLayout_Layout_layout_removeBorders: number;
                    public static PreferenceFrameLayout_borderBottom: number;
                    public static PreferenceFrameLayout_borderLeft: number;
                    public static PreferenceFrameLayout_borderRight: number;
                    public static PreferenceFrameLayout_borderTop: number;
                    public static PreferenceGroup: number[];
                    public static PreferenceGroup_orderingFromXml: number;
                    public static PreferenceHeader: number[];
                    public static PreferenceHeader_breadCrumbShortTitle: number;
                    public static PreferenceHeader_breadCrumbTitle: number;
                    public static PreferenceHeader_fragment: number;
                    public static PreferenceHeader_icon: number;
                    public static PreferenceHeader_id: number;
                    public static PreferenceHeader_summary: number;
                    public static PreferenceHeader_title: number;
                    public static PreferenceScreen: number[];
                    public static PreferenceScreen_divider: number;
                    public static PreferenceScreen_screenLayout: number;
                    public static Preference_defaultValue: number;
                    public static Preference_dependency: number;
                    public static Preference_enabled: number;
                    public static Preference_fragment: number;
                    public static Preference_icon: number;
                    public static Preference_iconSpaceReserved: number;
                    public static Preference_key: number;
                    public static Preference_layout: number;
                    public static Preference_order: number;
                    public static Preference_persistent: number;
                    public static Preference_recycleEnabled: number;
                    public static Preference_selectable: number;
                    public static Preference_shouldDisableView: number;
                    public static Preference_singleLineTitle: number;
                    public static Preference_summary: number;
                    public static Preference_title: number;
                    public static Preference_widgetLayout: number;
                    public static PrintService: number[];
                    public static PrintService_addPrintersActivity: number;
                    public static PrintService_advancedPrintOptionsActivity: number;
                    public static PrintService_settingsActivity: number;
                    public static PrintService_vendor: number;
                    public static ProgressBar: number[];
                    public static ProgressBar_animationResolution: number;
                    public static ProgressBar_backgroundTint: number;
                    public static ProgressBar_backgroundTintMode: number;
                    public static ProgressBar_indeterminate: number;
                    public static ProgressBar_indeterminateBehavior: number;
                    public static ProgressBar_indeterminateDrawable: number;
                    public static ProgressBar_indeterminateDuration: number;
                    public static ProgressBar_indeterminateOnly: number;
                    public static ProgressBar_indeterminateTint: number;
                    public static ProgressBar_indeterminateTintMode: number;
                    public static ProgressBar_interpolator: number;
                    public static ProgressBar_max: number;
                    public static ProgressBar_maxHeight: number;
                    public static ProgressBar_maxWidth: number;
                    public static ProgressBar_min: number;
                    public static ProgressBar_minHeight: number;
                    public static ProgressBar_minWidth: number;
                    public static ProgressBar_mirrorForRtl: number;
                    public static ProgressBar_progress: number;
                    public static ProgressBar_progressBackgroundTint: number;
                    public static ProgressBar_progressBackgroundTintMode: number;
                    public static ProgressBar_progressDrawable: number;
                    public static ProgressBar_progressTint: number;
                    public static ProgressBar_progressTintMode: number;
                    public static ProgressBar_secondaryProgress: number;
                    public static ProgressBar_secondaryProgressTint: number;
                    public static ProgressBar_secondaryProgressTintMode: number;
                    public static PropertyAnimator: number[];
                    public static PropertyAnimator_pathData: number;
                    public static PropertyAnimator_propertyName: number;
                    public static PropertyAnimator_propertyXName: number;
                    public static PropertyAnimator_propertyYName: number;
                    public static PropertyValuesHolder: number[];
                    public static PropertyValuesHolder_propertyName: number;
                    public static PropertyValuesHolder_valueFrom: number;
                    public static PropertyValuesHolder_valueTo: number;
                    public static PropertyValuesHolder_valueType: number;
                    public static QuickContactBadge: number[];
                    public static QuickContactBadge_quickContactWindowSize: number;
                    public static RadioGroup: number[];
                    public static RadioGroup_checkedButton: number;
                    public static RadioGroup_orientation: number;
                    public static RatingBar: number[];
                    public static RatingBar_isIndicator: number;
                    public static RatingBar_numStars: number;
                    public static RatingBar_rating: number;
                    public static RatingBar_stepSize: number;
                    public static RatingDefinition: number[];
                    public static RatingDefinition_contentAgeHint: number;
                    public static RatingDefinition_description: number;
                    public static RatingDefinition_name: number;
                    public static RatingDefinition_title: number;
                    public static RatingSystemDefinition: number[];
                    public static RatingSystemDefinition_country: number;
                    public static RatingSystemDefinition_description: number;
                    public static RatingSystemDefinition_name: number;
                    public static RatingSystemDefinition_title: number;
                    public static RecognitionService: number[];
                    public static RecognitionService_settingsActivity: number;
                    public static RecycleListView: number[];
                    public static RecycleListView_paddingBottomNoButtons: number;
                    public static RecycleListView_paddingTopNoTitle: number;
                    public static RecyclerView: number[];
                    public static RecyclerView_descendantFocusability: number;
                    public static RecyclerView_layoutManager: number;
                    public static RecyclerView_orientation: number;
                    public static RecyclerView_reverseLayout: number;
                    public static RecyclerView_spanCount: number;
                    public static RecyclerView_stackFromEnd: number;
                    public static RelativeLayout: number[];
                    public static RelativeLayout_Layout: number[];
                    public static RelativeLayout_Layout_layout_above: number;
                    public static RelativeLayout_Layout_layout_alignBaseline: number;
                    public static RelativeLayout_Layout_layout_alignBottom: number;
                    public static RelativeLayout_Layout_layout_alignEnd: number;
                    public static RelativeLayout_Layout_layout_alignLeft: number;
                    public static RelativeLayout_Layout_layout_alignParentBottom: number;
                    public static RelativeLayout_Layout_layout_alignParentEnd: number;
                    public static RelativeLayout_Layout_layout_alignParentLeft: number;
                    public static RelativeLayout_Layout_layout_alignParentRight: number;
                    public static RelativeLayout_Layout_layout_alignParentStart: number;
                    public static RelativeLayout_Layout_layout_alignParentTop: number;
                    public static RelativeLayout_Layout_layout_alignRight: number;
                    public static RelativeLayout_Layout_layout_alignStart: number;
                    public static RelativeLayout_Layout_layout_alignTop: number;
                    public static RelativeLayout_Layout_layout_alignWithParentIfMissing: number;
                    public static RelativeLayout_Layout_layout_below: number;
                    public static RelativeLayout_Layout_layout_centerHorizontal: number;
                    public static RelativeLayout_Layout_layout_centerInParent: number;
                    public static RelativeLayout_Layout_layout_centerVertical: number;
                    public static RelativeLayout_Layout_layout_toEndOf: number;
                    public static RelativeLayout_Layout_layout_toLeftOf: number;
                    public static RelativeLayout_Layout_layout_toRightOf: number;
                    public static RelativeLayout_Layout_layout_toStartOf: number;
                    public static RelativeLayout_gravity: number;
                    public static RelativeLayout_ignoreGravity: number;
                    public static ResolverDrawerLayout: number[];
                    public static ResolverDrawerLayout_LayoutParams: number[];
                    public static ResolverDrawerLayout_LayoutParams_layout_alwaysShow: number;
                    public static ResolverDrawerLayout_LayoutParams_layout_gravity: number;
                    public static ResolverDrawerLayout_LayoutParams_layout_hasNestedScrollIndicator: number;
                    public static ResolverDrawerLayout_LayoutParams_layout_ignoreOffset: number;
                    public static ResolverDrawerLayout_maxCollapsedHeight: number;
                    public static ResolverDrawerLayout_maxCollapsedHeightSmall: number;
                    public static ResolverDrawerLayout_maxWidth: number;
                    public static RestrictionEntry: number[];
                    public static RestrictionEntry_defaultValue: number;
                    public static RestrictionEntry_description: number;
                    public static RestrictionEntry_entries: number;
                    public static RestrictionEntry_entryValues: number;
                    public static RestrictionEntry_key: number;
                    public static RestrictionEntry_restrictionType: number;
                    public static RestrictionEntry_title: number;
                    public static RingtonePreference: number[];
                    public static RingtonePreference_ringtoneType: number;
                    public static RingtonePreference_showDefault: number;
                    public static RingtonePreference_showSilent: number;
                    public static RippleDrawable: number[];
                    public static RippleDrawable_color: number;
                    public static RippleDrawable_radius: number;
                    public static RotateAnimation: number[];
                    public static RotateAnimation_fromDegrees: number;
                    public static RotateAnimation_pivotX: number;
                    public static RotateAnimation_pivotY: number;
                    public static RotateAnimation_toDegrees: number;
                    public static RotateDrawable: number[];
                    public static RotateDrawable_drawable: number;
                    public static RotateDrawable_fromDegrees: number;
                    public static RotateDrawable_pivotX: number;
                    public static RotateDrawable_pivotY: number;
                    public static RotateDrawable_toDegrees: number;
                    public static RotateDrawable_visible: number;
                    public static ScaleAnimation: number[];
                    public static ScaleAnimation_fromXScale: number;
                    public static ScaleAnimation_fromYScale: number;
                    public static ScaleAnimation_pivotX: number;
                    public static ScaleAnimation_pivotY: number;
                    public static ScaleAnimation_toXScale: number;
                    public static ScaleAnimation_toYScale: number;
                    public static ScaleDrawable: number[];
                    public static ScaleDrawable_drawable: number;
                    public static ScaleDrawable_level: number;
                    public static ScaleDrawable_scaleGravity: number;
                    public static ScaleDrawable_scaleHeight: number;
                    public static ScaleDrawable_scaleWidth: number;
                    public static ScaleDrawable_useIntrinsicSizeAsMinimum: number;
                    public static ScrollView: number[];
                    public static ScrollView_fillViewport: number;
                    public static SearchView: number[];
                    public static SearchView_closeIcon: number;
                    public static SearchView_commitIcon: number;
                    public static SearchView_defaultQueryHint: number;
                    public static SearchView_goIcon: number;
                    public static SearchView_iconifiedByDefault: number;
                    public static SearchView_imeOptions: number;
                    public static SearchView_inputType: number;
                    public static SearchView_layout: number;
                    public static SearchView_maxWidth: number;
                    public static SearchView_queryBackground: number;
                    public static SearchView_queryHint: number;
                    public static SearchView_searchHintIcon: number;
                    public static SearchView_searchIcon: number;
                    public static SearchView_submitBackground: number;
                    public static SearchView_suggestionRowLayout: number;
                    public static SearchView_voiceIcon: number;
                    public static Searchable: number[];
                    public static SearchableActionKey: number[];
                    public static SearchableActionKey_keycode: number;
                    public static SearchableActionKey_queryActionMsg: number;
                    public static SearchableActionKey_suggestActionMsg: number;
                    public static SearchableActionKey_suggestActionMsgColumn: number;
                    public static Searchable_autoUrlDetect: number;
                    public static Searchable_hint: number;
                    public static Searchable_icon: number;
                    public static Searchable_imeOptions: number;
                    public static Searchable_includeInGlobalSearch: number;
                    public static Searchable_inputType: number;
                    public static Searchable_label: number;
                    public static Searchable_queryAfterZeroResults: number;
                    public static Searchable_searchButtonText: number;
                    public static Searchable_searchMode: number;
                    public static Searchable_searchSettingsDescription: number;
                    public static Searchable_searchSuggestAuthority: number;
                    public static Searchable_searchSuggestIntentAction: number;
                    public static Searchable_searchSuggestIntentData: number;
                    public static Searchable_searchSuggestPath: number;
                    public static Searchable_searchSuggestSelection: number;
                    public static Searchable_searchSuggestThreshold: number;
                    public static Searchable_voiceLanguage: number;
                    public static Searchable_voiceLanguageModel: number;
                    public static Searchable_voiceMaxResults: number;
                    public static Searchable_voicePromptText: number;
                    public static Searchable_voiceSearchMode: number;
                    public static SeekBar: number[];
                    public static SeekBarPreference: number[];
                    public static SeekBarPreference_adjustable: number;
                    public static SeekBarPreference_layout: number;
                    public static SeekBarPreference_showSeekBarValue: number;
                    public static SeekBar_splitTrack: number;
                    public static SeekBar_thumb: number;
                    public static SeekBar_thumbOffset: number;
                    public static SeekBar_thumbTint: number;
                    public static SeekBar_thumbTintMode: number;
                    public static SeekBar_tickMark: number;
                    public static SeekBar_tickMarkTint: number;
                    public static SeekBar_tickMarkTintMode: number;
                    public static SeekBar_useDisabledAlpha: number;
                    public static SelectionModeDrawables: number[];
                    public static SelectionModeDrawables_actionModeCopyDrawable: number;
                    public static SelectionModeDrawables_actionModeCutDrawable: number;
                    public static SelectionModeDrawables_actionModePasteDrawable: number;
                    public static SelectionModeDrawables_actionModeSelectAllDrawable: number;
                    public static SettingInjectorService: number[];
                    public static SettingInjectorService_icon: number;
                    public static SettingInjectorService_settingsActivity: number;
                    public static SettingInjectorService_title: number;
                    public static ShapeDrawable: number[];
                    public static ShapeDrawablePadding: number[];
                    public static ShapeDrawablePadding_bottom: number;
                    public static ShapeDrawablePadding_left: number;
                    public static ShapeDrawablePadding_right: number;
                    public static ShapeDrawablePadding_top: number;
                    public static ShapeDrawable_color: number;
                    public static ShapeDrawable_dither: number;
                    public static ShapeDrawable_height: number;
                    public static ShapeDrawable_tint: number;
                    public static ShapeDrawable_tintMode: number;
                    public static ShapeDrawable_width: number;
                    public static Shortcut: number[];
                    public static ShortcutCategories: number[];
                    public static ShortcutCategories_name: number;
                    public static Shortcut_enabled: number;
                    public static Shortcut_icon: number;
                    public static Shortcut_shortcutDisabledMessage: number;
                    public static Shortcut_shortcutId: number;
                    public static Shortcut_shortcutLongLabel: number;
                    public static Shortcut_shortcutShortLabel: number;
                    public static Slide: number[];
                    public static Slide_slideEdge: number;
                    public static SlidingDrawer: number[];
                    public static SlidingDrawer_allowSingleTap: number;
                    public static SlidingDrawer_animateOnClick: number;
                    public static SlidingDrawer_bottomOffset: number;
                    public static SlidingDrawer_content: number;
                    public static SlidingDrawer_handle: number;
                    public static SlidingDrawer_orientation: number;
                    public static SlidingDrawer_topOffset: number;
                    public static SlidingTab: number[];
                    public static SlidingTab_orientation: number;
                    public static SpellChecker: number[];
                    public static SpellChecker_Subtype: number[];
                    public static SpellChecker_Subtype_label: number;
                    public static SpellChecker_Subtype_languageTag: number;
                    public static SpellChecker_Subtype_subtypeExtraValue: number;
                    public static SpellChecker_Subtype_subtypeId: number;
                    public static SpellChecker_Subtype_subtypeLocale: number;
                    public static SpellChecker_label: number;
                    public static SpellChecker_settingsActivity: number;
                    public static Spinner: number[];
                    public static Spinner_disableChildrenWhenDisabled: number;
                    public static Spinner_dropDownSelector: number;
                    public static Spinner_dropDownWidth: number;
                    public static Spinner_gravity: number;
                    public static Spinner_popupBackground: number;
                    public static Spinner_popupElevation: number;
                    public static Spinner_popupPromptView: number;
                    public static Spinner_popupTheme: number;
                    public static Spinner_prompt: number;
                    public static Spinner_spinnerMode: number;
                    public static StackView: number[];
                    public static StackView_clickColor: number;
                    public static StackView_resOutColor: number;
                    public static StateListAnimatorItem: number[];
                    public static StateListAnimatorItem_animation: number;
                    public static StateListDrawable: number[];
                    public static StateListDrawableItem: number[];
                    public static StateListDrawableItem_drawable: number;
                    public static StateListDrawable_autoMirrored: number;
                    public static StateListDrawable_constantSize: number;
                    public static StateListDrawable_dither: number;
                    public static StateListDrawable_enterFadeDuration: number;
                    public static StateListDrawable_exitFadeDuration: number;
                    public static StateListDrawable_variablePadding: number;
                    public static StateListDrawable_visible: number;
                    public static Storage: number[];
                    public static Storage_allowMassStorage: number;
                    public static Storage_emulated: number;
                    public static Storage_maxFileSize: number;
                    public static Storage_mountPoint: number;
                    public static Storage_mtpReserve: number;
                    public static Storage_primary: number;
                    public static Storage_removable: number;
                    public static Storage_storageDescription: number;
                    public static SuggestionSpan: number[];
                    public static SuggestionSpan_textUnderlineColor: number;
                    public static SuggestionSpan_textUnderlineThickness: number;
                    public static Switch: number[];
                    public static SwitchPreference: number[];
                    public static SwitchPreference_disableDependentsState: number;
                    public static SwitchPreference_summaryOff: number;
                    public static SwitchPreference_summaryOn: number;
                    public static SwitchPreference_switchTextOff: number;
                    public static SwitchPreference_switchTextOn: number;
                    public static Switch_showText: number;
                    public static Switch_splitTrack: number;
                    public static Switch_switchMinWidth: number;
                    public static Switch_switchPadding: number;
                    public static Switch_switchTextAppearance: number;
                    public static Switch_textOff: number;
                    public static Switch_textOn: number;
                    public static Switch_thumb: number;
                    public static Switch_thumbTextPadding: number;
                    public static Switch_thumbTint: number;
                    public static Switch_thumbTintMode: number;
                    public static Switch_track: number;
                    public static Switch_trackTint: number;
                    public static Switch_trackTintMode: number;
                    public static SyncAdapter: number[];
                    public static SyncAdapter_accountType: number;
                    public static SyncAdapter_allowParallelSyncs: number;
                    public static SyncAdapter_contentAuthority: number;
                    public static SyncAdapter_isAlwaysSyncable: number;
                    public static SyncAdapter_settingsActivity: number;
                    public static SyncAdapter_supportsUploading: number;
                    public static SyncAdapter_userVisible: number;
                    public static SystemCodeFilter: number[];
                    public static SystemCodeFilter_name: number;
                    public static TabWidget: number[];
                    public static TabWidget_divider: number;
                    public static TabWidget_tabLayout: number;
                    public static TabWidget_tabStripEnabled: number;
                    public static TabWidget_tabStripLeft: number;
                    public static TabWidget_tabStripRight: number;
                    public static TableLayout: number[];
                    public static TableLayout_collapseColumns: number;
                    public static TableLayout_shrinkColumns: number;
                    public static TableLayout_stretchColumns: number;
                    public static TableRow: number[];
                    public static TableRow_Cell: number[];
                    public static TableRow_Cell_layout_column: number;
                    public static TableRow_Cell_layout_span: number;
                    public static TextAppearance: number[];
                    public static TextAppearance_elegantTextHeight: number;
                    public static TextAppearance_fontFamily: number;
                    public static TextAppearance_fontFeatureSettings: number;
                    public static TextAppearance_letterSpacing: number;
                    public static TextAppearance_shadowColor: number;
                    public static TextAppearance_shadowDx: number;
                    public static TextAppearance_shadowDy: number;
                    public static TextAppearance_shadowRadius: number;
                    public static TextAppearance_textAllCaps: number;
                    public static TextAppearance_textColor: number;
                    public static TextAppearance_textColorHighlight: number;
                    public static TextAppearance_textColorHint: number;
                    public static TextAppearance_textColorLink: number;
                    public static TextAppearance_textSize: number;
                    public static TextAppearance_textStyle: number;
                    public static TextAppearance_typeface: number;
                    public static TextClock: number[];
                    public static TextClock_format12Hour: number;
                    public static TextClock_format24Hour: number;
                    public static TextClock_timeZone: number;
                    public static TextSwitcher: number[];
                    public static TextToSpeechEngine: number[];
                    public static TextToSpeechEngine_settingsActivity: number;
                    public static TextView: number[];
                    public static TextViewAppearance: number[];
                    public static TextViewAppearance_textAppearance: number;
                    public static TextViewMultiLineBackgroundState: number[];
                    public static TextViewMultiLineBackgroundState_state_multiline: number;
                    public static TextView_allowUndo: number;
                    public static TextView_autoLink: number;
                    public static TextView_autoSizeMaxTextSize: number;
                    public static TextView_autoSizeMinTextSize: number;
                    public static TextView_autoSizePresetSizes: number;
                    public static TextView_autoSizeStepGranularity: number;
                    public static TextView_autoSizeTextType: number;
                    public static TextView_autoText: number;
                    public static TextView_breakStrategy: number;
                    public static TextView_bufferType: number;
                    public static TextView_capitalize: number;
                    public static TextView_cursorVisible: number;
                    public static TextView_digits: number;
                    public static TextView_drawableBottom: number;
                    public static TextView_drawableEnd: number;
                    public static TextView_drawableLeft: number;
                    public static TextView_drawablePadding: number;
                    public static TextView_drawableRight: number;
                    public static TextView_drawableStart: number;
                    public static TextView_drawableTint: number;
                    public static TextView_drawableTintMode: number;
                    public static TextView_drawableTop: number;
                    public static TextView_editable: number;
                    public static TextView_editorExtras: number;
                    public static TextView_elegantTextHeight: number;
                    public static TextView_ellipsize: number;
                    public static TextView_ems: number;
                    public static TextView_enabled: number;
                    public static TextView_fontFamily: number;
                    public static TextView_fontFeatureSettings: number;
                    public static TextView_freezesText: number;
                    public static TextView_gravity: number;
                    public static TextView_height: number;
                    public static TextView_hint: number;
                    public static TextView_hyphenationFrequency: number;
                    public static TextView_imeActionId: number;
                    public static TextView_imeActionLabel: number;
                    public static TextView_imeOptions: number;
                    public static TextView_includeFontPadding: number;
                    public static TextView_inputMethod: number;
                    public static TextView_inputType: number;
                    public static TextView_justificationMode: number;
                    public static TextView_letterSpacing: number;
                    public static TextView_lineSpacingExtra: number;
                    public static TextView_lineSpacingMultiplier: number;
                    public static TextView_lines: number;
                    public static TextView_linksClickable: number;
                    public static TextView_marqueeRepeatLimit: number;
                    public static TextView_maxEms: number;
                    public static TextView_maxHeight: number;
                    public static TextView_maxLength: number;
                    public static TextView_maxLines: number;
                    public static TextView_maxWidth: number;
                    public static TextView_minEms: number;
                    public static TextView_minHeight: number;
                    public static TextView_minLines: number;
                    public static TextView_minWidth: number;
                    public static TextView_numeric: number;
                    public static TextView_password: number;
                    public static TextView_phoneNumber: number;
                    public static TextView_privateImeOptions: number;
                    public static TextView_scrollHorizontally: number;
                    public static TextView_selectAllOnFocus: number;
                    public static TextView_shadowColor: number;
                    public static TextView_shadowDx: number;
                    public static TextView_shadowDy: number;
                    public static TextView_shadowRadius: number;
                    public static TextView_singleLine: number;
                    public static TextView_text: number;
                    public static TextView_textAllCaps: number;
                    public static TextView_textAppearance: number;
                    public static TextView_textColor: number;
                    public static TextView_textColorHighlight: number;
                    public static TextView_textColorHint: number;
                    public static TextView_textColorLink: number;
                    public static TextView_textCursorDrawable: number;
                    public static TextView_textEditNoPasteWindowLayout: number;
                    public static TextView_textEditPasteWindowLayout: number;
                    public static TextView_textEditSideNoPasteWindowLayout: number;
                    public static TextView_textEditSidePasteWindowLayout: number;
                    public static TextView_textEditSuggestionContainerLayout: number;
                    public static TextView_textEditSuggestionHighlightStyle: number;
                    public static TextView_textEditSuggestionItemLayout: number;
                    public static TextView_textIsSelectable: number;
                    public static TextView_textScaleX: number;
                    public static TextView_textSelectHandle: number;
                    public static TextView_textSelectHandleLeft: number;
                    public static TextView_textSelectHandleRight: number;
                    public static TextView_textSize: number;
                    public static TextView_textStyle: number;
                    public static TextView_typeface: number;
                    public static TextView_width: number;
                    public static Theme: number[];
                    public static Theme_absListViewStyle: number;
                    public static Theme_accessibilityFocusedDrawable: number;
                    public static Theme_actionBarDivider: number;
                    public static Theme_actionBarItemBackground: number;
                    public static Theme_actionBarPopupTheme: number;
                    public static Theme_actionBarSize: number;
                    public static Theme_actionBarSplitStyle: number;
                    public static Theme_actionBarStyle: number;
                    public static Theme_actionBarTabBarStyle: number;
                    public static Theme_actionBarTabStyle: number;
                    public static Theme_actionBarTabTextStyle: number;
                    public static Theme_actionBarTheme: number;
                    public static Theme_actionBarWidgetTheme: number;
                    public static Theme_actionButtonStyle: number;
                    public static Theme_actionDropDownStyle: number;
                    public static Theme_actionMenuTextAppearance: number;
                    public static Theme_actionMenuTextColor: number;
                    public static Theme_actionModeBackground: number;
                    public static Theme_actionModeCloseButtonStyle: number;
                    public static Theme_actionModeCloseDrawable: number;
                    public static Theme_actionModeCopyDrawable: number;
                    public static Theme_actionModeCutDrawable: number;
                    public static Theme_actionModeFindDrawable: number;
                    public static Theme_actionModePasteDrawable: number;
                    public static Theme_actionModePopupWindowStyle: number;
                    public static Theme_actionModeSelectAllDrawable: number;
                    public static Theme_actionModeShareDrawable: number;
                    public static Theme_actionModeSplitBackground: number;
                    public static Theme_actionModeStyle: number;
                    public static Theme_actionModeWebSearchDrawable: number;
                    public static Theme_actionOverflowButtonStyle: number;
                    public static Theme_actionOverflowMenuStyle: number;
                    public static Theme_activatedBackgroundIndicator: number;
                    public static Theme_activityChooserViewStyle: number;
                    public static Theme_alertDialogButtonGroupStyle: number;
                    public static Theme_alertDialogCenterButtons: number;
                    public static Theme_alertDialogIcon: number;
                    public static Theme_alertDialogStyle: number;
                    public static Theme_alertDialogTheme: number;
                    public static Theme_ambientShadowAlpha: number;
                    public static Theme_autoCompleteTextViewStyle: number;
                    public static Theme_autofillDatasetPickerMaxHeight: number;
                    public static Theme_autofillDatasetPickerMaxWidth: number;
                    public static Theme_autofilledHighlight: number;
                    public static Theme_backgroundDimAmount: number;
                    public static Theme_backgroundDimEnabled: number;
                    public static Theme_borderlessButtonStyle: number;
                    public static Theme_buttonBarButtonStyle: number;
                    public static Theme_buttonBarNegativeButtonStyle: number;
                    public static Theme_buttonBarNeutralButtonStyle: number;
                    public static Theme_buttonBarPositiveButtonStyle: number;
                    public static Theme_buttonBarStyle: number;
                    public static Theme_buttonStyle: number;
                    public static Theme_buttonStyleInset: number;
                    public static Theme_buttonStyleSmall: number;
                    public static Theme_buttonStyleToggle: number;
                    public static Theme_calendarViewStyle: number;
                    public static Theme_candidatesTextStyleSpans: number;
                    public static Theme_checkBoxPreferenceStyle: number;
                    public static Theme_checkboxStyle: number;
                    public static Theme_checkedTextViewStyle: number;
                    public static Theme_colorAccent: number;
                    public static Theme_colorActivatedHighlight: number;
                    public static Theme_colorBackground: number;
                    public static Theme_colorBackgroundCacheHint: number;
                    public static Theme_colorBackgroundFloating: number;
                    public static Theme_colorButtonNormal: number;
                    public static Theme_colorControlActivated: number;
                    public static Theme_colorControlHighlight: number;
                    public static Theme_colorControlNormal: number;
                    public static Theme_colorEdgeEffect: number;
                    public static Theme_colorError: number;
                    public static Theme_colorFocusedHighlight: number;
                    public static Theme_colorForeground: number;
                    public static Theme_colorForegroundInverse: number;
                    public static Theme_colorLongPressedHighlight: number;
                    public static Theme_colorMultiSelectHighlight: number;
                    public static Theme_colorPressedHighlight: number;
                    public static Theme_colorPrimary: number;
                    public static Theme_colorPrimaryDark: number;
                    public static Theme_colorSecondary: number;
                    public static Theme_colorSwitchThumbNormal: number;
                    public static Theme_contextPopupMenuStyle: number;
                    public static Theme_datePickerDialogTheme: number;
                    public static Theme_datePickerStyle: number;
                    public static Theme_detailsElementBackground: number;
                    public static Theme_dialogCustomTitleDecorLayout: number;
                    public static Theme_dialogPreferenceStyle: number;
                    public static Theme_dialogPreferredPadding: number;
                    public static Theme_dialogTheme: number;
                    public static Theme_dialogTitleDecorLayout: number;
                    public static Theme_dialogTitleIconsDecorLayout: number;
                    public static Theme_disabledAlpha: number;
                    public static Theme_dividerHorizontal: number;
                    public static Theme_dividerVertical: number;
                    public static Theme_dropDownHintAppearance: number;
                    public static Theme_dropDownItemStyle: number;
                    public static Theme_dropDownListViewStyle: number;
                    public static Theme_dropDownSpinnerStyle: number;
                    public static Theme_dropdownListPreferredItemHeight: number;
                    public static Theme_editTextBackground: number;
                    public static Theme_editTextColor: number;
                    public static Theme_editTextPreferenceStyle: number;
                    public static Theme_editTextStyle: number;
                    public static Theme_errorMessageAboveBackground: number;
                    public static Theme_errorMessageBackground: number;
                    public static Theme_expandableListPreferredChildIndicatorLeft: number;
                    public static Theme_expandableListPreferredChildIndicatorRight: number;
                    public static Theme_expandableListPreferredChildPaddingLeft: number;
                    public static Theme_expandableListPreferredItemIndicatorLeft: number;
                    public static Theme_expandableListPreferredItemIndicatorRight: number;
                    public static Theme_expandableListPreferredItemPaddingLeft: number;
                    public static Theme_expandableListViewStyle: number;
                    public static Theme_expandableListViewWhiteStyle: number;
                    public static Theme_fastScrollOverlayPosition: number;
                    public static Theme_fastScrollPreviewBackgroundLeft: number;
                    public static Theme_fastScrollPreviewBackgroundRight: number;
                    public static Theme_fastScrollTextColor: number;
                    public static Theme_fastScrollThumbDrawable: number;
                    public static Theme_fastScrollTrackDrawable: number;
                    public static Theme_findOnPageNextDrawable: number;
                    public static Theme_findOnPagePreviousDrawable: number;
                    public static Theme_fingerprintAuthDrawable: number;
                    public static Theme_floatingToolbarCloseDrawable: number;
                    public static Theme_floatingToolbarDividerColor: number;
                    public static Theme_floatingToolbarForegroundColor: number;
                    public static Theme_floatingToolbarItemBackgroundBorderlessDrawable: number;
                    public static Theme_floatingToolbarItemBackgroundDrawable: number;
                    public static Theme_floatingToolbarOpenDrawable: number;
                    public static Theme_floatingToolbarPopupBackgroundDrawable: number;
                    public static Theme_fragmentBreadCrumbsStyle: number;
                    public static Theme_galleryItemBackground: number;
                    public static Theme_galleryStyle: number;
                    public static Theme_gestureOverlayViewStyle: number;
                    public static Theme_gridViewStyle: number;
                    public static Theme_homeAsUpIndicator: number;
                    public static Theme_horizontalScrollViewStyle: number;
                    public static Theme_imageButtonStyle: number;
                    public static Theme_imageWellStyle: number;
                    public static Theme_isLightTheme: number;
                    public static Theme_lightRadius: number;
                    public static Theme_lightY: number;
                    public static Theme_lightZ: number;
                    public static Theme_listChoiceBackgroundIndicator: number;
                    public static Theme_listChoiceIndicatorMultiple: number;
                    public static Theme_listChoiceIndicatorSingle: number;
                    public static Theme_listDivider: number;
                    public static Theme_listDividerAlertDialog: number;
                    public static Theme_listMenuViewStyle: number;
                    public static Theme_listPopupWindowStyle: number;
                    public static Theme_listPreferredItemHeight: number;
                    public static Theme_listPreferredItemHeightLarge: number;
                    public static Theme_listPreferredItemHeightSmall: number;
                    public static Theme_listPreferredItemPaddingEnd: number;
                    public static Theme_listPreferredItemPaddingLeft: number;
                    public static Theme_listPreferredItemPaddingRight: number;
                    public static Theme_listPreferredItemPaddingStart: number;
                    public static Theme_listSeparatorTextViewStyle: number;
                    public static Theme_listViewStyle: number;
                    public static Theme_listViewWhiteStyle: number;
                    public static Theme_mapViewStyle: number;
                    public static Theme_mediaRouteButtonStyle: number;
                    public static Theme_numberPickerStyle: number;
                    public static Theme_panelBackground: number;
                    public static Theme_panelColorBackground: number;
                    public static Theme_panelColorForeground: number;
                    public static Theme_panelFullBackground: number;
                    public static Theme_panelMenuIsCompact: number;
                    public static Theme_panelMenuListTheme: number;
                    public static Theme_panelMenuListWidth: number;
                    public static Theme_panelTextAppearance: number;
                    public static Theme_popupMenuStyle: number;
                    public static Theme_popupWindowStyle: number;
                    public static Theme_preferenceActivityStyle: number;
                    public static Theme_preferenceCategoryStyle: number;
                    public static Theme_preferenceFragmentListStyle: number;
                    public static Theme_preferenceFragmentPaddingSide: number;
                    public static Theme_preferenceFragmentStyle: number;
                    public static Theme_preferenceFrameLayoutStyle: number;
                    public static Theme_preferenceHeaderPanelStyle: number;
                    public static Theme_preferenceInformationStyle: number;
                    public static Theme_preferenceLayoutChild: number;
                    public static Theme_preferenceListStyle: number;
                    public static Theme_preferencePanelStyle: number;
                    public static Theme_preferenceScreenStyle: number;
                    public static Theme_preferenceStyle: number;
                    public static Theme_presentationTheme: number;
                    public static Theme_primaryContentAlpha: number;
                    public static Theme_progressBarStyle: number;
                    public static Theme_progressBarStyleHorizontal: number;
                    public static Theme_progressBarStyleInverse: number;
                    public static Theme_progressBarStyleLarge: number;
                    public static Theme_progressBarStyleLargeInverse: number;
                    public static Theme_progressBarStyleSmall: number;
                    public static Theme_progressBarStyleSmallInverse: number;
                    public static Theme_progressBarStyleSmallTitle: number;
                    public static Theme_quickContactBadgeOverlay: number;
                    public static Theme_quickContactBadgeStyleSmallWindowLarge: number;
                    public static Theme_quickContactBadgeStyleSmallWindowMedium: number;
                    public static Theme_quickContactBadgeStyleSmallWindowSmall: number;
                    public static Theme_quickContactBadgeStyleWindowLarge: number;
                    public static Theme_quickContactBadgeStyleWindowMedium: number;
                    public static Theme_quickContactBadgeStyleWindowSmall: number;
                    public static Theme_radioButtonStyle: number;
                    public static Theme_ratingBarStyle: number;
                    public static Theme_ratingBarStyleIndicator: number;
                    public static Theme_ratingBarStyleSmall: number;
                    public static Theme_ringtonePreferenceStyle: number;
                    public static Theme_scrollViewStyle: number;
                    public static Theme_searchDialogTheme: number;
                    public static Theme_searchResultListItemHeight: number;
                    public static Theme_searchViewStyle: number;
                    public static Theme_searchWidgetCorpusItemBackground: number;
                    public static Theme_secondaryContentAlpha: number;
                    public static Theme_seekBarDialogPreferenceStyle: number;
                    public static Theme_seekBarPreferenceStyle: number;
                    public static Theme_seekBarStyle: number;
                    public static Theme_segmentedButtonStyle: number;
                    public static Theme_selectableItemBackground: number;
                    public static Theme_selectableItemBackgroundBorderless: number;
                    public static Theme_spinnerDropDownItemStyle: number;
                    public static Theme_spinnerItemStyle: number;
                    public static Theme_spinnerStyle: number;
                    public static Theme_spotShadowAlpha: number;
                    public static Theme_stackViewStyle: number;
                    public static Theme_starStyle: number;
                    public static Theme_switchPreferenceStyle: number;
                    public static Theme_switchStyle: number;
                    public static Theme_tabWidgetStyle: number;
                    public static Theme_textAppearance: number;
                    public static Theme_textAppearanceAutoCorrectionSuggestion: number;
                    public static Theme_textAppearanceButton: number;
                    public static Theme_textAppearanceEasyCorrectSuggestion: number;
                    public static Theme_textAppearanceInverse: number;
                    public static Theme_textAppearanceLarge: number;
                    public static Theme_textAppearanceLargeInverse: number;
                    public static Theme_textAppearanceLargePopupMenu: number;
                    public static Theme_textAppearanceListItem: number;
                    public static Theme_textAppearanceListItemSecondary: number;
                    public static Theme_textAppearanceListItemSmall: number;
                    public static Theme_textAppearanceMedium: number;
                    public static Theme_textAppearanceMediumInverse: number;
                    public static Theme_textAppearanceMisspelledSuggestion: number;
                    public static Theme_textAppearancePopupMenuHeader: number;
                    public static Theme_textAppearanceSearchResultSubtitle: number;
                    public static Theme_textAppearanceSearchResultTitle: number;
                    public static Theme_textAppearanceSmall: number;
                    public static Theme_textAppearanceSmallInverse: number;
                    public static Theme_textAppearanceSmallPopupMenu: number;
                    public static Theme_textCheckMark: number;
                    public static Theme_textCheckMarkInverse: number;
                    public static Theme_textColorAlertDialogListItem: number;
                    public static Theme_textColorHighlightInverse: number;
                    public static Theme_textColorHintInverse: number;
                    public static Theme_textColorLinkInverse: number;
                    public static Theme_textColorPrimary: number;
                    public static Theme_textColorPrimaryActivated: number;
                    public static Theme_textColorPrimaryDisableOnly: number;
                    public static Theme_textColorPrimaryInverse: number;
                    public static Theme_textColorPrimaryInverseDisableOnly: number;
                    public static Theme_textColorPrimaryInverseNoDisable: number;
                    public static Theme_textColorPrimaryNoDisable: number;
                    public static Theme_textColorSearchUrl: number;
                    public static Theme_textColorSecondary: number;
                    public static Theme_textColorSecondaryActivated: number;
                    public static Theme_textColorSecondaryInverse: number;
                    public static Theme_textColorSecondaryInverseNoDisable: number;
                    public static Theme_textColorSecondaryNoDisable: number;
                    public static Theme_textColorTertiary: number;
                    public static Theme_textColorTertiaryInverse: number;
                    public static Theme_textEditNoPasteWindowLayout: number;
                    public static Theme_textEditPasteWindowLayout: number;
                    public static Theme_textEditSideNoPasteWindowLayout: number;
                    public static Theme_textEditSidePasteWindowLayout: number;
                    public static Theme_textEditSuggestionContainerLayout: number;
                    public static Theme_textEditSuggestionHighlightStyle: number;
                    public static Theme_textEditSuggestionItemLayout: number;
                    public static Theme_textSelectHandle: number;
                    public static Theme_textSelectHandleLeft: number;
                    public static Theme_textSelectHandleRight: number;
                    public static Theme_textSelectHandleWindowStyle: number;
                    public static Theme_textSuggestionsWindowStyle: number;
                    public static Theme_textUnderlineColor: number;
                    public static Theme_textUnderlineThickness: number;
                    public static Theme_textViewStyle: number;
                    public static Theme_timePickerDialogTheme: number;
                    public static Theme_timePickerStyle: number;
                    public static Theme_toastFrameBackground: number;
                    public static Theme_toolbarStyle: number;
                    public static Theme_tooltipBackgroundColor: number;
                    public static Theme_tooltipForegroundColor: number;
                    public static Theme_tooltipFrameBackground: number;
                    public static Theme_webTextViewStyle: number;
                    public static Theme_webViewStyle: number;
                    public static Theme_windowActionBar: number;
                    public static Theme_windowActionBarFullscreenDecorLayout: number;
                    public static Theme_windowActionBarOverlay: number;
                    public static Theme_windowActionModeOverlay: number;
                    public static Theme_windowActivityTransitions: number;
                    public static Theme_windowAllowEnterTransitionOverlap: number;
                    public static Theme_windowAllowReturnTransitionOverlap: number;
                    public static Theme_windowAnimationStyle: number;
                    public static Theme_windowBackground: number;
                    public static Theme_windowBackgroundFallback: number;
                    public static Theme_windowCloseOnTouchOutside: number;
                    public static Theme_windowContentOverlay: number;
                    public static Theme_windowContentTransitionManager: number;
                    public static Theme_windowContentTransitions: number;
                    public static Theme_windowDisablePreview: number;
                    public static Theme_windowEnableSplitTouch: number;
                    public static Theme_windowEnterTransition: number;
                    public static Theme_windowExitTransition: number;
                    public static Theme_windowFrame: number;
                    public static Theme_windowFullscreen: number;
                    public static Theme_windowIsFloating: number;
                    public static Theme_windowIsTranslucent: number;
                    public static Theme_windowNoDisplay: number;
                    public static Theme_windowNoTitle: number;
                    public static Theme_windowOverscan: number;
                    public static Theme_windowReenterTransition: number;
                    public static Theme_windowReturnTransition: number;
                    public static Theme_windowSharedElementEnterTransition: number;
                    public static Theme_windowSharedElementExitTransition: number;
                    public static Theme_windowSharedElementReenterTransition: number;
                    public static Theme_windowSharedElementReturnTransition: number;
                    public static Theme_windowSharedElementsUseOverlay: number;
                    public static Theme_windowShowWallpaper: number;
                    public static Theme_windowSoftInputMode: number;
                    public static Theme_windowSwipeToDismiss: number;
                    public static Theme_windowTitleBackgroundStyle: number;
                    public static Theme_windowTitleSize: number;
                    public static Theme_windowTitleStyle: number;
                    public static Theme_windowTransitionBackgroundFadeDuration: number;
                    public static Theme_windowTranslucentNavigation: number;
                    public static Theme_windowTranslucentStatus: number;
                    public static Theme_yesNoPreferenceStyle: number;
                    public static TimePicker: number[];
                    public static TimePicker_amPmBackgroundColor: number;
                    public static TimePicker_amPmTextColor: number;
                    public static TimePicker_dialogMode: number;
                    public static TimePicker_headerAmPmTextAppearance: number;
                    public static TimePicker_headerBackground: number;
                    public static TimePicker_headerTextColor: number;
                    public static TimePicker_headerTimeTextAppearance: number;
                    public static TimePicker_internalLayout: number;
                    public static TimePicker_legacyLayout: number;
                    public static TimePicker_numbersBackgroundColor: number;
                    public static TimePicker_numbersInnerTextColor: number;
                    public static TimePicker_numbersSelectorColor: number;
                    public static TimePicker_numbersTextColor: number;
                    public static TimePicker_timePickerMode: number;
                    public static ToggleButton: number[];
                    public static ToggleButton_disabledAlpha: number;
                    public static ToggleButton_textOff: number;
                    public static ToggleButton_textOn: number;
                    public static Toolbar: number[];
                    public static Toolbar_LayoutParams: number[];
                    public static Toolbar_LayoutParams_layout_gravity: number;
                    public static Toolbar_buttonGravity: number;
                    public static Toolbar_collapseContentDescription: number;
                    public static Toolbar_collapseIcon: number;
                    public static Toolbar_contentInsetEnd: number;
                    public static Toolbar_contentInsetEndWithActions: number;
                    public static Toolbar_contentInsetLeft: number;
                    public static Toolbar_contentInsetRight: number;
                    public static Toolbar_contentInsetStart: number;
                    public static Toolbar_contentInsetStartWithNavigation: number;
                    public static Toolbar_gravity: number;
                    public static Toolbar_logo: number;
                    public static Toolbar_logoDescription: number;
                    public static Toolbar_maxButtonHeight: number;
                    public static Toolbar_navigationButtonStyle: number;
                    public static Toolbar_navigationContentDescription: number;
                    public static Toolbar_navigationIcon: number;
                    public static Toolbar_popupTheme: number;
                    public static Toolbar_subtitle: number;
                    public static Toolbar_subtitleTextAppearance: number;
                    public static Toolbar_subtitleTextColor: number;
                    public static Toolbar_title: number;
                    public static Toolbar_titleMargin: number;
                    public static Toolbar_titleMarginBottom: number;
                    public static Toolbar_titleMarginEnd: number;
                    public static Toolbar_titleMarginStart: number;
                    public static Toolbar_titleMarginTop: number;
                    public static Toolbar_titleTextAppearance: number;
                    public static Toolbar_titleTextColor: number;
                    public static Transition: number[];
                    public static TransitionManager: number[];
                    public static TransitionManager_fromScene: number;
                    public static TransitionManager_toScene: number;
                    public static TransitionManager_transition: number;
                    public static TransitionSet: number[];
                    public static TransitionSet_transitionOrdering: number;
                    public static TransitionTarget: number[];
                    public static TransitionTarget_excludeClass: number;
                    public static TransitionTarget_excludeId: number;
                    public static TransitionTarget_excludeName: number;
                    public static TransitionTarget_targetClass: number;
                    public static TransitionTarget_targetId: number;
                    public static TransitionTarget_targetName: number;
                    public static Transition_duration: number;
                    public static Transition_interpolator: number;
                    public static Transition_matchOrder: number;
                    public static Transition_startDelay: number;
                    public static TranslateAnimation: number[];
                    public static TranslateAnimation_fromXDelta: number;
                    public static TranslateAnimation_fromYDelta: number;
                    public static TranslateAnimation_toXDelta: number;
                    public static TranslateAnimation_toYDelta: number;
                    public static TrustAgent: number[];
                    public static TrustAgent_settingsActivity: number;
                    public static TrustAgent_summary: number;
                    public static TrustAgent_title: number;
                    public static TrustAgent_unlockProfile: number;
                    public static TvInputService: number[];
                    public static TvInputService_canRecord: number;
                    public static TvInputService_settingsActivity: number;
                    public static TvInputService_setupActivity: number;
                    public static TvInputService_tunerCount: number;
                    public static TwoLineListItem: number[];
                    public static TwoLineListItem_mode: number;
                    public static VectorDrawable: number[];
                    public static VectorDrawableClipPath: number[];
                    public static VectorDrawableClipPath_name: number;
                    public static VectorDrawableClipPath_pathData: number;
                    public static VectorDrawableGroup: number[];
                    public static VectorDrawableGroup_name: number;
                    public static VectorDrawableGroup_pivotX: number;
                    public static VectorDrawableGroup_pivotY: number;
                    public static VectorDrawableGroup_rotation: number;
                    public static VectorDrawableGroup_scaleX: number;
                    public static VectorDrawableGroup_scaleY: number;
                    public static VectorDrawableGroup_translateX: number;
                    public static VectorDrawableGroup_translateY: number;
                    public static VectorDrawablePath: number[];
                    public static VectorDrawablePath_fillAlpha: number;
                    public static VectorDrawablePath_fillColor: number;
                    public static VectorDrawablePath_fillType: number;
                    public static VectorDrawablePath_name: number;
                    public static VectorDrawablePath_pathData: number;
                    public static VectorDrawablePath_strokeAlpha: number;
                    public static VectorDrawablePath_strokeColor: number;
                    public static VectorDrawablePath_strokeLineCap: number;
                    public static VectorDrawablePath_strokeLineJoin: number;
                    public static VectorDrawablePath_strokeMiterLimit: number;
                    public static VectorDrawablePath_strokeWidth: number;
                    public static VectorDrawablePath_trimPathEnd: number;
                    public static VectorDrawablePath_trimPathOffset: number;
                    public static VectorDrawablePath_trimPathStart: number;
                    public static VectorDrawable_alpha: number;
                    public static VectorDrawable_autoMirrored: number;
                    public static VectorDrawable_height: number;
                    public static VectorDrawable_name: number;
                    public static VectorDrawable_opticalInsetBottom: number;
                    public static VectorDrawable_opticalInsetLeft: number;
                    public static VectorDrawable_opticalInsetRight: number;
                    public static VectorDrawable_opticalInsetTop: number;
                    public static VectorDrawable_tint: number;
                    public static VectorDrawable_tintMode: number;
                    public static VectorDrawable_viewportHeight: number;
                    public static VectorDrawable_viewportWidth: number;
                    public static VectorDrawable_width: number;
                    public static VerticalSlider_Layout: number[];
                    public static VerticalSlider_Layout_layout_scale: number;
                    public static View: number[];
                    public static ViewAnimator: number[];
                    public static ViewAnimator_animateFirstView: number;
                    public static ViewAnimator_inAnimation: number;
                    public static ViewAnimator_outAnimation: number;
                    public static ViewDrawableStates: number[];
                    public static ViewDrawableStates_state_accelerated: number;
                    public static ViewDrawableStates_state_activated: number;
                    public static ViewDrawableStates_state_drag_can_accept: number;
                    public static ViewDrawableStates_state_drag_hovered: number;
                    public static ViewDrawableStates_state_enabled: number;
                    public static ViewDrawableStates_state_focused: number;
                    public static ViewDrawableStates_state_hovered: number;
                    public static ViewDrawableStates_state_pressed: number;
                    public static ViewDrawableStates_state_selected: number;
                    public static ViewDrawableStates_state_window_focused: number;
                    public static ViewFlipper: number[];
                    public static ViewFlipper_autoStart: number;
                    public static ViewFlipper_flipInterval: number;
                    public static ViewGroup: number[];
                    public static ViewGroup_Layout: number[];
                    public static ViewGroup_Layout_layout_height: number;
                    public static ViewGroup_Layout_layout_width: number;
                    public static ViewGroup_MarginLayout: number[];
                    public static ViewGroup_MarginLayout_layout_height: number;
                    public static ViewGroup_MarginLayout_layout_margin: number;
                    public static ViewGroup_MarginLayout_layout_marginBottom: number;
                    public static ViewGroup_MarginLayout_layout_marginEnd: number;
                    public static ViewGroup_MarginLayout_layout_marginHorizontal: number;
                    public static ViewGroup_MarginLayout_layout_marginLeft: number;
                    public static ViewGroup_MarginLayout_layout_marginRight: number;
                    public static ViewGroup_MarginLayout_layout_marginStart: number;
                    public static ViewGroup_MarginLayout_layout_marginTop: number;
                    public static ViewGroup_MarginLayout_layout_marginVertical: number;
                    public static ViewGroup_MarginLayout_layout_width: number;
                    public static ViewGroup_addStatesFromChildren: number;
                    public static ViewGroup_alwaysDrawnWithCache: number;
                    public static ViewGroup_animateLayoutChanges: number;
                    public static ViewGroup_animationCache: number;
                    public static ViewGroup_clipChildren: number;
                    public static ViewGroup_clipToPadding: number;
                    public static ViewGroup_descendantFocusability: number;
                    public static ViewGroup_layoutAnimation: number;
                    public static ViewGroup_layoutMode: number;
                    public static ViewGroup_persistentDrawingCache: number;
                    public static ViewGroup_splitMotionEvents: number;
                    public static ViewGroup_touchscreenBlocksFocus: number;
                    public static ViewGroup_transitionGroup: number;
                    public static ViewStub: number[];
                    public static ViewStub_id: number;
                    public static ViewStub_inflatedId: number;
                    public static ViewStub_layout: number;
                    public static ViewSwitcher: number[];
                    public static ViewTag: number[];
                    public static ViewTag_id: number;
                    public static ViewTag_value: number;
                    public static View___removed0: number;
                    public static View___removed1: number;
                    public static View___removed3: number;
                    public static View_accessibilityLiveRegion: number;
                    public static View_accessibilityTraversalAfter: number;
                    public static View_accessibilityTraversalBefore: number;
                    public static View_alpha: number;
                    public static View_autofillHints: number;
                    public static View_background: number;
                    public static View_backgroundTint: number;
                    public static View_backgroundTintMode: number;
                    public static View_clickable: number;
                    public static View_contentDescription: number;
                    public static View_contextClickable: number;
                    public static View_defaultFocusHighlightEnabled: number;
                    public static View_drawingCacheQuality: number;
                    public static View_duplicateParentState: number;
                    public static View_elevation: number;
                    public static View_fadeScrollbars: number;
                    public static View_fadingEdge: number;
                    public static View_fadingEdgeLength: number;
                    public static View_filterTouchesWhenObscured: number;
                    public static View_fitsSystemWindows: number;
                    public static View_focusable: number;
                    public static View_focusableInTouchMode: number;
                    public static View_focusedByDefault: number;
                    public static View_forceHasOverlappingRendering: number;
                    public static View_foreground: number;
                    public static View_foregroundGravity: number;
                    public static View_foregroundInsidePadding: number;
                    public static View_foregroundTint: number;
                    public static View_foregroundTintMode: number;
                    public static View_hapticFeedbackEnabled: number;
                    public static View_id: number;
                    public static View_importantForAccessibility: number;
                    public static View_importantForAutofill: number;
                    public static View_isScrollContainer: number;
                    public static View_keepScreenOn: number;
                    public static View_keyboardNavigationCluster: number;
                    public static View_labelFor: number;
                    public static View_layerType: number;
                    public static View_layoutDirection: number;
                    public static View_longClickable: number;
                    public static View_minHeight: number;
                    public static View_minWidth: number;
                    public static View_nestedScrollingEnabled: number;
                    public static View_nextClusterForward: number;
                    public static View_nextFocusDown: number;
                    public static View_nextFocusForward: number;
                    public static View_nextFocusLeft: number;
                    public static View_nextFocusRight: number;
                    public static View_nextFocusUp: number;
                    public static View_onClick: number;
                    public static View_outlineProvider: number;
                    public static View_overScrollMode: number;
                    public static View_padding: number;
                    public static View_paddingBottom: number;
                    public static View_paddingEnd: number;
                    public static View_paddingHorizontal: number;
                    public static View_paddingLeft: number;
                    public static View_paddingRight: number;
                    public static View_paddingStart: number;
                    public static View_paddingTop: number;
                    public static View_paddingVertical: number;
                    public static View_pointerIcon: number;
                    public static View_requiresFadingEdge: number;
                    public static View_rotation: number;
                    public static View_rotationX: number;
                    public static View_rotationY: number;
                    public static View_saveEnabled: number;
                    public static View_scaleX: number;
                    public static View_scaleY: number;
                    public static View_scrollIndicators: number;
                    public static View_scrollX: number;
                    public static View_scrollY: number;
                    public static View_scrollbarAlwaysDrawHorizontalTrack: number;
                    public static View_scrollbarAlwaysDrawVerticalTrack: number;
                    public static View_scrollbarDefaultDelayBeforeFade: number;
                    public static View_scrollbarFadeDuration: number;
                    public static View_scrollbarSize: number;
                    public static View_scrollbarStyle: number;
                    public static View_scrollbarThumbHorizontal: number;
                    public static View_scrollbarThumbVertical: number;
                    public static View_scrollbarTrackHorizontal: number;
                    public static View_scrollbarTrackVertical: number;
                    public static View_scrollbars: number;
                    public static View_soundEffectsEnabled: number;
                    public static View_stateListAnimator: number;
                    public static View_tag: number;
                    public static View_textAlignment: number;
                    public static View_textDirection: number;
                    public static View_theme: number;
                    public static View_tooltipText: number;
                    public static View_transformPivotX: number;
                    public static View_transformPivotY: number;
                    public static View_transitionName: number;
                    public static View_translationX: number;
                    public static View_translationY: number;
                    public static View_translationZ: number;
                    public static View_verticalScrollbarPosition: number;
                    public static View_visibility: number;
                    public static VisibilityTransition: number[];
                    public static VisibilityTransition_transitionVisibilityMode: number;
                    public static VoiceEnrollmentApplication: number[];
                    public static VoiceEnrollmentApplication_searchKeyphrase: number;
                    public static VoiceEnrollmentApplication_searchKeyphraseId: number;
                    public static VoiceEnrollmentApplication_searchKeyphraseRecognitionFlags: number;
                    public static VoiceEnrollmentApplication_searchKeyphraseSupportedLocales: number;
                    public static VoiceInteractionService: number[];
                    public static VoiceInteractionService_recognitionService: number;
                    public static VoiceInteractionService_sessionService: number;
                    public static VoiceInteractionService_settingsActivity: number;
                    public static VoiceInteractionService_supportsAssist: number;
                    public static VoiceInteractionService_supportsLaunchVoiceAssistFromKeyguard: number;
                    public static VoiceInteractionService_supportsLocalInteraction: number;
                    public static VoiceInteractionSession: number[];
                    public static VolumePreference: number[];
                    public static VolumePreference_streamType: number;
                    public static Wallpaper: number[];
                    public static WallpaperPreviewInfo: number[];
                    public static WallpaperPreviewInfo_staticWallpaperPreview: number;
                    public static Wallpaper_author: number;
                    public static Wallpaper_contextDescription: number;
                    public static Wallpaper_contextUri: number;
                    public static Wallpaper_description: number;
                    public static Wallpaper_settingsActivity: number;
                    public static Wallpaper_showMetadataInPreview: number;
                    public static Wallpaper_thumbnail: number;
                    public static WeightedLinearLayout: number[];
                    public static WeightedLinearLayout_majorWeightMax: number;
                    public static WeightedLinearLayout_majorWeightMin: number;
                    public static WeightedLinearLayout_minorWeightMax: number;
                    public static WeightedLinearLayout_minorWeightMin: number;
                    public static Window: number[];
                    public static WindowAnimation: number[];
                    public static WindowAnimation_activityCloseEnterAnimation: number;
                    public static WindowAnimation_activityCloseExitAnimation: number;
                    public static WindowAnimation_activityOpenEnterAnimation: number;
                    public static WindowAnimation_activityOpenExitAnimation: number;
                    public static WindowAnimation_activityOpenRemoteViewsEnterAnimation: number;
                    public static WindowAnimation_launchTaskBehindSourceAnimation: number;
                    public static WindowAnimation_launchTaskBehindTargetAnimation: number;
                    public static WindowAnimation_taskCloseEnterAnimation: number;
                    public static WindowAnimation_taskCloseExitAnimation: number;
                    public static WindowAnimation_taskOpenEnterAnimation: number;
                    public static WindowAnimation_taskOpenExitAnimation: number;
                    public static WindowAnimation_taskToBackEnterAnimation: number;
                    public static WindowAnimation_taskToBackExitAnimation: number;
                    public static WindowAnimation_taskToFrontEnterAnimation: number;
                    public static WindowAnimation_taskToFrontExitAnimation: number;
                    public static WindowAnimation_wallpaperCloseEnterAnimation: number;
                    public static WindowAnimation_wallpaperCloseExitAnimation: number;
                    public static WindowAnimation_wallpaperIntraCloseEnterAnimation: number;
                    public static WindowAnimation_wallpaperIntraCloseExitAnimation: number;
                    public static WindowAnimation_wallpaperIntraOpenEnterAnimation: number;
                    public static WindowAnimation_wallpaperIntraOpenExitAnimation: number;
                    public static WindowAnimation_wallpaperOpenEnterAnimation: number;
                    public static WindowAnimation_wallpaperOpenExitAnimation: number;
                    public static WindowAnimation_windowEnterAnimation: number;
                    public static WindowAnimation_windowExitAnimation: number;
                    public static WindowAnimation_windowHideAnimation: number;
                    public static WindowAnimation_windowShowAnimation: number;
                    public static Window_backgroundDimAmount: number;
                    public static Window_backgroundDimEnabled: number;
                    public static Window_navigationBarColor: number;
                    public static Window_statusBarColor: number;
                    public static Window_textColor: number;
                    public static Window_windowActionBar: number;
                    public static Window_windowActionBarFullscreenDecorLayout: number;
                    public static Window_windowActionBarOverlay: number;
                    public static Window_windowActionModeOverlay: number;
                    public static Window_windowActivityTransitions: number;
                    public static Window_windowAllowEnterTransitionOverlap: number;
                    public static Window_windowAllowReturnTransitionOverlap: number;
                    public static Window_windowAnimationStyle: number;
                    public static Window_windowBackground: number;
                    public static Window_windowBackgroundFallback: number;
                    public static Window_windowClipToOutline: number;
                    public static Window_windowCloseOnTouchOutside: number;
                    public static Window_windowContentOverlay: number;
                    public static Window_windowContentTransitionManager: number;
                    public static Window_windowContentTransitions: number;
                    public static Window_windowDisablePreview: number;
                    public static Window_windowDrawsSystemBarBackgrounds: number;
                    public static Window_windowElevation: number;
                    public static Window_windowEnableSplitTouch: number;
                    public static Window_windowEnterTransition: number;
                    public static Window_windowExitTransition: number;
                    public static Window_windowFixedHeightMajor: number;
                    public static Window_windowFixedHeightMinor: number;
                    public static Window_windowFixedWidthMajor: number;
                    public static Window_windowFixedWidthMinor: number;
                    public static Window_windowFrame: number;
                    public static Window_windowFullscreen: number;
                    public static Window_windowIsFloating: number;
                    public static Window_windowIsTranslucent: number;
                    public static Window_windowLightStatusBar: number;
                    public static Window_windowMinWidthMajor: number;
                    public static Window_windowMinWidthMinor: number;
                    public static Window_windowNoDisplay: number;
                    public static Window_windowNoTitle: number;
                    public static Window_windowOutsetBottom: number;
                    public static Window_windowOverscan: number;
                    public static Window_windowReenterTransition: number;
                    public static Window_windowReturnTransition: number;
                    public static Window_windowSharedElementEnterTransition: number;
                    public static Window_windowSharedElementExitTransition: number;
                    public static Window_windowSharedElementReenterTransition: number;
                    public static Window_windowSharedElementReturnTransition: number;
                    public static Window_windowSharedElementsUseOverlay: number;
                    public static Window_windowShowWallpaper: number;
                    public static Window_windowSoftInputMode: number;
                    public static Window_windowSplashscreenContent: number;
                    public static Window_windowSwipeToDismiss: number;
                    public static Window_windowTransitionBackgroundFadeDuration: number;
                    public static Window_windowTranslucentNavigation: number;
                    public static Window_windowTranslucentStatus: number;
                    public constructor();
                }
                export class transition extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.R.transition>;
                    public static explode: number;
                    public static fade: number;
                    public static move: number;
                    public static no_transition: number;
                    public static slide_bottom: number;
                    public static slide_left: number;
                    public static slide_right: number;
                    public static slide_top: number;
                    public constructor();
                }
                export class xml extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.R.xml>;
                    public static apns: number;
                    public static audio_assets: number;
                    public static autotext: number;
                    public static bookmarks: number;
                    public static config_webview_packages: number;
                    public static default_zen_mode_config: number;
                    public static global_keys: number;
                    public static password_kbd_numeric: number;
                    public static password_kbd_qwerty: number;
                    public static password_kbd_qwerty_shifted: number;
                    public static password_kbd_symbols: number;
                    public static password_kbd_symbols_shift: number;
                    public static power_profile: number;
                    public static sms_7bit_translation_table: number;
                    public static sms_short_codes: number;
                    public static storage_list: number;
                    public static time_zones_by_country: number;
                    public static voicemail_conf: number;
                    public constructor();
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module alsa {
                export class AlsaCardsParser extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.alsa.AlsaCardsParser>;
                    public static DEBUG: boolean;
                    public static hasCardNumber(param0: java.util.ArrayList<com.android.internal.alsa.AlsaCardsParser.AlsaCardRecord>, param1: number): boolean;
                    public getScanRecords(): java.util.ArrayList<com.android.internal.alsa.AlsaCardsParser.AlsaCardRecord>;
                    public Log(param0: string): void;
                    public getNumCardRecords(): number;
                    public scan(): void;
                    public constructor();
                    public isCardUsb(param0: number): boolean;
                    public getCardRecordFor(param0: number): com.android.internal.alsa.AlsaCardsParser.AlsaCardRecord;
                    public getDefaultUsbCard(): number;
                    public getCardRecordAt(param0: number): com.android.internal.alsa.AlsaCardsParser.AlsaCardRecord;
                    public getDefaultCard(): number;
                    public getNewCardRecords(param0: java.util.ArrayList<com.android.internal.alsa.AlsaCardsParser.AlsaCardRecord>): java.util.ArrayList<com.android.internal.alsa.AlsaCardsParser.AlsaCardRecord>;
                    public static LogDevices(param0: string, param1: java.util.ArrayList<com.android.internal.alsa.AlsaCardsParser.AlsaCardRecord>): void;
                }
                export module AlsaCardsParser {
                    export class AlsaCardRecord extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.alsa.AlsaCardsParser.AlsaCardRecord>;
                        public mCardDescription: string;
                        public mCardName: string;
                        public mCardNum: number;
                        public mField1: string;
                        public mIsUsb: boolean;
                        public textFormat(): string;
                        public constructor(param0: com.android.internal.alsa.AlsaCardsParser);
                        public log(param0: number): void;
                        public parse(param0: string, param1: number): boolean;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module alsa {
                export class AlsaDevicesParser extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.alsa.AlsaDevicesParser>;
                    public static DEBUG: boolean;
                    public getDefaultDeviceNum(param0: number): number;
                    public hasMIDIDevices(param0: number): boolean;
                    public hasCaptureDevices(param0: number): boolean;
                    public scan(): void;
                    public hasPlaybackDevices(param0: number): boolean;
                    public constructor();
                    public Log(param0: string): void;
                }
                export module AlsaDevicesParser {
                    export class AlsaDeviceRecord extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.alsa.AlsaDevicesParser.AlsaDeviceRecord>;
                        public static kDeviceDir_Capture: number;
                        public static kDeviceDir_Playback: number;
                        public static kDeviceDir_Unknown: number;
                        public static kDeviceType_Audio: number;
                        public static kDeviceType_Control: number;
                        public static kDeviceType_MIDI: number;
                        public static kDeviceType_Unknown: number;
                        public textFormat(): string;
                        public constructor(param0: com.android.internal.alsa.AlsaDevicesParser);
                        public parse(param0: string): boolean;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module alsa {
                export class LineTokenizer extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.alsa.LineTokenizer>;
                    public static kTokenNotFound: number;
                    public constructor(param0: string);
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module annotations {
                export class GuardedBy extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.annotations.GuardedBy>;
                    /**
                     * Constructs a new instance of the com.android.internal.annotations.GuardedBy interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        value(): string;
                    });
                    public constructor();
                    public value(): string;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module annotations {
                export class Immutable extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.annotations.Immutable>;
                    /**
                     * Constructs a new instance of the com.android.internal.annotations.Immutable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {});
                    public constructor();
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module annotations {
                export class VisibleForTesting extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.annotations.VisibleForTesting>;
                    /**
                     * Constructs a new instance of the com.android.internal.annotations.VisibleForTesting interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        visibility(): com.android.internal.annotations.VisibleForTesting.Visibility;
                    });
                    public constructor();
                    public visibility(): com.android.internal.annotations.VisibleForTesting.Visibility;
                }
                export module VisibleForTesting {
                    export class Visibility extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.annotations.VisibleForTesting.Visibility>;
                        public static PACKAGE: com.android.internal.annotations.VisibleForTesting.Visibility;
                        public static PRIVATE: com.android.internal.annotations.VisibleForTesting.Visibility;
                        public static PROTECTED: com.android.internal.annotations.VisibleForTesting.Visibility;
                        public static valueOf(param0: string): com.android.internal.annotations.VisibleForTesting.Visibility;
                        public static values(): com.android.internal.annotations.VisibleForTesting.Visibility[];
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class AccessibilityButtonChooserActivity extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.AccessibilityButtonChooserActivity>;
                    public onCreate(param0: globalAndroid.os.Bundle): void;
                    public constructor();
                }
                export module AccessibilityButtonChooserActivity {
                    export class AccessibilityButtonTarget extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.AccessibilityButtonChooserActivity.AccessibilityButtonTarget>;
                        public mDrawable: globalAndroid.graphics.drawable.Drawable;
                        public mId: string;
                        public mLabel: string;
                        public constructor(param0: globalAndroid.content.Context, param1: string, param2: number, param3: number);
                        public getDrawable(): globalAndroid.graphics.drawable.Drawable;
                        public getLabel(): string;
                        public getId(): string;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.accessibilityservice.AccessibilityServiceInfo);
                    }
                    export class TargetAdapter extends globalAndroid.widget.BaseAdapter {
                        public static class: java.lang.Class<com.android.internal.app.AccessibilityButtonChooserActivity.TargetAdapter>;
                        public isEnabled(param0: number): boolean;
                        public areAllItemsEnabled(): boolean;
                        public getItemId(param0: number): number;
                        public getView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
                        public getCount(): number;
                        public getItem(param0: number): any;
                        public getDropDownView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class ActivityTrigger extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.ActivityTrigger>;
                    public static ANIMATION_SCALE: number;
                    public static NETWORK_OPTS: number;
                    public static START_PROCESS: number;
                    public activityResumeTrigger(param0: globalAndroid.content.Intent, param1: globalAndroid.content.pm.ActivityInfo, param2: globalAndroid.content.pm.ApplicationInfo, param3: boolean): void;
                    public constructor();
                    public activityPauseTrigger(param0: globalAndroid.content.Intent, param1: globalAndroid.content.pm.ActivityInfo, param2: globalAndroid.content.pm.ApplicationInfo): void;
                    public activityStartTrigger(param0: globalAndroid.content.Intent, param1: globalAndroid.content.pm.ActivityInfo, param2: globalAndroid.content.pm.ApplicationInfo, param3: boolean): void;
                    public finalize(): void;
                    public activityStopTrigger(param0: globalAndroid.content.Intent, param1: globalAndroid.content.pm.ActivityInfo, param2: globalAndroid.content.pm.ApplicationInfo): void;
                    public activityMiscTrigger(param0: number, param1: string, param2: number, param3: number): number;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export abstract class AlertActivity {
                    public static class: java.lang.Class<com.android.internal.app.AlertActivity>;
                    public mAlert: com.android.internal.app.AlertController;
                    public mAlertParams: com.android.internal.app.AlertController.AlertParams;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public dispatchPopulateAccessibilityEvent(param0: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                    public onCreate(param0: globalAndroid.os.Bundle): void;
                    public constructor();
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public cancel(): void;
                    public setupAlert(): void;
                    public static dispatchPopulateAccessibilityEvent(param0: globalAndroid.app.Activity, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                    public dismiss(): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class AlertController extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.AlertController>;
                    public static MICRO: number;
                    public mListView: globalAndroid.widget.ListView;
                    public mMessage: string;
                    public mMessageView: globalAndroid.widget.TextView;
                    public mScrollView: globalAndroid.widget.ScrollView;
                    public mWindow: globalAndroid.view.Window;
                    public static create(param0: globalAndroid.content.Context, param1: globalAndroid.content.DialogInterface, param2: globalAndroid.view.Window): com.android.internal.app.AlertController;
                    public setButton(param0: number, param1: string, param2: globalAndroid.content.DialogInterface.OnClickListener, param3: globalAndroid.os.Message): void;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public setView(param0: globalAndroid.view.View): void;
                    public installContent(): void;
                    public setInverseBackgroundForced(param0: boolean): void;
                    public installContent(param0: com.android.internal.app.AlertController.AlertParams): void;
                    public setTitle(param0: string): void;
                    public getListView(): globalAndroid.widget.ListView;
                    public getButton(param0: number): globalAndroid.widget.Button;
                    public setView(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                    public setView(param0: number): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.content.DialogInterface, param2: globalAndroid.view.Window);
                    public setMessage(param0: string): void;
                    public setupTitle(param0: globalAndroid.view.ViewGroup): void;
                    public setButtonPanelLayoutHint(param0: number): void;
                    public setupButtons(param0: globalAndroid.view.ViewGroup): void;
                    public setIcon(param0: number): void;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public setupContent(param0: globalAndroid.view.ViewGroup): void;
                    public setCustomTitle(param0: globalAndroid.view.View): void;
                    public setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public getIconAttributeResId(param0: number): number;
                }
                export module AlertController {
                    export class AlertParams extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.AlertController.AlertParams>;
                        public mAdapter: globalAndroid.widget.ListAdapter;
                        public mCancelable: boolean;
                        public mCheckedItem: number;
                        public mCheckedItems: boolean[];
                        public mContext: globalAndroid.content.Context;
                        public mCursor: globalAndroid.database.Cursor;
                        public mCustomTitleView: globalAndroid.view.View;
                        public mForceInverseBackground: boolean;
                        public mIcon: globalAndroid.graphics.drawable.Drawable;
                        public mIconAttrId: number;
                        public mIconId: number;
                        public mInflater: globalAndroid.view.LayoutInflater;
                        public mIsCheckedColumn: string;
                        public mIsMultiChoice: boolean;
                        public mIsSingleChoice: boolean;
                        public mItems: string[];
                        public mLabelColumn: string;
                        public mMessage: string;
                        public mNegativeButtonListener: globalAndroid.content.DialogInterface.OnClickListener;
                        public mNegativeButtonText: string;
                        public mNeutralButtonListener: globalAndroid.content.DialogInterface.OnClickListener;
                        public mNeutralButtonText: string;
                        public mOnCancelListener: globalAndroid.content.DialogInterface.OnCancelListener;
                        public mOnCheckboxClickListener: globalAndroid.content.DialogInterface.OnMultiChoiceClickListener;
                        public mOnClickListener: globalAndroid.content.DialogInterface.OnClickListener;
                        public mOnDismissListener: globalAndroid.content.DialogInterface.OnDismissListener;
                        public mOnItemSelectedListener: globalAndroid.widget.AdapterView.OnItemSelectedListener;
                        public mOnKeyListener: globalAndroid.content.DialogInterface.OnKeyListener;
                        public mOnPrepareListViewListener: com.android.internal.app.AlertController.AlertParams.OnPrepareListViewListener;
                        public mPositiveButtonListener: globalAndroid.content.DialogInterface.OnClickListener;
                        public mPositiveButtonText: string;
                        public mRecycleOnMeasure: boolean;
                        public mTitle: string;
                        public mView: globalAndroid.view.View;
                        public mViewLayoutResId: number;
                        public mViewSpacingBottom: number;
                        public mViewSpacingLeft: number;
                        public mViewSpacingRight: number;
                        public mViewSpacingSpecified: boolean;
                        public mViewSpacingTop: number;
                        public constructor(param0: globalAndroid.content.Context);
                        public apply(param0: com.android.internal.app.AlertController): void;
                    }
                    export module AlertParams {
                        export class OnPrepareListViewListener extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.app.AlertController.AlertParams.OnPrepareListViewListener>;
                            /**
                             * Constructs a new instance of the com.android.internal.app.AlertController$AlertParams$OnPrepareListViewListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                             */
                            public constructor(implementation: {
                                onPrepareListView(param0: globalAndroid.widget.ListView): void;
                            });
                            public constructor();
                            public onPrepareListView(param0: globalAndroid.widget.ListView): void;
                        }
                    }
                    export class ButtonHandler extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.AlertController.ButtonHandler>;
                        public handleMessage(param0: globalAndroid.os.Message): void;
                        public constructor(param0: globalAndroid.content.DialogInterface);
                    }
                    export class CheckedItemAdapter extends globalAndroid.widget.ArrayAdapter<string> {
                        public static class: java.lang.Class<com.android.internal.app.AlertController.CheckedItemAdapter>;
                        public isEnabled(param0: number): boolean;
                        public areAllItemsEnabled(): boolean;
                        public getFilter(): globalAndroid.widget.Filter;
                        public constructor();
                        public constructor(param0: globalAndroid.content.Context, param1: number, param2: number);
                        public constructor(param0: globalAndroid.content.Context, param1: number, param2: number, param3: any[]);
                        public getDropDownViewTheme(): globalAndroid.content.res.Resources.Theme;
                        public hasStableIds(): boolean;
                        public setDropDownViewTheme(param0: globalAndroid.content.res.Resources.Theme): void;
                        public getItemId(param0: number): number;
                        public constructor(param0: globalAndroid.content.Context, param1: number);
                        public constructor(param0: globalAndroid.content.Context, param1: number, param2: number, param3: string[]);
                        public constructor(param0: globalAndroid.content.Context, param1: number, param2: any[]);
                        public constructor(param0: globalAndroid.content.Context, param1: number, param2: java.util.List<any>);
                        public constructor(param0: globalAndroid.content.Context, param1: number, param2: number, param3: java.util.List<any>);
                        public getDropDownView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
                    }
                    export class RecycleListView extends globalAndroid.widget.ListView {
                        public static class: java.lang.Class<com.android.internal.app.AlertController.RecycleListView>;
                        public isLayoutRequested(): boolean;
                        public canResolveLayoutDirection(): boolean;
                        public constructor(param0: globalAndroid.content.Context);
                        public sendAccessibilityEvent(param0: number): void;
                        public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                        public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                        public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                        public clearChildFocus(param0: globalAndroid.view.View): void;
                        public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                        public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                        public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                        public isTextAlignmentResolved(): boolean;
                        public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                        public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                        public getTextDirection(): number;
                        public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                        public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                        public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                        public removeView(param0: globalAndroid.view.View): void;
                        public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                        public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                        public setRemoteViewsAdapter(param0: globalAndroid.content.Intent): void;
                        public setRemoteViewsAdapter(param0: globalAndroid.content.Intent, param1: boolean): void;
                        public onFilterComplete(param0: number): void;
                        public beforeTextChanged(param0: string, param1: number, param2: number, param3: number): void;
                        public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                        public canResolveTextDirection(): boolean;
                        public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                        public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                        public requestDisallowInterceptTouchEvent(param0: boolean): void;
                        public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                        public isLayoutDirectionResolved(): boolean;
                        public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                        public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                        public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                        public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                        public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                        public requestLayout(): void;
                        public onGlobalLayout(): void;
                        public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                        public bringChildToFront(param0: globalAndroid.view.View): void;
                        public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                        public addView(param0: globalAndroid.view.View, param1: number): void;
                        public deferNotifyDataSetChanged(): void;
                        public onTouchModeChanged(param0: boolean): void;
                        public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                        public isTextDirectionResolved(): boolean;
                        public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                        public onRemoteAdapterDisconnected(): void;
                        public recycleOnMeasure(): boolean;
                        public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                        public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                        public onStopNestedScroll(param0: globalAndroid.view.View): void;
                        public requestTransparentRegion(param0: globalAndroid.view.View): void;
                        public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                        public addView(param0: globalAndroid.view.View): void;
                        public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                        public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                        public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                        public requestFitSystemWindows(): void;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                        public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                        public getParentForAccessibility(): globalAndroid.view.ViewParent;
                        public onRemoteAdapterConnected(): boolean;
                        public focusableViewAvailable(param0: globalAndroid.view.View): void;
                        public focusSearch(param0: number): globalAndroid.view.View;
                        public onTextChanged(param0: string, param1: number, param2: number, param3: number): void;
                        public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                        public afterTextChanged(param0: globalAndroid.text.Editable): void;
                        public getTextAlignment(): number;
                        public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                        public setHasDecor(param0: boolean, param1: boolean): void;
                        public canResolveTextAlignment(): boolean;
                        public getLayoutDirection(): number;
                        public getParent(): globalAndroid.view.ViewParent;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class AssistUtils extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.AssistUtils>;
                    public showSessionForActiveService(param0: globalAndroid.os.Bundle, param1: number, param2: com.android.internal.app.IVoiceInteractionSessionShowCallback, param3: globalAndroid.os.IBinder): boolean;
                    public activeServiceSupportsAssistGesture(): boolean;
                    public static isPreinstalledAssistant(param0: globalAndroid.content.Context, param1: globalAndroid.content.ComponentName): boolean;
                    public getActiveServiceComponentName(): globalAndroid.content.ComponentName;
                    public registerVoiceInteractionSessionListener(param0: com.android.internal.app.IVoiceInteractionSessionListener): void;
                    public isSessionRunning(): boolean;
                    public static allowDisablingAssistDisclosure(param0: globalAndroid.content.Context): boolean;
                    public activeServiceSupportsLaunchFromKeyguard(): boolean;
                    public constructor(param0: globalAndroid.content.Context);
                    public onLockscreenShown(): void;
                    public static shouldDisclose(param0: globalAndroid.content.Context, param1: globalAndroid.content.ComponentName): boolean;
                    public launchVoiceAssistFromKeyguard(): void;
                    public hideCurrentSession(): void;
                    public getAssistComponentForUser(param0: number): globalAndroid.content.ComponentName;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class ChooserActivity extends com.android.internal.app.ResolverActivity {
                    public static class: java.lang.Class<com.android.internal.app.ChooserActivity>;
                    public static EXTRA_PRIVATE_RETAIN_IN_ON_STOP: string;
                    public mIsSuccessfullySelected: boolean;
                    public getReplacementIntent(param0: globalAndroid.content.pm.ActivityInfo, param1: globalAndroid.content.Intent): globalAndroid.content.Intent;
                    public onCreate(param0: globalAndroid.os.Bundle, param1: globalAndroid.content.Intent, param2: string, param3: number, param4: globalAndroid.content.Intent[], param5: java.util.List<globalAndroid.content.pm.ResolveInfo>, param6: boolean): void;
                    public onCreate(param0: globalAndroid.os.Bundle): void;
                    public onCreate(param0: globalAndroid.os.Bundle, param1: globalAndroid.content.Intent, param2: string, param3: globalAndroid.content.Intent[], param4: java.util.List<globalAndroid.content.pm.ResolveInfo>, param5: boolean): void;
                    public onSetupVoiceInteraction(): void;
                    public onDestroy(): void;
                    public showTargetDetails(param0: globalAndroid.content.pm.ResolveInfo): void;
                    public createListController(): com.android.internal.app.ResolverListController;
                    public shouldGetActivityMetadata(): boolean;
                    public onActivityStarted(param0: com.android.internal.app.ResolverActivity.TargetInfo): void;
                    public constructor();
                    public createAdapter(param0: globalAndroid.content.Context, param1: java.util.List<globalAndroid.content.Intent>, param2: globalAndroid.content.Intent[], param3: java.util.List<globalAndroid.content.pm.ResolveInfo>, param4: number, param5: boolean): com.android.internal.app.ResolverActivity.ResolveListAdapter;
                    public onTargetSelected(param0: com.android.internal.app.ResolverActivity.TargetInfo, param1: boolean): boolean;
                    public shouldAutoLaunchSingleChoice(param0: com.android.internal.app.ResolverActivity.TargetInfo): boolean;
                    public getLayoutResource(): number;
                    public startSelected(param0: number, param1: boolean, param2: boolean): void;
                    public onPrepareAdapterView(param0: globalAndroid.widget.AbsListView, param1: com.android.internal.app.ResolverActivity.ResolveListAdapter): void;
                }
                export module ChooserActivity {
                    export class BaseChooserTargetComparator extends java.util.Comparator<globalAndroid.service.chooser.ChooserTarget> {
                        public static class: java.lang.Class<com.android.internal.app.ChooserActivity.BaseChooserTargetComparator>;
                        public compare(param0: globalAndroid.service.chooser.ChooserTarget, param1: globalAndroid.service.chooser.ChooserTarget): number;
                    }
                    export class ChooserListAdapter extends com.android.internal.app.ResolverActivity.ResolveListAdapter {
                        public static class: java.lang.Class<com.android.internal.app.ChooserActivity.ChooserListAdapter>;
                        public static TARGET_BAD: number;
                        public static TARGET_CALLER: number;
                        public static TARGET_SERVICE: number;
                        public static TARGET_STANDARD: number;
                        public isEnabled(param0: number): boolean;
                        public areAllItemsEnabled(): boolean;
                        public constructor(param0: globalAndroid.content.Context, param1: java.util.List<globalAndroid.content.Intent>, param2: globalAndroid.content.Intent[], param3: java.util.List<globalAndroid.content.pm.ResolveInfo>, param4: number, param5: boolean, param6: com.android.internal.app.ResolverListController);
                        public constructor();
                        public addServiceResults(param0: com.android.internal.app.ResolverActivity.DisplayResolveInfo, param1: java.util.List<globalAndroid.service.chooser.ChooserTarget>): void;
                        public showsExtendedInfo(param0: com.android.internal.app.ResolverActivity.TargetInfo): boolean;
                        public getStandardTargetCount(): number;
                        public targetInfoForPosition(param0: number, param1: boolean): com.android.internal.app.ResolverActivity.TargetInfo;
                        public getCount(): number;
                        public getItem(param0: number): com.android.internal.app.ResolverActivity.TargetInfo;
                        public isComponentPinned(param0: globalAndroid.content.ComponentName): boolean;
                        public setShowServiceTargets(param0: boolean): void;
                        public onListRebuilt(): void;
                        public getCallerTargetCount(): number;
                        public shouldGetResolvedFilter(): boolean;
                        public onCreateView(param0: globalAndroid.view.ViewGroup): globalAndroid.view.View;
                        public getPositionTargetType(param0: number): number;
                        public getServiceTargetCount(): number;
                        public getUnfilteredCount(): number;
                        public getDropDownView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
                    }
                    export class ChooserListController extends com.android.internal.app.ResolverListController {
                        public static class: java.lang.Class<com.android.internal.app.ChooserActivity.ChooserListController>;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.content.pm.PackageManager, param2: globalAndroid.content.Intent, param3: string, param4: number);
                        public constructor(param0: com.android.internal.app.ChooserActivity, param1: globalAndroid.content.Context, param2: globalAndroid.content.pm.PackageManager, param3: globalAndroid.content.Intent, param4: string, param5: number);
                        public getScore(param0: com.android.internal.app.ResolverActivity.DisplayResolveInfo): number;
                    }
                    export class ChooserRowAdapter extends globalAndroid.widget.BaseAdapter {
                        public static class: java.lang.Class<com.android.internal.app.ChooserActivity.ChooserRowAdapter>;
                        public isEnabled(param0: number): boolean;
                        public areAllItemsEnabled(): boolean;
                        public constructor();
                        public getCallerTargetRowCount(): number;
                        public getCount(): number;
                        public getItem(param0: number): any;
                        public onAnimationStart(): void;
                        public getServiceTargetRowCount(): number;
                        public constructor(param0: com.android.internal.app.ChooserActivity, param1: com.android.internal.app.ChooserActivity.ChooserListAdapter);
                        public getItemId(param0: number): number;
                        public getView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
                        public onAnimationEnd(): void;
                        public getDropDownView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
                    }
                    export class ChooserTargetInfo extends com.android.internal.app.ResolverActivity.TargetInfo {
                        public static class: java.lang.Class<com.android.internal.app.ChooserActivity.ChooserTargetInfo>;
                        public getDisplayIcon(): globalAndroid.graphics.drawable.Drawable;
                        public getResolveInfo(): globalAndroid.content.pm.ResolveInfo;
                        public startAsCaller(param0: globalAndroid.app.Activity, param1: globalAndroid.os.Bundle, param2: number): boolean;
                        public getExtendedInfo(): string;
                        public getResolvedIntent(): globalAndroid.content.Intent;
                        public startAsUser(param0: globalAndroid.app.Activity, param1: globalAndroid.os.Bundle, param2: globalAndroid.os.UserHandle): boolean;
                        public getDisplayLabel(): string;
                        public getAllSourceIntents(): java.util.List<globalAndroid.content.Intent>;
                        public constructor(param0: com.android.internal.app.ChooserActivity, param1: com.android.internal.app.ResolverActivity.DisplayResolveInfo, param2: globalAndroid.service.chooser.ChooserTarget, param3: number);
                        public getBadgeContentDescription(): string;
                        public getResolvedComponentName(): globalAndroid.content.ComponentName;
                        public isPinned(): boolean;
                        public start(param0: globalAndroid.app.Activity, param1: globalAndroid.os.Bundle): boolean;
                        public getBadgeIcon(): globalAndroid.graphics.drawable.Drawable;
                        public cloneFilledIn(param0: globalAndroid.content.Intent, param1: number): com.android.internal.app.ResolverActivity.TargetInfo;
                        public getModifiedScore(): number;
                    }
                    export class ChooserTargetServiceConnection extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.ChooserActivity.ChooserTargetServiceConnection>;
                        public constructor(param0: com.android.internal.app.ChooserActivity, param1: com.android.internal.app.ResolverActivity.DisplayResolveInfo);
                        public onServiceConnected(param0: globalAndroid.content.ComponentName, param1: globalAndroid.os.IBinder): void;
                        public destroy(): void;
                        public onServiceDisconnected(param0: globalAndroid.content.ComponentName): void;
                        public toString(): string;
                    }
                    export class OffsetDataSetObserver extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.ChooserActivity.OffsetDataSetObserver>;
                        public onChanged(): void;
                        public constructor(param0: com.android.internal.app.ChooserActivity, param1: globalAndroid.widget.AbsListView);
                    }
                    export class RefinementResultReceiver extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.ChooserActivity.RefinementResultReceiver>;
                        public constructor(param0: com.android.internal.app.ChooserActivity, param1: com.android.internal.app.ResolverActivity.TargetInfo, param2: globalAndroid.os.Handler);
                        public onReceiveResult(param0: number, param1: globalAndroid.os.Bundle): void;
                        public destroy(): void;
                    }
                    export class RowScale extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.ChooserActivity.RowScale>;
                        public static PROPERTY: globalAndroid.util.FloatProperty<com.android.internal.app.ChooserActivity.RowScale>;
                        public get(): number;
                        public setInterpolator(param0: globalAndroid.view.animation.Interpolator): com.android.internal.app.ChooserActivity.RowScale;
                        public cancelAnimation(): void;
                        public constructor(param0: com.android.internal.app.ChooserActivity.ChooserRowAdapter, param1: number, param2: number);
                        public startAnimation(): void;
                    }
                    export class RowViewHolder extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.ChooserActivity.RowViewHolder>;
                        public constructor(param0: globalAndroid.view.ViewGroup, param1: number);
                        public measure(): void;
                    }
                    export class ServiceResultInfo extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.ChooserActivity.ServiceResultInfo>;
                        public connection: com.android.internal.app.ChooserActivity.ChooserTargetServiceConnection;
                        public originalTarget: com.android.internal.app.ResolverActivity.DisplayResolveInfo;
                        public resultTargets: java.util.List<globalAndroid.service.chooser.ChooserTarget>;
                        public constructor(param0: com.android.internal.app.ResolverActivity.DisplayResolveInfo, param1: java.util.List<globalAndroid.service.chooser.ChooserTarget>, param2: com.android.internal.app.ChooserActivity.ChooserTargetServiceConnection);
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class ConfirmUserCreationActivity extends com.android.internal.app.AlertActivity {
                    public static class: java.lang.Class<com.android.internal.app.ConfirmUserCreationActivity>;
                    public onCreate(param0: globalAndroid.os.Bundle): void;
                    public constructor();
                    public onClick(param0: globalAndroid.content.DialogInterface, param1: number): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class DisableCarModeActivity extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.DisableCarModeActivity>;
                    public onCreate(param0: globalAndroid.os.Bundle): void;
                    public constructor();
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class DumpHeapActivity extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.DumpHeapActivity>;
                    public static ACTION_DELETE_DUMPHEAP: string;
                    public static EXTRA_DELAY_DELETE: string;
                    public static JAVA_URI: globalAndroid.net.Uri;
                    public static KEY_DIRECT_LAUNCH: string;
                    public static KEY_PROCESS: string;
                    public static KEY_SIZE: string;
                    public onCreate(param0: globalAndroid.os.Bundle): void;
                    public constructor();
                    public onDestroy(): void;
                    public onStop(): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class HeavyWeightSwitcherActivity extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.HeavyWeightSwitcherActivity>;
                    public static KEY_CUR_APP: string;
                    public static KEY_CUR_TASK: string;
                    public static KEY_HAS_RESULT: string;
                    public static KEY_INTENT: string;
                    public static KEY_NEW_APP: string;
                    public onCreate(param0: globalAndroid.os.Bundle): void;
                    public constructor();
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class IAppOpsCallback extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.IAppOpsCallback>;
                    /**
                     * Constructs a new instance of the com.android.internal.app.IAppOpsCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        opChanged(param0: number, param1: number, param2: string): void;
                    });
                    public constructor();
                    public opChanged(param0: number, param1: number, param2: string): void;
                }
                export module IAppOpsCallback {
                    export abstract class Stub implements com.android.internal.app.IAppOpsCallback {
                        public static class: java.lang.Class<com.android.internal.app.IAppOpsCallback.Stub>;
                        public constructor();
                        public opChanged(param0: number, param1: number, param2: string): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.app.IAppOpsCallback;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.app.IAppOpsCallback {
                            public static class: java.lang.Class<com.android.internal.app.IAppOpsCallback.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public opChanged(param0: number, param1: number, param2: string): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class IAppOpsService extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.IAppOpsService>;
                    /**
                     * Constructs a new instance of the com.android.internal.app.IAppOpsService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        checkAudioOperation(param0: number, param1: number, param2: number, param3: string): number;
                        checkOperation(param0: number, param1: number, param2: string): number;
                        checkPackage(param0: number, param1: string): number;
                        finishOperation(param0: globalAndroid.os.IBinder, param1: number, param2: number, param3: string): void;
                        getOpsForPackage(param0: number, param1: string, param2: number[]): java.util.List<globalAndroid.app.AppOpsManager.PackageOps>;
                        getPackagesForOps(param0: number[]): java.util.List<globalAndroid.app.AppOpsManager.PackageOps>;
                        getToken(param0: globalAndroid.os.IBinder): globalAndroid.os.IBinder;
                        getUidOps(param0: number, param1: number[]): java.util.List<globalAndroid.app.AppOpsManager.PackageOps>;
                        noteOperation(param0: number, param1: number, param2: string): number;
                        noteProxyOperation(param0: number, param1: string, param2: number, param3: string): number;
                        permissionToOpCode(param0: string): number;
                        removeUser(param0: number): void;
                        resetAllModes(param0: number, param1: string): void;
                        setAudioRestriction(param0: number, param1: number, param2: number, param3: number, param4: string[]): void;
                        setMode(param0: number, param1: number, param2: string, param3: number): void;
                        setUidMode(param0: number, param1: number, param2: number): void;
                        setUserRestriction(param0: number, param1: boolean, param2: globalAndroid.os.IBinder, param3: number, param4: string[]): void;
                        setUserRestrictions(param0: globalAndroid.os.Bundle, param1: globalAndroid.os.IBinder, param2: number): void;
                        startOperation(param0: globalAndroid.os.IBinder, param1: number, param2: number, param3: string): number;
                        startWatchingMode(param0: number, param1: string, param2: com.android.internal.app.IAppOpsCallback): void;
                        stopWatchingMode(param0: com.android.internal.app.IAppOpsCallback): void;
                    });
                    public constructor();
                    public noteOperation(param0: number, param1: number, param2: string): number;
                    public noteProxyOperation(param0: number, param1: string, param2: number, param3: string): number;
                    public checkAudioOperation(param0: number, param1: number, param2: number, param3: string): number;
                    public permissionToOpCode(param0: string): number;
                    public removeUser(param0: number): void;
                    public setUserRestrictions(param0: globalAndroid.os.Bundle, param1: globalAndroid.os.IBinder, param2: number): void;
                    public getOpsForPackage(param0: number, param1: string, param2: number[]): java.util.List<globalAndroid.app.AppOpsManager.PackageOps>;
                    public setAudioRestriction(param0: number, param1: number, param2: number, param3: number, param4: string[]): void;
                    public startWatchingMode(param0: number, param1: string, param2: com.android.internal.app.IAppOpsCallback): void;
                    public setUserRestriction(param0: number, param1: boolean, param2: globalAndroid.os.IBinder, param3: number, param4: string[]): void;
                    public checkPackage(param0: number, param1: string): number;
                    public getUidOps(param0: number, param1: number[]): java.util.List<globalAndroid.app.AppOpsManager.PackageOps>;
                    public stopWatchingMode(param0: com.android.internal.app.IAppOpsCallback): void;
                    public getToken(param0: globalAndroid.os.IBinder): globalAndroid.os.IBinder;
                    public finishOperation(param0: globalAndroid.os.IBinder, param1: number, param2: number, param3: string): void;
                    public resetAllModes(param0: number, param1: string): void;
                    public setMode(param0: number, param1: number, param2: string, param3: number): void;
                    public checkOperation(param0: number, param1: number, param2: string): number;
                    public getPackagesForOps(param0: number[]): java.util.List<globalAndroid.app.AppOpsManager.PackageOps>;
                    public startOperation(param0: globalAndroid.os.IBinder, param1: number, param2: number, param3: string): number;
                    public setUidMode(param0: number, param1: number, param2: number): void;
                }
                export module IAppOpsService {
                    export abstract class Stub implements com.android.internal.app.IAppOpsService {
                        public static class: java.lang.Class<com.android.internal.app.IAppOpsService.Stub>;
                        public stopWatchingMode(param0: com.android.internal.app.IAppOpsCallback): void;
                        public checkOperation(param0: number, param1: number, param2: string): number;
                        public getOpsForPackage(param0: number, param1: string, param2: number[]): java.util.List<globalAndroid.app.AppOpsManager.PackageOps>;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.app.IAppOpsService;
                        public removeUser(param0: number): void;
                        public getUidOps(param0: number, param1: number[]): java.util.List<globalAndroid.app.AppOpsManager.PackageOps>;
                        public checkAudioOperation(param0: number, param1: number, param2: number, param3: string): number;
                        public setAudioRestriction(param0: number, param1: number, param2: number, param3: number, param4: string[]): void;
                        public setUserRestriction(param0: number, param1: boolean, param2: globalAndroid.os.IBinder, param3: number, param4: string[]): void;
                        public startWatchingMode(param0: number, param1: string, param2: com.android.internal.app.IAppOpsCallback): void;
                        public getPackagesForOps(param0: number[]): java.util.List<globalAndroid.app.AppOpsManager.PackageOps>;
                        public noteProxyOperation(param0: number, param1: string, param2: number, param3: string): number;
                        public permissionToOpCode(param0: string): number;
                        public getToken(param0: globalAndroid.os.IBinder): globalAndroid.os.IBinder;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public resetAllModes(param0: number, param1: string): void;
                        public asBinder(): globalAndroid.os.IBinder;
                        public finishOperation(param0: globalAndroid.os.IBinder, param1: number, param2: number, param3: string): void;
                        public constructor();
                        public checkPackage(param0: number, param1: string): number;
                        public startOperation(param0: globalAndroid.os.IBinder, param1: number, param2: number, param3: string): number;
                        public setUserRestrictions(param0: globalAndroid.os.Bundle, param1: globalAndroid.os.IBinder, param2: number): void;
                        public setMode(param0: number, param1: number, param2: string, param3: number): void;
                        public noteOperation(param0: number, param1: number, param2: string): number;
                        public setUidMode(param0: number, param1: number, param2: number): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.app.IAppOpsService {
                            public static class: java.lang.Class<com.android.internal.app.IAppOpsService.Stub.Proxy>;
                            public checkPackage(param0: number, param1: string): number;
                            public permissionToOpCode(param0: string): number;
                            public removeUser(param0: number): void;
                            public startWatchingMode(param0: number, param1: string, param2: com.android.internal.app.IAppOpsCallback): void;
                            public finishOperation(param0: globalAndroid.os.IBinder, param1: number, param2: number, param3: string): void;
                            public getPackagesForOps(param0: number[]): java.util.List<globalAndroid.app.AppOpsManager.PackageOps>;
                            public noteOperation(param0: number, param1: number, param2: string): number;
                            public checkOperation(param0: number, param1: number, param2: string): number;
                            public setAudioRestriction(param0: number, param1: number, param2: number, param3: number, param4: string[]): void;
                            public getInterfaceDescriptor(): string;
                            public getOpsForPackage(param0: number, param1: string, param2: number[]): java.util.List<globalAndroid.app.AppOpsManager.PackageOps>;
                            public asBinder(): globalAndroid.os.IBinder;
                            public setUserRestriction(param0: number, param1: boolean, param2: globalAndroid.os.IBinder, param3: number, param4: string[]): void;
                            public startOperation(param0: globalAndroid.os.IBinder, param1: number, param2: number, param3: string): number;
                            public getUidOps(param0: number, param1: number[]): java.util.List<globalAndroid.app.AppOpsManager.PackageOps>;
                            public setUserRestrictions(param0: globalAndroid.os.Bundle, param1: globalAndroid.os.IBinder, param2: number): void;
                            public stopWatchingMode(param0: com.android.internal.app.IAppOpsCallback): void;
                            public noteProxyOperation(param0: number, param1: string, param2: number, param3: string): number;
                            public checkAudioOperation(param0: number, param1: number, param2: number, param3: string): number;
                            public setUidMode(param0: number, param1: number, param2: number): void;
                            public resetAllModes(param0: number, param1: string): void;
                            public getToken(param0: globalAndroid.os.IBinder): globalAndroid.os.IBinder;
                            public setMode(param0: number, param1: number, param2: string, param3: number): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class IAssistScreenshotReceiver extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.IAssistScreenshotReceiver>;
                    /**
                     * Constructs a new instance of the com.android.internal.app.IAssistScreenshotReceiver interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        send(param0: globalAndroid.graphics.Bitmap): void;
                    });
                    public constructor();
                    public send(param0: globalAndroid.graphics.Bitmap): void;
                }
                export module IAssistScreenshotReceiver {
                    export abstract class Stub implements com.android.internal.app.IAssistScreenshotReceiver {
                        public static class: java.lang.Class<com.android.internal.app.IAssistScreenshotReceiver.Stub>;
                        public constructor();
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.app.IAssistScreenshotReceiver;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public send(param0: globalAndroid.graphics.Bitmap): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.app.IAssistScreenshotReceiver {
                            public static class: java.lang.Class<com.android.internal.app.IAssistScreenshotReceiver.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public send(param0: globalAndroid.graphics.Bitmap): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class IBatteryStats extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.IBatteryStats>;
                    /**
                     * Constructs a new instance of the com.android.internal.app.IBatteryStats interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        computeBatteryTimeRemaining(): number;
                        computeChargeTimeRemaining(): number;
                        getAwakeTimeBattery(): number;
                        getAwakeTimePlugged(): number;
                        getStatistics(): number[];
                        getStatisticsStream(): globalAndroid.os.ParcelFileDescriptor;
                        isCharging(): boolean;
                        noteBleScanResults(param0: globalAndroid.os.WorkSource, param1: number): void;
                        noteBleScanStarted(param0: globalAndroid.os.WorkSource, param1: boolean): void;
                        noteBleScanStopped(param0: globalAndroid.os.WorkSource): void;
                        noteBluetoothControllerActivity(param0: globalAndroid.bluetooth.BluetoothActivityEnergyInfo): void;
                        noteChangeWakelockFromSource(param0: globalAndroid.os.WorkSource, param1: number, param2: string, param3: string, param4: number, param5: globalAndroid.os.WorkSource, param6: number, param7: string, param8: string, param9: number, param10: boolean): void;
                        noteConnectivityChanged(param0: number, param1: string): void;
                        noteDeviceIdleMode(param0: number, param1: string, param2: number): void;
                        noteEvent(param0: number, param1: string, param2: number): void;
                        noteFlashlightOff(param0: number): void;
                        noteFlashlightOn(param0: number): void;
                        noteFullWifiLockAcquired(param0: number): void;
                        noteFullWifiLockAcquiredFromSource(param0: globalAndroid.os.WorkSource): void;
                        noteFullWifiLockReleased(param0: number): void;
                        noteFullWifiLockReleasedFromSource(param0: globalAndroid.os.WorkSource): void;
                        noteInteractive(param0: boolean): void;
                        noteJobFinish(param0: string, param1: number): void;
                        noteJobStart(param0: string, param1: number): void;
                        noteLongPartialWakelockFinish(param0: string, param1: string, param2: number): void;
                        noteLongPartialWakelockStart(param0: string, param1: string, param2: number): void;
                        noteMobileRadioPowerState(param0: number, param1: number, param2: number): void;
                        noteModemControllerActivity(param0: globalAndroid.telephony.ModemActivityInfo): void;
                        noteNetworkInterfaceType(param0: string, param1: number): void;
                        noteNetworkStatsEnabled(): void;
                        notePhoneDataConnectionState(param0: number, param1: boolean): void;
                        notePhoneOff(): void;
                        notePhoneOn(): void;
                        notePhoneSignalStrength(param0: globalAndroid.telephony.SignalStrength): void;
                        notePhoneState(param0: number): void;
                        noteResetAudio(): void;
                        noteResetBleScan(): void;
                        noteResetCamera(): void;
                        noteResetFlashlight(): void;
                        noteResetVideo(): void;
                        noteScreenBrightness(param0: number): void;
                        noteScreenState(param0: number): void;
                        noteStartAudio(param0: number): void;
                        noteStartCamera(param0: number): void;
                        noteStartGps(param0: number): void;
                        noteStartSensor(param0: number, param1: number): void;
                        noteStartVideo(param0: number): void;
                        noteStartWakelock(param0: number, param1: number, param2: string, param3: string, param4: number, param5: boolean): void;
                        noteStartWakelockFromSource(param0: globalAndroid.os.WorkSource, param1: number, param2: string, param3: string, param4: number, param5: boolean): void;
                        noteStopAudio(param0: number): void;
                        noteStopCamera(param0: number): void;
                        noteStopGps(param0: number): void;
                        noteStopSensor(param0: number, param1: number): void;
                        noteStopVideo(param0: number): void;
                        noteStopWakelock(param0: number, param1: number, param2: string, param3: string, param4: number): void;
                        noteStopWakelockFromSource(param0: globalAndroid.os.WorkSource, param1: number, param2: string, param3: string, param4: number): void;
                        noteSyncFinish(param0: string, param1: number): void;
                        noteSyncStart(param0: string, param1: number): void;
                        noteUserActivity(param0: number, param1: number): void;
                        noteVibratorOff(param0: number): void;
                        noteVibratorOn(param0: number, param1: number): void;
                        noteWakeUp(param0: string, param1: number): void;
                        noteWifiBatchedScanStartedFromSource(param0: globalAndroid.os.WorkSource, param1: number): void;
                        noteWifiBatchedScanStoppedFromSource(param0: globalAndroid.os.WorkSource): void;
                        noteWifiControllerActivity(param0: globalAndroid.net.wifi.WifiActivityEnergyInfo): void;
                        noteWifiMulticastDisabled(param0: number): void;
                        noteWifiMulticastDisabledFromSource(param0: globalAndroid.os.WorkSource): void;
                        noteWifiMulticastEnabled(param0: number): void;
                        noteWifiMulticastEnabledFromSource(param0: globalAndroid.os.WorkSource): void;
                        noteWifiOff(): void;
                        noteWifiOn(): void;
                        noteWifiRadioPowerState(param0: number, param1: number, param2: number): void;
                        noteWifiRssiChanged(param0: number): void;
                        noteWifiRunning(param0: globalAndroid.os.WorkSource): void;
                        noteWifiRunningChanged(param0: globalAndroid.os.WorkSource, param1: globalAndroid.os.WorkSource): void;
                        noteWifiScanStarted(param0: number): void;
                        noteWifiScanStartedFromSource(param0: globalAndroid.os.WorkSource): void;
                        noteWifiScanStopped(param0: number): void;
                        noteWifiScanStoppedFromSource(param0: globalAndroid.os.WorkSource): void;
                        noteWifiState(param0: number, param1: string): void;
                        noteWifiStopped(param0: globalAndroid.os.WorkSource): void;
                        noteWifiSupplicantStateChanged(param0: number, param1: boolean): void;
                        setBatteryState(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
                        takeUidSnapshot(param0: number): globalAndroid.os.health.HealthStatsParceler;
                        takeUidSnapshots(param0: number[]): globalAndroid.os.health.HealthStatsParceler[];
                    });
                    public constructor();
                    public getAwakeTimeBattery(): number;
                    public noteFullWifiLockReleased(param0: number): void;
                    public noteFullWifiLockReleasedFromSource(param0: globalAndroid.os.WorkSource): void;
                    public noteStartAudio(param0: number): void;
                    public getAwakeTimePlugged(): number;
                    public noteJobFinish(param0: string, param1: number): void;
                    public noteModemControllerActivity(param0: globalAndroid.telephony.ModemActivityInfo): void;
                    public noteWakeUp(param0: string, param1: number): void;
                    public noteWifiMulticastEnabledFromSource(param0: globalAndroid.os.WorkSource): void;
                    public noteBleScanStopped(param0: globalAndroid.os.WorkSource): void;
                    public notePhoneState(param0: number): void;
                    public noteWifiRadioPowerState(param0: number, param1: number, param2: number): void;
                    public noteVibratorOn(param0: number, param1: number): void;
                    public getStatistics(): number[];
                    public noteStopVideo(param0: number): void;
                    public noteFlashlightOff(param0: number): void;
                    public noteStopSensor(param0: number, param1: number): void;
                    public noteWifiOff(): void;
                    public takeUidSnapshot(param0: number): globalAndroid.os.health.HealthStatsParceler;
                    public setBatteryState(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
                    public noteScreenBrightness(param0: number): void;
                    public notePhoneOff(): void;
                    public noteStartWakelockFromSource(param0: globalAndroid.os.WorkSource, param1: number, param2: string, param3: string, param4: number, param5: boolean): void;
                    public noteWifiScanStoppedFromSource(param0: globalAndroid.os.WorkSource): void;
                    public noteResetFlashlight(): void;
                    public noteWifiRunning(param0: globalAndroid.os.WorkSource): void;
                    public noteLongPartialWakelockFinish(param0: string, param1: string, param2: number): void;
                    public noteWifiBatchedScanStoppedFromSource(param0: globalAndroid.os.WorkSource): void;
                    public noteStopAudio(param0: number): void;
                    public noteWifiScanStopped(param0: number): void;
                    public noteWifiState(param0: number, param1: string): void;
                    public noteStartWakelock(param0: number, param1: number, param2: string, param3: string, param4: number, param5: boolean): void;
                    public noteStartVideo(param0: number): void;
                    public noteLongPartialWakelockStart(param0: string, param1: string, param2: number): void;
                    public notePhoneOn(): void;
                    public noteStopWakelockFromSource(param0: globalAndroid.os.WorkSource, param1: number, param2: string, param3: string, param4: number): void;
                    public noteStartSensor(param0: number, param1: number): void;
                    public noteWifiScanStarted(param0: number): void;
                    public noteBluetoothControllerActivity(param0: globalAndroid.bluetooth.BluetoothActivityEnergyInfo): void;
                    public noteSyncFinish(param0: string, param1: number): void;
                    public noteWifiScanStartedFromSource(param0: globalAndroid.os.WorkSource): void;
                    public noteNetworkStatsEnabled(): void;
                    public noteStopGps(param0: number): void;
                    public noteMobileRadioPowerState(param0: number, param1: number, param2: number): void;
                    public noteSyncStart(param0: string, param1: number): void;
                    public noteStopWakelock(param0: number, param1: number, param2: string, param3: string, param4: number): void;
                    public takeUidSnapshots(param0: number[]): globalAndroid.os.health.HealthStatsParceler[];
                    public noteResetBleScan(): void;
                    public noteWifiRunningChanged(param0: globalAndroid.os.WorkSource, param1: globalAndroid.os.WorkSource): void;
                    public noteStopCamera(param0: number): void;
                    public noteWifiOn(): void;
                    public notePhoneDataConnectionState(param0: number, param1: boolean): void;
                    public notePhoneSignalStrength(param0: globalAndroid.telephony.SignalStrength): void;
                    public noteFullWifiLockAcquired(param0: number): void;
                    public noteUserActivity(param0: number, param1: number): void;
                    public computeChargeTimeRemaining(): number;
                    public noteJobStart(param0: string, param1: number): void;
                    public noteNetworkInterfaceType(param0: string, param1: number): void;
                    public noteWifiMulticastDisabled(param0: number): void;
                    public noteWifiBatchedScanStartedFromSource(param0: globalAndroid.os.WorkSource, param1: number): void;
                    public noteWifiRssiChanged(param0: number): void;
                    public getStatisticsStream(): globalAndroid.os.ParcelFileDescriptor;
                    public noteWifiMulticastEnabled(param0: number): void;
                    public noteFullWifiLockAcquiredFromSource(param0: globalAndroid.os.WorkSource): void;
                    public noteWifiMulticastDisabledFromSource(param0: globalAndroid.os.WorkSource): void;
                    public noteDeviceIdleMode(param0: number, param1: string, param2: number): void;
                    public noteChangeWakelockFromSource(param0: globalAndroid.os.WorkSource, param1: number, param2: string, param3: string, param4: number, param5: globalAndroid.os.WorkSource, param6: number, param7: string, param8: string, param9: number, param10: boolean): void;
                    public noteResetCamera(): void;
                    public noteBleScanResults(param0: globalAndroid.os.WorkSource, param1: number): void;
                    public noteConnectivityChanged(param0: number, param1: string): void;
                    public noteStartGps(param0: number): void;
                    public noteFlashlightOn(param0: number): void;
                    public noteVibratorOff(param0: number): void;
                    public noteWifiStopped(param0: globalAndroid.os.WorkSource): void;
                    public noteResetAudio(): void;
                    public noteWifiSupplicantStateChanged(param0: number, param1: boolean): void;
                    public noteScreenState(param0: number): void;
                    public noteStartCamera(param0: number): void;
                    public noteWifiControllerActivity(param0: globalAndroid.net.wifi.WifiActivityEnergyInfo): void;
                    public noteInteractive(param0: boolean): void;
                    public noteEvent(param0: number, param1: string, param2: number): void;
                    public noteBleScanStarted(param0: globalAndroid.os.WorkSource, param1: boolean): void;
                    public isCharging(): boolean;
                    public noteResetVideo(): void;
                    public computeBatteryTimeRemaining(): number;
                }
                export module IBatteryStats {
                    export abstract class Stub implements com.android.internal.app.IBatteryStats {
                        public static class: java.lang.Class<com.android.internal.app.IBatteryStats.Stub>;
                        public getStatisticsStream(): globalAndroid.os.ParcelFileDescriptor;
                        public noteStopSensor(param0: number, param1: number): void;
                        public noteStartCamera(param0: number): void;
                        public getAwakeTimeBattery(): number;
                        public noteResetFlashlight(): void;
                        public takeUidSnapshot(param0: number): globalAndroid.os.health.HealthStatsParceler;
                        public noteConnectivityChanged(param0: number, param1: string): void;
                        public noteFullWifiLockAcquired(param0: number): void;
                        public takeUidSnapshots(param0: number[]): globalAndroid.os.health.HealthStatsParceler[];
                        public noteResetVideo(): void;
                        public noteLongPartialWakelockFinish(param0: string, param1: string, param2: number): void;
                        public getAwakeTimePlugged(): number;
                        public noteNetworkStatsEnabled(): void;
                        public noteModemControllerActivity(param0: globalAndroid.telephony.ModemActivityInfo): void;
                        public isCharging(): boolean;
                        public noteWifiScanStopped(param0: number): void;
                        public noteFullWifiLockAcquiredFromSource(param0: globalAndroid.os.WorkSource): void;
                        public noteResetAudio(): void;
                        public noteLongPartialWakelockStart(param0: string, param1: string, param2: number): void;
                        public noteStopCamera(param0: number): void;
                        public notePhoneDataConnectionState(param0: number, param1: boolean): void;
                        public asBinder(): globalAndroid.os.IBinder;
                        public notePhoneSignalStrength(param0: globalAndroid.telephony.SignalStrength): void;
                        public noteScreenBrightness(param0: number): void;
                        public noteWifiRunning(param0: globalAndroid.os.WorkSource): void;
                        public noteWifiRssiChanged(param0: number): void;
                        public setBatteryState(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
                        public noteEvent(param0: number, param1: string, param2: number): void;
                        public noteWifiMulticastDisabledFromSource(param0: globalAndroid.os.WorkSource): void;
                        public constructor();
                        public noteBleScanResults(param0: globalAndroid.os.WorkSource, param1: number): void;
                        public noteBleScanStarted(param0: globalAndroid.os.WorkSource, param1: boolean): void;
                        public notePhoneOn(): void;
                        public noteWifiBatchedScanStoppedFromSource(param0: globalAndroid.os.WorkSource): void;
                        public noteChangeWakelockFromSource(param0: globalAndroid.os.WorkSource, param1: number, param2: string, param3: string, param4: number, param5: globalAndroid.os.WorkSource, param6: number, param7: string, param8: string, param9: number, param10: boolean): void;
                        public notePhoneOff(): void;
                        public noteWakeUp(param0: string, param1: number): void;
                        public noteStopAudio(param0: number): void;
                        public noteDeviceIdleMode(param0: number, param1: string, param2: number): void;
                        public noteWifiMulticastEnabledFromSource(param0: globalAndroid.os.WorkSource): void;
                        public noteVibratorOff(param0: number): void;
                        public computeChargeTimeRemaining(): number;
                        public noteFullWifiLockReleased(param0: number): void;
                        public noteSyncStart(param0: string, param1: number): void;
                        public noteWifiMulticastDisabled(param0: number): void;
                        public noteFlashlightOff(param0: number): void;
                        public noteWifiOff(): void;
                        public noteStartWakelock(param0: number, param1: number, param2: string, param3: string, param4: number, param5: boolean): void;
                        public noteJobStart(param0: string, param1: number): void;
                        public noteWifiSupplicantStateChanged(param0: number, param1: boolean): void;
                        public noteMobileRadioPowerState(param0: number, param1: number, param2: number): void;
                        public noteStopGps(param0: number): void;
                        public noteStopVideo(param0: number): void;
                        public noteScreenState(param0: number): void;
                        public noteStopWakelock(param0: number, param1: number, param2: string, param3: string, param4: number): void;
                        public noteWifiRunningChanged(param0: globalAndroid.os.WorkSource, param1: globalAndroid.os.WorkSource): void;
                        public computeBatteryTimeRemaining(): number;
                        public noteJobFinish(param0: string, param1: number): void;
                        public noteWifiScanStoppedFromSource(param0: globalAndroid.os.WorkSource): void;
                        public getStatistics(): number[];
                        public notePhoneState(param0: number): void;
                        public noteWifiBatchedScanStartedFromSource(param0: globalAndroid.os.WorkSource, param1: number): void;
                        public noteResetCamera(): void;
                        public noteWifiRadioPowerState(param0: number, param1: number, param2: number): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public noteStartSensor(param0: number, param1: number): void;
                        public noteStartVideo(param0: number): void;
                        public noteUserActivity(param0: number, param1: number): void;
                        public noteFullWifiLockReleasedFromSource(param0: globalAndroid.os.WorkSource): void;
                        public noteStartAudio(param0: number): void;
                        public noteWifiScanStarted(param0: number): void;
                        public noteVibratorOn(param0: number, param1: number): void;
                        public noteFlashlightOn(param0: number): void;
                        public noteStopWakelockFromSource(param0: globalAndroid.os.WorkSource, param1: number, param2: string, param3: string, param4: number): void;
                        public noteWifiState(param0: number, param1: string): void;
                        public noteStartGps(param0: number): void;
                        public noteWifiStopped(param0: globalAndroid.os.WorkSource): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.app.IBatteryStats;
                        public noteNetworkInterfaceType(param0: string, param1: number): void;
                        public noteResetBleScan(): void;
                        public noteStartWakelockFromSource(param0: globalAndroid.os.WorkSource, param1: number, param2: string, param3: string, param4: number, param5: boolean): void;
                        public noteWifiOn(): void;
                        public noteBleScanStopped(param0: globalAndroid.os.WorkSource): void;
                        public noteInteractive(param0: boolean): void;
                        public noteWifiControllerActivity(param0: globalAndroid.net.wifi.WifiActivityEnergyInfo): void;
                        public noteWifiScanStartedFromSource(param0: globalAndroid.os.WorkSource): void;
                        public noteBluetoothControllerActivity(param0: globalAndroid.bluetooth.BluetoothActivityEnergyInfo): void;
                        public noteWifiMulticastEnabled(param0: number): void;
                        public noteSyncFinish(param0: string, param1: number): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.app.IBatteryStats {
                            public static class: java.lang.Class<com.android.internal.app.IBatteryStats.Stub.Proxy>;
                            public getAwakeTimePlugged(): number;
                            public noteStartAudio(param0: number): void;
                            public noteChangeWakelockFromSource(param0: globalAndroid.os.WorkSource, param1: number, param2: string, param3: string, param4: number, param5: globalAndroid.os.WorkSource, param6: number, param7: string, param8: string, param9: number, param10: boolean): void;
                            public noteVibratorOff(param0: number): void;
                            public getAwakeTimeBattery(): number;
                            public notePhoneState(param0: number): void;
                            public noteFlashlightOff(param0: number): void;
                            public noteStopWakelockFromSource(param0: globalAndroid.os.WorkSource, param1: number, param2: string, param3: string, param4: number): void;
                            public noteWifiMulticastEnabled(param0: number): void;
                            public noteJobStart(param0: string, param1: number): void;
                            public noteSyncFinish(param0: string, param1: number): void;
                            public noteScreenState(param0: number): void;
                            public noteResetCamera(): void;
                            public noteMobileRadioPowerState(param0: number, param1: number, param2: number): void;
                            public noteStartWakelockFromSource(param0: globalAndroid.os.WorkSource, param1: number, param2: string, param3: string, param4: number, param5: boolean): void;
                            public noteWifiStopped(param0: globalAndroid.os.WorkSource): void;
                            public computeBatteryTimeRemaining(): number;
                            public noteStopGps(param0: number): void;
                            public noteWifiRssiChanged(param0: number): void;
                            public noteNetworkInterfaceType(param0: string, param1: number): void;
                            public takeUidSnapshots(param0: number[]): globalAndroid.os.health.HealthStatsParceler[];
                            public noteWifiMulticastDisabledFromSource(param0: globalAndroid.os.WorkSource): void;
                            public setBatteryState(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
                            public noteDeviceIdleMode(param0: number, param1: string, param2: number): void;
                            public noteBluetoothControllerActivity(param0: globalAndroid.bluetooth.BluetoothActivityEnergyInfo): void;
                            public noteWifiScanStopped(param0: number): void;
                            public noteVibratorOn(param0: number, param1: number): void;
                            public getInterfaceDescriptor(): string;
                            public getStatistics(): number[];
                            public notePhoneDataConnectionState(param0: number, param1: boolean): void;
                            public asBinder(): globalAndroid.os.IBinder;
                            public takeUidSnapshot(param0: number): globalAndroid.os.health.HealthStatsParceler;
                            public noteWifiState(param0: number, param1: string): void;
                            public noteStopCamera(param0: number): void;
                            public noteWifiScanStarted(param0: number): void;
                            public noteUserActivity(param0: number, param1: number): void;
                            public noteBleScanStopped(param0: globalAndroid.os.WorkSource): void;
                            public noteStartGps(param0: number): void;
                            public noteNetworkStatsEnabled(): void;
                            public noteBleScanStarted(param0: globalAndroid.os.WorkSource, param1: boolean): void;
                            public noteFullWifiLockAcquired(param0: number): void;
                            public noteResetBleScan(): void;
                            public noteStopAudio(param0: number): void;
                            public notePhoneOff(): void;
                            public noteWifiOn(): void;
                            public noteFullWifiLockReleasedFromSource(param0: globalAndroid.os.WorkSource): void;
                            public noteWifiRunning(param0: globalAndroid.os.WorkSource): void;
                            public noteJobFinish(param0: string, param1: number): void;
                            public noteWifiMulticastEnabledFromSource(param0: globalAndroid.os.WorkSource): void;
                            public noteScreenBrightness(param0: number): void;
                            public noteWifiControllerActivity(param0: globalAndroid.net.wifi.WifiActivityEnergyInfo): void;
                            public noteModemControllerActivity(param0: globalAndroid.telephony.ModemActivityInfo): void;
                            public noteWifiRunningChanged(param0: globalAndroid.os.WorkSource, param1: globalAndroid.os.WorkSource): void;
                            public noteLongPartialWakelockStart(param0: string, param1: string, param2: number): void;
                            public computeChargeTimeRemaining(): number;
                            public noteWakeUp(param0: string, param1: number): void;
                            public noteWifiScanStoppedFromSource(param0: globalAndroid.os.WorkSource): void;
                            public noteStartCamera(param0: number): void;
                            public noteWifiBatchedScanStoppedFromSource(param0: globalAndroid.os.WorkSource): void;
                            public noteStopVideo(param0: number): void;
                            public noteLongPartialWakelockFinish(param0: string, param1: string, param2: number): void;
                            public noteFullWifiLockAcquiredFromSource(param0: globalAndroid.os.WorkSource): void;
                            public notePhoneOn(): void;
                            public noteStartSensor(param0: number, param1: number): void;
                            public noteBleScanResults(param0: globalAndroid.os.WorkSource, param1: number): void;
                            public noteInteractive(param0: boolean): void;
                            public noteStartVideo(param0: number): void;
                            public noteWifiSupplicantStateChanged(param0: number, param1: boolean): void;
                            public noteEvent(param0: number, param1: string, param2: number): void;
                            public noteWifiMulticastDisabled(param0: number): void;
                            public noteFullWifiLockReleased(param0: number): void;
                            public notePhoneSignalStrength(param0: globalAndroid.telephony.SignalStrength): void;
                            public noteWifiScanStartedFromSource(param0: globalAndroid.os.WorkSource): void;
                            public noteStopWakelock(param0: number, param1: number, param2: string, param3: string, param4: number): void;
                            public noteWifiRadioPowerState(param0: number, param1: number, param2: number): void;
                            public noteResetFlashlight(): void;
                            public isCharging(): boolean;
                            public noteWifiOff(): void;
                            public noteResetAudio(): void;
                            public noteStartWakelock(param0: number, param1: number, param2: string, param3: string, param4: number, param5: boolean): void;
                            public getStatisticsStream(): globalAndroid.os.ParcelFileDescriptor;
                            public noteWifiBatchedScanStartedFromSource(param0: globalAndroid.os.WorkSource, param1: number): void;
                            public noteFlashlightOn(param0: number): void;
                            public noteConnectivityChanged(param0: number, param1: string): void;
                            public noteResetVideo(): void;
                            public noteStopSensor(param0: number, param1: number): void;
                            public noteSyncStart(param0: string, param1: number): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class IMediaContainerService extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.IMediaContainerService>;
                    /**
                     * Constructs a new instance of the com.android.internal.app.IMediaContainerService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        calculateDirectorySize(param0: string): number;
                        calculateInstalledSize(param0: string, param1: boolean, param2: string): number;
                        clearDirectory(param0: string): void;
                        copyPackage(param0: string, param1: com.android.internal.os.IParcelFileDescriptorFactory): number;
                        copyPackageToContainer(param0: string, param1: string, param2: string, param3: boolean, param4: boolean, param5: string): string;
                        getFileSystemStats(param0: string): number[];
                        getMinimalPackageInfo(param0: string, param1: number, param2: string): globalAndroid.content.pm.PackageInfoLite;
                        getObbInfo(param0: string): globalAndroid.content.res.ObbInfo;
                    });
                    public constructor();
                    public calculateDirectorySize(param0: string): number;
                    public copyPackage(param0: string, param1: com.android.internal.os.IParcelFileDescriptorFactory): number;
                    public clearDirectory(param0: string): void;
                    public getFileSystemStats(param0: string): number[];
                    public copyPackageToContainer(param0: string, param1: string, param2: string, param3: boolean, param4: boolean, param5: string): string;
                    public calculateInstalledSize(param0: string, param1: boolean, param2: string): number;
                    public getMinimalPackageInfo(param0: string, param1: number, param2: string): globalAndroid.content.pm.PackageInfoLite;
                    public getObbInfo(param0: string): globalAndroid.content.res.ObbInfo;
                }
                export module IMediaContainerService {
                    export abstract class Stub implements com.android.internal.app.IMediaContainerService {
                        public static class: java.lang.Class<com.android.internal.app.IMediaContainerService.Stub>;
                        public calculateInstalledSize(param0: string, param1: boolean, param2: string): number;
                        public constructor();
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.app.IMediaContainerService;
                        public clearDirectory(param0: string): void;
                        public calculateDirectorySize(param0: string): number;
                        public getFileSystemStats(param0: string): number[];
                        public getObbInfo(param0: string): globalAndroid.content.res.ObbInfo;
                        public copyPackageToContainer(param0: string, param1: string, param2: string, param3: boolean, param4: boolean, param5: string): string;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public copyPackage(param0: string, param1: com.android.internal.os.IParcelFileDescriptorFactory): number;
                        public getMinimalPackageInfo(param0: string, param1: number, param2: string): globalAndroid.content.pm.PackageInfoLite;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.app.IMediaContainerService {
                            public static class: java.lang.Class<com.android.internal.app.IMediaContainerService.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public clearDirectory(param0: string): void;
                            public getFileSystemStats(param0: string): number[];
                            public calculateInstalledSize(param0: string, param1: boolean, param2: string): number;
                            public copyPackage(param0: string, param1: com.android.internal.os.IParcelFileDescriptorFactory): number;
                            public copyPackageToContainer(param0: string, param1: string, param2: string, param3: boolean, param4: boolean, param5: string): string;
                            public calculateDirectorySize(param0: string): number;
                            public getMinimalPackageInfo(param0: string, param1: number, param2: string): globalAndroid.content.pm.PackageInfoLite;
                            public getObbInfo(param0: string): globalAndroid.content.res.ObbInfo;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class ISoundTriggerService extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.ISoundTriggerService>;
                    /**
                     * Constructs a new instance of the com.android.internal.app.ISoundTriggerService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        deleteSoundModel(param0: globalAndroid.os.ParcelUuid): void;
                        getSoundModel(param0: globalAndroid.os.ParcelUuid): globalAndroid.hardware.soundtrigger.SoundTrigger.GenericSoundModel;
                        startRecognition(param0: globalAndroid.os.ParcelUuid, param1: globalAndroid.hardware.soundtrigger.IRecognitionStatusCallback, param2: globalAndroid.hardware.soundtrigger.SoundTrigger.RecognitionConfig): number;
                        stopRecognition(param0: globalAndroid.os.ParcelUuid, param1: globalAndroid.hardware.soundtrigger.IRecognitionStatusCallback): number;
                        updateSoundModel(param0: globalAndroid.hardware.soundtrigger.SoundTrigger.GenericSoundModel): void;
                    });
                    public constructor();
                    public deleteSoundModel(param0: globalAndroid.os.ParcelUuid): void;
                    public updateSoundModel(param0: globalAndroid.hardware.soundtrigger.SoundTrigger.GenericSoundModel): void;
                    public stopRecognition(param0: globalAndroid.os.ParcelUuid, param1: globalAndroid.hardware.soundtrigger.IRecognitionStatusCallback): number;
                    public startRecognition(param0: globalAndroid.os.ParcelUuid, param1: globalAndroid.hardware.soundtrigger.IRecognitionStatusCallback, param2: globalAndroid.hardware.soundtrigger.SoundTrigger.RecognitionConfig): number;
                    public getSoundModel(param0: globalAndroid.os.ParcelUuid): globalAndroid.hardware.soundtrigger.SoundTrigger.GenericSoundModel;
                }
                export module ISoundTriggerService {
                    export abstract class Stub implements com.android.internal.app.ISoundTriggerService {
                        public static class: java.lang.Class<com.android.internal.app.ISoundTriggerService.Stub>;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.app.ISoundTriggerService;
                        public constructor();
                        public startRecognition(param0: globalAndroid.os.ParcelUuid, param1: globalAndroid.hardware.soundtrigger.IRecognitionStatusCallback, param2: globalAndroid.hardware.soundtrigger.SoundTrigger.RecognitionConfig): number;
                        public stopRecognition(param0: globalAndroid.os.ParcelUuid, param1: globalAndroid.hardware.soundtrigger.IRecognitionStatusCallback): number;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public deleteSoundModel(param0: globalAndroid.os.ParcelUuid): void;
                        public getSoundModel(param0: globalAndroid.os.ParcelUuid): globalAndroid.hardware.soundtrigger.SoundTrigger.GenericSoundModel;
                        public updateSoundModel(param0: globalAndroid.hardware.soundtrigger.SoundTrigger.GenericSoundModel): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.app.ISoundTriggerService {
                            public static class: java.lang.Class<com.android.internal.app.ISoundTriggerService.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public updateSoundModel(param0: globalAndroid.hardware.soundtrigger.SoundTrigger.GenericSoundModel): void;
                            public asBinder(): globalAndroid.os.IBinder;
                            public getSoundModel(param0: globalAndroid.os.ParcelUuid): globalAndroid.hardware.soundtrigger.SoundTrigger.GenericSoundModel;
                            public stopRecognition(param0: globalAndroid.os.ParcelUuid, param1: globalAndroid.hardware.soundtrigger.IRecognitionStatusCallback): number;
                            public startRecognition(param0: globalAndroid.os.ParcelUuid, param1: globalAndroid.hardware.soundtrigger.IRecognitionStatusCallback, param2: globalAndroid.hardware.soundtrigger.SoundTrigger.RecognitionConfig): number;
                            public deleteSoundModel(param0: globalAndroid.os.ParcelUuid): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class IVoiceInteractionManagerService extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.IVoiceInteractionManagerService>;
                    /**
                     * Constructs a new instance of the com.android.internal.app.IVoiceInteractionManagerService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        activeServiceSupportsAssist(): boolean;
                        activeServiceSupportsLaunchFromKeyguard(): boolean;
                        closeSystemDialogs(param0: globalAndroid.os.IBinder): void;
                        deleteKeyphraseSoundModel(param0: number, param1: string): number;
                        deliverNewSession(param0: globalAndroid.os.IBinder, param1: globalAndroid.service.voice.IVoiceInteractionSession, param2: com.android.internal.app.IVoiceInteractor): boolean;
                        finish(param0: globalAndroid.os.IBinder): void;
                        getActiveServiceComponentName(): globalAndroid.content.ComponentName;
                        getDisabledShowContext(): number;
                        getDspModuleProperties(param0: globalAndroid.service.voice.IVoiceInteractionService): globalAndroid.hardware.soundtrigger.SoundTrigger.ModuleProperties;
                        getKeyphraseSoundModel(param0: number, param1: string): globalAndroid.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel;
                        getUserDisabledShowContext(): number;
                        hideCurrentSession(): void;
                        hideSessionFromSession(param0: globalAndroid.os.IBinder): boolean;
                        isEnrolledForKeyphrase(param0: globalAndroid.service.voice.IVoiceInteractionService, param1: number, param2: string): boolean;
                        isSessionRunning(): boolean;
                        launchVoiceAssistFromKeyguard(): void;
                        onLockscreenShown(): void;
                        registerVoiceInteractionSessionListener(param0: com.android.internal.app.IVoiceInteractionSessionListener): void;
                        setDisabledShowContext(param0: number): void;
                        setKeepAwake(param0: globalAndroid.os.IBinder, param1: boolean): void;
                        showSession(param0: globalAndroid.service.voice.IVoiceInteractionService, param1: globalAndroid.os.Bundle, param2: number): void;
                        showSessionForActiveService(param0: globalAndroid.os.Bundle, param1: number, param2: com.android.internal.app.IVoiceInteractionSessionShowCallback, param3: globalAndroid.os.IBinder): boolean;
                        showSessionFromSession(param0: globalAndroid.os.IBinder, param1: globalAndroid.os.Bundle, param2: number): boolean;
                        startAssistantActivity(param0: globalAndroid.os.IBinder, param1: globalAndroid.content.Intent, param2: string): number;
                        startRecognition(param0: globalAndroid.service.voice.IVoiceInteractionService, param1: number, param2: string, param3: globalAndroid.hardware.soundtrigger.IRecognitionStatusCallback, param4: globalAndroid.hardware.soundtrigger.SoundTrigger.RecognitionConfig): number;
                        startVoiceActivity(param0: globalAndroid.os.IBinder, param1: globalAndroid.content.Intent, param2: string): number;
                        stopRecognition(param0: globalAndroid.service.voice.IVoiceInteractionService, param1: number, param2: globalAndroid.hardware.soundtrigger.IRecognitionStatusCallback): number;
                        updateKeyphraseSoundModel(param0: globalAndroid.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel): number;
                    });
                    public constructor();
                    public showSession(param0: globalAndroid.service.voice.IVoiceInteractionService, param1: globalAndroid.os.Bundle, param2: number): void;
                    public showSessionFromSession(param0: globalAndroid.os.IBinder, param1: globalAndroid.os.Bundle, param2: number): boolean;
                    public isEnrolledForKeyphrase(param0: globalAndroid.service.voice.IVoiceInteractionService, param1: number, param2: string): boolean;
                    public getActiveServiceComponentName(): globalAndroid.content.ComponentName;
                    public startAssistantActivity(param0: globalAndroid.os.IBinder, param1: globalAndroid.content.Intent, param2: string): number;
                    public stopRecognition(param0: globalAndroid.service.voice.IVoiceInteractionService, param1: number, param2: globalAndroid.hardware.soundtrigger.IRecognitionStatusCallback): number;
                    public startVoiceActivity(param0: globalAndroid.os.IBinder, param1: globalAndroid.content.Intent, param2: string): number;
                    public getDisabledShowContext(): number;
                    public closeSystemDialogs(param0: globalAndroid.os.IBinder): void;
                    public launchVoiceAssistFromKeyguard(): void;
                    public getKeyphraseSoundModel(param0: number, param1: string): globalAndroid.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel;
                    public hideCurrentSession(): void;
                    public finish(param0: globalAndroid.os.IBinder): void;
                    public showSessionForActiveService(param0: globalAndroid.os.Bundle, param1: number, param2: com.android.internal.app.IVoiceInteractionSessionShowCallback, param3: globalAndroid.os.IBinder): boolean;
                    public deliverNewSession(param0: globalAndroid.os.IBinder, param1: globalAndroid.service.voice.IVoiceInteractionSession, param2: com.android.internal.app.IVoiceInteractor): boolean;
                    public getDspModuleProperties(param0: globalAndroid.service.voice.IVoiceInteractionService): globalAndroid.hardware.soundtrigger.SoundTrigger.ModuleProperties;
                    public registerVoiceInteractionSessionListener(param0: com.android.internal.app.IVoiceInteractionSessionListener): void;
                    public isSessionRunning(): boolean;
                    public setDisabledShowContext(param0: number): void;
                    public getUserDisabledShowContext(): number;
                    public activeServiceSupportsAssist(): boolean;
                    public activeServiceSupportsLaunchFromKeyguard(): boolean;
                    public setKeepAwake(param0: globalAndroid.os.IBinder, param1: boolean): void;
                    public startRecognition(param0: globalAndroid.service.voice.IVoiceInteractionService, param1: number, param2: string, param3: globalAndroid.hardware.soundtrigger.IRecognitionStatusCallback, param4: globalAndroid.hardware.soundtrigger.SoundTrigger.RecognitionConfig): number;
                    public hideSessionFromSession(param0: globalAndroid.os.IBinder): boolean;
                    public onLockscreenShown(): void;
                    public deleteKeyphraseSoundModel(param0: number, param1: string): number;
                    public updateKeyphraseSoundModel(param0: globalAndroid.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel): number;
                }
                export module IVoiceInteractionManagerService {
                    export abstract class Stub implements com.android.internal.app.IVoiceInteractionManagerService {
                        public static class: java.lang.Class<com.android.internal.app.IVoiceInteractionManagerService.Stub>;
                        public activeServiceSupportsLaunchFromKeyguard(): boolean;
                        public deliverNewSession(param0: globalAndroid.os.IBinder, param1: globalAndroid.service.voice.IVoiceInteractionSession, param2: com.android.internal.app.IVoiceInteractor): boolean;
                        public deleteKeyphraseSoundModel(param0: number, param1: string): number;
                        public startRecognition(param0: globalAndroid.service.voice.IVoiceInteractionService, param1: number, param2: string, param3: globalAndroid.hardware.soundtrigger.IRecognitionStatusCallback, param4: globalAndroid.hardware.soundtrigger.SoundTrigger.RecognitionConfig): number;
                        public finish(param0: globalAndroid.os.IBinder): void;
                        public getUserDisabledShowContext(): number;
                        public getDspModuleProperties(param0: globalAndroid.service.voice.IVoiceInteractionService): globalAndroid.hardware.soundtrigger.SoundTrigger.ModuleProperties;
                        public showSession(param0: globalAndroid.service.voice.IVoiceInteractionService, param1: globalAndroid.os.Bundle, param2: number): void;
                        public showSessionForActiveService(param0: globalAndroid.os.Bundle, param1: number, param2: com.android.internal.app.IVoiceInteractionSessionShowCallback, param3: globalAndroid.os.IBinder): boolean;
                        public getDisabledShowContext(): number;
                        public showSessionFromSession(param0: globalAndroid.os.IBinder, param1: globalAndroid.os.Bundle, param2: number): boolean;
                        public startAssistantActivity(param0: globalAndroid.os.IBinder, param1: globalAndroid.content.Intent, param2: string): number;
                        public registerVoiceInteractionSessionListener(param0: com.android.internal.app.IVoiceInteractionSessionListener): void;
                        public startVoiceActivity(param0: globalAndroid.os.IBinder, param1: globalAndroid.content.Intent, param2: string): number;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public stopRecognition(param0: globalAndroid.service.voice.IVoiceInteractionService, param1: number, param2: globalAndroid.hardware.soundtrigger.IRecognitionStatusCallback): number;
                        public activeServiceSupportsAssist(): boolean;
                        public closeSystemDialogs(param0: globalAndroid.os.IBinder): void;
                        public constructor();
                        public setKeepAwake(param0: globalAndroid.os.IBinder, param1: boolean): void;
                        public updateKeyphraseSoundModel(param0: globalAndroid.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel): number;
                        public setDisabledShowContext(param0: number): void;
                        public getKeyphraseSoundModel(param0: number, param1: string): globalAndroid.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel;
                        public launchVoiceAssistFromKeyguard(): void;
                        public isSessionRunning(): boolean;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.app.IVoiceInteractionManagerService;
                        public onLockscreenShown(): void;
                        public isEnrolledForKeyphrase(param0: globalAndroid.service.voice.IVoiceInteractionService, param1: number, param2: string): boolean;
                        public hideCurrentSession(): void;
                        public getActiveServiceComponentName(): globalAndroid.content.ComponentName;
                        public hideSessionFromSession(param0: globalAndroid.os.IBinder): boolean;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.app.IVoiceInteractionManagerService {
                            public static class: java.lang.Class<com.android.internal.app.IVoiceInteractionManagerService.Stub.Proxy>;
                            public showSessionForActiveService(param0: globalAndroid.os.Bundle, param1: number, param2: com.android.internal.app.IVoiceInteractionSessionShowCallback, param3: globalAndroid.os.IBinder): boolean;
                            public registerVoiceInteractionSessionListener(param0: com.android.internal.app.IVoiceInteractionSessionListener): void;
                            public getActiveServiceComponentName(): globalAndroid.content.ComponentName;
                            public setDisabledShowContext(param0: number): void;
                            public showSessionFromSession(param0: globalAndroid.os.IBinder, param1: globalAndroid.os.Bundle, param2: number): boolean;
                            public closeSystemDialogs(param0: globalAndroid.os.IBinder): void;
                            public onLockscreenShown(): void;
                            public setKeepAwake(param0: globalAndroid.os.IBinder, param1: boolean): void;
                            public hideCurrentSession(): void;
                            public deleteKeyphraseSoundModel(param0: number, param1: string): number;
                            public hideSessionFromSession(param0: globalAndroid.os.IBinder): boolean;
                            public getUserDisabledShowContext(): number;
                            public isSessionRunning(): boolean;
                            public startVoiceActivity(param0: globalAndroid.os.IBinder, param1: globalAndroid.content.Intent, param2: string): number;
                            public showSession(param0: globalAndroid.service.voice.IVoiceInteractionService, param1: globalAndroid.os.Bundle, param2: number): void;
                            public updateKeyphraseSoundModel(param0: globalAndroid.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel): number;
                            public startAssistantActivity(param0: globalAndroid.os.IBinder, param1: globalAndroid.content.Intent, param2: string): number;
                            public finish(param0: globalAndroid.os.IBinder): void;
                            public getDspModuleProperties(param0: globalAndroid.service.voice.IVoiceInteractionService): globalAndroid.hardware.soundtrigger.SoundTrigger.ModuleProperties;
                            public stopRecognition(param0: globalAndroid.service.voice.IVoiceInteractionService, param1: number, param2: globalAndroid.hardware.soundtrigger.IRecognitionStatusCallback): number;
                            public getKeyphraseSoundModel(param0: number, param1: string): globalAndroid.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public deliverNewSession(param0: globalAndroid.os.IBinder, param1: globalAndroid.service.voice.IVoiceInteractionSession, param2: com.android.internal.app.IVoiceInteractor): boolean;
                            public activeServiceSupportsLaunchFromKeyguard(): boolean;
                            public launchVoiceAssistFromKeyguard(): void;
                            public getDisabledShowContext(): number;
                            public activeServiceSupportsAssist(): boolean;
                            public startRecognition(param0: globalAndroid.service.voice.IVoiceInteractionService, param1: number, param2: string, param3: globalAndroid.hardware.soundtrigger.IRecognitionStatusCallback, param4: globalAndroid.hardware.soundtrigger.SoundTrigger.RecognitionConfig): number;
                            public isEnrolledForKeyphrase(param0: globalAndroid.service.voice.IVoiceInteractionService, param1: number, param2: string): boolean;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class IVoiceInteractionSessionListener extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.IVoiceInteractionSessionListener>;
                    /**
                     * Constructs a new instance of the com.android.internal.app.IVoiceInteractionSessionListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        onVoiceSessionHidden(): void;
                        onVoiceSessionShown(): void;
                    });
                    public constructor();
                    public onVoiceSessionHidden(): void;
                    public onVoiceSessionShown(): void;
                }
                export module IVoiceInteractionSessionListener {
                    export abstract class Stub implements com.android.internal.app.IVoiceInteractionSessionListener {
                        public static class: java.lang.Class<com.android.internal.app.IVoiceInteractionSessionListener.Stub>;
                        public constructor();
                        public onVoiceSessionShown(): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.app.IVoiceInteractionSessionListener;
                        public onVoiceSessionHidden(): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.app.IVoiceInteractionSessionListener {
                            public static class: java.lang.Class<com.android.internal.app.IVoiceInteractionSessionListener.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public onVoiceSessionHidden(): void;
                            public onVoiceSessionShown(): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class IVoiceInteractionSessionShowCallback extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.IVoiceInteractionSessionShowCallback>;
                    /**
                     * Constructs a new instance of the com.android.internal.app.IVoiceInteractionSessionShowCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        onFailed(): void;
                        onShown(): void;
                    });
                    public constructor();
                    public onShown(): void;
                    public onFailed(): void;
                }
                export module IVoiceInteractionSessionShowCallback {
                    export abstract class Stub implements com.android.internal.app.IVoiceInteractionSessionShowCallback {
                        public static class: java.lang.Class<com.android.internal.app.IVoiceInteractionSessionShowCallback.Stub>;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.app.IVoiceInteractionSessionShowCallback;
                        public constructor();
                        public onFailed(): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public onShown(): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.app.IVoiceInteractionSessionShowCallback {
                            public static class: java.lang.Class<com.android.internal.app.IVoiceInteractionSessionShowCallback.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public onShown(): void;
                            public onFailed(): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class IVoiceInteractor extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.IVoiceInteractor>;
                    /**
                     * Constructs a new instance of the com.android.internal.app.IVoiceInteractor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        startAbortVoice(param0: string, param1: com.android.internal.app.IVoiceInteractorCallback, param2: globalAndroid.app.VoiceInteractor.Prompt, param3: globalAndroid.os.Bundle): com.android.internal.app.IVoiceInteractorRequest;
                        startCommand(param0: string, param1: com.android.internal.app.IVoiceInteractorCallback, param2: string, param3: globalAndroid.os.Bundle): com.android.internal.app.IVoiceInteractorRequest;
                        startCompleteVoice(param0: string, param1: com.android.internal.app.IVoiceInteractorCallback, param2: globalAndroid.app.VoiceInteractor.Prompt, param3: globalAndroid.os.Bundle): com.android.internal.app.IVoiceInteractorRequest;
                        startConfirmation(param0: string, param1: com.android.internal.app.IVoiceInteractorCallback, param2: globalAndroid.app.VoiceInteractor.Prompt, param3: globalAndroid.os.Bundle): com.android.internal.app.IVoiceInteractorRequest;
                        startPickOption(param0: string, param1: com.android.internal.app.IVoiceInteractorCallback, param2: globalAndroid.app.VoiceInteractor.Prompt, param3: globalAndroid.app.VoiceInteractor.PickOptionRequest.Option[], param4: globalAndroid.os.Bundle): com.android.internal.app.IVoiceInteractorRequest;
                        supportsCommands(param0: string, param1: string[]): boolean[];
                    });
                    public constructor();
                    public supportsCommands(param0: string, param1: string[]): boolean[];
                    public startConfirmation(param0: string, param1: com.android.internal.app.IVoiceInteractorCallback, param2: globalAndroid.app.VoiceInteractor.Prompt, param3: globalAndroid.os.Bundle): com.android.internal.app.IVoiceInteractorRequest;
                    public startCommand(param0: string, param1: com.android.internal.app.IVoiceInteractorCallback, param2: string, param3: globalAndroid.os.Bundle): com.android.internal.app.IVoiceInteractorRequest;
                    public startPickOption(param0: string, param1: com.android.internal.app.IVoiceInteractorCallback, param2: globalAndroid.app.VoiceInteractor.Prompt, param3: globalAndroid.app.VoiceInteractor.PickOptionRequest.Option[], param4: globalAndroid.os.Bundle): com.android.internal.app.IVoiceInteractorRequest;
                    public startAbortVoice(param0: string, param1: com.android.internal.app.IVoiceInteractorCallback, param2: globalAndroid.app.VoiceInteractor.Prompt, param3: globalAndroid.os.Bundle): com.android.internal.app.IVoiceInteractorRequest;
                    public startCompleteVoice(param0: string, param1: com.android.internal.app.IVoiceInteractorCallback, param2: globalAndroid.app.VoiceInteractor.Prompt, param3: globalAndroid.os.Bundle): com.android.internal.app.IVoiceInteractorRequest;
                }
                export module IVoiceInteractor {
                    export abstract class Stub implements com.android.internal.app.IVoiceInteractor {
                        public static class: java.lang.Class<com.android.internal.app.IVoiceInteractor.Stub>;
                        public startCompleteVoice(param0: string, param1: com.android.internal.app.IVoiceInteractorCallback, param2: globalAndroid.app.VoiceInteractor.Prompt, param3: globalAndroid.os.Bundle): com.android.internal.app.IVoiceInteractorRequest;
                        public startPickOption(param0: string, param1: com.android.internal.app.IVoiceInteractorCallback, param2: globalAndroid.app.VoiceInteractor.Prompt, param3: globalAndroid.app.VoiceInteractor.PickOptionRequest.Option[], param4: globalAndroid.os.Bundle): com.android.internal.app.IVoiceInteractorRequest;
                        public constructor();
                        public startConfirmation(param0: string, param1: com.android.internal.app.IVoiceInteractorCallback, param2: globalAndroid.app.VoiceInteractor.Prompt, param3: globalAndroid.os.Bundle): com.android.internal.app.IVoiceInteractorRequest;
                        public startAbortVoice(param0: string, param1: com.android.internal.app.IVoiceInteractorCallback, param2: globalAndroid.app.VoiceInteractor.Prompt, param3: globalAndroid.os.Bundle): com.android.internal.app.IVoiceInteractorRequest;
                        public supportsCommands(param0: string, param1: string[]): boolean[];
                        public startCommand(param0: string, param1: com.android.internal.app.IVoiceInteractorCallback, param2: string, param3: globalAndroid.os.Bundle): com.android.internal.app.IVoiceInteractorRequest;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.app.IVoiceInteractor;
                        public asBinder(): globalAndroid.os.IBinder;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.app.IVoiceInteractor {
                            public static class: java.lang.Class<com.android.internal.app.IVoiceInteractor.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public supportsCommands(param0: string, param1: string[]): boolean[];
                            public startConfirmation(param0: string, param1: com.android.internal.app.IVoiceInteractorCallback, param2: globalAndroid.app.VoiceInteractor.Prompt, param3: globalAndroid.os.Bundle): com.android.internal.app.IVoiceInteractorRequest;
                            public startCommand(param0: string, param1: com.android.internal.app.IVoiceInteractorCallback, param2: string, param3: globalAndroid.os.Bundle): com.android.internal.app.IVoiceInteractorRequest;
                            public startPickOption(param0: string, param1: com.android.internal.app.IVoiceInteractorCallback, param2: globalAndroid.app.VoiceInteractor.Prompt, param3: globalAndroid.app.VoiceInteractor.PickOptionRequest.Option[], param4: globalAndroid.os.Bundle): com.android.internal.app.IVoiceInteractorRequest;
                            public startAbortVoice(param0: string, param1: com.android.internal.app.IVoiceInteractorCallback, param2: globalAndroid.app.VoiceInteractor.Prompt, param3: globalAndroid.os.Bundle): com.android.internal.app.IVoiceInteractorRequest;
                            public startCompleteVoice(param0: string, param1: com.android.internal.app.IVoiceInteractorCallback, param2: globalAndroid.app.VoiceInteractor.Prompt, param3: globalAndroid.os.Bundle): com.android.internal.app.IVoiceInteractorRequest;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class IVoiceInteractorCallback extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.IVoiceInteractorCallback>;
                    /**
                     * Constructs a new instance of the com.android.internal.app.IVoiceInteractorCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        deliverAbortVoiceResult(param0: com.android.internal.app.IVoiceInteractorRequest, param1: globalAndroid.os.Bundle): void;
                        deliverCancel(param0: com.android.internal.app.IVoiceInteractorRequest): void;
                        deliverCommandResult(param0: com.android.internal.app.IVoiceInteractorRequest, param1: boolean, param2: globalAndroid.os.Bundle): void;
                        deliverCompleteVoiceResult(param0: com.android.internal.app.IVoiceInteractorRequest, param1: globalAndroid.os.Bundle): void;
                        deliverConfirmationResult(param0: com.android.internal.app.IVoiceInteractorRequest, param1: boolean, param2: globalAndroid.os.Bundle): void;
                        deliverPickOptionResult(param0: com.android.internal.app.IVoiceInteractorRequest, param1: boolean, param2: globalAndroid.app.VoiceInteractor.PickOptionRequest.Option[], param3: globalAndroid.os.Bundle): void;
                    });
                    public constructor();
                    public deliverConfirmationResult(param0: com.android.internal.app.IVoiceInteractorRequest, param1: boolean, param2: globalAndroid.os.Bundle): void;
                    public deliverAbortVoiceResult(param0: com.android.internal.app.IVoiceInteractorRequest, param1: globalAndroid.os.Bundle): void;
                    public deliverCancel(param0: com.android.internal.app.IVoiceInteractorRequest): void;
                    public deliverCompleteVoiceResult(param0: com.android.internal.app.IVoiceInteractorRequest, param1: globalAndroid.os.Bundle): void;
                    public deliverCommandResult(param0: com.android.internal.app.IVoiceInteractorRequest, param1: boolean, param2: globalAndroid.os.Bundle): void;
                    public deliverPickOptionResult(param0: com.android.internal.app.IVoiceInteractorRequest, param1: boolean, param2: globalAndroid.app.VoiceInteractor.PickOptionRequest.Option[], param3: globalAndroid.os.Bundle): void;
                }
                export module IVoiceInteractorCallback {
                    export abstract class Stub implements com.android.internal.app.IVoiceInteractorCallback {
                        public static class: java.lang.Class<com.android.internal.app.IVoiceInteractorCallback.Stub>;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.app.IVoiceInteractorCallback;
                        public constructor();
                        public deliverCancel(param0: com.android.internal.app.IVoiceInteractorRequest): void;
                        public deliverPickOptionResult(param0: com.android.internal.app.IVoiceInteractorRequest, param1: boolean, param2: globalAndroid.app.VoiceInteractor.PickOptionRequest.Option[], param3: globalAndroid.os.Bundle): void;
                        public deliverAbortVoiceResult(param0: com.android.internal.app.IVoiceInteractorRequest, param1: globalAndroid.os.Bundle): void;
                        public deliverCommandResult(param0: com.android.internal.app.IVoiceInteractorRequest, param1: boolean, param2: globalAndroid.os.Bundle): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public deliverCompleteVoiceResult(param0: com.android.internal.app.IVoiceInteractorRequest, param1: globalAndroid.os.Bundle): void;
                        public deliverConfirmationResult(param0: com.android.internal.app.IVoiceInteractorRequest, param1: boolean, param2: globalAndroid.os.Bundle): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.app.IVoiceInteractorCallback {
                            public static class: java.lang.Class<com.android.internal.app.IVoiceInteractorCallback.Stub.Proxy>;
                            public deliverPickOptionResult(param0: com.android.internal.app.IVoiceInteractorRequest, param1: boolean, param2: globalAndroid.app.VoiceInteractor.PickOptionRequest.Option[], param3: globalAndroid.os.Bundle): void;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public deliverAbortVoiceResult(param0: com.android.internal.app.IVoiceInteractorRequest, param1: globalAndroid.os.Bundle): void;
                            public deliverCancel(param0: com.android.internal.app.IVoiceInteractorRequest): void;
                            public deliverCompleteVoiceResult(param0: com.android.internal.app.IVoiceInteractorRequest, param1: globalAndroid.os.Bundle): void;
                            public deliverCommandResult(param0: com.android.internal.app.IVoiceInteractorRequest, param1: boolean, param2: globalAndroid.os.Bundle): void;
                            public deliverConfirmationResult(param0: com.android.internal.app.IVoiceInteractorRequest, param1: boolean, param2: globalAndroid.os.Bundle): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class IVoiceInteractorRequest extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.IVoiceInteractorRequest>;
                    /**
                     * Constructs a new instance of the com.android.internal.app.IVoiceInteractorRequest interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        cancel(): void;
                    });
                    public constructor();
                    public cancel(): void;
                }
                export module IVoiceInteractorRequest {
                    export abstract class Stub implements com.android.internal.app.IVoiceInteractorRequest {
                        public static class: java.lang.Class<com.android.internal.app.IVoiceInteractorRequest.Stub>;
                        public constructor();
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.app.IVoiceInteractorRequest;
                        public cancel(): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.app.IVoiceInteractorRequest {
                            public static class: java.lang.Class<com.android.internal.app.IVoiceInteractorRequest.Stub.Proxy>;
                            public cancel(): void;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class IntentForwarderActivity extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.IntentForwarderActivity>;
                    public static FORWARD_INTENT_TO_MANAGED_PROFILE: string;
                    public static FORWARD_INTENT_TO_PARENT: string;
                    public static TAG: string;
                    public onCreate(param0: globalAndroid.os.Bundle): void;
                    public constructor();
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class LocaleHelper extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.LocaleHelper>;
                    public static getDisplayLocaleList(param0: any, param1: java.util.Locale, param2: number): string;
                    public static getDisplayName(param0: java.util.Locale, param1: boolean): string;
                    public constructor();
                    public static getDisplayCountry(param0: java.util.Locale, param1: java.util.Locale): string;
                    public static toSentenceCase(param0: string, param1: java.util.Locale): string;
                    public static getDisplayCountry(param0: java.util.Locale): string;
                    public static addLikelySubtags(param0: java.util.Locale): java.util.Locale;
                    public static normalizeForSearch(param0: string, param1: java.util.Locale): string;
                    public static getDisplayName(param0: java.util.Locale, param1: java.util.Locale, param2: boolean): string;
                }
                export module LocaleHelper {
                    export class LocaleInfoComparator extends java.util.Comparator<com.android.internal.app.LocaleStore.LocaleInfo> {
                        public static class: java.lang.Class<com.android.internal.app.LocaleHelper.LocaleInfoComparator>;
                        public constructor(param0: java.util.Locale, param1: boolean);
                        public compare(param0: com.android.internal.app.LocaleStore.LocaleInfo, param1: com.android.internal.app.LocaleStore.LocaleInfo): number;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class LocalePicker extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.LocalePicker>;
                    public setLocaleSelectionListener(param0: com.android.internal.app.LocalePicker.LocaleSelectionListener): void;
                    public static getSupportedLocales(param0: globalAndroid.content.Context): string[];
                    public static getPseudoLocales(): string[];
                    public static updateLocales(param0: any): void;
                    public onResume(): void;
                    public static constructAdapter(param0: globalAndroid.content.Context): globalAndroid.widget.ArrayAdapter<com.android.internal.app.LocalePicker.LocaleInfo>;
                    public static getLocales(): any;
                    public onActivityCreated(param0: globalAndroid.os.Bundle): void;
                    public constructor();
                    public onListItemClick(param0: globalAndroid.widget.ListView, param1: globalAndroid.view.View, param2: number, param3: number): void;
                    public static constructAdapter(param0: globalAndroid.content.Context, param1: number, param2: number): globalAndroid.widget.ArrayAdapter<com.android.internal.app.LocalePicker.LocaleInfo>;
                    public static updateLocale(param0: java.util.Locale): void;
                    public static getSystemAssetLocales(): string[];
                    public static getAllAssetLocales(param0: globalAndroid.content.Context, param1: boolean): java.util.List<com.android.internal.app.LocalePicker.LocaleInfo>;
                }
                export module LocalePicker {
                    export class LocaleInfo extends java.lang.Comparable<com.android.internal.app.LocalePicker.LocaleInfo> {
                        public static class: java.lang.Class<com.android.internal.app.LocalePicker.LocaleInfo>;
                        public constructor(param0: string, param1: java.util.Locale);
                        public compareTo(param0: com.android.internal.app.LocalePicker.LocaleInfo): number;
                        public getLocale(): java.util.Locale;
                        public getLabel(): string;
                        public toString(): string;
                    }
                    export class LocaleSelectionListener extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.LocalePicker.LocaleSelectionListener>;
                        /**
                         * Constructs a new instance of the com.android.internal.app.LocalePicker$LocaleSelectionListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            onLocaleSelected(param0: java.util.Locale): void;
                        });
                        public constructor();
                        public onLocaleSelected(param0: java.util.Locale): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class LocalePickerWithRegion implements globalAndroid.widget.SearchView.OnQueryTextListener {
                    public static class: java.lang.Class<com.android.internal.app.LocalePickerWithRegion>;
                    public onQueryTextSubmit(param0: string): boolean;
                    public onCreate(param0: globalAndroid.os.Bundle): void;
                    public onQueryTextChange(param0: string): boolean;
                    public constructor();
                    public onCreateOptionsMenu(param0: globalAndroid.view.Menu, param1: globalAndroid.view.MenuInflater): void;
                    public onListItemClick(param0: globalAndroid.widget.ListView, param1: globalAndroid.view.View, param2: number, param3: number): void;
                    public onPause(): void;
                    public static createLanguagePicker(param0: globalAndroid.content.Context, param1: com.android.internal.app.LocalePickerWithRegion.LocaleSelectedListener, param2: boolean): com.android.internal.app.LocalePickerWithRegion;
                    public onOptionsItemSelected(param0: globalAndroid.view.MenuItem): boolean;
                    public onResume(): void;
                }
                export module LocalePickerWithRegion {
                    export class LocaleSelectedListener extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.LocalePickerWithRegion.LocaleSelectedListener>;
                        /**
                         * Constructs a new instance of the com.android.internal.app.LocalePickerWithRegion$LocaleSelectedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            onLocaleSelected(param0: com.android.internal.app.LocaleStore.LocaleInfo): void;
                        });
                        public constructor();
                        public onLocaleSelected(param0: com.android.internal.app.LocaleStore.LocaleInfo): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class LocaleStore extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.LocaleStore>;
                    public static getLevelLocales(param0: globalAndroid.content.Context, param1: java.util.Set<string>, param2: com.android.internal.app.LocaleStore.LocaleInfo, param3: boolean): java.util.Set<com.android.internal.app.LocaleStore.LocaleInfo>;
                    public static fillCache(param0: globalAndroid.content.Context): void;
                    public constructor();
                    public static getLocaleInfo(param0: java.util.Locale): com.android.internal.app.LocaleStore.LocaleInfo;
                    public static updateSimCountries(param0: globalAndroid.content.Context): void;
                }
                export module LocaleStore {
                    export class LocaleInfo extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.LocaleStore.LocaleInfo>;
                        public setTranslated(param0: boolean): void;
                        public setChecked(param0: boolean): void;
                        public getFullNameNative(): string;
                        public getLocale(): java.util.Locale;
                        public getChecked(): boolean;
                        public getId(): string;
                        public getParent(): java.util.Locale;
                        public isTranslated(): boolean;
                        public getFullNameInUiLanguage(): string;
                        public toString(): string;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class MediaRouteChooserDialog extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.MediaRouteChooserDialog>;
                    public onDetachedFromWindow(): void;
                    public onFilterRoute(param0: globalAndroid.media.MediaRouter.RouteInfo): boolean;
                    public onCreate(param0: globalAndroid.os.Bundle): void;
                    public refreshRoutes(): void;
                    public constructor(param0: globalAndroid.content.Context, param1: number);
                    public setRouteTypes(param0: number): void;
                    public onAttachedToWindow(): void;
                    public setExtendedSettingsClickListener(param0: globalAndroid.view.View.OnClickListener): void;
                    public getRouteTypes(): number;
                }
                export module MediaRouteChooserDialog {
                    export class MediaRouterCallback extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.MediaRouteChooserDialog.MediaRouterCallback>;
                        public onRouteRemoved(param0: globalAndroid.media.MediaRouter, param1: globalAndroid.media.MediaRouter.RouteInfo): void;
                        public onRouteChanged(param0: globalAndroid.media.MediaRouter, param1: globalAndroid.media.MediaRouter.RouteInfo): void;
                        public onRouteSelected(param0: globalAndroid.media.MediaRouter, param1: number, param2: globalAndroid.media.MediaRouter.RouteInfo): void;
                        public onRouteAdded(param0: globalAndroid.media.MediaRouter, param1: globalAndroid.media.MediaRouter.RouteInfo): void;
                    }
                    export class RouteAdapter extends globalAndroid.widget.ArrayAdapter<globalAndroid.media.MediaRouter.RouteInfo> implements globalAndroid.widget.AdapterView.OnItemClickListener {
                        public static class: java.lang.Class<com.android.internal.app.MediaRouteChooserDialog.RouteAdapter>;
                        public isEnabled(param0: number): boolean;
                        public areAllItemsEnabled(): boolean;
                        public getFilter(): globalAndroid.widget.Filter;
                        public constructor();
                        public constructor(param0: globalAndroid.content.Context, param1: number, param2: number);
                        public constructor(param0: globalAndroid.content.Context, param1: number, param2: number, param3: any[]);
                        public getDropDownViewTheme(): globalAndroid.content.res.Resources.Theme;
                        public setDropDownViewTheme(param0: globalAndroid.content.res.Resources.Theme): void;
                        public onItemClick(param0: globalAndroid.widget.AdapterView<any>, param1: globalAndroid.view.View, param2: number, param3: number): void;
                        public constructor(param0: com.android.internal.app.MediaRouteChooserDialog, param1: globalAndroid.content.Context);
                        public getView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
                        public update(): void;
                        public constructor(param0: globalAndroid.content.Context, param1: number);
                        public constructor(param0: globalAndroid.content.Context, param1: number, param2: any[]);
                        public constructor(param0: globalAndroid.content.Context, param1: number, param2: java.util.List<any>);
                        public constructor(param0: globalAndroid.content.Context, param1: number, param2: number, param3: java.util.List<any>);
                        public getDropDownView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
                    }
                    export class RouteComparator extends java.util.Comparator<globalAndroid.media.MediaRouter.RouteInfo> {
                        public static class: java.lang.Class<com.android.internal.app.MediaRouteChooserDialog.RouteComparator>;
                        public static sInstance: com.android.internal.app.MediaRouteChooserDialog.RouteComparator;
                        public compare(param0: globalAndroid.media.MediaRouter.RouteInfo, param1: globalAndroid.media.MediaRouter.RouteInfo): number;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class MediaRouteChooserDialogFragment extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.MediaRouteChooserDialogFragment>;
                    public onCreateChooserDialog(param0: globalAndroid.content.Context, param1: globalAndroid.os.Bundle): com.android.internal.app.MediaRouteChooserDialog;
                    public constructor();
                    public setRouteTypes(param0: number): void;
                    public onCreateDialog(param0: globalAndroid.os.Bundle): globalAndroid.app.Dialog;
                    public setExtendedSettingsClickListener(param0: globalAndroid.view.View.OnClickListener): void;
                    public getRouteTypes(): number;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class MediaRouteControllerDialog extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.MediaRouteControllerDialog>;
                    public isVolumeControlEnabled(): boolean;
                    public onDetachedFromWindow(): void;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public setVolumeControlEnabled(param0: boolean): void;
                    public onCreate(param0: globalAndroid.os.Bundle): void;
                    public getMediaControlView(): globalAndroid.view.View;
                    public onCreateMediaControlView(param0: globalAndroid.os.Bundle): globalAndroid.view.View;
                    public constructor(param0: globalAndroid.content.Context, param1: number);
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public onAttachedToWindow(): void;
                    public getRoute(): globalAndroid.media.MediaRouter.RouteInfo;
                }
                export module MediaRouteControllerDialog {
                    export class MediaRouterCallback extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.MediaRouteControllerDialog.MediaRouterCallback>;
                        public onRouteUngrouped(param0: globalAndroid.media.MediaRouter, param1: globalAndroid.media.MediaRouter.RouteInfo, param2: globalAndroid.media.MediaRouter.RouteGroup): void;
                        public onRouteChanged(param0: globalAndroid.media.MediaRouter, param1: globalAndroid.media.MediaRouter.RouteInfo): void;
                        public onRouteUnselected(param0: globalAndroid.media.MediaRouter, param1: number, param2: globalAndroid.media.MediaRouter.RouteInfo): void;
                        public onRouteVolumeChanged(param0: globalAndroid.media.MediaRouter, param1: globalAndroid.media.MediaRouter.RouteInfo): void;
                        public onRouteGrouped(param0: globalAndroid.media.MediaRouter, param1: globalAndroid.media.MediaRouter.RouteInfo, param2: globalAndroid.media.MediaRouter.RouteGroup, param3: number): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class MediaRouteControllerDialogFragment extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.MediaRouteControllerDialogFragment>;
                    public constructor();
                    public onCreateControllerDialog(param0: globalAndroid.content.Context, param1: globalAndroid.os.Bundle): com.android.internal.app.MediaRouteControllerDialog;
                    public onCreateDialog(param0: globalAndroid.os.Bundle): globalAndroid.app.Dialog;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export abstract class MediaRouteDialogPresenter {
                    public static class: java.lang.Class<com.android.internal.app.MediaRouteDialogPresenter>;
                    public constructor();
                    public static createDialog(param0: globalAndroid.content.Context, param1: number, param2: globalAndroid.view.View.OnClickListener): globalAndroid.app.Dialog;
                    public static showDialogFragment(param0: globalAndroid.app.Activity, param1: number, param2: globalAndroid.view.View.OnClickListener): globalAndroid.app.DialogFragment;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class MicroAlertController extends com.android.internal.app.AlertController {
                    public static class: java.lang.Class<com.android.internal.app.MicroAlertController>;
                    public setupButtons(param0: globalAndroid.view.ViewGroup): void;
                    public setupContent(param0: globalAndroid.view.ViewGroup): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.content.DialogInterface, param2: globalAndroid.view.Window);
                    public setupTitle(param0: globalAndroid.view.ViewGroup): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class NavItemSelectedListener extends globalAndroid.widget.AdapterView.OnItemSelectedListener {
                    public static class: java.lang.Class<com.android.internal.app.NavItemSelectedListener>;
                    public onNothingSelected(param0: globalAndroid.widget.AdapterView<any>): void;
                    public constructor(param0: globalAndroid.app.ActionBar.OnNavigationListener);
                    public onItemSelected(param0: globalAndroid.widget.AdapterView<any>, param1: globalAndroid.view.View, param2: number, param3: number): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class NetInitiatedActivity extends com.android.internal.app.AlertActivity {
                    public static class: java.lang.Class<com.android.internal.app.NetInitiatedActivity>;
                    public onCreate(param0: globalAndroid.os.Bundle): void;
                    public constructor();
                    public onClick(param0: globalAndroid.content.DialogInterface, param1: number): void;
                    public onPause(): void;
                    public onResume(): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class NightDisplayController extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.NightDisplayController>;
                    public static AUTO_MODE_CUSTOM: number;
                    public static AUTO_MODE_DISABLED: number;
                    public static AUTO_MODE_TWILIGHT: number;
                    public getAutoMode(): number;
                    public getLastActivatedTime(): java.util.Calendar;
                    public isActivated(): boolean;
                    public getMinimumColorTemperature(): number;
                    public setActivated(param0: boolean): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: number);
                    public setAutoMode(param0: number): boolean;
                    public setColorTemperature(param0: number): boolean;
                    public setListener(param0: com.android.internal.app.NightDisplayController.Callback): void;
                    public constructor(param0: globalAndroid.content.Context);
                    public getMaximumColorTemperature(): number;
                    public static isAvailable(param0: globalAndroid.content.Context): boolean;
                    public getCustomStartTime(): com.android.internal.app.NightDisplayController.LocalTime;
                    public getDefaultColorTemperature(): number;
                    public setCustomEndTime(param0: com.android.internal.app.NightDisplayController.LocalTime): boolean;
                    public getColorTemperature(): number;
                    public setCustomStartTime(param0: com.android.internal.app.NightDisplayController.LocalTime): boolean;
                    public getCustomEndTime(): com.android.internal.app.NightDisplayController.LocalTime;
                }
                export module NightDisplayController {
                    export class Callback extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.NightDisplayController.Callback>;
                        /**
                         * Constructs a new instance of the com.android.internal.app.NightDisplayController$Callback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            onActivated(param0: boolean): void;
                            onAutoModeChanged(param0: number): void;
                            onColorTemperatureChanged(param0: number): void;
                            onCustomEndTimeChanged(param0: com.android.internal.app.NightDisplayController.LocalTime): void;
                            onCustomStartTimeChanged(param0: com.android.internal.app.NightDisplayController.LocalTime): void;
                        });
                        public constructor();
                        public onActivated(param0: boolean): void;
                        public onColorTemperatureChanged(param0: number): void;
                        public onCustomStartTimeChanged(param0: com.android.internal.app.NightDisplayController.LocalTime): void;
                        public onAutoModeChanged(param0: number): void;
                        public onCustomEndTimeChanged(param0: com.android.internal.app.NightDisplayController.LocalTime): void;
                    }
                    export class LocalTime extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.NightDisplayController.LocalTime>;
                        public hourOfDay: number;
                        public minute: number;
                        public getDateTimeAfter(param0: java.util.Calendar): java.util.Calendar;
                        public getDateTimeBefore(param0: java.util.Calendar): java.util.Calendar;
                        public constructor(param0: number, param1: number);
                        public toString(): string;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class PlatLogoActivity extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.PlatLogoActivity>;
                    public static FINISH: boolean;
                    public static REVEAL_THE_NAME: boolean;
                    public onCreate(param0: globalAndroid.os.Bundle): void;
                    public constructor();
                    public onAttachedToWindow(): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class ProcessMap<E> extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.ProcessMap<any>>;
                    public put(param0: string, param1: number, param2: E): E;
                    public constructor();
                    public getMap(): globalAndroid.util.ArrayMap<string, globalAndroid.util.SparseArray<E>>;
                    public remove(param0: string, param1: number): E;
                    public size(): number;
                    public get(param0: string, param1: number): E;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class ResolverActivity extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.ResolverActivity>;
                    public mAdapter: com.android.internal.app.ResolverActivity.ResolveListAdapter;
                    public mLaunchedFromUid: number;
                    public mPm: globalAndroid.content.pm.PackageManager;
                    public mResolverDrawerLayout: com.android.internal.widget.ResolverDrawerLayout;
                    public getTitleForAction(param0: string, param1: number): string;
                    public onCreate(param0: globalAndroid.os.Bundle, param1: globalAndroid.content.Intent, param2: string, param3: number, param4: globalAndroid.content.Intent[], param5: java.util.List<globalAndroid.content.pm.ResolveInfo>, param6: boolean): void;
                    public onCreate(param0: globalAndroid.os.Bundle): void;
                    public onCreate(param0: globalAndroid.os.Bundle, param1: globalAndroid.content.Intent, param2: string, param3: globalAndroid.content.Intent[], param4: java.util.List<globalAndroid.content.pm.ResolveInfo>, param5: boolean): void;
                    public onButtonClick(param0: globalAndroid.view.View): void;
                    public resetAlwaysOrOnceButtonBar(): void;
                    public onDestroy(): void;
                    public configureContentView(param0: java.util.List<globalAndroid.content.Intent>, param1: globalAndroid.content.Intent[], param2: java.util.List<globalAndroid.content.pm.ResolveInfo>): boolean;
                    public shouldGetActivityMetadata(): boolean;
                    public setTitleAndIcon(): void;
                    public constructor();
                    public createAdapter(param0: globalAndroid.content.Context, param1: java.util.List<globalAndroid.content.Intent>, param2: globalAndroid.content.Intent[], param3: java.util.List<globalAndroid.content.pm.ResolveInfo>, param4: number, param5: boolean): com.android.internal.app.ResolverActivity.ResolveListAdapter;
                    public onTargetSelected(param0: com.android.internal.app.ResolverActivity.TargetInfo, param1: boolean): boolean;
                    public onRestart(): void;
                    public static getLabelRes(param0: string): number;
                    public getLayoutResource(): number;
                    public getReplacementIntent(param0: globalAndroid.content.pm.ActivityInfo, param1: globalAndroid.content.Intent): globalAndroid.content.Intent;
                    public onSetupVoiceInteraction(): void;
                    public showTargetDetails(param0: globalAndroid.content.pm.ResolveInfo): void;
                    public setAdditionalTargets(param0: globalAndroid.content.Intent[]): void;
                    public createListController(): com.android.internal.app.ResolverListController;
                    public onActivityStarted(param0: com.android.internal.app.ResolverActivity.TargetInfo): void;
                    public setSafeForwardingMode(param0: boolean): void;
                    public safelyStartActivity(param0: com.android.internal.app.ResolverActivity.TargetInfo): void;
                    public onRestoreInstanceState(param0: globalAndroid.os.Bundle): void;
                    public shouldAutoLaunchSingleChoice(param0: com.android.internal.app.ResolverActivity.TargetInfo): boolean;
                    public onStop(): void;
                    public getReferrerPackageName(): string;
                    public sendVoiceChoicesIfNeeded(): void;
                    public getTargetIntent(): globalAndroid.content.Intent;
                    public startSelected(param0: number, param1: boolean, param2: boolean): void;
                    public onPrepareAdapterView(param0: globalAndroid.widget.AbsListView, param1: com.android.internal.app.ResolverActivity.ResolveListAdapter): void;
                    public setRetainInOnStop(param0: boolean): void;
                }
                export module ResolverActivity {
                    export class ActionTitle extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.ResolverActivity.ActionTitle>;
                        public static CAPTURE_IMAGE: com.android.internal.app.ResolverActivity.ActionTitle;
                        public static DEFAULT: com.android.internal.app.ResolverActivity.ActionTitle;
                        public static EDIT: com.android.internal.app.ResolverActivity.ActionTitle;
                        public static HOME: com.android.internal.app.ResolverActivity.ActionTitle;
                        public static SEND: com.android.internal.app.ResolverActivity.ActionTitle;
                        public static SENDTO: com.android.internal.app.ResolverActivity.ActionTitle;
                        public static SEND_MULTIPLE: com.android.internal.app.ResolverActivity.ActionTitle;
                        public static VIEW: com.android.internal.app.ResolverActivity.ActionTitle;
                        public action: string;
                        public labelRes: number;
                        public namedTitleRes: number;
                        public titleRes: number;
                        public static values(): com.android.internal.app.ResolverActivity.ActionTitle[];
                        public static forAction(param0: string): com.android.internal.app.ResolverActivity.ActionTitle;
                        public static valueOf(param0: string): com.android.internal.app.ResolverActivity.ActionTitle;
                    }
                    export class DisplayResolveInfo extends com.android.internal.app.ResolverActivity.TargetInfo {
                        public static class: java.lang.Class<com.android.internal.app.ResolverActivity.DisplayResolveInfo>;
                        public getDisplayIcon(): globalAndroid.graphics.drawable.Drawable;
                        public getResolveInfo(): globalAndroid.content.pm.ResolveInfo;
                        public startAsCaller(param0: globalAndroid.app.Activity, param1: globalAndroid.os.Bundle, param2: number): boolean;
                        public getExtendedInfo(): string;
                        public getResolvedIntent(): globalAndroid.content.Intent;
                        public startAsUser(param0: globalAndroid.app.Activity, param1: globalAndroid.os.Bundle, param2: globalAndroid.os.UserHandle): boolean;
                        public getDisplayLabel(): string;
                        public setPinned(param0: boolean): void;
                        public setDisplayIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
                        public getAllSourceIntents(): java.util.List<globalAndroid.content.Intent>;
                        public hasDisplayIcon(): boolean;
                        public getBadgeContentDescription(): string;
                        public constructor(param0: com.android.internal.app.ResolverActivity, param1: globalAndroid.content.Intent, param2: globalAndroid.content.pm.ResolveInfo, param3: string, param4: string, param5: globalAndroid.content.Intent);
                        public getResolvedComponentName(): globalAndroid.content.ComponentName;
                        public addAlternateSourceIntent(param0: globalAndroid.content.Intent): void;
                        public isPinned(): boolean;
                        public start(param0: globalAndroid.app.Activity, param1: globalAndroid.os.Bundle): boolean;
                        public getBadgeIcon(): globalAndroid.graphics.drawable.Drawable;
                        public cloneFilledIn(param0: globalAndroid.content.Intent, param1: number): com.android.internal.app.ResolverActivity.TargetInfo;
                    }
                    export class ItemClickListener implements globalAndroid.widget.AdapterView.OnItemClickListener, globalAndroid.widget.AdapterView.OnItemLongClickListener {
                        public static class: java.lang.Class<com.android.internal.app.ResolverActivity.ItemClickListener>;
                        public onItemLongClick(param0: globalAndroid.widget.AdapterView<any>, param1: globalAndroid.view.View, param2: number, param3: number): boolean;
                        public onItemClick(param0: globalAndroid.widget.AdapterView<any>, param1: globalAndroid.view.View, param2: number, param3: number): void;
                    }
                    export class LoadAdapterIconTask extends com.android.internal.app.ResolverActivity.LoadIconTask {
                        public static class: java.lang.Class<com.android.internal.app.ResolverActivity.LoadAdapterIconTask>;
                        public onPostExecute(param0: globalAndroid.graphics.drawable.Drawable): void;
                        public constructor(param0: com.android.internal.app.ResolverActivity, param1: com.android.internal.app.ResolverActivity.DisplayResolveInfo);
                    }
                    export class LoadIconIntoViewTask extends com.android.internal.app.ResolverActivity.LoadIconTask {
                        public static class: java.lang.Class<com.android.internal.app.ResolverActivity.LoadIconIntoViewTask>;
                        public onPostExecute(param0: globalAndroid.graphics.drawable.Drawable): void;
                        public constructor(param0: com.android.internal.app.ResolverActivity, param1: com.android.internal.app.ResolverActivity.DisplayResolveInfo, param2: globalAndroid.widget.ImageView);
                        public constructor(param0: com.android.internal.app.ResolverActivity, param1: com.android.internal.app.ResolverActivity.DisplayResolveInfo);
                    }
                    export abstract class LoadIconTask extends globalAndroid.os.AsyncTask<java.lang.Void, java.lang.Void, globalAndroid.graphics.drawable.Drawable> {
                        public static class: java.lang.Class<com.android.internal.app.ResolverActivity.LoadIconTask>;
                        public mDisplayResolveInfo: com.android.internal.app.ResolverActivity.DisplayResolveInfo;
                        public doInBackground(param0: java.lang.Void[]): globalAndroid.graphics.drawable.Drawable;
                        public onPostExecute(param0: globalAndroid.graphics.drawable.Drawable): void;
                        public constructor(param0: com.android.internal.app.ResolverActivity, param1: com.android.internal.app.ResolverActivity.DisplayResolveInfo);
                    }
                    export class PickTargetOptionRequest extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.ResolverActivity.PickTargetOptionRequest>;
                        public onCancel(): void;
                        public onPickOptionResult(param0: boolean, param1: globalAndroid.app.VoiceInteractor.PickOptionRequest.Option[], param2: globalAndroid.os.Bundle): void;
                        public constructor(param0: globalAndroid.app.VoiceInteractor.Prompt, param1: globalAndroid.app.VoiceInteractor.PickOptionRequest.Option[], param2: globalAndroid.os.Bundle);
                    }
                    export class ResolveListAdapter extends globalAndroid.widget.BaseAdapter {
                        public static class: java.lang.Class<com.android.internal.app.ResolverActivity.ResolveListAdapter>;
                        public mInflater: globalAndroid.view.LayoutInflater;
                        public mLastChosen: globalAndroid.content.pm.ResolveInfo;
                        public constructor(param0: globalAndroid.content.Context, param1: java.util.List<globalAndroid.content.Intent>, param2: globalAndroid.content.Intent[], param3: java.util.List<globalAndroid.content.pm.ResolveInfo>, param4: number, param5: boolean, param6: com.android.internal.app.ResolverListController);
                        public handlePackagesChanged(): void;
                        public getOtherProfile(): com.android.internal.app.ResolverActivity.DisplayResolveInfo;
                        public getScore(param0: com.android.internal.app.ResolverActivity.DisplayResolveInfo): number;
                        public createView(param0: globalAndroid.view.ViewGroup): globalAndroid.view.View;
                        public getItem(param0: number): com.android.internal.app.ResolverActivity.TargetInfo;
                        public setPlaceholderCount(param0: number): void;
                        public hasResolvedTarget(param0: globalAndroid.content.pm.ResolveInfo): boolean;
                        public getItemId(param0: number): number;
                        public getDisplayInfoCount(): number;
                        public onCreateView(param0: globalAndroid.view.ViewGroup): globalAndroid.view.View;
                        public getPlaceholderCount(): number;
                        public getUnfilteredCount(): number;
                        public getDropDownView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
                        public isEnabled(param0: number): boolean;
                        public areAllItemsEnabled(): boolean;
                        public constructor();
                        public bindView(param0: number, param1: globalAndroid.view.View): void;
                        public getDisplayResolveInfo(param0: number): com.android.internal.app.ResolverActivity.DisplayResolveInfo;
                        public showsExtendedInfo(param0: com.android.internal.app.ResolverActivity.TargetInfo): boolean;
                        public hasExtendedInfo(): boolean;
                        public hasFilteredItem(): boolean;
                        public targetInfoForPosition(param0: number, param1: boolean): com.android.internal.app.ResolverActivity.TargetInfo;
                        public getCount(): number;
                        public getFilteredPosition(): number;
                        public updateChooserCounts(param0: string, param1: number, param2: string): void;
                        public isComponentPinned(param0: globalAndroid.content.ComponentName): boolean;
                        public onListRebuilt(): void;
                        public updateModel(param0: globalAndroid.content.ComponentName): void;
                        public resolveInfoForPosition(param0: number, param1: boolean): globalAndroid.content.pm.ResolveInfo;
                        public rebuildList(): boolean;
                        public getDisplayResolveInfoCount(): number;
                        public shouldGetResolvedFilter(): boolean;
                        public getView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
                        public getFilteredItem(): com.android.internal.app.ResolverActivity.DisplayResolveInfo;
                        public getDisplayInfoAt(param0: number): com.android.internal.app.ResolverActivity.DisplayResolveInfo;
                    }
                    export class ResolvedComponentInfo extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.ResolverActivity.ResolvedComponentInfo>;
                        public name: globalAndroid.content.ComponentName;
                        public constructor(param0: globalAndroid.content.ComponentName, param1: globalAndroid.content.Intent, param2: globalAndroid.content.pm.ResolveInfo);
                        public findIntent(param0: globalAndroid.content.Intent): number;
                        public getResolveInfoAt(param0: number): globalAndroid.content.pm.ResolveInfo;
                        public isPinned(): boolean;
                        public findResolveInfo(param0: globalAndroid.content.pm.ResolveInfo): number;
                        public setPinned(param0: boolean): void;
                        public getCount(): number;
                        public getIntentAt(param0: number): globalAndroid.content.Intent;
                        public add(param0: globalAndroid.content.Intent, param1: globalAndroid.content.pm.ResolveInfo): void;
                    }
                    export class TargetInfo extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.ResolverActivity.TargetInfo>;
                        /**
                         * Constructs a new instance of the com.android.internal.app.ResolverActivity$TargetInfo interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            cloneFilledIn(param0: globalAndroid.content.Intent, param1: number): com.android.internal.app.ResolverActivity.TargetInfo;
                            getAllSourceIntents(): java.util.List<globalAndroid.content.Intent>;
                            getBadgeContentDescription(): string;
                            getBadgeIcon(): globalAndroid.graphics.drawable.Drawable;
                            getDisplayIcon(): globalAndroid.graphics.drawable.Drawable;
                            getDisplayLabel(): string;
                            getExtendedInfo(): string;
                            getResolveInfo(): globalAndroid.content.pm.ResolveInfo;
                            getResolvedComponentName(): globalAndroid.content.ComponentName;
                            getResolvedIntent(): globalAndroid.content.Intent;
                            isPinned(): boolean;
                            start(param0: globalAndroid.app.Activity, param1: globalAndroid.os.Bundle): boolean;
                            startAsCaller(param0: globalAndroid.app.Activity, param1: globalAndroid.os.Bundle, param2: number): boolean;
                            startAsUser(param0: globalAndroid.app.Activity, param1: globalAndroid.os.Bundle, param2: globalAndroid.os.UserHandle): boolean;
                        });
                        public constructor();
                        public getDisplayIcon(): globalAndroid.graphics.drawable.Drawable;
                        public getResolveInfo(): globalAndroid.content.pm.ResolveInfo;
                        public startAsCaller(param0: globalAndroid.app.Activity, param1: globalAndroid.os.Bundle, param2: number): boolean;
                        public getExtendedInfo(): string;
                        public getResolvedIntent(): globalAndroid.content.Intent;
                        public startAsUser(param0: globalAndroid.app.Activity, param1: globalAndroid.os.Bundle, param2: globalAndroid.os.UserHandle): boolean;
                        public getDisplayLabel(): string;
                        public getAllSourceIntents(): java.util.List<globalAndroid.content.Intent>;
                        public getBadgeContentDescription(): string;
                        public getResolvedComponentName(): globalAndroid.content.ComponentName;
                        public isPinned(): boolean;
                        public start(param0: globalAndroid.app.Activity, param1: globalAndroid.os.Bundle): boolean;
                        public getBadgeIcon(): globalAndroid.graphics.drawable.Drawable;
                        public cloneFilledIn(param0: globalAndroid.content.Intent, param1: number): com.android.internal.app.ResolverActivity.TargetInfo;
                    }
                    export class ViewHolder extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.ResolverActivity.ViewHolder>;
                        public badge: globalAndroid.widget.ImageView;
                        public icon: globalAndroid.widget.ImageView;
                        public text: globalAndroid.widget.TextView;
                        public text2: globalAndroid.widget.TextView;
                        public constructor(param0: globalAndroid.view.View);
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class ResolverComparator extends java.util.Comparator<com.android.internal.app.ResolverActivity.ResolvedComponentInfo> {
                    public static class: java.lang.Class<com.android.internal.app.ResolverComparator>;
                    public destroy(): void;
                    public compare(param0: com.android.internal.app.ResolverActivity.ResolvedComponentInfo, param1: com.android.internal.app.ResolverActivity.ResolvedComponentInfo): number;
                    public getContentAnnotations(param0: globalAndroid.content.Intent): void;
                    public updateChooserCounts(param0: string, param1: number, param2: string): void;
                    public compute(param0: java.util.List<com.android.internal.app.ResolverActivity.ResolvedComponentInfo>): void;
                    public updateModel(param0: globalAndroid.content.ComponentName): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.content.Intent, param2: string, param3: com.android.internal.app.ResolverComparator.AfterCompute);
                    public setCallBack(param0: com.android.internal.app.ResolverComparator.AfterCompute): void;
                    public getScore(param0: globalAndroid.content.ComponentName): number;
                }
                export module ResolverComparator {
                    export class AfterCompute extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.ResolverComparator.AfterCompute>;
                        /**
                         * Constructs a new instance of the com.android.internal.app.ResolverComparator$AfterCompute interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            afterCompute(): void;
                        });
                        public constructor();
                        public afterCompute(): void;
                    }
                    export class ResolverRankerServiceConnection extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.ResolverComparator.ResolverRankerServiceConnection>;
                        public resolverRankerResult: globalAndroid.service.resolver.IResolverRankerResult;
                        public onServiceConnected(param0: globalAndroid.content.ComponentName, param1: globalAndroid.os.IBinder): void;
                        public destroy(): void;
                        public constructor(param0: com.android.internal.app.ResolverComparator, param1: java.util.concurrent.CountDownLatch);
                        public onServiceDisconnected(param0: globalAndroid.content.ComponentName): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class ResolverListController extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.ResolverListController>;
                    public getResolversForIntent(param0: boolean, param1: boolean, param2: java.util.List<globalAndroid.content.Intent>): java.util.List<com.android.internal.app.ResolverActivity.ResolvedComponentInfo>;
                    public destroy(): void;
                    public filterLowPriority(param0: java.util.List<com.android.internal.app.ResolverActivity.ResolvedComponentInfo>, param1: boolean): java.util.ArrayList<com.android.internal.app.ResolverActivity.ResolvedComponentInfo>;
                    public filterIneligibleActivities(param0: java.util.List<com.android.internal.app.ResolverActivity.ResolvedComponentInfo>, param1: boolean): java.util.ArrayList<com.android.internal.app.ResolverActivity.ResolvedComponentInfo>;
                    public addResolveListDedupe(param0: java.util.List<com.android.internal.app.ResolverActivity.ResolvedComponentInfo>, param1: globalAndroid.content.Intent, param2: java.util.List<globalAndroid.content.pm.ResolveInfo>): void;
                    public updateChooserCounts(param0: string, param1: number, param2: string): void;
                    public updateModel(param0: globalAndroid.content.ComponentName): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.content.pm.PackageManager, param2: globalAndroid.content.Intent, param3: string, param4: number);
                    public sort(param0: java.util.List<com.android.internal.app.ResolverActivity.ResolvedComponentInfo>): void;
                    public getScore(param0: com.android.internal.app.ResolverActivity.DisplayResolveInfo): number;
                    public setLastChosen(param0: globalAndroid.content.Intent, param1: globalAndroid.content.IntentFilter, param2: number): void;
                    public getLastChosen(): globalAndroid.content.pm.ResolveInfo;
                }
                export module ResolverListController {
                    export class ComputeCallback extends com.android.internal.app.ResolverComparator.AfterCompute {
                        public static class: java.lang.Class<com.android.internal.app.ResolverListController.ComputeCallback>;
                        public afterCompute(): void;
                        public constructor(param0: com.android.internal.app.ResolverListController, param1: java.util.concurrent.CountDownLatch);
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class ResolverTargetActionsDialogFragment extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.ResolverTargetActionsDialogFragment>;
                    public constructor();
                    public onClick(param0: globalAndroid.content.DialogInterface, param1: number): void;
                    public constructor(param0: string, param1: globalAndroid.content.ComponentName, param2: boolean);
                    public onCreateDialog(param0: globalAndroid.os.Bundle): globalAndroid.app.Dialog;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class ShutdownActivity extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.ShutdownActivity>;
                    public onCreate(param0: globalAndroid.os.Bundle): void;
                    public constructor();
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class SuggestedLocaleAdapter extends globalAndroid.widget.BaseAdapter implements globalAndroid.widget.Filterable {
                    public static class: java.lang.Class<com.android.internal.app.SuggestedLocaleAdapter>;
                    public getFilter(): globalAndroid.widget.Filter;
                    public areAllItemsEnabled(): boolean;
                    public getCount(): number;
                    public getViewTypeCount(): number;
                    public sort(param0: com.android.internal.app.LocaleHelper.LocaleInfoComparator): void;
                    public getDropDownView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
                    public setDisplayLocale(param0: globalAndroid.content.Context, param1: java.util.Locale): void;
                    public getView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
                    public getItem(param0: number): any;
                    public constructor();
                    public isEnabled(param0: number): boolean;
                    public constructor(param0: java.util.Set<com.android.internal.app.LocaleStore.LocaleInfo>, param1: boolean);
                    public getItemViewType(param0: number): number;
                    public getItemId(param0: number): number;
                }
                export module SuggestedLocaleAdapter {
                    export class FilterByNativeAndUiNames extends globalAndroid.widget.Filter {
                        public static class: java.lang.Class<com.android.internal.app.SuggestedLocaleAdapter.FilterByNativeAndUiNames>;
                        public performFiltering(param0: string): globalAndroid.widget.Filter.FilterResults;
                        public publishResults(param0: string, param1: globalAndroid.widget.Filter.FilterResults): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class SystemUserHomeActivity extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.SystemUserHomeActivity>;
                    public constructor();
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class ToolbarActionBar extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.ToolbarActionBar>;
                    public getTitle(): string;
                    public setLogo(param0: number): void;
                    public invalidateOptionsMenu(): boolean;
                    public getThemedContext(): globalAndroid.content.Context;
                    public isShowing(): boolean;
                    public addTab(param0: globalAndroid.app.ActionBar.Tab, param1: number): void;
                    public getElevation(): number;
                    public getNavigationMode(): number;
                    public getNavigationItemCount(): number;
                    public setTitle(param0: string): void;
                    public onDestroy(): void;
                    public setDisplayShowCustomEnabled(param0: boolean): void;
                    public setDefaultDisplayHomeAsUpEnabled(param0: boolean): void;
                    public setSelectedNavigationItem(param0: number): void;
                    public setStackedBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public setDisplayShowHomeEnabled(param0: boolean): void;
                    public startActionMode(param0: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                    public newTab(): globalAndroid.app.ActionBar.Tab;
                    public addTab(param0: globalAndroid.app.ActionBar.Tab): void;
                    public removeTab(param0: globalAndroid.app.ActionBar.Tab): void;
                    public show(): void;
                    public getHeight(): number;
                    public setDisplayOptions(param0: number, param1: number): void;
                    public setListNavigationCallbacks(param0: globalAndroid.widget.SpinnerAdapter, param1: globalAndroid.app.ActionBar.OnNavigationListener): void;
                    public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
                    public setDisplayOptions(param0: number): void;
                    public isTitleTruncated(): boolean;
                    public setTitle(param0: number): void;
                    public setCustomView(param0: globalAndroid.view.View, param1: globalAndroid.app.ActionBar.LayoutParams): void;
                    public setIcon(param0: number): void;
                    public closeOptionsMenu(): boolean;
                    public collapseActionView(): boolean;
                    public hide(): void;
                    public setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public setDisplayUseLogoEnabled(param0: boolean): void;
                    public setDisplayShowTitleEnabled(param0: boolean): void;
                    public setCustomView(param0: number): void;
                    public getCustomView(): globalAndroid.view.View;
                    public setShowHideAnimationEnabled(param0: boolean): void;
                    public getTabCount(): number;
                    public addTab(param0: globalAndroid.app.ActionBar.Tab, param1: number, param2: boolean): void;
                    public onKeyShortcut(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public setElevation(param0: number): void;
                    public setHomeActionContentDescription(param0: string): void;
                    public setBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public getWrappedWindowCallback(): globalAndroid.view.Window.Callback;
                    public setSubtitle(param0: number): void;
                    public removeOnMenuVisibilityListener(param0: globalAndroid.app.ActionBar.OnMenuVisibilityListener): void;
                    public dispatchMenuVisibilityChanged(param0: boolean): void;
                    public getTabAt(param0: number): globalAndroid.app.ActionBar.Tab;
                    public setSplitBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public setHomeActionContentDescription(param0: number): void;
                    public setCustomView(param0: globalAndroid.view.View): void;
                    public getSelectedNavigationIndex(): number;
                    public setHomeAsUpIndicator(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public addTab(param0: globalAndroid.app.ActionBar.Tab, param1: boolean): void;
                    public setNavigationMode(param0: number): void;
                    public setDisplayHomeAsUpEnabled(param0: boolean): void;
                    public selectTab(param0: globalAndroid.app.ActionBar.Tab): void;
                    public addOnMenuVisibilityListener(param0: globalAndroid.app.ActionBar.OnMenuVisibilityListener): void;
                    public setLogo(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public getSelectedTab(): globalAndroid.app.ActionBar.Tab;
                    public removeTabAt(param0: number): void;
                    public openOptionsMenu(): boolean;
                    public removeAllTabs(): void;
                    public setSubtitle(param0: string): void;
                    public getDisplayOptions(): number;
                    public getSubtitle(): string;
                    public constructor(param0: globalAndroid.widget.Toolbar, param1: string, param2: globalAndroid.view.Window.Callback);
                    public setHomeButtonEnabled(param0: boolean): void;
                    public setWindowTitle(param0: string): void;
                    public onMenuKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
                    public setHomeAsUpIndicator(param0: number): void;
                }
                export module ToolbarActionBar {
                    export class ActionMenuPresenterCallback extends com.android.internal.view.menu.MenuPresenter.Callback {
                        public static class: java.lang.Class<com.android.internal.app.ToolbarActionBar.ActionMenuPresenterCallback>;
                        public onOpenSubMenu(param0: com.android.internal.view.menu.MenuBuilder): boolean;
                        public onCloseMenu(param0: com.android.internal.view.menu.MenuBuilder, param1: boolean): void;
                    }
                    export class MenuBuilderCallback extends com.android.internal.view.menu.MenuBuilder.Callback {
                        public static class: java.lang.Class<com.android.internal.app.ToolbarActionBar.MenuBuilderCallback>;
                        public onMenuModeChange(param0: com.android.internal.view.menu.MenuBuilder): void;
                        public onMenuItemSelected(param0: com.android.internal.view.menu.MenuBuilder, param1: globalAndroid.view.MenuItem): boolean;
                    }
                    export class ToolbarCallbackWrapper extends globalAndroid.view.WindowCallbackWrapper {
                        public static class: java.lang.Class<com.android.internal.app.ToolbarActionBar.ToolbarCallbackWrapper>;
                        public onWindowStartingActionMode(param0: globalAndroid.view.ActionMode.Callback, param1: number): globalAndroid.view.ActionMode;
                        public onAttachedToWindow(): void;
                        public onSearchRequested(): boolean;
                        public onSearchRequested(param0: any): boolean;
                        public onProvideKeyboardShortcuts(param0: java.util.List<any>, param1: globalAndroid.view.Menu, param2: number): void;
                        public onWindowAttributesChanged(param0: globalAndroid.view.WindowManager.LayoutParams): void;
                        public dispatchGenericMotionEvent(param0: globalAndroid.view.MotionEvent): boolean;
                        public onPointerCaptureChanged(param0: boolean): void;
                        public onPanelClosed(param0: number, param1: globalAndroid.view.Menu): void;
                        public dispatchKeyShortcutEvent(param0: globalAndroid.view.KeyEvent): boolean;
                        public dispatchTrackballEvent(param0: globalAndroid.view.MotionEvent): boolean;
                        public onCreatePanelMenu(param0: number, param1: globalAndroid.view.Menu): boolean;
                        public dispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
                        public onMenuItemSelected(param0: number, param1: globalAndroid.view.MenuItem): boolean;
                        public dispatchTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
                        public constructor(param0: globalAndroid.view.Window.Callback);
                        public onWindowStartingActionMode(param0: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                        public onContentChanged(): void;
                        public onMenuOpened(param0: number, param1: globalAndroid.view.Menu): boolean;
                        public dispatchPopulateAccessibilityEvent(param0: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                        public onPreparePanel(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.Menu): boolean;
                        public constructor(param0: com.android.internal.app.ToolbarActionBar, param1: globalAndroid.view.Window.Callback);
                        public onDetachedFromWindow(): void;
                        public onActionModeFinished(param0: globalAndroid.view.ActionMode): void;
                        public onCreatePanelView(param0: number): globalAndroid.view.View;
                        public onWindowFocusChanged(param0: boolean): void;
                        public onActionModeStarted(param0: globalAndroid.view.ActionMode): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class UnlaunchableAppActivity extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.app.UnlaunchableAppActivity>;
                    public onCreate(param0: globalAndroid.os.Bundle): void;
                    public constructor();
                    public onClick(param0: globalAndroid.content.DialogInterface, param1: number): void;
                    public static createInQuietModeDialogIntent(param0: number): globalAndroid.content.Intent;
                    public static createInQuietModeDialogIntent(param0: number, param1: globalAndroid.content.IntentSender): globalAndroid.content.Intent;
                    public onDismiss(param0: globalAndroid.content.DialogInterface): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export class WindowDecorActionBar implements com.android.internal.widget.ActionBarOverlayLayout.ActionBarVisibilityCallback {
                    public static class: java.lang.Class<com.android.internal.app.WindowDecorActionBar>;
                    public getTitle(): string;
                    public setLogo(param0: number): void;
                    public getThemedContext(): globalAndroid.content.Context;
                    public isShowing(): boolean;
                    public addTab(param0: globalAndroid.app.ActionBar.Tab, param1: number): void;
                    public getElevation(): number;
                    public getNavigationMode(): number;
                    public getNavigationItemCount(): number;
                    public setTitle(param0: string): void;
                    public setDisplayShowCustomEnabled(param0: boolean): void;
                    public showForSystem(): void;
                    public constructor(param0: globalAndroid.app.Dialog);
                    public setDefaultDisplayHomeAsUpEnabled(param0: boolean): void;
                    public isHideOnContentScrollEnabled(): boolean;
                    public setSelectedNavigationItem(param0: number): void;
                    public setStackedBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public setDisplayShowHomeEnabled(param0: boolean): void;
                    public enableContentAnimations(param0: boolean): void;
                    public startActionMode(param0: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                    public onContentScrollStarted(): void;
                    public onContentScrollStopped(): void;
                    public constructor(param0: globalAndroid.view.View);
                    public hideForSystem(): void;
                    public newTab(): globalAndroid.app.ActionBar.Tab;
                    public addTab(param0: globalAndroid.app.ActionBar.Tab): void;
                    public removeTab(param0: globalAndroid.app.ActionBar.Tab): void;
                    public setHideOnContentScrollEnabled(param0: boolean): void;
                    public show(): void;
                    public getHeight(): number;
                    public setDisplayOptions(param0: number, param1: number): void;
                    public setListNavigationCallbacks(param0: globalAndroid.widget.SpinnerAdapter, param1: globalAndroid.app.ActionBar.OnNavigationListener): void;
                    public hasLogo(): boolean;
                    public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
                    public setDisplayOptions(param0: number): void;
                    public isTitleTruncated(): boolean;
                    public setTitle(param0: number): void;
                    public setCustomView(param0: globalAndroid.view.View, param1: globalAndroid.app.ActionBar.LayoutParams): void;
                    public setIcon(param0: number): void;
                    public onWindowVisibilityChanged(param0: number): void;
                    public collapseActionView(): boolean;
                    public hide(): void;
                    public setHideOffset(param0: number): void;
                    public setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public setDisplayUseLogoEnabled(param0: boolean): void;
                    public setDisplayShowTitleEnabled(param0: boolean): void;
                    public setCustomView(param0: number): void;
                    public getCustomView(): globalAndroid.view.View;
                    public setShowHideAnimationEnabled(param0: boolean): void;
                    public getTabCount(): number;
                    public addTab(param0: globalAndroid.app.ActionBar.Tab, param1: number, param2: boolean): void;
                    public setElevation(param0: number): void;
                    public setHomeActionContentDescription(param0: string): void;
                    public setBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public doHide(param0: boolean): void;
                    public setSubtitle(param0: number): void;
                    public constructor(param0: globalAndroid.app.Activity);
                    public removeOnMenuVisibilityListener(param0: globalAndroid.app.ActionBar.OnMenuVisibilityListener): void;
                    public dispatchMenuVisibilityChanged(param0: boolean): void;
                    public getTabAt(param0: number): globalAndroid.app.ActionBar.Tab;
                    public setSplitBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public setHomeActionContentDescription(param0: number): void;
                    public setCustomView(param0: globalAndroid.view.View): void;
                    public getSelectedNavigationIndex(): number;
                    public setHomeAsUpIndicator(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public addTab(param0: globalAndroid.app.ActionBar.Tab, param1: boolean): void;
                    public setNavigationMode(param0: number): void;
                    public setDisplayHomeAsUpEnabled(param0: boolean): void;
                    public selectTab(param0: globalAndroid.app.ActionBar.Tab): void;
                    public addOnMenuVisibilityListener(param0: globalAndroid.app.ActionBar.OnMenuVisibilityListener): void;
                    public setLogo(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public getSelectedTab(): globalAndroid.app.ActionBar.Tab;
                    public removeTabAt(param0: number): void;
                    public doShow(param0: boolean): void;
                    public removeAllTabs(): void;
                    public setSubtitle(param0: string): void;
                    public getDisplayOptions(): number;
                    public getSubtitle(): string;
                    public getHideOffset(): number;
                    public hasIcon(): boolean;
                    public setHomeButtonEnabled(param0: boolean): void;
                    public setWindowTitle(param0: string): void;
                    public setHomeAsUpIndicator(param0: number): void;
                }
                export module WindowDecorActionBar {
                    export class ActionModeImpl extends globalAndroid.view.ActionMode implements com.android.internal.view.menu.MenuBuilder.Callback {
                        public static class: java.lang.Class<com.android.internal.app.WindowDecorActionBar.ActionModeImpl>;
                        public constructor();
                        public constructor(param0: com.android.internal.app.WindowDecorActionBar, param1: globalAndroid.content.Context, param2: globalAndroid.view.ActionMode.Callback);
                        public getMenu(): globalAndroid.view.Menu;
                        public finish(): void;
                        public getCustomView(): globalAndroid.view.View;
                        public setCustomView(param0: globalAndroid.view.View): void;
                        public isTitleOptional(): boolean;
                        public onCloseMenu(param0: com.android.internal.view.menu.MenuBuilder, param1: boolean): void;
                        public onCloseSubMenu(param0: com.android.internal.view.menu.SubMenuBuilder): void;
                        public getTitle(): string;
                        public onMenuItemSelected(param0: com.android.internal.view.menu.MenuBuilder, param1: globalAndroid.view.MenuItem): boolean;
                        public getMenuInflater(): globalAndroid.view.MenuInflater;
                        public onSubMenuSelected(param0: com.android.internal.view.menu.SubMenuBuilder): boolean;
                        public setTitle(param0: string): void;
                        public invalidate(): void;
                        public setSubtitle(param0: string): void;
                        public onMenuModeChange(param0: com.android.internal.view.menu.MenuBuilder): void;
                        public setTitle(param0: number): void;
                        public setSubtitle(param0: number): void;
                        public setTitleOptionalHint(param0: boolean): void;
                        public dispatchOnCreate(): boolean;
                        public getSubtitle(): string;
                    }
                    export class TabImpl extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.WindowDecorActionBar.TabImpl>;
                        public setContentDescription(param0: number): globalAndroid.app.ActionBar.Tab;
                        public setTabListener(param0: globalAndroid.app.ActionBar.TabListener): globalAndroid.app.ActionBar.Tab;
                        public setContentDescription(param0: string): globalAndroid.app.ActionBar.Tab;
                        public getCustomView(): globalAndroid.view.View;
                        public getPosition(): number;
                        public getIcon(): globalAndroid.graphics.drawable.Drawable;
                        public setCustomView(param0: globalAndroid.view.View): globalAndroid.app.ActionBar.Tab;
                        public constructor(param0: com.android.internal.app.WindowDecorActionBar);
                        public setText(param0: string): globalAndroid.app.ActionBar.Tab;
                        public setIcon(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.app.ActionBar.Tab;
                        public setTag(param0: any): globalAndroid.app.ActionBar.Tab;
                        public getText(): string;
                        public getCallback(): globalAndroid.app.ActionBar.TabListener;
                        public getTag(): any;
                        public setText(param0: number): globalAndroid.app.ActionBar.Tab;
                        public setCustomView(param0: number): globalAndroid.app.ActionBar.Tab;
                        public setPosition(param0: number): void;
                        public getContentDescription(): string;
                        public select(): void;
                        public setIcon(param0: number): globalAndroid.app.ActionBar.Tab;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export module procstats {
                    export class DumpUtils extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.procstats.DumpUtils>;
                        public static ADJ_MEM_NAMES_CSV: string[];
                        public static ADJ_SCREEN_NAMES_CSV: string[];
                        public static STATE_NAMES: string[];
                        public static STATE_NAMES_CSV: string[];
                        public static printProcStateTagAndValue(param0: java.io.PrintWriter, param1: number, param2: number): void;
                        public static printScreenLabelCsv(param0: java.io.PrintWriter, param1: number): void;
                        public static dumpSingleTime(param0: java.io.PrintWriter, param1: string, param2: number[], param3: number, param4: number, param5: number): number;
                        public static printMemLabel(param0: java.io.PrintWriter, param1: number, param2: string): void;
                        public static dumpAdjTimesCheckin(param0: java.io.PrintWriter, param1: string, param2: number[], param3: number, param4: number, param5: number): void;
                        public static printScreenLabel(param0: java.io.PrintWriter, param1: number): void;
                        public static printArrayEntry(param0: java.io.PrintWriter, param1: string[], param2: number, param3: number): number;
                        public static printMemLabelCsv(param0: java.io.PrintWriter, param1: number): void;
                        public static printPercent(param0: java.io.PrintWriter, param1: number): void;
                        public static printAdjTagAndValue(param0: java.io.PrintWriter, param1: number, param2: number): void;
                        public static printProcStateTag(param0: java.io.PrintWriter, param1: number): void;
                        public static dumpProcessListCsv(param0: java.io.PrintWriter, param1: java.util.ArrayList<com.android.internal.app.procstats.ProcessState>, param2: boolean, param3: number[], param4: boolean, param5: number[], param6: boolean, param7: number[], param8: number): void;
                        public static printAdjTag(param0: java.io.PrintWriter, param1: number): void;
                        public static collapseString(param0: string, param1: string): string;
                        public static dumpProcessSummaryLocked(param0: java.io.PrintWriter, param1: string, param2: java.util.ArrayList<com.android.internal.app.procstats.ProcessState>, param3: number[], param4: number[], param5: number[], param6: number, param7: number): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export module procstats {
                    export class DurationsTable extends com.android.internal.app.procstats.SparseMappingTable.Table {
                        public static class: java.lang.Class<com.android.internal.app.procstats.DurationsTable>;
                        public addDurations(param0: com.android.internal.app.procstats.DurationsTable): void;
                        public constructor(param0: com.android.internal.app.procstats.SparseMappingTable);
                        public addDuration(param0: number, param1: number): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export module procstats {
                    export class IProcessStats extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.procstats.IProcessStats>;
                        /**
                         * Constructs a new instance of the com.android.internal.app.procstats.IProcessStats interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            getCurrentMemoryState(): number;
                            getCurrentStats(param0: java.util.List<globalAndroid.os.ParcelFileDescriptor>): number[];
                            getStatsOverTime(param0: number): globalAndroid.os.ParcelFileDescriptor;
                        });
                        public constructor();
                        public getStatsOverTime(param0: number): globalAndroid.os.ParcelFileDescriptor;
                        public getCurrentMemoryState(): number;
                        public getCurrentStats(param0: java.util.List<globalAndroid.os.ParcelFileDescriptor>): number[];
                    }
                    export module IProcessStats {
                        export abstract class Stub implements com.android.internal.app.procstats.IProcessStats {
                            public static class: java.lang.Class<com.android.internal.app.procstats.IProcessStats.Stub>;
                            public constructor();
                            public asBinder(): globalAndroid.os.IBinder;
                            public getCurrentStats(param0: java.util.List<globalAndroid.os.ParcelFileDescriptor>): number[];
                            public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                            public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.app.procstats.IProcessStats;
                            public getCurrentMemoryState(): number;
                            public getStatsOverTime(param0: number): globalAndroid.os.ParcelFileDescriptor;
                        }
                        export module Stub {
                            export class Proxy extends com.android.internal.app.procstats.IProcessStats {
                                public static class: java.lang.Class<com.android.internal.app.procstats.IProcessStats.Stub.Proxy>;
                                public getCurrentStats(param0: java.util.List<globalAndroid.os.ParcelFileDescriptor>): number[];
                                public getStatsOverTime(param0: number): globalAndroid.os.ParcelFileDescriptor;
                                public getCurrentMemoryState(): number;
                                public getInterfaceDescriptor(): string;
                                public asBinder(): globalAndroid.os.IBinder;
                            }
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export module procstats {
                    export class ProcessState extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.procstats.ProcessState>;
                        public static COMPARATOR: java.util.Comparator<com.android.internal.app.procstats.ProcessState>;
                        public tmpFoundSubProc: com.android.internal.app.procstats.ProcessState;
                        public tmpNumInUse: number;
                        public clone(param0: number): com.android.internal.app.procstats.ProcessState;
                        public isInUse(): boolean;
                        public decStartedServices(param0: number, param1: number, param2: string): void;
                        public incStartedServices(param0: number, param1: number, param2: string): void;
                        public reportExcessiveWake(param0: globalAndroid.util.ArrayMap<string, com.android.internal.app.procstats.ProcessStats.ProcessStateHolder>): void;
                        public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                        public getPssAverage(param0: number): number;
                        public constructor(param0: com.android.internal.app.procstats.ProcessStats, param1: string, param2: number, param3: number, param4: string);
                        public computeProcessTimeLocked(param0: number[], param1: number[], param2: number[], param3: number): number;
                        public getPssSampleCount(param0: number): number;
                        public getPssMinimum(param0: number): number;
                        public dumpAllPssCheckin(param0: java.io.PrintWriter): void;
                        public dumpPss(param0: java.io.PrintWriter, param1: string, param2: number[], param3: number[], param4: number[]): void;
                        public hasAnyData(): boolean;
                        public makeDead(): void;
                        public makeInactive(): void;
                        public dumpSummary(param0: java.io.PrintWriter, param1: string, param2: number[], param3: number[], param4: number[], param5: number, param6: number): void;
                        public getPssUssMaximum(param0: number): number;
                        public constructor(param0: com.android.internal.app.procstats.ProcessState, param1: string, param2: number, param3: number, param4: string, param5: number);
                        public reportCachedKill(param0: globalAndroid.util.ArrayMap<string, com.android.internal.app.procstats.ProcessStats.ProcessStateHolder>, param1: number): void;
                        public dumpInternalLocked(param0: java.io.PrintWriter, param1: string, param2: boolean): void;
                        public setState(param0: number, param1: number, param2: number, param3: globalAndroid.util.ArrayMap<string, com.android.internal.app.procstats.ProcessStats.ProcessStateHolder>): void;
                        public decActiveServices(param0: string): void;
                        public getUid(): number;
                        public dumpPackageProcCheckin(param0: java.io.PrintWriter, param1: string, param2: number, param3: number, param4: string, param5: number): void;
                        public isMultiPackage(): boolean;
                        public toString(): string;
                        public makeActive(): void;
                        public setMultiPackage(param0: boolean): void;
                        public dumpCsv(param0: java.io.PrintWriter, param1: boolean, param2: number[], param3: boolean, param4: number[], param5: boolean, param6: number[], param7: number): void;
                        public getPssUssAverage(param0: number): number;
                        public getDuration(param0: number, param1: number): number;
                        public getCommonProcess(): com.android.internal.app.procstats.ProcessState;
                        public getName(): string;
                        public getPackage(): string;
                        public addPss(param0: number, param1: number, param2: boolean, param3: globalAndroid.util.ArrayMap<string, com.android.internal.app.procstats.ProcessStats.ProcessStateHolder>): void;
                        public dumpAllStateCheckin(param0: java.io.PrintWriter, param1: number): void;
                        public isActive(): boolean;
                        public getPssMaximum(param0: number): number;
                        public getVersion(): number;
                        public incActiveServices(param0: string): void;
                        public pullFixedProc(param0: string): com.android.internal.app.procstats.ProcessState;
                        public dumpProcCheckin(param0: java.io.PrintWriter, param1: string, param2: number, param3: number): void;
                        public commitStateTime(param0: number): void;
                        public setState(param0: number, param1: number): void;
                        public aggregatePss(param0: com.android.internal.app.procstats.ProcessStats.TotalMemoryUseCollection, param1: number): void;
                        public computeProcessData(param0: com.android.internal.app.procstats.ProcessStats.ProcessDataCollection, param1: number): void;
                        public getPssUssMinimum(param0: number): number;
                        public readFromParcel(param0: globalAndroid.os.Parcel, param1: boolean): boolean;
                        public resetSafely(param0: number): void;
                        public dumpProcessState(param0: java.io.PrintWriter, param1: string, param2: number[], param3: number[], param4: number[], param5: number): void;
                        public getDurationsBucketCount(): number;
                        public makeStandalone(): void;
                        public add(param0: com.android.internal.app.procstats.ProcessState): void;
                        public reportExcessiveCpu(param0: globalAndroid.util.ArrayMap<string, com.android.internal.app.procstats.ProcessStats.ProcessStateHolder>): void;
                    }
                    export module ProcessState {
                        export class PssAggr extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.app.procstats.ProcessState.PssAggr>;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export module procstats {
                    export class ProcessStats extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.procstats.ProcessStats>;
                        public static ADJ_COUNT: number;
                        public static ADJ_MEM_FACTOR_COUNT: number;
                        public static ADJ_MEM_FACTOR_CRITICAL: number;
                        public static ADJ_MEM_FACTOR_LOW: number;
                        public static ADJ_MEM_FACTOR_MODERATE: number;
                        public static ADJ_MEM_FACTOR_NORMAL: number;
                        public static ADJ_NOTHING: number;
                        public static ADJ_SCREEN_MOD: number;
                        public static ADJ_SCREEN_OFF: number;
                        public static ADJ_SCREEN_ON: number;
                        public static ALL_MEM_ADJ: number[];
                        public static ALL_PROC_STATES: number[];
                        public static ALL_SCREEN_ADJ: number[];
                        public static BACKGROUND_PROC_STATES: number[];
                        public static COMMIT_PERIOD: number;
                        public static COMMIT_UPTIME_PERIOD: number;
                        public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.app.procstats.ProcessStats>;
                        public static FLAG_COMPLETE: number;
                        public static FLAG_SHUTDOWN: number;
                        public static FLAG_SYSPROPS: number;
                        public static NON_CACHED_PROC_STATES: number[];
                        public static PSS_AVERAGE: number;
                        public static PSS_COUNT: number;
                        public static PSS_MAXIMUM: number;
                        public static PSS_MINIMUM: number;
                        public static PSS_SAMPLE_COUNT: number;
                        public static PSS_USS_AVERAGE: number;
                        public static PSS_USS_MAXIMUM: number;
                        public static PSS_USS_MINIMUM: number;
                        public static SERVICE_NAME: string;
                        public static STATE_BACKUP: number;
                        public static STATE_CACHED_ACTIVITY: number;
                        public static STATE_CACHED_ACTIVITY_CLIENT: number;
                        public static STATE_CACHED_EMPTY: number;
                        public static STATE_COUNT: number;
                        public static STATE_HEAVY_WEIGHT: number;
                        public static STATE_HOME: number;
                        public static STATE_IMPORTANT_BACKGROUND: number;
                        public static STATE_IMPORTANT_FOREGROUND: number;
                        public static STATE_LAST_ACTIVITY: number;
                        public static STATE_NOTHING: number;
                        public static STATE_PERSISTENT: number;
                        public static STATE_RECEIVER: number;
                        public static STATE_SERVICE: number;
                        public static STATE_SERVICE_RESTARTING: number;
                        public static STATE_TOP: number;
                        public static SYS_MEM_USAGE_CACHED_AVERAGE: number;
                        public static SYS_MEM_USAGE_CACHED_MAXIMUM: number;
                        public static SYS_MEM_USAGE_CACHED_MINIMUM: number;
                        public static SYS_MEM_USAGE_COUNT: number;
                        public static SYS_MEM_USAGE_FREE_AVERAGE: number;
                        public static SYS_MEM_USAGE_FREE_MAXIMUM: number;
                        public static SYS_MEM_USAGE_FREE_MINIMUM: number;
                        public static SYS_MEM_USAGE_KERNEL_AVERAGE: number;
                        public static SYS_MEM_USAGE_KERNEL_MAXIMUM: number;
                        public static SYS_MEM_USAGE_KERNEL_MINIMUM: number;
                        public static SYS_MEM_USAGE_NATIVE_AVERAGE: number;
                        public static SYS_MEM_USAGE_NATIVE_MAXIMUM: number;
                        public static SYS_MEM_USAGE_NATIVE_MINIMUM: number;
                        public static SYS_MEM_USAGE_SAMPLE_COUNT: number;
                        public static SYS_MEM_USAGE_ZRAM_AVERAGE: number;
                        public static SYS_MEM_USAGE_ZRAM_MAXIMUM: number;
                        public static SYS_MEM_USAGE_ZRAM_MINIMUM: number;
                        public static TAG: string;
                        public mFlags: number;
                        public mMemFactor: number;
                        public mMemFactorDurations: number[];
                        public mPackages: com.android.internal.app.ProcessMap<globalAndroid.util.SparseArray<com.android.internal.app.procstats.ProcessStats.PackageState>>;
                        public mProcesses: com.android.internal.app.ProcessMap<com.android.internal.app.procstats.ProcessState>;
                        public mReadError: string;
                        public mStartTime: number;
                        public mSysMemUsage: com.android.internal.app.procstats.SysMemUsageTable;
                        public mSysMemUsageArgs: number[];
                        public mTableData: com.android.internal.app.procstats.SparseMappingTable;
                        public mTimePeriodEndRealtime: number;
                        public mTimePeriodEndUptime: number;
                        public mTimePeriodStartClock: number;
                        public mTimePeriodStartClockStr: string;
                        public mTimePeriodStartRealtime: number;
                        public mTimePeriodStartUptime: number;
                        public dumpSummaryLocked(param0: java.io.PrintWriter, param1: string, param2: number, param3: boolean): void;
                        public addSysMemUsage(param0: number, param1: number, param2: number, param3: number, param4: number): void;
                        public collectProcessesLocked(param0: number[], param1: number[], param2: number[], param3: number[], param4: number, param5: string, param6: boolean): java.util.ArrayList<com.android.internal.app.procstats.ProcessState>;
                        public describeContents(): number;
                        public computeTotalMemoryUse(param0: com.android.internal.app.procstats.ProcessStats.TotalMemoryUseCollection, param1: number): void;
                        public getProcessStateLocked(param0: string, param1: number, param2: number, param3: string): com.android.internal.app.procstats.ProcessState;
                        public updateFragmentation(): void;
                        public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                        public add(param0: com.android.internal.app.procstats.ProcessStats): void;
                        public dumpCheckinLocked(param0: java.io.PrintWriter, param1: string): void;
                        public writeToParcel(param0: globalAndroid.os.Parcel, param1: number, param2: number): void;
                        public getServiceStateLocked(param0: string, param1: number, param2: number, param3: string, param4: string): com.android.internal.app.procstats.ServiceState;
                        public resetSafely(): void;
                        public constructor(param0: globalAndroid.os.Parcel);
                        public dumpLocked(param0: java.io.PrintWriter, param1: string, param2: number, param3: boolean, param4: boolean, param5: boolean): void;
                        public read(param0: java.io.InputStream): void;
                        public evaluateSystemProperties(param0: boolean): boolean;
                        public getPackageStateLocked(param0: string, param1: number, param2: number): com.android.internal.app.procstats.ProcessStats.PackageState;
                        public constructor(param0: boolean);
                        public readFromParcel(param0: globalAndroid.os.Parcel): void;
                        public reset(): void;
                    }
                    export module ProcessStats {
                        export class PackageState extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.app.procstats.ProcessStats.PackageState>;
                            public mPackageName: string;
                            public mProcesses: globalAndroid.util.ArrayMap<string, com.android.internal.app.procstats.ProcessState>;
                            public mServices: globalAndroid.util.ArrayMap<string, com.android.internal.app.procstats.ServiceState>;
                            public mUid: number;
                            public constructor(param0: string, param1: number);
                        }
                        export class ProcessDataCollection extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.app.procstats.ProcessStats.ProcessDataCollection>;
                            public avgPss: number;
                            public avgUss: number;
                            public maxPss: number;
                            public maxUss: number;
                            public minPss: number;
                            public minUss: number;
                            public numPss: number;
                            public totalTime: number;
                            public constructor(param0: number[], param1: number[], param2: number[]);
                        }
                        export class ProcessStateHolder extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.app.procstats.ProcessStats.ProcessStateHolder>;
                            public appVersion: number;
                            public state: com.android.internal.app.procstats.ProcessState;
                            public constructor(param0: number);
                        }
                        export class TotalMemoryUseCollection extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.app.procstats.ProcessStats.TotalMemoryUseCollection>;
                            public hasSwappedOutPss: boolean;
                            public processStatePss: number[];
                            public processStateSamples: number[];
                            public processStateTime: number[];
                            public processStateWeight: number[];
                            public sysMemCachedWeight: number;
                            public sysMemFreeWeight: number;
                            public sysMemKernelWeight: number;
                            public sysMemNativeWeight: number;
                            public sysMemSamples: number;
                            public sysMemUsage: number[];
                            public sysMemZRamWeight: number;
                            public totalTime: number;
                            public constructor(param0: number[], param1: number[]);
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export module procstats {
                    export class PssTable extends com.android.internal.app.procstats.SparseMappingTable.Table {
                        public static class: java.lang.Class<com.android.internal.app.procstats.PssTable>;
                        public mergeStats(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
                        public mergeStats(param0: com.android.internal.app.procstats.PssTable): void;
                        public constructor(param0: com.android.internal.app.procstats.SparseMappingTable);
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export module procstats {
                    export class ServiceState extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.procstats.ServiceState>;
                        public static SERVICE_BOUND: number;
                        public static SERVICE_COUNT: number;
                        public static SERVICE_EXEC: number;
                        public static SERVICE_RUN: number;
                        public static SERVICE_STARTED: number;
                        public setRestarting(param0: boolean, param1: number, param2: number): void;
                        public isInUse(): boolean;
                        public isRestarting(): boolean;
                        public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                        public getDuration(param0: number, param1: number, param2: number, param3: number, param4: number): number;
                        public getName(): string;
                        public setExecuting(param0: boolean, param1: number, param2: number): void;
                        public readFromParcel(param0: globalAndroid.os.Parcel): boolean;
                        public getProcessName(): string;
                        public clearCurrentOwner(param0: any, param1: boolean): void;
                        public getPackage(): string;
                        public updateStartedState(param0: number, param1: number): void;
                        public getProcess(): com.android.internal.app.procstats.ProcessState;
                        public constructor(param0: com.android.internal.app.procstats.ProcessStats, param1: string, param2: string, param3: string, param4: com.android.internal.app.procstats.ProcessState);
                        public setStarted(param0: boolean, param1: number, param2: number): void;
                        public setProcess(param0: com.android.internal.app.procstats.ProcessState): void;
                        public commitStateTime(param0: number): void;
                        public toString(): string;
                        public add(param0: com.android.internal.app.procstats.ServiceState): void;
                        public dumpStats(param0: java.io.PrintWriter, param1: string, param2: string, param3: string, param4: number, param5: number, param6: boolean, param7: boolean): void;
                        public resetSafely(param0: number): void;
                        public applyNewOwner(param0: any): void;
                        public dumpTimesCheckin(param0: java.io.PrintWriter, param1: string, param2: number, param3: number, param4: string, param5: number): void;
                        public setMemFactor(param0: number, param1: number): void;
                        public dumpTime(param0: java.io.PrintWriter, param1: string, param2: number, param3: number, param4: number, param5: number): number;
                        public setBound(param0: boolean, param1: number, param2: number): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export module procstats {
                    export class SparseMappingTable extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.app.procstats.SparseMappingTable>;
                        public static ARRAY_SIZE: number;
                        public static INVALID_KEY: number;
                        public constructor();
                        public static getIdFromKey(param0: number): number;
                        public static getArrayFromKey(param0: number): number;
                        public dumpInternalState(param0: boolean): string;
                        public readFromParcel(param0: globalAndroid.os.Parcel): void;
                        public writeToParcel(param0: globalAndroid.os.Parcel): void;
                        public reset(): void;
                        public static getIndexFromKey(param0: number): number;
                    }
                    export module SparseMappingTable {
                        export class Table extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.app.procstats.SparseMappingTable.Table>;
                            public getOrAddKey(param0: number, param1: number): number;
                            public writeToParcel(param0: globalAndroid.os.Parcel): void;
                            public getKey(param0: number): number;
                            public setValue(param0: number, param1: number, param2: number): void;
                            public getKeyAt(param0: number): number;
                            public resetTable(): void;
                            public getValue(param0: number): number;
                            public getValueForId(param0: number): number;
                            public getValueForId(param0: number, param1: number): number;
                            public getArrayForKey(param0: number): number[];
                            public getKeyCount(): number;
                            public copyFrom(param0: com.android.internal.app.procstats.SparseMappingTable.Table, param1: number): void;
                            public readFromParcel(param0: globalAndroid.os.Parcel): boolean;
                            public getValue(param0: number, param1: number): number;
                            public constructor(param0: com.android.internal.app.procstats.SparseMappingTable);
                            public dumpInternalState(): string;
                            public setValue(param0: number, param1: number): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module app {
                export module procstats {
                    export class SysMemUsageTable extends com.android.internal.app.procstats.SparseMappingTable.Table {
                        public static class: java.lang.Class<com.android.internal.app.procstats.SysMemUsageTable>;
                        public getTotalMemUsage(): number[];
                        public static mergeSysMemUsage(param0: number[], param1: number, param2: number[], param3: number): void;
                        public mergeStats(param0: number, param1: number[], param2: number): void;
                        public mergeStats(param0: com.android.internal.app.procstats.SysMemUsageTable): void;
                        public constructor(param0: com.android.internal.app.procstats.SparseMappingTable);
                        public dump(param0: java.io.PrintWriter, param1: string, param2: number[], param3: number[]): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module appwidget {
                export class IAppWidgetHost extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.appwidget.IAppWidgetHost>;
                    /**
                     * Constructs a new instance of the com.android.internal.appwidget.IAppWidgetHost interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        providerChanged(param0: number, param1: globalAndroid.appwidget.AppWidgetProviderInfo): void;
                        providersChanged(): void;
                        updateAppWidget(param0: number, param1: globalAndroid.widget.RemoteViews): void;
                        viewDataChanged(param0: number, param1: number): void;
                    });
                    public constructor();
                    public viewDataChanged(param0: number, param1: number): void;
                    public updateAppWidget(param0: number, param1: globalAndroid.widget.RemoteViews): void;
                    public providersChanged(): void;
                    public providerChanged(param0: number, param1: globalAndroid.appwidget.AppWidgetProviderInfo): void;
                }
                export module IAppWidgetHost {
                    export abstract class Stub implements com.android.internal.appwidget.IAppWidgetHost {
                        public static class: java.lang.Class<com.android.internal.appwidget.IAppWidgetHost.Stub>;
                        public updateAppWidget(param0: number, param1: globalAndroid.widget.RemoteViews): void;
                        public constructor();
                        public providersChanged(): void;
                        public providerChanged(param0: number, param1: globalAndroid.appwidget.AppWidgetProviderInfo): void;
                        public viewDataChanged(param0: number, param1: number): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.appwidget.IAppWidgetHost;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.appwidget.IAppWidgetHost {
                            public static class: java.lang.Class<com.android.internal.appwidget.IAppWidgetHost.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public viewDataChanged(param0: number, param1: number): void;
                            public providerChanged(param0: number, param1: globalAndroid.appwidget.AppWidgetProviderInfo): void;
                            public providersChanged(): void;
                            public updateAppWidget(param0: number, param1: globalAndroid.widget.RemoteViews): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module appwidget {
                export class IAppWidgetService extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.appwidget.IAppWidgetService>;
                    /**
                     * Constructs a new instance of the com.android.internal.appwidget.IAppWidgetService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        allocateAppWidgetId(param0: string, param1: number): number;
                        bindAppWidgetId(param0: string, param1: number, param2: number, param3: globalAndroid.content.ComponentName, param4: globalAndroid.os.Bundle): boolean;
                        bindRemoteViewsService(param0: string, param1: number, param2: globalAndroid.content.Intent, param3: globalAndroid.os.IBinder): void;
                        createAppWidgetConfigIntentSender(param0: string, param1: number, param2: number): globalAndroid.content.IntentSender;
                        deleteAllHosts(): void;
                        deleteAppWidgetId(param0: string, param1: number): void;
                        deleteHost(param0: string, param1: number): void;
                        getAppWidgetIds(param0: globalAndroid.content.ComponentName): number[];
                        getAppWidgetIdsForHost(param0: string, param1: number): number[];
                        getAppWidgetInfo(param0: string, param1: number): globalAndroid.appwidget.AppWidgetProviderInfo;
                        getAppWidgetOptions(param0: string, param1: number): globalAndroid.os.Bundle;
                        getAppWidgetViews(param0: string, param1: number): globalAndroid.widget.RemoteViews;
                        getInstalledProvidersForProfile(param0: number, param1: number, param2: string): globalAndroid.content.pm.ParceledListSlice;
                        hasBindAppWidgetPermission(param0: string, param1: number): boolean;
                        isBoundWidgetPackage(param0: string, param1: number): boolean;
                        isRequestPinAppWidgetSupported(): boolean;
                        notifyAppWidgetViewDataChanged(param0: string, param1: number[], param2: number): void;
                        partiallyUpdateAppWidgetIds(param0: string, param1: number[], param2: globalAndroid.widget.RemoteViews): void;
                        requestPinAppWidget(param0: string, param1: globalAndroid.content.ComponentName, param2: globalAndroid.os.Bundle, param3: globalAndroid.content.IntentSender): boolean;
                        setBindAppWidgetPermission(param0: string, param1: number, param2: boolean): void;
                        startListening(param0: com.android.internal.appwidget.IAppWidgetHost, param1: string, param2: number, param3: number[]): globalAndroid.content.pm.ParceledListSlice;
                        stopListening(param0: string, param1: number): void;
                        unbindRemoteViewsService(param0: string, param1: number, param2: globalAndroid.content.Intent): void;
                        updateAppWidgetIds(param0: string, param1: number[], param2: globalAndroid.widget.RemoteViews): void;
                        updateAppWidgetOptions(param0: string, param1: number, param2: globalAndroid.os.Bundle): void;
                        updateAppWidgetProvider(param0: globalAndroid.content.ComponentName, param1: globalAndroid.widget.RemoteViews): void;
                    });
                    public constructor();
                    public getAppWidgetIdsForHost(param0: string, param1: number): number[];
                    public startListening(param0: com.android.internal.appwidget.IAppWidgetHost, param1: string, param2: number, param3: number[]): globalAndroid.content.pm.ParceledListSlice;
                    public allocateAppWidgetId(param0: string, param1: number): number;
                    public notifyAppWidgetViewDataChanged(param0: string, param1: number[], param2: number): void;
                    public deleteAllHosts(): void;
                    public deleteHost(param0: string, param1: number): void;
                    public stopListening(param0: string, param1: number): void;
                    public getAppWidgetOptions(param0: string, param1: number): globalAndroid.os.Bundle;
                    public getAppWidgetInfo(param0: string, param1: number): globalAndroid.appwidget.AppWidgetProviderInfo;
                    public bindAppWidgetId(param0: string, param1: number, param2: number, param3: globalAndroid.content.ComponentName, param4: globalAndroid.os.Bundle): boolean;
                    public updateAppWidgetProvider(param0: globalAndroid.content.ComponentName, param1: globalAndroid.widget.RemoteViews): void;
                    public getInstalledProvidersForProfile(param0: number, param1: number, param2: string): globalAndroid.content.pm.ParceledListSlice;
                    public getAppWidgetViews(param0: string, param1: number): globalAndroid.widget.RemoteViews;
                    public setBindAppWidgetPermission(param0: string, param1: number, param2: boolean): void;
                    public updateAppWidgetIds(param0: string, param1: number[], param2: globalAndroid.widget.RemoteViews): void;
                    public getAppWidgetIds(param0: globalAndroid.content.ComponentName): number[];
                    public partiallyUpdateAppWidgetIds(param0: string, param1: number[], param2: globalAndroid.widget.RemoteViews): void;
                    public updateAppWidgetOptions(param0: string, param1: number, param2: globalAndroid.os.Bundle): void;
                    public isBoundWidgetPackage(param0: string, param1: number): boolean;
                    public requestPinAppWidget(param0: string, param1: globalAndroid.content.ComponentName, param2: globalAndroid.os.Bundle, param3: globalAndroid.content.IntentSender): boolean;
                    public isRequestPinAppWidgetSupported(): boolean;
                    public bindRemoteViewsService(param0: string, param1: number, param2: globalAndroid.content.Intent, param3: globalAndroid.os.IBinder): void;
                    public deleteAppWidgetId(param0: string, param1: number): void;
                    public unbindRemoteViewsService(param0: string, param1: number, param2: globalAndroid.content.Intent): void;
                    public createAppWidgetConfigIntentSender(param0: string, param1: number, param2: number): globalAndroid.content.IntentSender;
                    public hasBindAppWidgetPermission(param0: string, param1: number): boolean;
                }
                export module IAppWidgetService {
                    export abstract class Stub implements com.android.internal.appwidget.IAppWidgetService {
                        public static class: java.lang.Class<com.android.internal.appwidget.IAppWidgetService.Stub>;
                        public createAppWidgetConfigIntentSender(param0: string, param1: number, param2: number): globalAndroid.content.IntentSender;
                        public getAppWidgetViews(param0: string, param1: number): globalAndroid.widget.RemoteViews;
                        public updateAppWidgetProvider(param0: globalAndroid.content.ComponentName, param1: globalAndroid.widget.RemoteViews): void;
                        public stopListening(param0: string, param1: number): void;
                        public getInstalledProvidersForProfile(param0: number, param1: number, param2: string): globalAndroid.content.pm.ParceledListSlice;
                        public bindRemoteViewsService(param0: string, param1: number, param2: globalAndroid.content.Intent, param3: globalAndroid.os.IBinder): void;
                        public setBindAppWidgetPermission(param0: string, param1: number, param2: boolean): void;
                        public isBoundWidgetPackage(param0: string, param1: number): boolean;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public getAppWidgetIds(param0: globalAndroid.content.ComponentName): number[];
                        public allocateAppWidgetId(param0: string, param1: number): number;
                        public deleteAppWidgetId(param0: string, param1: number): void;
                        public constructor();
                        public notifyAppWidgetViewDataChanged(param0: string, param1: number[], param2: number): void;
                        public isRequestPinAppWidgetSupported(): boolean;
                        public getAppWidgetIdsForHost(param0: string, param1: number): number[];
                        public deleteHost(param0: string, param1: number): void;
                        public getAppWidgetInfo(param0: string, param1: number): globalAndroid.appwidget.AppWidgetProviderInfo;
                        public bindAppWidgetId(param0: string, param1: number, param2: number, param3: globalAndroid.content.ComponentName, param4: globalAndroid.os.Bundle): boolean;
                        public partiallyUpdateAppWidgetIds(param0: string, param1: number[], param2: globalAndroid.widget.RemoteViews): void;
                        public getAppWidgetOptions(param0: string, param1: number): globalAndroid.os.Bundle;
                        public updateAppWidgetOptions(param0: string, param1: number, param2: globalAndroid.os.Bundle): void;
                        public hasBindAppWidgetPermission(param0: string, param1: number): boolean;
                        public unbindRemoteViewsService(param0: string, param1: number, param2: globalAndroid.content.Intent): void;
                        public updateAppWidgetIds(param0: string, param1: number[], param2: globalAndroid.widget.RemoteViews): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.appwidget.IAppWidgetService;
                        public deleteAllHosts(): void;
                        public startListening(param0: com.android.internal.appwidget.IAppWidgetHost, param1: string, param2: number, param3: number[]): globalAndroid.content.pm.ParceledListSlice;
                        public requestPinAppWidget(param0: string, param1: globalAndroid.content.ComponentName, param2: globalAndroid.os.Bundle, param3: globalAndroid.content.IntentSender): boolean;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.appwidget.IAppWidgetService {
                            public static class: java.lang.Class<com.android.internal.appwidget.IAppWidgetService.Stub.Proxy>;
                            public allocateAppWidgetId(param0: string, param1: number): number;
                            public bindAppWidgetId(param0: string, param1: number, param2: number, param3: globalAndroid.content.ComponentName, param4: globalAndroid.os.Bundle): boolean;
                            public getAppWidgetOptions(param0: string, param1: number): globalAndroid.os.Bundle;
                            public updateAppWidgetProvider(param0: globalAndroid.content.ComponentName, param1: globalAndroid.widget.RemoteViews): void;
                            public startListening(param0: com.android.internal.appwidget.IAppWidgetHost, param1: string, param2: number, param3: number[]): globalAndroid.content.pm.ParceledListSlice;
                            public deleteAllHosts(): void;
                            public getAppWidgetViews(param0: string, param1: number): globalAndroid.widget.RemoteViews;
                            public updateAppWidgetOptions(param0: string, param1: number, param2: globalAndroid.os.Bundle): void;
                            public deleteAppWidgetId(param0: string, param1: number): void;
                            public getAppWidgetIds(param0: globalAndroid.content.ComponentName): number[];
                            public getAppWidgetIdsForHost(param0: string, param1: number): number[];
                            public hasBindAppWidgetPermission(param0: string, param1: number): boolean;
                            public notifyAppWidgetViewDataChanged(param0: string, param1: number[], param2: number): void;
                            public isBoundWidgetPackage(param0: string, param1: number): boolean;
                            public bindRemoteViewsService(param0: string, param1: number, param2: globalAndroid.content.Intent, param3: globalAndroid.os.IBinder): void;
                            public getInstalledProvidersForProfile(param0: number, param1: number, param2: string): globalAndroid.content.pm.ParceledListSlice;
                            public unbindRemoteViewsService(param0: string, param1: number, param2: globalAndroid.content.Intent): void;
                            public deleteHost(param0: string, param1: number): void;
                            public createAppWidgetConfigIntentSender(param0: string, param1: number, param2: number): globalAndroid.content.IntentSender;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public requestPinAppWidget(param0: string, param1: globalAndroid.content.ComponentName, param2: globalAndroid.os.Bundle, param3: globalAndroid.content.IntentSender): boolean;
                            public isRequestPinAppWidgetSupported(): boolean;
                            public updateAppWidgetIds(param0: string, param1: number[], param2: globalAndroid.widget.RemoteViews): void;
                            public stopListening(param0: string, param1: number): void;
                            public setBindAppWidgetPermission(param0: string, param1: number, param2: boolean): void;
                            public getAppWidgetInfo(param0: string, param1: number): globalAndroid.appwidget.AppWidgetProviderInfo;
                            public partiallyUpdateAppWidgetIds(param0: string, param1: number[], param2: globalAndroid.widget.RemoteViews): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module backup {
                export class IBackupTransport extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.backup.IBackupTransport>;
                    /**
                     * Constructs a new instance of the com.android.internal.backup.IBackupTransport interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        abortFullRestore(): number;
                        cancelFullBackup(): void;
                        checkFullBackupSize(param0: number): number;
                        clearBackupData(param0: globalAndroid.content.pm.PackageInfo): number;
                        configurationIntent(): globalAndroid.content.Intent;
                        currentDestinationString(): string;
                        dataManagementIntent(): globalAndroid.content.Intent;
                        dataManagementLabel(): string;
                        finishBackup(): number;
                        finishRestore(): void;
                        getAvailableRestoreSets(): globalAndroid.app.backup.RestoreSet[];
                        getBackupQuota(param0: string, param1: boolean): number;
                        getCurrentRestoreSet(): number;
                        getNextFullRestoreDataChunk(param0: globalAndroid.os.ParcelFileDescriptor): number;
                        getRestoreData(param0: globalAndroid.os.ParcelFileDescriptor): number;
                        initializeDevice(): number;
                        isAppEligibleForBackup(param0: globalAndroid.content.pm.PackageInfo, param1: boolean): boolean;
                        name(): string;
                        nextRestorePackage(): globalAndroid.app.backup.RestoreDescription;
                        performBackup(param0: globalAndroid.content.pm.PackageInfo, param1: globalAndroid.os.ParcelFileDescriptor, param2: number): number;
                        performFullBackup(param0: globalAndroid.content.pm.PackageInfo, param1: globalAndroid.os.ParcelFileDescriptor, param2: number): number;
                        requestBackupTime(): number;
                        requestFullBackupTime(): number;
                        sendBackupData(param0: number): number;
                        startRestore(param0: number, param1: globalAndroid.content.pm.PackageInfo[]): number;
                        transportDirName(): string;
                    });
                    public constructor();
                    public cancelFullBackup(): void;
                    public dataManagementIntent(): globalAndroid.content.Intent;
                    public name(): string;
                    public abortFullRestore(): number;
                    public performBackup(param0: globalAndroid.content.pm.PackageInfo, param1: globalAndroid.os.ParcelFileDescriptor, param2: number): number;
                    public clearBackupData(param0: globalAndroid.content.pm.PackageInfo): number;
                    public getRestoreData(param0: globalAndroid.os.ParcelFileDescriptor): number;
                    public sendBackupData(param0: number): number;
                    public requestFullBackupTime(): number;
                    public transportDirName(): string;
                    public getAvailableRestoreSets(): globalAndroid.app.backup.RestoreSet[];
                    public checkFullBackupSize(param0: number): number;
                    public requestBackupTime(): number;
                    public nextRestorePackage(): globalAndroid.app.backup.RestoreDescription;
                    public getCurrentRestoreSet(): number;
                    public initializeDevice(): number;
                    public currentDestinationString(): string;
                    public performFullBackup(param0: globalAndroid.content.pm.PackageInfo, param1: globalAndroid.os.ParcelFileDescriptor, param2: number): number;
                    public dataManagementLabel(): string;
                    public finishBackup(): number;
                    public startRestore(param0: number, param1: globalAndroid.content.pm.PackageInfo[]): number;
                    public isAppEligibleForBackup(param0: globalAndroid.content.pm.PackageInfo, param1: boolean): boolean;
                    public getBackupQuota(param0: string, param1: boolean): number;
                    public configurationIntent(): globalAndroid.content.Intent;
                    public finishRestore(): void;
                    public getNextFullRestoreDataChunk(param0: globalAndroid.os.ParcelFileDescriptor): number;
                }
                export module IBackupTransport {
                    export abstract class Stub implements com.android.internal.backup.IBackupTransport {
                        public static class: java.lang.Class<com.android.internal.backup.IBackupTransport.Stub>;
                        public requestBackupTime(): number;
                        public transportDirName(): string;
                        public finishBackup(): number;
                        public name(): string;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.backup.IBackupTransport;
                        public getRestoreData(param0: globalAndroid.os.ParcelFileDescriptor): number;
                        public isAppEligibleForBackup(param0: globalAndroid.content.pm.PackageInfo, param1: boolean): boolean;
                        public finishRestore(): void;
                        public sendBackupData(param0: number): number;
                        public dataManagementIntent(): globalAndroid.content.Intent;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public getBackupQuota(param0: string, param1: boolean): number;
                        public constructor();
                        public checkFullBackupSize(param0: number): number;
                        public getNextFullRestoreDataChunk(param0: globalAndroid.os.ParcelFileDescriptor): number;
                        public clearBackupData(param0: globalAndroid.content.pm.PackageInfo): number;
                        public dataManagementLabel(): string;
                        public getCurrentRestoreSet(): number;
                        public currentDestinationString(): string;
                        public requestFullBackupTime(): number;
                        public startRestore(param0: number, param1: globalAndroid.content.pm.PackageInfo[]): number;
                        public initializeDevice(): number;
                        public cancelFullBackup(): void;
                        public performFullBackup(param0: globalAndroid.content.pm.PackageInfo, param1: globalAndroid.os.ParcelFileDescriptor, param2: number): number;
                        public getAvailableRestoreSets(): globalAndroid.app.backup.RestoreSet[];
                        public nextRestorePackage(): globalAndroid.app.backup.RestoreDescription;
                        public configurationIntent(): globalAndroid.content.Intent;
                        public performBackup(param0: globalAndroid.content.pm.PackageInfo, param1: globalAndroid.os.ParcelFileDescriptor, param2: number): number;
                        public abortFullRestore(): number;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.backup.IBackupTransport {
                            public static class: java.lang.Class<com.android.internal.backup.IBackupTransport.Stub.Proxy>;
                            public performFullBackup(param0: globalAndroid.content.pm.PackageInfo, param1: globalAndroid.os.ParcelFileDescriptor, param2: number): number;
                            public sendBackupData(param0: number): number;
                            public currentDestinationString(): string;
                            public requestBackupTime(): number;
                            public cancelFullBackup(): void;
                            public initializeDevice(): number;
                            public performBackup(param0: globalAndroid.content.pm.PackageInfo, param1: globalAndroid.os.ParcelFileDescriptor, param2: number): number;
                            public abortFullRestore(): number;
                            public getBackupQuota(param0: string, param1: boolean): number;
                            public startRestore(param0: number, param1: globalAndroid.content.pm.PackageInfo[]): number;
                            public name(): string;
                            public transportDirName(): string;
                            public getRestoreData(param0: globalAndroid.os.ParcelFileDescriptor): number;
                            public getNextFullRestoreDataChunk(param0: globalAndroid.os.ParcelFileDescriptor): number;
                            public nextRestorePackage(): globalAndroid.app.backup.RestoreDescription;
                            public requestFullBackupTime(): number;
                            public dataManagementLabel(): string;
                            public checkFullBackupSize(param0: number): number;
                            public dataManagementIntent(): globalAndroid.content.Intent;
                            public finishBackup(): number;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public configurationIntent(): globalAndroid.content.Intent;
                            public finishRestore(): void;
                            public isAppEligibleForBackup(param0: globalAndroid.content.pm.PackageInfo, param1: boolean): boolean;
                            public clearBackupData(param0: globalAndroid.content.pm.PackageInfo): number;
                            public getAvailableRestoreSets(): globalAndroid.app.backup.RestoreSet[];
                            public getCurrentRestoreSet(): number;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module backup {
                export class IObbBackupService extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.backup.IObbBackupService>;
                    /**
                     * Constructs a new instance of the com.android.internal.backup.IObbBackupService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        backupObbs(param0: string, param1: globalAndroid.os.ParcelFileDescriptor, param2: number, param3: globalAndroid.app.backup.IBackupManager): void;
                        restoreObbFile(param0: string, param1: globalAndroid.os.ParcelFileDescriptor, param2: number, param3: number, param4: string, param5: number, param6: number, param7: number, param8: globalAndroid.app.backup.IBackupManager): void;
                    });
                    public constructor();
                    public restoreObbFile(param0: string, param1: globalAndroid.os.ParcelFileDescriptor, param2: number, param3: number, param4: string, param5: number, param6: number, param7: number, param8: globalAndroid.app.backup.IBackupManager): void;
                    public backupObbs(param0: string, param1: globalAndroid.os.ParcelFileDescriptor, param2: number, param3: globalAndroid.app.backup.IBackupManager): void;
                }
                export module IObbBackupService {
                    export abstract class Stub implements com.android.internal.backup.IObbBackupService {
                        public static class: java.lang.Class<com.android.internal.backup.IObbBackupService.Stub>;
                        public backupObbs(param0: string, param1: globalAndroid.os.ParcelFileDescriptor, param2: number, param3: globalAndroid.app.backup.IBackupManager): void;
                        public constructor();
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.backup.IObbBackupService;
                        public restoreObbFile(param0: string, param1: globalAndroid.os.ParcelFileDescriptor, param2: number, param3: number, param4: string, param5: number, param6: number, param7: number, param8: globalAndroid.app.backup.IBackupManager): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.backup.IObbBackupService {
                            public static class: java.lang.Class<com.android.internal.backup.IObbBackupService.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public backupObbs(param0: string, param1: globalAndroid.os.ParcelFileDescriptor, param2: number, param3: globalAndroid.app.backup.IBackupManager): void;
                            public restoreObbFile(param0: string, param1: globalAndroid.os.ParcelFileDescriptor, param2: number, param3: number, param4: string, param5: number, param6: number, param7: number, param8: globalAndroid.app.backup.IBackupManager): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module backup {
                export class LocalTransport extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.backup.LocalTransport>;
                    public cancelFullBackup(): void;
                    public dataManagementIntent(): globalAndroid.content.Intent;
                    public name(): string;
                    public abortFullRestore(): number;
                    public clearBackupData(param0: globalAndroid.content.pm.PackageInfo): number;
                    public getRestoreData(param0: globalAndroid.os.ParcelFileDescriptor): number;
                    public sendBackupData(param0: number): number;
                    public requestFullBackupTime(): number;
                    public transportDirName(): string;
                    public getAvailableRestoreSets(): globalAndroid.app.backup.RestoreSet[];
                    public checkFullBackupSize(param0: number): number;
                    public requestBackupTime(): number;
                    public nextRestorePackage(): globalAndroid.app.backup.RestoreDescription;
                    public performBackup(param0: globalAndroid.content.pm.PackageInfo, param1: globalAndroid.os.ParcelFileDescriptor): number;
                    public getCurrentRestoreSet(): number;
                    public initializeDevice(): number;
                    public currentDestinationString(): string;
                    public performFullBackup(param0: globalAndroid.content.pm.PackageInfo, param1: globalAndroid.os.ParcelFileDescriptor): number;
                    public dataManagementLabel(): string;
                    public finishBackup(): number;
                    public constructor(param0: globalAndroid.content.Context);
                    public startRestore(param0: number, param1: globalAndroid.content.pm.PackageInfo[]): number;
                    public getBackupQuota(param0: string, param1: boolean): number;
                    public configurationIntent(): globalAndroid.content.Intent;
                    public finishRestore(): void;
                    public getNextFullRestoreDataChunk(param0: globalAndroid.os.ParcelFileDescriptor): number;
                }
                export module LocalTransport {
                    export class DecodedFilename extends java.lang.Comparable<com.android.internal.backup.LocalTransport.DecodedFilename> {
                        public static class: java.lang.Class<com.android.internal.backup.LocalTransport.DecodedFilename>;
                        public file: java.io.File;
                        public key: string;
                        public constructor(param0: java.io.File);
                        public compareTo(param0: com.android.internal.backup.LocalTransport.DecodedFilename): number;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module backup {
                export class LocalTransportService extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.backup.LocalTransportService>;
                    public onBind(param0: globalAndroid.content.Intent): globalAndroid.os.IBinder;
                    public onCreate(): void;
                    public constructor();
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module colorextraction {
                export class ColorExtractor extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.colorextraction.ColorExtractor>;
                    public static TYPE_DARK: number;
                    public static TYPE_EXTRA_DARK: number;
                    public static TYPE_NORMAL: number;
                    public mGradientColors: globalAndroid.util.SparseArray<com.android.internal.colorextraction.ColorExtractor.GradientColors[]>;
                    public mLockColors: globalAndroid.app.WallpaperColors;
                    public mSystemColors: globalAndroid.app.WallpaperColors;
                    public constructor(param0: globalAndroid.content.Context);
                    public destroy(): void;
                    public addOnColorsChangedListener(param0: com.android.internal.colorextraction.ColorExtractor.OnColorsChangedListener): void;
                    public onColorsChanged(param0: globalAndroid.app.WallpaperColors, param1: number): void;
                    public getColors(param0: number): com.android.internal.colorextraction.ColorExtractor.GradientColors;
                    public getWallpaperColors(param0: number): globalAndroid.app.WallpaperColors;
                    public getColors(param0: number, param1: number): com.android.internal.colorextraction.ColorExtractor.GradientColors;
                    public triggerColorsChanged(param0: number): void;
                    public removeOnColorsChangedListener(param0: com.android.internal.colorextraction.ColorExtractor.OnColorsChangedListener): void;
                    public constructor(param0: globalAndroid.content.Context, param1: com.android.internal.colorextraction.types.ExtractionType);
                }
                export module ColorExtractor {
                    export class GradientColors extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.colorextraction.ColorExtractor.GradientColors>;
                        public getMainColor(): number;
                        public constructor();
                        public supportsDarkText(): boolean;
                        public set(param0: com.android.internal.colorextraction.ColorExtractor.GradientColors): void;
                        public getSecondaryColor(): number;
                        public equals(param0: any): boolean;
                        public hashCode(): number;
                        public setMainColor(param0: number): void;
                        public setSecondaryColor(param0: number): void;
                        public setSupportsDarkText(param0: boolean): void;
                        public toString(): string;
                    }
                    export class OnColorsChangedListener extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.colorextraction.ColorExtractor.OnColorsChangedListener>;
                        /**
                         * Constructs a new instance of the com.android.internal.colorextraction.ColorExtractor$OnColorsChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            onColorsChanged(param0: com.android.internal.colorextraction.ColorExtractor, param1: number): void;
                        });
                        public constructor();
                        public onColorsChanged(param0: com.android.internal.colorextraction.ColorExtractor, param1: number): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module colorextraction {
                export module drawable {
                    export class GradientDrawable extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.colorextraction.drawable.GradientDrawable>;
                        public getMainColor(): number;
                        public getColorFilter(): globalAndroid.graphics.ColorFilter;
                        public constructor(param0: globalAndroid.content.Context);
                        public getSecondaryColor(): number;
                        public setColors(param0: com.android.internal.colorextraction.ColorExtractor.GradientColors, param1: boolean): void;
                        public getAlpha(): number;
                        public getOpacity(): number;
                        public setColors(param0: number, param1: number, param2: boolean): void;
                        public setAlpha(param0: number): void;
                        public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
                        public draw(param0: globalAndroid.graphics.Canvas): void;
                        public setScreenSize(param0: number, param1: number): void;
                        public setColors(param0: com.android.internal.colorextraction.ColorExtractor.GradientColors): void;
                        public setXfermode(param0: globalAndroid.graphics.Xfermode): void;
                    }
                    export module GradientDrawable {
                        export class Splat extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.colorextraction.drawable.GradientDrawable.Splat>;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module colorextraction {
                export module types {
                    export class ExtractionType extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.colorextraction.types.ExtractionType>;
                        /**
                         * Constructs a new instance of the com.android.internal.colorextraction.types.ExtractionType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            extractInto(param0: globalAndroid.app.WallpaperColors, param1: com.android.internal.colorextraction.ColorExtractor.GradientColors, param2: com.android.internal.colorextraction.ColorExtractor.GradientColors, param3: com.android.internal.colorextraction.ColorExtractor.GradientColors): void;
                        });
                        public constructor();
                        public extractInto(param0: globalAndroid.app.WallpaperColors, param1: com.android.internal.colorextraction.ColorExtractor.GradientColors, param2: com.android.internal.colorextraction.ColorExtractor.GradientColors, param3: com.android.internal.colorextraction.ColorExtractor.GradientColors): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module colorextraction {
                export module types {
                    export class Tonal extends com.android.internal.colorextraction.types.ExtractionType {
                        public static class: java.lang.Class<com.android.internal.colorextraction.types.Tonal>;
                        public static MAIN_COLOR_DARK: number;
                        public static MAIN_COLOR_LIGHT: number;
                        public static SECONDARY_COLOR_DARK: number;
                        public static SECONDARY_COLOR_LIGHT: number;
                        public static THRESHOLD_COLOR_DARK: number;
                        public static THRESHOLD_COLOR_LIGHT: number;
                        public static applyFallback(param0: globalAndroid.app.WallpaperColors, param1: com.android.internal.colorextraction.ColorExtractor.GradientColors): void;
                        public constructor(param0: globalAndroid.content.Context);
                        public getBlacklistedColors(): java.util.List<com.android.internal.colorextraction.types.Tonal.ColorRange>;
                        public extractInto(param0: globalAndroid.app.WallpaperColors, param1: com.android.internal.colorextraction.ColorExtractor.GradientColors, param2: com.android.internal.colorextraction.ColorExtractor.GradientColors, param3: com.android.internal.colorextraction.ColorExtractor.GradientColors): void;
                    }
                    export module Tonal {
                        export class ColorRange extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.colorextraction.types.Tonal.ColorRange>;
                            public constructor(param0: globalAndroid.util.Range<java.lang.Float>, param1: globalAndroid.util.Range<java.lang.Float>, param2: globalAndroid.util.Range<java.lang.Float>);
                            public containsColor(param0: number, param1: number, param2: number): boolean;
                            public toString(): string;
                            public getCenter(): number[];
                        }
                        export class ConfigParser extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.colorextraction.types.Tonal.ConfigParser>;
                            public getTonalPalettes(): java.util.ArrayList<com.android.internal.colorextraction.types.Tonal.TonalPalette>;
                            public getBlacklistedColors(): java.util.ArrayList<com.android.internal.colorextraction.types.Tonal.ColorRange>;
                            public constructor(param0: globalAndroid.content.Context);
                        }
                        export class TonalPalette extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.colorextraction.types.Tonal.TonalPalette>;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module content {
                export abstract class FileSystemProvider {
                    public static class: java.lang.Class<com.android.internal.content.FileSystemProvider>;
                    public getFileForDocId(param0: string, param1: boolean): java.io.File;
                    public buildNotificationUri(param0: string): globalAndroid.net.Uri;
                    public createDocument(param0: string, param1: string, param2: string): string;
                    public getDocIdForFile(param0: java.io.File): string;
                    public openDocument(param0: string, param1: string, param2: globalAndroid.os.CancellationSignal): globalAndroid.os.ParcelFileDescriptor;
                    public findDocumentPath(param0: java.io.File, param1: java.io.File): java.util.List<string>;
                    public includeFile(param0: globalAndroid.database.MatrixCursor, param1: string, param2: java.io.File): globalAndroid.database.MatrixCursor.RowBuilder;
                    public onCreate(param0: string[]): void;
                    public deleteDocument(param0: string): void;
                    public queryDocument(param0: string, param1: string[]): globalAndroid.database.Cursor;
                    public renameDocument(param0: string, param1: string): string;
                    public getDocumentType(param0: string): string;
                    public moveDocument(param0: string, param1: string, param2: string): string;
                    public querySearchDocuments(param0: java.io.File, param1: string, param2: string[], param3: java.util.Set<string>): globalAndroid.database.Cursor;
                    public constructor();
                    public getFileForDocId(param0: string): java.io.File;
                    public onCreate(): boolean;
                    public openDocumentThumbnail(param0: string, param1: globalAndroid.graphics.Point, param2: globalAndroid.os.CancellationSignal): globalAndroid.content.res.AssetFileDescriptor;
                    public queryChildDocuments(param0: string, param1: string[], param2: string): globalAndroid.database.Cursor;
                    public isChildDocument(param0: string, param1: string): boolean;
                }
                export module FileSystemProvider {
                    export class DirectoryCursor extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.content.FileSystemProvider.DirectoryCursor>;
                        public close(): void;
                        public constructor(param0: com.android.internal.content.FileSystemProvider, param1: string[], param2: string, param3: java.io.File);
                    }
                    export class DirectoryObserver extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.content.FileSystemProvider.DirectoryObserver>;
                        public constructor(param0: java.io.File, param1: globalAndroid.content.ContentResolver, param2: globalAndroid.net.Uri);
                        public onEvent(param0: number, param1: string): void;
                        public toString(): string;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module content {
                export class NativeLibraryHelper extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.content.NativeLibraryHelper>;
                    public static CLEAR_ABI_OVERRIDE: string;
                    public static LIB64_DIR_NAME: string;
                    public static LIB_DIR_NAME: string;
                    public static removeNativeBinariesFromDirLI(param0: java.io.File, param1: boolean): void;
                    public static copyNativeBinariesForSupportedAbi(param0: com.android.internal.content.NativeLibraryHelper.Handle, param1: java.io.File, param2: string[], param3: boolean): number;
                    public static removeNativeBinariesLI(param0: string): void;
                    public constructor();
                    public static copyNativeBinaries(param0: com.android.internal.content.NativeLibraryHelper.Handle, param1: java.io.File, param2: string): number;
                    public static hasRenderscriptBitcode(param0: com.android.internal.content.NativeLibraryHelper.Handle): boolean;
                    public static copyNativeBinariesWithOverride(param0: com.android.internal.content.NativeLibraryHelper.Handle, param1: java.io.File, param2: string): number;
                    public static sumNativeBinariesWithOverride(param0: com.android.internal.content.NativeLibraryHelper.Handle, param1: string): number;
                    public static findSupportedAbi(param0: com.android.internal.content.NativeLibraryHelper.Handle, param1: string[]): number;
                }
                export module NativeLibraryHelper {
                    export class Handle extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.content.NativeLibraryHelper.Handle>;
                        public static create(param0: globalAndroid.content.pm.PackageParser.PackageLite): com.android.internal.content.NativeLibraryHelper.Handle;
                        public static create(param0: globalAndroid.content.pm.PackageParser.Package): com.android.internal.content.NativeLibraryHelper.Handle;
                        public close(): void;
                        public static create(param0: java.io.File): com.android.internal.content.NativeLibraryHelper.Handle;
                        public finalize(): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module content {
                export class PackageHelper extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.content.PackageHelper>;
                    public static APP_INSTALL_AUTO: number;
                    public static APP_INSTALL_EXTERNAL: number;
                    public static APP_INSTALL_INTERNAL: number;
                    public static RECOMMEND_FAILED_ALREADY_EXISTS: number;
                    public static RECOMMEND_FAILED_INSUFFICIENT_STORAGE: number;
                    public static RECOMMEND_FAILED_INVALID_APK: number;
                    public static RECOMMEND_FAILED_INVALID_LOCATION: number;
                    public static RECOMMEND_FAILED_INVALID_URI: number;
                    public static RECOMMEND_FAILED_VERSION_DOWNGRADE: number;
                    public static RECOMMEND_INSTALL_EPHEMERAL: number;
                    public static RECOMMEND_INSTALL_EXTERNAL: number;
                    public static RECOMMEND_INSTALL_INTERNAL: number;
                    public static RECOMMEND_MEDIA_UNAVAILABLE: number;
                    public static fitsOnExternal(param0: globalAndroid.content.Context, param1: globalAndroid.content.pm.PackageInstaller.SessionParams): boolean;
                    public static resolveInstallVolume(param0: globalAndroid.content.Context, param1: globalAndroid.content.pm.PackageInstaller.SessionParams): string;
                    public static resolveInstallVolume(param0: globalAndroid.content.Context, param1: globalAndroid.content.pm.PackageInstaller.SessionParams, param2: com.android.internal.content.PackageHelper.TestableInterface): string;
                    public static destroySdDir(param0: string): boolean;
                    public static mountSdDir(param0: string, param1: string, param2: number): string;
                    public static fixSdPermissions(param0: string, param1: number, param2: string): boolean;
                    public static renameSdDir(param0: string, param1: string): boolean;
                    public static fitsOnInternal(param0: globalAndroid.content.Context, param1: globalAndroid.content.pm.PackageInstaller.SessionParams): boolean;
                    public constructor();
                    public static getSecureContainerList(): string[];
                    public static resolveInstallLocation(param0: globalAndroid.content.Context, param1: globalAndroid.content.pm.PackageInstaller.SessionParams): number;
                    public static resolveInstallVolume(param0: globalAndroid.content.Context, param1: string, param2: number, param3: number, param4: com.android.internal.content.PackageHelper.TestableInterface): string;
                    public static calculateInstalledSize(param0: globalAndroid.content.pm.PackageParser.PackageLite, param1: boolean, param2: string): number;
                    public static getStorageManager(): globalAndroid.os.storage.IStorageManager;
                    public static calculateInstalledSize(param0: globalAndroid.content.pm.PackageParser.PackageLite, param1: com.android.internal.content.NativeLibraryHelper.Handle, param2: boolean, param3: string): number;
                    public static translateAllocateFlags(param0: number): number;
                    public static replaceEnd(param0: string, param1: string, param2: string): string;
                    public static resolveInstallLocation(param0: globalAndroid.content.Context, param1: string, param2: number, param3: number, param4: number): number;
                    public static resizeSdDir(param0: number, param1: string, param2: string): boolean;
                    public static unMountSdDir(param0: string): boolean;
                    public static mountSdDir(param0: string, param1: string, param2: number, param3: boolean): string;
                    public static extractPublicFiles(param0: java.io.File, param1: java.io.File): number;
                    public static finalizeSdDir(param0: string): boolean;
                    public static createSdDir(param0: number, param1: string, param2: string, param3: number, param4: boolean): string;
                    public static getSdDir(param0: string): string;
                    public static isContainerMounted(param0: string): boolean;
                    public static getSdFilesystem(param0: string): string;
                }
                export module PackageHelper {
                    export abstract class TestableInterface {
                        public static class: java.lang.Class<com.android.internal.content.PackageHelper.TestableInterface>;
                        public getStorageManager(param0: globalAndroid.content.Context): globalAndroid.os.storage.StorageManager;
                        public constructor();
                        public fitsOnInternalStorage(param0: globalAndroid.content.Context, param1: globalAndroid.content.pm.PackageInstaller.SessionParams): boolean;
                        public getAllow3rdPartyOnInternalConfig(param0: globalAndroid.content.Context): boolean;
                        public getExistingAppInfo(param0: globalAndroid.content.Context, param1: string): globalAndroid.content.pm.ApplicationInfo;
                        public getForceAllowOnExternalSetting(param0: globalAndroid.content.Context): boolean;
                        public getDataDirectory(): java.io.File;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module content {
                export abstract class PackageMonitor {
                    public static class: java.lang.Class<com.android.internal.content.PackageMonitor>;
                    public static PACKAGE_PERMANENT_CHANGE: number;
                    public static PACKAGE_TEMPORARY_CHANGE: number;
                    public static PACKAGE_UNCHANGED: number;
                    public static PACKAGE_UPDATING: number;
                    public onPackageAppeared(param0: string, param1: number): void;
                    public onPackageDataCleared(param0: string, param1: number): void;
                    public onSomePackagesChanged(): void;
                    public onPackageModified(param0: string): void;
                    public didSomePackagesChange(): boolean;
                    public isPackageModified(param0: string): boolean;
                    public isPackageAppearing(param0: string): number;
                    public onBeginPackageChanges(): void;
                    public onReceive(param0: globalAndroid.content.Context, param1: globalAndroid.content.Intent): void;
                    public onPackageRemoved(param0: string, param1: number): void;
                    public onHandleForceStop(param0: globalAndroid.content.Intent, param1: string[], param2: number, param3: boolean): boolean;
                    public constructor();
                    public onPackagesUnavailable(param0: string[]): void;
                    public onPackageDisappeared(param0: string, param1: number): void;
                    public onPackageUpdateStarted(param0: string, param1: number): void;
                    public unregister(): void;
                    public onPackagesSuspended(param0: string[]): void;
                    public onFinishPackageChanges(): void;
                    public isComponentModified(param0: string): boolean;
                    public register(param0: globalAndroid.content.Context, param1: globalAndroid.os.Looper, param2: globalAndroid.os.UserHandle, param3: boolean): void;
                    public getRegisteredHandler(): globalAndroid.os.Handler;
                    public getChangingUserId(): number;
                    public register(param0: globalAndroid.content.Context, param1: globalAndroid.os.Looper, param2: boolean): void;
                    public register(param0: globalAndroid.content.Context, param1: globalAndroid.os.UserHandle, param2: boolean, param3: globalAndroid.os.Handler): void;
                    public onUidRemoved(param0: number): void;
                    public onPackageRemovedAllUsers(param0: string, param1: number): void;
                    public anyPackagesDisappearing(): boolean;
                    public onPackageChanged(param0: string, param1: number, param2: string[]): boolean;
                    public onPackageUpdateFinished(param0: string, param1: number): void;
                    public anyPackagesAppearing(): boolean;
                    public isPackageDisappearing(param0: string): number;
                    public onHandleUserStop(param0: globalAndroid.content.Intent, param1: number): void;
                    public isReplacing(): boolean;
                    public onPackagesUnsuspended(param0: string[]): void;
                    public onPackagesAvailable(param0: string[]): void;
                    public onPackageAdded(param0: string, param1: number): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module content {
                export class ReferrerIntent extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.content.ReferrerIntent>;
                    public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.content.ReferrerIntent>;
                    public mReferrer: string;
                    public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                    public constructor(param0: globalAndroid.content.Intent, param1: string);
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module content {
                export class SelectionBuilder extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.content.SelectionBuilder>;
                    public delete(param0: globalAndroid.database.sqlite.SQLiteDatabase, param1: string): number;
                    public getSelectionArgs(): string[];
                    public query(param0: globalAndroid.database.sqlite.SQLiteDatabase, param1: string, param2: string[], param3: string): globalAndroid.database.Cursor;
                    public constructor();
                    public update(param0: globalAndroid.database.sqlite.SQLiteDatabase, param1: string, param2: globalAndroid.content.ContentValues): number;
                    public reset(): com.android.internal.content.SelectionBuilder;
                    public query(param0: globalAndroid.database.sqlite.SQLiteDatabase, param1: string, param2: string[], param3: string, param4: string, param5: string, param6: string): globalAndroid.database.Cursor;
                    public getSelection(): string;
                    public append(param0: string, param1: any[]): com.android.internal.content.SelectionBuilder;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module database {
                export class SortCursor extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.database.SortCursor>;
                    public registerDataSetObserver(param0: globalAndroid.database.DataSetObserver): void;
                    public getBlob(param0: number): number[];
                    public getCount(): number;
                    public isNull(param0: number): boolean;
                    public getColumnNames(): string[];
                    public getShort(param0: number): number;
                    public getDouble(param0: number): number;
                    public requery(): boolean;
                    public deactivate(): void;
                    public getString(param0: number): string;
                    public getFloat(param0: number): number;
                    public getLong(param0: number): number;
                    public onMove(param0: number, param1: number): boolean;
                    public getInt(param0: number): number;
                    public close(): void;
                    public unregisterDataSetObserver(param0: globalAndroid.database.DataSetObserver): void;
                    public getType(param0: number): number;
                    public constructor(param0: globalAndroid.database.Cursor[], param1: string);
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module graphics {
                export class ColorUtils extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.graphics.ColorUtils>;
                    public static RGBToXYZ(param0: number, param1: number, param2: number, param3: number[]): void;
                    public static colorToHSL(param0: number, param1: number[]): void;
                    public static XYZToColor(param0: number, param1: number, param2: number): number;
                    public static RGBToHSL(param0: number, param1: number, param2: number, param3: number[]): void;
                    public static calculateLuminance(param0: number): number;
                    public static RGBToLAB(param0: number, param1: number, param2: number, param3: number[]): void;
                    public static blendARGB(param0: number, param1: number, param2: number): number;
                    public static colorToXYZ(param0: number, param1: number[]): void;
                    public static LABToColor(param0: number, param1: number, param2: number): number;
                    public static XYZToLAB(param0: number, param1: number, param2: number, param3: number[]): void;
                    public static distanceEuclidean(param0: number[], param1: number[]): number;
                    public static setAlphaComponent(param0: number, param1: number): number;
                    public static blendLAB(param0: number[], param1: number[], param2: number, param3: number[]): void;
                    public static compositeColors(param0: number, param1: number): number;
                    public static blendHSL(param0: number[], param1: number[], param2: number, param3: number[]): void;
                    public static calculateMinimumAlpha(param0: number, param1: number, param2: number): number;
                    public static calculateContrast(param0: number, param1: number): number;
                    public static colorToLAB(param0: number, param1: number[]): void;
                    public static HSLToColor(param0: number[]): number;
                    public static LABToXYZ(param0: number, param1: number, param2: number, param3: number[]): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module graphics {
                export class SfVsyncFrameCallbackProvider extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.graphics.SfVsyncFrameCallbackProvider>;
                    public getFrameTime(): number;
                    public getFrameDelay(): number;
                    public constructor();
                    public setFrameDelay(param0: number): void;
                    public postFrameCallback(param0: globalAndroid.view.Choreographer.FrameCallback): void;
                    public postCommitCallback(param0: java.lang.Runnable): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module graphics {
                export module drawable {
                    export class AnimationScaleListDrawable extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.graphics.drawable.AnimationScaleListDrawable>;
                        public constructor();
                        public applyTheme(param0: globalAndroid.content.res.Resources.Theme): void;
                        public start(): void;
                        public onStateChange(param0: number[]): boolean;
                        public clearMutated(): void;
                        public inflate(param0: globalAndroid.content.res.Resources, param1: org.xmlpull.v1.XmlPullParser, param2: globalAndroid.util.AttributeSet, param3: globalAndroid.content.res.Resources.Theme): void;
                        public isRunning(): boolean;
                        public stop(): void;
                        public mutate(): globalAndroid.graphics.drawable.Drawable;
                        public setConstantState(param0: globalAndroid.graphics.drawable.DrawableContainer.DrawableContainerState): void;
                    }
                    export module AnimationScaleListDrawable {
                        export class AnimationScaleListState extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.graphics.drawable.AnimationScaleListDrawable.AnimationScaleListState>;
                            public getCurrentDrawableIndexBasedOnScale(): number;
                            public newDrawable(): globalAndroid.graphics.drawable.Drawable;
                            public canApplyTheme(): boolean;
                            public newDrawable(param0: globalAndroid.content.res.Resources): globalAndroid.graphics.drawable.Drawable;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module graphics {
                export module palette {
                    export class ColorCutQuantizer extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.graphics.palette.ColorCutQuantizer>;
                    }
                    export module ColorCutQuantizer {
                        export class Vbox extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.graphics.palette.ColorCutQuantizer.Vbox>;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module graphics {
                export module palette {
                    export class Palette extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.graphics.palette.Palette>;
                        public getSwatches(): java.util.List<com.android.internal.graphics.palette.Palette.Swatch>;
                        public getVibrantColor(param0: number): number;
                        public getMutedColor(param0: number): number;
                        public static generate(param0: globalAndroid.graphics.Bitmap, param1: number): com.android.internal.graphics.palette.Palette;
                        public getColorForTarget(param0: com.android.internal.graphics.palette.Target, param1: number): number;
                        public getLightVibrantColor(param0: number): number;
                        public getDarkMutedSwatch(): com.android.internal.graphics.palette.Palette.Swatch;
                        public getDarkVibrantColor(param0: number): number;
                        public static generateAsync(param0: globalAndroid.graphics.Bitmap, param1: com.android.internal.graphics.palette.Palette.PaletteAsyncListener): globalAndroid.os.AsyncTask<globalAndroid.graphics.Bitmap, java.lang.Void, com.android.internal.graphics.palette.Palette>;
                        public getLightMutedSwatch(): com.android.internal.graphics.palette.Palette.Swatch;
                        public getMutedSwatch(): com.android.internal.graphics.palette.Palette.Swatch;
                        public getLightMutedColor(param0: number): number;
                        public getLightVibrantSwatch(): com.android.internal.graphics.palette.Palette.Swatch;
                        public static from(param0: globalAndroid.graphics.Bitmap): com.android.internal.graphics.palette.Palette.Builder;
                        public static from(param0: java.util.List<com.android.internal.graphics.palette.Palette.Swatch>): com.android.internal.graphics.palette.Palette;
                        public getDominantColor(param0: number): number;
                        public getSwatchForTarget(param0: com.android.internal.graphics.palette.Target): com.android.internal.graphics.palette.Palette.Swatch;
                        public getDarkVibrantSwatch(): com.android.internal.graphics.palette.Palette.Swatch;
                        public getDarkMutedColor(param0: number): number;
                        public getDominantSwatch(): com.android.internal.graphics.palette.Palette.Swatch;
                        public getVibrantSwatch(): com.android.internal.graphics.palette.Palette.Swatch;
                        public static generate(param0: globalAndroid.graphics.Bitmap): com.android.internal.graphics.palette.Palette;
                        public static generateAsync(param0: globalAndroid.graphics.Bitmap, param1: number, param2: com.android.internal.graphics.palette.Palette.PaletteAsyncListener): globalAndroid.os.AsyncTask<globalAndroid.graphics.Bitmap, java.lang.Void, com.android.internal.graphics.palette.Palette>;
                        public getTargets(): java.util.List<com.android.internal.graphics.palette.Target>;
                    }
                    export module Palette {
                        export class Builder extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.graphics.palette.Palette.Builder>;
                            public constructor(param0: globalAndroid.graphics.Bitmap);
                            public clearTargets(): com.android.internal.graphics.palette.Palette.Builder;
                            public resizeBitmapArea(param0: number): com.android.internal.graphics.palette.Palette.Builder;
                            public clearFilters(): com.android.internal.graphics.palette.Palette.Builder;
                            public clearRegion(): com.android.internal.graphics.palette.Palette.Builder;
                            public resizeBitmapSize(param0: number): com.android.internal.graphics.palette.Palette.Builder;
                            public generate(): com.android.internal.graphics.palette.Palette;
                            public addFilter(param0: com.android.internal.graphics.palette.Palette.Filter): com.android.internal.graphics.palette.Palette.Builder;
                            public constructor(param0: java.util.List<com.android.internal.graphics.palette.Palette.Swatch>);
                            public generate(param0: com.android.internal.graphics.palette.Palette.PaletteAsyncListener): globalAndroid.os.AsyncTask<globalAndroid.graphics.Bitmap, java.lang.Void, com.android.internal.graphics.palette.Palette>;
                            public setRegion(param0: number, param1: number, param2: number, param3: number): com.android.internal.graphics.palette.Palette.Builder;
                            public addTarget(param0: com.android.internal.graphics.palette.Target): com.android.internal.graphics.palette.Palette.Builder;
                            public maximumColorCount(param0: number): com.android.internal.graphics.palette.Palette.Builder;
                        }
                        export class Filter extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.graphics.palette.Palette.Filter>;
                            /**
                             * Constructs a new instance of the com.android.internal.graphics.palette.Palette$Filter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                             */
                            public constructor(implementation: {
                                isAllowed(param0: number, param1: number[]): boolean;
                            });
                            public constructor();
                            public isAllowed(param0: number, param1: number[]): boolean;
                        }
                        export class PaletteAsyncListener extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.graphics.palette.Palette.PaletteAsyncListener>;
                            /**
                             * Constructs a new instance of the com.android.internal.graphics.palette.Palette$PaletteAsyncListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                             */
                            public constructor(implementation: {
                                onGenerated(param0: com.android.internal.graphics.palette.Palette): void;
                            });
                            public constructor();
                            public onGenerated(param0: com.android.internal.graphics.palette.Palette): void;
                        }
                        export class Swatch extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.graphics.palette.Palette.Swatch>;
                            public constructor(param0: number, param1: number);
                            public hashCode(): number;
                            public getPopulation(): number;
                            public getTitleTextColor(): number;
                            public toString(): string;
                            public getHsl(): number[];
                            public equals(param0: any): boolean;
                            public getBodyTextColor(): number;
                            public getRgb(): number;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module graphics {
                export module palette {
                    export class Target extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.graphics.palette.Target>;
                        public static DARK_MUTED: com.android.internal.graphics.palette.Target;
                        public static DARK_VIBRANT: com.android.internal.graphics.palette.Target;
                        public static LIGHT_MUTED: com.android.internal.graphics.palette.Target;
                        public static LIGHT_VIBRANT: com.android.internal.graphics.palette.Target;
                        public static MUTED: com.android.internal.graphics.palette.Target;
                        public static VIBRANT: com.android.internal.graphics.palette.Target;
                        public getMaximumSaturation(): number;
                        public getTargetLightness(): number;
                        public getPopulationWeight(): number;
                        public getLightnessWeight(): number;
                        public getMinimumLightness(): number;
                        public isExclusive(): boolean;
                        public getMinimumSaturation(): number;
                        public getMaximumLightness(): number;
                        public getSaturationWeight(): number;
                        public getTargetSaturation(): number;
                    }
                    export module Target {
                        export class Builder extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.graphics.palette.Target.Builder>;
                            public constructor();
                            public setTargetLightness(param0: number): com.android.internal.graphics.palette.Target.Builder;
                            public setMinimumSaturation(param0: number): com.android.internal.graphics.palette.Target.Builder;
                            public setSaturationWeight(param0: number): com.android.internal.graphics.palette.Target.Builder;
                            public setPopulationWeight(param0: number): com.android.internal.graphics.palette.Target.Builder;
                            public setMaximumLightness(param0: number): com.android.internal.graphics.palette.Target.Builder;
                            public build(): com.android.internal.graphics.palette.Target;
                            public constructor(param0: com.android.internal.graphics.palette.Target);
                            public setMaximumSaturation(param0: number): com.android.internal.graphics.palette.Target.Builder;
                            public setMinimumLightness(param0: number): com.android.internal.graphics.palette.Target.Builder;
                            public setLightnessWeight(param0: number): com.android.internal.graphics.palette.Target.Builder;
                            public setExclusive(param0: boolean): com.android.internal.graphics.palette.Target.Builder;
                            public setTargetSaturation(param0: number): com.android.internal.graphics.palette.Target.Builder;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module hardware {
                export class AmbientDisplayConfiguration extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.hardware.AmbientDisplayConfiguration>;
                    public pulseOnNotificationAvailable(): boolean;
                    public alwaysOnAvailable(): boolean;
                    public available(): boolean;
                    public alwaysOnEnabled(param0: number): boolean;
                    public pulseOnDoubleTapAvailable(): boolean;
                    public constructor(param0: globalAndroid.content.Context);
                    public ambientDisplayComponent(): string;
                    public pulseOnPickupAvailable(): boolean;
                    public enabled(param0: number): boolean;
                    public pulseOnDoubleTapEnabled(param0: number): boolean;
                    public doubleTapSensorType(): string;
                    public pulseOnNotificationEnabled(param0: number): boolean;
                    public pulseOnPickupEnabled(param0: number): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module http {
                export class HttpDateTime extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.http.HttpDateTime>;
                    public constructor();
                    public static parse(param0: string): number;
                }
                export module HttpDateTime {
                    export class TimeOfDay extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.http.HttpDateTime.TimeOfDay>;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module inputmethod {
                export class IInputContentUriToken extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.inputmethod.IInputContentUriToken>;
                    /**
                     * Constructs a new instance of the com.android.internal.inputmethod.IInputContentUriToken interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        release(): void;
                        take(): void;
                    });
                    public constructor();
                    public take(): void;
                    public release(): void;
                }
                export module IInputContentUriToken {
                    export abstract class Stub implements com.android.internal.inputmethod.IInputContentUriToken {
                        public static class: java.lang.Class<com.android.internal.inputmethod.IInputContentUriToken.Stub>;
                        public constructor();
                        public take(): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.inputmethod.IInputContentUriToken;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public release(): void;
                        public asBinder(): globalAndroid.os.IBinder;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.inputmethod.IInputContentUriToken {
                            public static class: java.lang.Class<com.android.internal.inputmethod.IInputContentUriToken.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public take(): void;
                            public release(): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module inputmethod {
                export class InputMethodSubtypeHandle extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.inputmethod.InputMethodSubtypeHandle>;
                    public equals(param0: any): boolean;
                    public toString(): string;
                    public constructor(param0: globalAndroid.view.inputmethod.InputMethodInfo, param1: globalAndroid.view.inputmethod.InputMethodSubtype);
                    public constructor(param0: string, param1: number);
                    public getInputMethodId(): string;
                    public getSubtypeId(): number;
                    public hashCode(): number;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module inputmethod {
                export class InputMethodSubtypeSwitchingController extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.inputmethod.InputMethodSubtypeSwitchingController>;
                    public onUserActionLocked(param0: globalAndroid.view.inputmethod.InputMethodInfo, param1: globalAndroid.view.inputmethod.InputMethodSubtype): void;
                    public static createInstanceLocked(param0: com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings, param1: globalAndroid.content.Context): com.android.internal.inputmethod.InputMethodSubtypeSwitchingController;
                    public getNextInputMethodLocked(param0: boolean, param1: globalAndroid.view.inputmethod.InputMethodInfo, param2: globalAndroid.view.inputmethod.InputMethodSubtype, param3: boolean): com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.ImeSubtypeListItem;
                    public resetCircularListLocked(param0: globalAndroid.content.Context): void;
                    public getSortedInputMethodAndSubtypeListLocked(param0: boolean, param1: boolean): java.util.List<com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.ImeSubtypeListItem>;
                    public dump(param0: globalAndroid.util.Printer): void;
                }
                export module InputMethodSubtypeSwitchingController {
                    export class ControllerImpl extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.ControllerImpl>;
                        public onUserActionLocked(param0: globalAndroid.view.inputmethod.InputMethodInfo, param1: globalAndroid.view.inputmethod.InputMethodSubtype): void;
                        public dump(param0: globalAndroid.util.Printer): void;
                        public static createFrom(param0: com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.ControllerImpl, param1: java.util.List<com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.ImeSubtypeListItem>): com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.ControllerImpl;
                        public getNextInputMethod(param0: boolean, param1: globalAndroid.view.inputmethod.InputMethodInfo, param2: globalAndroid.view.inputmethod.InputMethodSubtype, param3: boolean): com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.ImeSubtypeListItem;
                    }
                    export class DynamicRotationList extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.DynamicRotationList>;
                        public dump(param0: globalAndroid.util.Printer, param1: string): void;
                        public onUserAction(param0: globalAndroid.view.inputmethod.InputMethodInfo, param1: globalAndroid.view.inputmethod.InputMethodSubtype): void;
                        public getNextInputMethodLocked(param0: boolean, param1: globalAndroid.view.inputmethod.InputMethodInfo, param2: globalAndroid.view.inputmethod.InputMethodSubtype, param3: boolean): com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.ImeSubtypeListItem;
                    }
                    export class ImeSubtypeListItem extends java.lang.Comparable<com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.ImeSubtypeListItem> {
                        public static class: java.lang.Class<com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.ImeSubtypeListItem>;
                        public mImeName: string;
                        public mImi: globalAndroid.view.inputmethod.InputMethodInfo;
                        public mIsSystemLanguage: boolean;
                        public mIsSystemLocale: boolean;
                        public mSubtypeId: number;
                        public mSubtypeName: string;
                        public equals(param0: any): boolean;
                        public compareTo(param0: com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.ImeSubtypeListItem): number;
                        public toString(): string;
                        public constructor(param0: string, param1: string, param2: globalAndroid.view.inputmethod.InputMethodInfo, param3: number, param4: string, param5: string);
                    }
                    export class InputMethodAndSubtypeList extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.InputMethodAndSubtypeList>;
                        public getSortedInputMethodAndSubtypeList(param0: boolean, param1: boolean): java.util.List<com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.ImeSubtypeListItem>;
                        public constructor(param0: globalAndroid.content.Context, param1: com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings);
                    }
                    export class StaticRotationList extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.StaticRotationList>;
                        public dump(param0: globalAndroid.util.Printer, param1: string): void;
                        public constructor(param0: java.util.List<com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.ImeSubtypeListItem>);
                        public getNextInputMethodLocked(param0: boolean, param1: globalAndroid.view.inputmethod.InputMethodInfo, param2: globalAndroid.view.inputmethod.InputMethodSubtype, param3: boolean): com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.ImeSubtypeListItem;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module inputmethod {
                export class InputMethodUtils extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.inputmethod.InputMethodUtils>;
                    public static DEBUG: boolean;
                    public static NOT_A_SUBTYPE_ID: number;
                    public static SUBTYPE_MODE_ANY: string;
                    public static SUBTYPE_MODE_KEYBOARD: string;
                    public static SUBTYPE_MODE_VOICE: string;
                    public static buildInputMethodsAndSubtypesString(param0: globalAndroid.util.ArrayMap<string, globalAndroid.util.ArraySet<string>>): string;
                    public static getFallbackLocaleForDefaultIme(param0: java.util.ArrayList<globalAndroid.view.inputmethod.InputMethodInfo>, param1: globalAndroid.content.Context): java.util.Locale;
                    public static isValidSubtypeId(param0: globalAndroid.view.inputmethod.InputMethodInfo, param1: number): boolean;
                    public static setNonSelectedSystemImesDisabledUntilUsed(param0: globalAndroid.content.pm.IPackageManager, param1: java.util.List<globalAndroid.view.inputmethod.InputMethodInfo>, param2: number, param3: string): void;
                    public static getMostApplicableDefaultIME(param0: java.util.List<globalAndroid.view.inputmethod.InputMethodInfo>): globalAndroid.view.inputmethod.InputMethodInfo;
                    public static getSystemLocaleFromContext(param0: globalAndroid.content.Context): java.util.Locale;
                    public static constructLocaleFromString(param0: string): java.util.Locale;
                    public static checkIfPackageBelongsToUid(param0: globalAndroid.app.AppOpsManager, param1: number, param2: string): boolean;
                    public static parseInputMethodsAndSubtypesString(param0: string): globalAndroid.util.ArrayMap<string, globalAndroid.util.ArraySet<string>>;
                    public static findLastResortApplicableSubtypeLocked(param0: globalAndroid.content.res.Resources, param1: java.util.List<globalAndroid.view.inputmethod.InputMethodSubtype>, param2: string, param3: string, param4: boolean): globalAndroid.view.inputmethod.InputMethodSubtype;
                    public static getApiCallStack(): string;
                    public static getLanguageFromLocaleString(param0: string): string;
                    public static canAddToLastInputMethod(param0: globalAndroid.view.inputmethod.InputMethodSubtype): boolean;
                    public static containsSubtypeOf(param0: globalAndroid.view.inputmethod.InputMethodInfo, param1: java.util.Locale, param2: boolean, param3: string): boolean;
                    public static getImplicitlyApplicableSubtypesLocked(param0: globalAndroid.content.res.Resources, param1: globalAndroid.view.inputmethod.InputMethodInfo): java.util.ArrayList<globalAndroid.view.inputmethod.InputMethodSubtype>;
                    public static getImeAndSubtypeDisplayName(param0: globalAndroid.content.Context, param1: globalAndroid.view.inputmethod.InputMethodInfo, param2: globalAndroid.view.inputmethod.InputMethodSubtype): string;
                    public static isSystemIme(param0: globalAndroid.view.inputmethod.InputMethodInfo): boolean;
                    public static isSystemImeThatHasSubtypeOf(param0: globalAndroid.view.inputmethod.InputMethodInfo, param1: globalAndroid.content.Context, param2: boolean, param3: java.util.Locale, param4: boolean, param5: string): boolean;
                    public static getOverridingImplicitlyEnabledSubtypes(param0: globalAndroid.view.inputmethod.InputMethodInfo, param1: string): java.util.ArrayList<globalAndroid.view.inputmethod.InputMethodSubtype>;
                    public static getSubtypeIdFromHashCode(param0: globalAndroid.view.inputmethod.InputMethodInfo, param1: number): number;
                    public static getSuitableLocalesForSpellChecker(param0: java.util.Locale): java.util.ArrayList<java.util.Locale>;
                    public static getSubtypes(param0: globalAndroid.view.inputmethod.InputMethodInfo): java.util.ArrayList<globalAndroid.view.inputmethod.InputMethodSubtype>;
                    public static getDefaultEnabledImes(param0: globalAndroid.content.Context, param1: java.util.ArrayList<globalAndroid.view.inputmethod.InputMethodInfo>): java.util.ArrayList<globalAndroid.view.inputmethod.InputMethodInfo>;
                }
                export module InputMethodUtils {
                    export class InputMethodListBuilder extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.inputmethod.InputMethodUtils.InputMethodListBuilder>;
                        public fillAuxiliaryImes(param0: java.util.ArrayList<globalAndroid.view.inputmethod.InputMethodInfo>, param1: globalAndroid.content.Context): com.android.internal.inputmethod.InputMethodUtils.InputMethodListBuilder;
                        public isEmpty(): boolean;
                        public fillImes(param0: java.util.ArrayList<globalAndroid.view.inputmethod.InputMethodInfo>, param1: globalAndroid.content.Context, param2: boolean, param3: java.util.Locale, param4: boolean, param5: string): com.android.internal.inputmethod.InputMethodUtils.InputMethodListBuilder;
                        public build(): java.util.ArrayList<globalAndroid.view.inputmethod.InputMethodInfo>;
                    }
                    export class InputMethodSettings extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings>;
                        public isSubtypeSelected(): boolean;
                        public constructor(param0: globalAndroid.content.res.Resources, param1: globalAndroid.content.ContentResolver, param2: java.util.HashMap<string, globalAndroid.view.inputmethod.InputMethodInfo>, param3: java.util.ArrayList<globalAndroid.view.inputmethod.InputMethodInfo>, param4: number, param5: boolean);
                        public dumpLocked(param0: globalAndroid.util.Printer, param1: string): void;
                        public isCurrentProfile(param0: number): boolean;
                        public isShowImeWithHardKeyboardEnabled(): boolean;
                        public getEnabledInputMethodSubtypeListLocked(param0: globalAndroid.view.inputmethod.InputMethodInfo): java.util.List<globalAndroid.view.inputmethod.InputMethodSubtype>;
                        public appendAndPutEnabledInputMethodLocked(param0: string, param1: boolean): void;
                        public getSelectedInputMethod(): string;
                        public buildAndPutEnabledInputMethodsStrRemovingIdLocked(param0: java.lang.StringBuilder, param1: java.util.List<globalAndroid.util.Pair<string, java.util.ArrayList<string>>>, param2: string): boolean;
                        public putSelectedInputMethod(param0: string): void;
                        public saveCurrentInputMethodAndSubtypeToHistory(param0: string, param1: globalAndroid.view.inputmethod.InputMethodSubtype): void;
                        public setShowImeWithHardKeyboard(param0: boolean): void;
                        public getExplicitlyOrImplicitlyEnabledInputMethodsAndSubtypeListLocked(param0: globalAndroid.content.Context): java.util.HashMap<globalAndroid.view.inputmethod.InputMethodInfo, java.util.List<globalAndroid.view.inputmethod.InputMethodSubtype>>;
                        public switchCurrentUser(param0: number, param1: boolean): void;
                        public static buildInputMethodsSettingString(param0: java.util.List<globalAndroid.util.Pair<string, java.util.ArrayList<string>>>): string;
                        public putSelectedSubtype(param0: number): void;
                        public getSelectedInputMethodSubtypeId(param0: string): number;
                        public static buildInputMethodsAndSubtypeList(param0: string, param1: globalAndroid.text.TextUtils.SimpleStringSplitter, param2: globalAndroid.text.TextUtils.SimpleStringSplitter): java.util.List<globalAndroid.util.Pair<string, java.util.ArrayList<string>>>;
                        public getEnabledInputMethodsAndSubtypeListLocked(): java.util.List<globalAndroid.util.Pair<string, java.util.ArrayList<string>>>;
                        public getEnabledInputMethodListLocked(): java.util.ArrayList<globalAndroid.view.inputmethod.InputMethodInfo>;
                        public getEnabledInputMethodSubtypeListLocked(param0: globalAndroid.content.Context, param1: globalAndroid.view.inputmethod.InputMethodInfo, param2: boolean): java.util.List<globalAndroid.view.inputmethod.InputMethodSubtype>;
                        public getLastInputMethodAndSubtypeLocked(): globalAndroid.util.Pair<string, string>;
                        public getCurrentUserId(): number;
                        public setCurrentProfileIds(param0: number[]): void;
                        public getEnabledInputMethodsStr(): string;
                        public getLastSubtypeForInputMethodLocked(param0: string): string;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module inputmethod {
                export class LocaleUtils extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.inputmethod.LocaleUtils>;
                    public static filterByLanguage(param0: java.util.List<any>, param1: com.android.internal.inputmethod.LocaleUtils.LocaleExtractor<any>, param2: any, param3: java.util.ArrayList<any>): void;
                    public constructor();
                }
                export module LocaleUtils {
                    export class LocaleExtractor<T> extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.inputmethod.LocaleUtils.LocaleExtractor<any>>;
                        /**
                         * Constructs a new instance of the com.android.internal.inputmethod.LocaleUtils$LocaleExtractor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            get(param0: T): java.util.Locale;
                        });
                        public constructor();
                        public get(param0: T): java.util.Locale;
                    }
                    export class ScoreEntry extends java.lang.Comparable<com.android.internal.inputmethod.LocaleUtils.ScoreEntry> {
                        public static class: java.lang.Class<com.android.internal.inputmethod.LocaleUtils.ScoreEntry>;
                        public mIndex: number;
                        public mScore: number[];
                        public updateIfBetter(param0: number[], param1: number): void;
                        public compareTo(param0: com.android.internal.inputmethod.LocaleUtils.ScoreEntry): number;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module location {
                export class GpsNetInitiatedHandler extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.location.GpsNetInitiatedHandler>;
                    public static ACTION_NI_VERIFY: string;
                    public static GPS_ENC_NONE: number;
                    public static GPS_ENC_SUPL_GSM_DEFAULT: number;
                    public static GPS_ENC_SUPL_UCS2: number;
                    public static GPS_ENC_SUPL_UTF8: number;
                    public static GPS_ENC_UNKNOWN: number;
                    public static GPS_NI_NEED_NOTIFY: number;
                    public static GPS_NI_NEED_VERIFY: number;
                    public static GPS_NI_PRIVACY_OVERRIDE: number;
                    public static GPS_NI_RESPONSE_ACCEPT: number;
                    public static GPS_NI_RESPONSE_DENY: number;
                    public static GPS_NI_RESPONSE_IGNORE: number;
                    public static GPS_NI_RESPONSE_NORESP: number;
                    public static GPS_NI_TYPE_EMERGENCY_SUPL: number;
                    public static GPS_NI_TYPE_UMTS_CTRL_PLANE: number;
                    public static GPS_NI_TYPE_UMTS_SUPL: number;
                    public static GPS_NI_TYPE_VOICE: number;
                    public static NI_EXTRA_CMD_NOTIF_ID: string;
                    public static NI_EXTRA_CMD_RESPONSE: string;
                    public static NI_INTENT_KEY_DEFAULT_RESPONSE: string;
                    public static NI_INTENT_KEY_MESSAGE: string;
                    public static NI_INTENT_KEY_NOTIF_ID: string;
                    public static NI_INTENT_KEY_TIMEOUT: string;
                    public static NI_INTENT_KEY_TITLE: string;
                    public static NI_RESPONSE_EXTRA_CMD: string;
                    public static getDialogTitle(param0: com.android.internal.location.GpsNetInitiatedHandler.GpsNiNotification, param1: globalAndroid.content.Context): string;
                    public getInEmergency(): boolean;
                    public setSuplEsEnabled(param0: boolean): void;
                    public getSuplEsEnabled(): boolean;
                    public getLocationEnabled(): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.location.INetInitiatedListener, param2: boolean);
                    public setInEmergency(param0: boolean): void;
                    public updateLocationMode(): void;
                    public handleNiNotification(param0: com.android.internal.location.GpsNetInitiatedHandler.GpsNiNotification): void;
                }
                export module GpsNetInitiatedHandler {
                    export class GpsNiNotification extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.location.GpsNetInitiatedHandler.GpsNiNotification>;
                        public defaultResponse: number;
                        public needNotify: boolean;
                        public needVerify: boolean;
                        public niType: number;
                        public notificationId: number;
                        public privacyOverride: boolean;
                        public requestorId: string;
                        public requestorIdEncoding: number;
                        public text: string;
                        public textEncoding: number;
                        public timeout: number;
                        public constructor();
                    }
                    export class GpsNiResponse extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.location.GpsNetInitiatedHandler.GpsNiResponse>;
                        public constructor();
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module location {
                export class ILocationProvider extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.location.ILocationProvider>;
                    /**
                     * Constructs a new instance of the com.android.internal.location.ILocationProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        disable(): void;
                        enable(): void;
                        getProperties(): com.android.internal.location.ProviderProperties;
                        getStatus(param0: globalAndroid.os.Bundle): number;
                        getStatusUpdateTime(): number;
                        sendExtraCommand(param0: string, param1: globalAndroid.os.Bundle): boolean;
                        setRequest(param0: com.android.internal.location.ProviderRequest, param1: globalAndroid.os.WorkSource): void;
                    });
                    public constructor();
                    public setRequest(param0: com.android.internal.location.ProviderRequest, param1: globalAndroid.os.WorkSource): void;
                    public getProperties(): com.android.internal.location.ProviderProperties;
                    public sendExtraCommand(param0: string, param1: globalAndroid.os.Bundle): boolean;
                    public disable(): void;
                    public getStatus(param0: globalAndroid.os.Bundle): number;
                    public enable(): void;
                    public getStatusUpdateTime(): number;
                }
                export module ILocationProvider {
                    export abstract class Stub implements com.android.internal.location.ILocationProvider {
                        public static class: java.lang.Class<com.android.internal.location.ILocationProvider.Stub>;
                        public getStatus(param0: globalAndroid.os.Bundle): number;
                        public constructor();
                        public sendExtraCommand(param0: string, param1: globalAndroid.os.Bundle): boolean;
                        public getStatusUpdateTime(): number;
                        public setRequest(param0: com.android.internal.location.ProviderRequest, param1: globalAndroid.os.WorkSource): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.location.ILocationProvider;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public getProperties(): com.android.internal.location.ProviderProperties;
                        public disable(): void;
                        public asBinder(): globalAndroid.os.IBinder;
                        public enable(): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.location.ILocationProvider {
                            public static class: java.lang.Class<com.android.internal.location.ILocationProvider.Stub.Proxy>;
                            public disable(): void;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public getStatus(param0: globalAndroid.os.Bundle): number;
                            public enable(): void;
                            public sendExtraCommand(param0: string, param1: globalAndroid.os.Bundle): boolean;
                            public setRequest(param0: com.android.internal.location.ProviderRequest, param1: globalAndroid.os.WorkSource): void;
                            public getStatusUpdateTime(): number;
                            public getProperties(): com.android.internal.location.ProviderProperties;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module location {
                export class ProviderProperties extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.location.ProviderProperties>;
                    public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.location.ProviderProperties>;
                    public mAccuracy: number;
                    public mHasMonetaryCost: boolean;
                    public mPowerRequirement: number;
                    public mRequiresCell: boolean;
                    public mRequiresNetwork: boolean;
                    public mRequiresSatellite: boolean;
                    public mSupportsAltitude: boolean;
                    public mSupportsBearing: boolean;
                    public mSupportsSpeed: boolean;
                    public describeContents(): number;
                    public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                    public constructor(param0: boolean, param1: boolean, param2: boolean, param3: boolean, param4: boolean, param5: boolean, param6: boolean, param7: number, param8: number);
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module location {
                export class ProviderRequest extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.location.ProviderRequest>;
                    public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.location.ProviderRequest>;
                    public interval: number;
                    public locationRequests: java.util.List<globalAndroid.location.LocationRequest>;
                    public reportLocation: boolean;
                    public toString(): string;
                    public constructor();
                    public describeContents(): number;
                    public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module logging {
                export class AndroidConfig extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.logging.AndroidConfig>;
                    public constructor();
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module logging {
                export class AndroidHandler extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.logging.AndroidHandler>;
                    public publish(param0: java.util.logging.Logger, param1: string, param2: java.util.logging.Level, param3: string): void;
                    public publish(param0: java.util.logging.LogRecord): void;
                    public constructor();
                    public close(): void;
                    public flush(): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module logging {
                export class EventLogTags extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.logging.EventLogTags>;
                    public static SYSUI_ACTION: number;
                    public static SYSUI_COUNT: number;
                    public static SYSUI_HISTOGRAM: number;
                    public static SYSUI_MULTI_ACTION: number;
                    public static SYSUI_VIEW_VISIBILITY: number;
                    public static writeSysuiViewVisibility(param0: number, param1: number): void;
                    public static writeSysuiAction(param0: number, param1: string): void;
                    public static writeSysuiMultiAction(param0: any[]): void;
                    public static writeSysuiCount(param0: string, param1: number): void;
                    public static writeSysuiHistogram(param0: string, param1: number): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module logging {
                export class MetricsLogger extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.logging.MetricsLogger>;
                    public static LOGTAG: number;
                    public static VIEW_UNKNOWN: number;
                    public visible(param0: number): void;
                    public visibility(param0: number, param1: number): void;
                    public static action(param0: globalAndroid.content.Context, param1: number, param2: number): void;
                    public histogram(param0: string, param1: number): void;
                    public static visible(param0: globalAndroid.content.Context, param1: number): void;
                    public action(param0: number): void;
                    public static visibility(param0: globalAndroid.content.Context, param1: number, param2: boolean): void;
                    public count(param0: string, param1: number): void;
                    public static visibility(param0: globalAndroid.content.Context, param1: number, param2: number): void;
                    public static action(param0: globalAndroid.content.Context, param1: number, param2: string): void;
                    public action(param0: number, param1: number): void;
                    public static count(param0: globalAndroid.content.Context, param1: string, param2: number): void;
                    public write(param0: globalAndroid.metrics.LogMaker): void;
                    public hidden(param0: number): void;
                    public static hidden(param0: globalAndroid.content.Context, param1: number): void;
                    public constructor();
                    public static action(param0: globalAndroid.content.Context, param1: number): void;
                    public static action(param0: globalAndroid.content.Context, param1: number, param2: boolean): void;
                    public visibility(param0: number, param1: boolean): void;
                    public static action(param0: globalAndroid.metrics.LogMaker): void;
                    public static histogram(param0: globalAndroid.content.Context, param1: string, param2: number): void;
                    public action(param0: number, param1: boolean): void;
                    public action(param0: number, param1: string): void;
                    public saveLog(param0: any[]): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module logging {
                export module nano {
                    export class MetricsProto extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.logging.nano.MetricsProto>;
                        /**
                         * Constructs a new instance of the com.android.internal.logging.nano.MetricsProto interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {});
                        public constructor();
                    }
                    export module MetricsProto {
                        export class MetricsEvent extends com.android.framework.protobuf.nano.MessageNano {
                            public static class: java.lang.Class<com.android.internal.logging.nano.MetricsProto.MetricsEvent>;
                            public static ABOUT_LEGAL_SETTINGS: number;
                            public static ACCESSIBILITY: number;
                            public static ACCESSIBILITY_CAPTION_PROPERTIES: number;
                            public static ACCESSIBILITY_FONT_SIZE: number;
                            public static ACCESSIBILITY_SCREEN_MAGNIFICATION_SETTINGS: number;
                            public static ACCESSIBILITY_SERVICE: number;
                            public static ACCESSIBILITY_TOGGLE_AUTOCLICK: number;
                            public static ACCESSIBILITY_TOGGLE_DALTONIZER: number;
                            public static ACCESSIBILITY_TOGGLE_GLOBAL_GESTURE: number;
                            public static ACCESSIBILITY_TOGGLE_SCREEN_MAGNIFICATION: number;
                            public static ACCOUNT: number;
                            public static ACCOUNTS_ACCOUNT_SYNC: number;
                            public static ACCOUNTS_CHOOSE_ACCOUNT_ACTIVITY: number;
                            public static ACCOUNTS_MANAGE_ACCOUNTS: number;
                            public static ACCOUNTS_WORK_PROFILE_SETTINGS: number;
                            public static ACTION_ACTIVITY_CHOOSER_PICKED_APP_TARGET: number;
                            public static ACTION_ACTIVITY_CHOOSER_PICKED_SERVICE_TARGET: number;
                            public static ACTION_ACTIVITY_CHOOSER_PICKED_STANDARD_TARGET: number;
                            public static ACTION_ACTIVITY_CHOOSER_SHOWN: number;
                            public static ACTION_ADD_EMERGENCY_CONTACT: number;
                            public static ACTION_AIRPLANE_TOGGLE: number;
                            public static ACTION_AMBIENT_DISPLAY: number;
                            public static ACTION_AMBIENT_GESTURE: number;
                            public static ACTION_APPOP_DENIED_ACCESS_NOTIFICATIONS: number;
                            public static ACTION_APPOP_DENIED_REQUEST_INSTALL_PACKAGES: number;
                            public static ACTION_APPOP_DENIED_SYSTEM_ALERT_WINDOW: number;
                            public static ACTION_APPOP_DENIED_WRITE_SETTINGS: number;
                            public static ACTION_APPOP_GRANT_ACCESS_NOTIFICATIONS: number;
                            public static ACTION_APPOP_GRANT_REQUEST_INSTALL_PACKAGES: number;
                            public static ACTION_APPOP_GRANT_SYSTEM_ALERT_WINDOW: number;
                            public static ACTION_APPOP_GRANT_WRITE_SETTINGS: number;
                            public static ACTION_APPOP_REQUEST_ACCESS_NOTIFICATIONS: number;
                            public static ACTION_APPOP_REQUEST_REQUEST_INSTALL_PACKAGES: number;
                            public static ACTION_APPOP_REQUEST_SYSTEM_ALERT_WINDOW: number;
                            public static ACTION_APPOP_REQUEST_WRITE_SETTINGS: number;
                            public static ACTION_APPOP_REVOKE_ACCESS_NOTIFICATIONS: number;
                            public static ACTION_APPOP_REVOKE_REQUEST_INSTALL_PACKAGES: number;
                            public static ACTION_APPOP_REVOKE_SYSTEM_ALERT_WINDOW: number;
                            public static ACTION_APPOP_REVOKE_WRITE_SETTINGS: number;
                            public static ACTION_APP_ANR: number;
                            public static ACTION_APP_CRASH: number;
                            public static ACTION_APP_DISAMBIG_ALWAYS: number;
                            public static ACTION_APP_DISAMBIG_JUST_ONCE: number;
                            public static ACTION_APP_DISAMBIG_TAP: number;
                            public static ACTION_APP_FORCE_STOP: number;
                            public static ACTION_APP_NOTE_SETTINGS: number;
                            public static ACTION_ASSIST_LONG_PRESS: number;
                            public static ACTION_BAN_APP_NOTES: number;
                            public static ACTION_BLUETOOTH_FILES: number;
                            public static ACTION_BLUETOOTH_RENAME: number;
                            public static ACTION_BLUETOOTH_SCAN: number;
                            public static ACTION_BLUETOOTH_TOGGLE: number;
                            public static ACTION_BRIGHTNESS: number;
                            public static ACTION_BRIGHTNESS_AUTO: number;
                            public static ACTION_BRIGHTNESS_FOR_VR: number;
                            public static ACTION_BUGREPORT_DETAILS_CANCELED: number;
                            public static ACTION_BUGREPORT_DETAILS_DESCRIPTION_CHANGED: number;
                            public static ACTION_BUGREPORT_DETAILS_NAME_CHANGED: number;
                            public static ACTION_BUGREPORT_DETAILS_SAVED: number;
                            public static ACTION_BUGREPORT_DETAILS_TITLE_CHANGED: number;
                            public static ACTION_BUGREPORT_FROM_POWER_MENU_FULL: number;
                            public static ACTION_BUGREPORT_FROM_POWER_MENU_INTERACTIVE: number;
                            public static ACTION_BUGREPORT_FROM_SETTINGS_FULL: number;
                            public static ACTION_BUGREPORT_FROM_SETTINGS_INTERACTIVE: number;
                            public static ACTION_BUGREPORT_NOTIFICATION_ACTION_CANCEL: number;
                            public static ACTION_BUGREPORT_NOTIFICATION_ACTION_DETAILS: number;
                            public static ACTION_BUGREPORT_NOTIFICATION_ACTION_SCREENSHOT: number;
                            public static ACTION_BUGREPORT_NOTIFICATION_ACTION_SHARE: number;
                            public static ACTION_CALL_EMERGENCY_CONTACT: number;
                            public static ACTION_CELL_DATA_TOGGLE: number;
                            public static ACTION_CLICK_SETTINGS_SEARCH_INLINE_RESULT: number;
                            public static ACTION_CLICK_SETTINGS_SEARCH_RESULT: number;
                            public static ACTION_CLICK_SETTINGS_SEARCH_SAVED_QUERY: number;
                            public static ACTION_DATA_SAVER_BLACKLIST: number;
                            public static ACTION_DATA_SAVER_MODE: number;
                            public static ACTION_DATA_SAVER_WHITELIST: number;
                            public static ACTION_DEFAULT_SMS_APP_CHANGED: number;
                            public static ACTION_DELETE_EMERGENCY_CONTACT: number;
                            public static ACTION_DELETION_APPS_COLLAPSED: number;
                            public static ACTION_DELETION_DOWNLOADS_COLLAPSED: number;
                            public static ACTION_DELETION_HELPER_APPS_DELETION_FAIL: number;
                            public static ACTION_DELETION_HELPER_CANCEL: number;
                            public static ACTION_DELETION_HELPER_CLEAR: number;
                            public static ACTION_DELETION_HELPER_DOWNLOADS_DELETION_FAIL: number;
                            public static ACTION_DELETION_HELPER_PHOTOS_VIDEOS_DELETION_FAIL: number;
                            public static ACTION_DELETION_HELPER_REMOVE_CANCEL: number;
                            public static ACTION_DELETION_HELPER_REMOVE_CONFIRM: number;
                            public static ACTION_DELETION_SELECTION_ALL_APPS: number;
                            public static ACTION_DELETION_SELECTION_APP_OFF: number;
                            public static ACTION_DELETION_SELECTION_APP_ON: number;
                            public static ACTION_DELETION_SELECTION_DOWNLOADS: number;
                            public static ACTION_DELETION_SELECTION_PHOTOS: number;
                            public static ACTION_DISMISS_ALL_NOTES: number;
                            public static ACTION_DOUBLE_TAP_POWER_CAMERA_GESTURE: number;
                            public static ACTION_EDIT_EMERGENCY_INFO: number;
                            public static ACTION_EDIT_EMERGENCY_INFO_FIELD: number;
                            public static ACTION_EMERGENCY_CALL: number;
                            public static ACTION_FINGERPRINT_AUTH: number;
                            public static ACTION_FINGERPRINT_DELETE: number;
                            public static ACTION_FINGERPRINT_ENROLL: number;
                            public static ACTION_FINGERPRINT_RENAME: number;
                            public static ACTION_GENERIC_PACKAGE: number;
                            public static ACTION_GET_CONTACT: number;
                            public static ACTION_HIDE_APP_DISAMBIG_APP_FEATURED: number;
                            public static ACTION_HIDE_APP_DISAMBIG_NONE_FEATURED: number;
                            public static ACTION_HIDE_SETTINGS_SUGGESTION: number;
                            public static ACTION_INSTANT_APP_RESOLUTION_PHASE_ONE: number;
                            public static ACTION_INSTANT_APP_RESOLUTION_PHASE_TWO: number;
                            public static ACTION_LEAVE_SEARCH_RESULT_WITHOUT_QUERY: number;
                            public static ACTION_LOCK_BECAUSE_SIM_REMOVED: number;
                            public static ACTION_LS_CAMERA: number;
                            public static ACTION_LS_DIALER: number;
                            public static ACTION_LS_HINT: number;
                            public static ACTION_LS_LOCK: number;
                            public static ACTION_LS_NOTE: number;
                            public static ACTION_LS_QS: number;
                            public static ACTION_LS_SHADE: number;
                            public static ACTION_LS_UNLOCK: number;
                            public static ACTION_MODIFY_IMPORTANCE_SLIDER: number;
                            public static ACTION_NAV_BUTTON_EVENT: number;
                            public static ACTION_NOTE_CONTROLS: number;
                            public static ACTION_NOTE_INFO: number;
                            public static ACTION_NOTIFICATION_CHANNEL: number;
                            public static ACTION_NOTIFICATION_CHANNEL_GROUP: number;
                            public static ACTION_NOTIFICATION_EXPANDER: number;
                            public static ACTION_NOTIFICATION_GESTURE_EXPANDER: number;
                            public static ACTION_NOTIFICATION_GROUP_EXPANDER: number;
                            public static ACTION_NOTIFICATION_GROUP_GESTURE_EXPANDER: number;
                            public static ACTION_OVERVIEW_PAGE: number;
                            public static ACTION_OVERVIEW_SELECT: number;
                            public static ACTION_PERMISSION_DENIED_ACCESS_COARSE_LOCATION: number;
                            public static ACTION_PERMISSION_DENIED_ACCESS_FINE_LOCATION: number;
                            public static ACTION_PERMISSION_DENIED_ADD_VOICEMAIL: number;
                            public static ACTION_PERMISSION_DENIED_BODY_SENSORS: number;
                            public static ACTION_PERMISSION_DENIED_CALL_PHONE: number;
                            public static ACTION_PERMISSION_DENIED_CAMERA: number;
                            public static ACTION_PERMISSION_DENIED_GET_ACCOUNTS: number;
                            public static ACTION_PERMISSION_DENIED_PROCESS_OUTGOING_CALLS: number;
                            public static ACTION_PERMISSION_DENIED_READ_CALENDAR: number;
                            public static ACTION_PERMISSION_DENIED_READ_CALL_LOG: number;
                            public static ACTION_PERMISSION_DENIED_READ_CELL_BROADCASTS: number;
                            public static ACTION_PERMISSION_DENIED_READ_CONTACTS: number;
                            public static ACTION_PERMISSION_DENIED_READ_EXTERNAL_STORAGE: number;
                            public static ACTION_PERMISSION_DENIED_READ_PHONE_NUMBERS: number;
                            public static ACTION_PERMISSION_DENIED_READ_PHONE_STATE: number;
                            public static ACTION_PERMISSION_DENIED_READ_SMS: number;
                            public static ACTION_PERMISSION_DENIED_RECEIVE_MMS: number;
                            public static ACTION_PERMISSION_DENIED_RECEIVE_SMS: number;
                            public static ACTION_PERMISSION_DENIED_RECEIVE_WAP_PUSH: number;
                            public static ACTION_PERMISSION_DENIED_RECORD_AUDIO: number;
                            public static ACTION_PERMISSION_DENIED_SEND_SMS: number;
                            public static ACTION_PERMISSION_DENIED_UNKNOWN: number;
                            public static ACTION_PERMISSION_DENIED_USE_SIP: number;
                            public static ACTION_PERMISSION_DENIED_WRITE_CALENDAR: number;
                            public static ACTION_PERMISSION_DENIED_WRITE_CALL_LOG: number;
                            public static ACTION_PERMISSION_DENIED_WRITE_CONTACTS: number;
                            public static ACTION_PERMISSION_DENIED_WRITE_EXTERNAL_STORAGE: number;
                            public static ACTION_PERMISSION_GRANT_ACCESS_COARSE_LOCATION: number;
                            public static ACTION_PERMISSION_GRANT_ACCESS_FINE_LOCATION: number;
                            public static ACTION_PERMISSION_GRANT_ADD_VOICEMAIL: number;
                            public static ACTION_PERMISSION_GRANT_BODY_SENSORS: number;
                            public static ACTION_PERMISSION_GRANT_CALL_PHONE: number;
                            public static ACTION_PERMISSION_GRANT_CAMERA: number;
                            public static ACTION_PERMISSION_GRANT_GET_ACCOUNTS: number;
                            public static ACTION_PERMISSION_GRANT_PROCESS_OUTGOING_CALLS: number;
                            public static ACTION_PERMISSION_GRANT_READ_CALENDAR: number;
                            public static ACTION_PERMISSION_GRANT_READ_CALL_LOG: number;
                            public static ACTION_PERMISSION_GRANT_READ_CELL_BROADCASTS: number;
                            public static ACTION_PERMISSION_GRANT_READ_CONTACTS: number;
                            public static ACTION_PERMISSION_GRANT_READ_EXTERNAL_STORAGE: number;
                            public static ACTION_PERMISSION_GRANT_READ_PHONE_NUMBERS: number;
                            public static ACTION_PERMISSION_GRANT_READ_PHONE_STATE: number;
                            public static ACTION_PERMISSION_GRANT_READ_SMS: number;
                            public static ACTION_PERMISSION_GRANT_RECEIVE_MMS: number;
                            public static ACTION_PERMISSION_GRANT_RECEIVE_SMS: number;
                            public static ACTION_PERMISSION_GRANT_RECEIVE_WAP_PUSH: number;
                            public static ACTION_PERMISSION_GRANT_RECORD_AUDIO: number;
                            public static ACTION_PERMISSION_GRANT_SEND_SMS: number;
                            public static ACTION_PERMISSION_GRANT_UNKNOWN: number;
                            public static ACTION_PERMISSION_GRANT_USE_SIP: number;
                            public static ACTION_PERMISSION_GRANT_WRITE_CALENDAR: number;
                            public static ACTION_PERMISSION_GRANT_WRITE_CALL_LOG: number;
                            public static ACTION_PERMISSION_GRANT_WRITE_CONTACTS: number;
                            public static ACTION_PERMISSION_GRANT_WRITE_EXTERNAL_STORAGE: number;
                            public static ACTION_PERMISSION_REQUEST_ACCESS_COARSE_LOCATION: number;
                            public static ACTION_PERMISSION_REQUEST_ACCESS_FINE_LOCATION: number;
                            public static ACTION_PERMISSION_REQUEST_ADD_VOICEMAIL: number;
                            public static ACTION_PERMISSION_REQUEST_BODY_SENSORS: number;
                            public static ACTION_PERMISSION_REQUEST_CALL_PHONE: number;
                            public static ACTION_PERMISSION_REQUEST_CAMERA: number;
                            public static ACTION_PERMISSION_REQUEST_GET_ACCOUNTS: number;
                            public static ACTION_PERMISSION_REQUEST_PROCESS_OUTGOING_CALLS: number;
                            public static ACTION_PERMISSION_REQUEST_READ_CALENDAR: number;
                            public static ACTION_PERMISSION_REQUEST_READ_CALL_LOG: number;
                            public static ACTION_PERMISSION_REQUEST_READ_CELL_BROADCASTS: number;
                            public static ACTION_PERMISSION_REQUEST_READ_CONTACTS: number;
                            public static ACTION_PERMISSION_REQUEST_READ_EXTERNAL_STORAGE: number;
                            public static ACTION_PERMISSION_REQUEST_READ_PHONE_NUMBERS: number;
                            public static ACTION_PERMISSION_REQUEST_READ_PHONE_STATE: number;
                            public static ACTION_PERMISSION_REQUEST_READ_SMS: number;
                            public static ACTION_PERMISSION_REQUEST_RECEIVE_MMS: number;
                            public static ACTION_PERMISSION_REQUEST_RECEIVE_SMS: number;
                            public static ACTION_PERMISSION_REQUEST_RECEIVE_WAP_PUSH: number;
                            public static ACTION_PERMISSION_REQUEST_RECORD_AUDIO: number;
                            public static ACTION_PERMISSION_REQUEST_SEND_SMS: number;
                            public static ACTION_PERMISSION_REQUEST_UNKNOWN: number;
                            public static ACTION_PERMISSION_REQUEST_USE_SIP: number;
                            public static ACTION_PERMISSION_REQUEST_WRITE_CALENDAR: number;
                            public static ACTION_PERMISSION_REQUEST_WRITE_CALL_LOG: number;
                            public static ACTION_PERMISSION_REQUEST_WRITE_CONTACTS: number;
                            public static ACTION_PERMISSION_REQUEST_WRITE_EXTERNAL_STORAGE: number;
                            public static ACTION_PERMISSION_REVOKE_ACCESS_COARSE_LOCATION: number;
                            public static ACTION_PERMISSION_REVOKE_ACCESS_FINE_LOCATION: number;
                            public static ACTION_PERMISSION_REVOKE_ADD_VOICEMAIL: number;
                            public static ACTION_PERMISSION_REVOKE_BODY_SENSORS: number;
                            public static ACTION_PERMISSION_REVOKE_CALL_PHONE: number;
                            public static ACTION_PERMISSION_REVOKE_CAMERA: number;
                            public static ACTION_PERMISSION_REVOKE_GET_ACCOUNTS: number;
                            public static ACTION_PERMISSION_REVOKE_PROCESS_OUTGOING_CALLS: number;
                            public static ACTION_PERMISSION_REVOKE_READ_CALENDAR: number;
                            public static ACTION_PERMISSION_REVOKE_READ_CALL_LOG: number;
                            public static ACTION_PERMISSION_REVOKE_READ_CELL_BROADCASTS: number;
                            public static ACTION_PERMISSION_REVOKE_READ_CONTACTS: number;
                            public static ACTION_PERMISSION_REVOKE_READ_EXTERNAL_STORAGE: number;
                            public static ACTION_PERMISSION_REVOKE_READ_PHONE_NUMBERS: number;
                            public static ACTION_PERMISSION_REVOKE_READ_PHONE_STATE: number;
                            public static ACTION_PERMISSION_REVOKE_READ_SMS: number;
                            public static ACTION_PERMISSION_REVOKE_RECEIVE_MMS: number;
                            public static ACTION_PERMISSION_REVOKE_RECEIVE_SMS: number;
                            public static ACTION_PERMISSION_REVOKE_RECEIVE_WAP_PUSH: number;
                            public static ACTION_PERMISSION_REVOKE_RECORD_AUDIO: number;
                            public static ACTION_PERMISSION_REVOKE_SEND_SMS: number;
                            public static ACTION_PERMISSION_REVOKE_UNKNOWN: number;
                            public static ACTION_PERMISSION_REVOKE_USE_SIP: number;
                            public static ACTION_PERMISSION_REVOKE_WRITE_CALENDAR: number;
                            public static ACTION_PERMISSION_REVOKE_WRITE_CALL_LOG: number;
                            public static ACTION_PERMISSION_REVOKE_WRITE_CONTACTS: number;
                            public static ACTION_PERMISSION_REVOKE_WRITE_EXTERNAL_STORAGE: number;
                            public static ACTION_PHONE_EXISTS: number;
                            public static ACTION_PICTURE_IN_PICTURE_ASPECT_RATIO_CHANGED: number;
                            public static ACTION_PICTURE_IN_PICTURE_DISMISSED: number;
                            public static ACTION_PICTURE_IN_PICTURE_ENTERED: number;
                            public static ACTION_PICTURE_IN_PICTURE_EXPANDED_TO_FULLSCREEN: number;
                            public static ACTION_PICTURE_IN_PICTURE_MENU: number;
                            public static ACTION_PICTURE_IN_PICTURE_MINIMIZED: number;
                            public static ACTION_PRINT: number;
                            public static ACTION_PRINTER_SEARCH: number;
                            public static ACTION_PRINTER_SELECT_ALL: number;
                            public static ACTION_PRINTER_SELECT_DROPDOWN: number;
                            public static ACTION_PRINT_JOB_OPTIONS: number;
                            public static ACTION_PRINT_RECOMMENDED_SERVICE_INSTALL: number;
                            public static ACTION_PRINT_SERVICE_ADD: number;
                            public static ACTION_PRINT_SERVICE_TOGGLE: number;
                            public static ACTION_QS_CLICK: number;
                            public static ACTION_QS_COLLAPSED_SETTINGS_LAUNCH: number;
                            public static ACTION_QS_DATE: number;
                            public static ACTION_QS_EDIT_ADD: number;
                            public static ACTION_QS_EDIT_ADD_SPEC: number;
                            public static ACTION_QS_EDIT_MOVE: number;
                            public static ACTION_QS_EDIT_MOVE_SPEC: number;
                            public static ACTION_QS_EDIT_REMOVE: number;
                            public static ACTION_QS_EDIT_REMOVE_SPEC: number;
                            public static ACTION_QS_EDIT_RESET: number;
                            public static ACTION_QS_EXPANDED_SETTINGS_LAUNCH: number;
                            public static ACTION_QS_LONG_PRESS: number;
                            public static ACTION_QS_MORE_SETTINGS: number;
                            public static ACTION_QS_SECONDARY_CLICK: number;
                            public static ACTION_REMOTE_INPUT_CLOSE: number;
                            public static ACTION_REMOTE_INPUT_FAIL: number;
                            public static ACTION_REMOTE_INPUT_OPEN: number;
                            public static ACTION_REMOTE_INPUT_SEND: number;
                            public static ACTION_REVEAL_GEAR: number;
                            public static ACTION_RINGER_MODE: number;
                            public static ACTION_ROTATION_LOCK: number;
                            public static ACTION_SAVE_IMPORTANCE: number;
                            public static ACTION_SCOPED_DIRECTORY_ACCESS_ALREADY_DENIED_BY_FOLDER: number;
                            public static ACTION_SCOPED_DIRECTORY_ACCESS_ALREADY_DENIED_BY_PACKAGE: number;
                            public static ACTION_SCOPED_DIRECTORY_ACCESS_ALREADY_GRANTED_BY_FOLDER: number;
                            public static ACTION_SCOPED_DIRECTORY_ACCESS_ALREADY_GRANTED_BY_PACKAGE: number;
                            public static ACTION_SCOPED_DIRECTORY_ACCESS_DENIED_AND_PERSIST_BY_FOLDER: number;
                            public static ACTION_SCOPED_DIRECTORY_ACCESS_DENIED_AND_PERSIST_BY_PACKAGE: number;
                            public static ACTION_SCOPED_DIRECTORY_ACCESS_DENIED_BY_FOLDER: number;
                            public static ACTION_SCOPED_DIRECTORY_ACCESS_DENIED_BY_PACKAGE: number;
                            public static ACTION_SCOPED_DIRECTORY_ACCESS_GRANTED_BY_FOLDER: number;
                            public static ACTION_SCOPED_DIRECTORY_ACCESS_GRANTED_BY_PACKAGE: number;
                            public static ACTION_SEARCH_RESULTS: number;
                            public static ACTION_SELECT_SUMMARY: number;
                            public static ACTION_SELECT_SUPPORT_FRAGMENT: number;
                            public static ACTION_SETTINGS_ADVANCED_BUTTON_EXPAND: number;
                            public static ACTION_SETTINGS_BLUETOOTH_CONNECT: number;
                            public static ACTION_SETTINGS_BLUETOOTH_CONNECT_ERROR: number;
                            public static ACTION_SETTINGS_BLUETOOTH_DISCONNECT: number;
                            public static ACTION_SETTINGS_BLUETOOTH_PAIR: number;
                            public static ACTION_SETTINGS_BUILD_NUMBER_PREF: number;
                            public static ACTION_SETTINGS_CLEAR_APP_CACHE: number;
                            public static ACTION_SETTINGS_CLEAR_APP_DATA: number;
                            public static ACTION_SETTINGS_CLEAR_INSTANT_APP: number;
                            public static ACTION_SETTINGS_CONDITION_BUTTON: number;
                            public static ACTION_SETTINGS_CONDITION_CLICK: number;
                            public static ACTION_SETTINGS_CONDITION_COLLAPSE: number;
                            public static ACTION_SETTINGS_CONDITION_DISMISS: number;
                            public static ACTION_SETTINGS_CONDITION_EXPAND: number;
                            public static ACTION_SETTINGS_CREATE_SHORTCUT: number;
                            public static ACTION_SETTINGS_DISABLE_APP: number;
                            public static ACTION_SETTINGS_DISMISS_SUGGESTION: number;
                            public static ACTION_SETTINGS_ENABLE_APP: number;
                            public static ACTION_SETTINGS_MASTER_SWITCH_BLUETOOTH_TOGGLE: number;
                            public static ACTION_SETTINGS_MENU_BATTERY_APPS_TOGGLE: number;
                            public static ACTION_SETTINGS_MENU_BATTERY_OPTIMIZATION: number;
                            public static ACTION_SETTINGS_MENU_BATTERY_USAGE_ALERTS: number;
                            public static ACTION_SETTINGS_PREFERENCE_CHANGE: number;
                            public static ACTION_SETTINGS_SUGGESTION: number;
                            public static ACTION_SETTINGS_TILE_CLICK: number;
                            public static ACTION_SETTINGS_UNINSTALL_APP: number;
                            public static ACTION_SETTINGS_UNINSTALL_DEVICE_ADMIN: number;
                            public static ACTION_SETTING_HELP_AND_FEEDBACK: number;
                            public static ACTION_SHADE_QS_PULL: number;
                            public static ACTION_SHADE_QS_TAP: number;
                            public static ACTION_SHOW_APP_DISAMBIG_APP_FEATURED: number;
                            public static ACTION_SHOW_APP_DISAMBIG_NONE_FEATURED: number;
                            public static ACTION_SHOW_SETTINGS_SUGGESTION: number;
                            public static ACTION_SKIP_DISCLAIMER_SELECTED: number;
                            public static ACTION_SUPPORT_CHAT: number;
                            public static ACTION_SUPPORT_DAIL_TOLLFREE: number;
                            public static ACTION_SUPPORT_DIAL_TOLLED: number;
                            public static ACTION_SUPPORT_DISCLAIMER_CANCEL: number;
                            public static ACTION_SUPPORT_DISCLAIMER_OK: number;
                            public static ACTION_SUPPORT_HELP_AND_FEEDBACK: number;
                            public static ACTION_SUPPORT_PHONE: number;
                            public static ACTION_SUPPORT_SIGN_IN: number;
                            public static ACTION_SUPPORT_TIPS_AND_TRICKS: number;
                            public static ACTION_SUPPORT_VIEW_TRAVEL_ABROAD_DIALOG: number;
                            public static ACTION_SYSTEM_NAVIGATION_KEY_DOWN: number;
                            public static ACTION_SYSTEM_NAVIGATION_KEY_UP: number;
                            public static ACTION_TEXT_SELECTION_MENU_ITEM_ASSIST: number;
                            public static ACTION_THEME: number;
                            public static ACTION_TOGGLE_STORAGE_MANAGER: number;
                            public static ACTION_TOUCH_GEAR: number;
                            public static ACTION_TUNER_CALIBRATE_DISPLAY_CHANGED: number;
                            public static ACTION_TUNER_DO_NOT_DISTURB_VOLUME_PANEL: number;
                            public static ACTION_TUNER_DO_NOT_DISTURB_VOLUME_SHORTCUT: number;
                            public static ACTION_TUNER_NIGHT_MODE: number;
                            public static ACTION_TUNER_NIGHT_MODE_ADJUST_BRIGHTNESS: number;
                            public static ACTION_TUNER_NIGHT_MODE_ADJUST_DARK_THEME: number;
                            public static ACTION_TUNER_NIGHT_MODE_ADJUST_TINT: number;
                            public static ACTION_TUNER_NIGHT_MODE_AUTO: number;
                            public static ACTION_TUNER_POWER_NOTIFICATION_CONTROLS: number;
                            public static ACTION_VIEW_EMERGENCY_INFO: number;
                            public static ACTION_VOLUME_ICON: number;
                            public static ACTION_VOLUME_KEY: number;
                            public static ACTION_VOLUME_SLIDER: number;
                            public static ACTION_VOLUME_STREAM: number;
                            public static ACTION_WIFI_ADD_NETWORK: number;
                            public static ACTION_WIFI_CONNECT: number;
                            public static ACTION_WIFI_FORCE_SCAN: number;
                            public static ACTION_WIFI_FORGET: number;
                            public static ACTION_WIFI_OFF: number;
                            public static ACTION_WIFI_ON: number;
                            public static ACTION_WIGGLE_CAMERA_GESTURE: number;
                            public static ACTION_WINDOW_DOCK_DRAG_DROP: number;
                            public static ACTION_WINDOW_DOCK_LONGPRESS: number;
                            public static ACTION_WINDOW_DOCK_RESIZE: number;
                            public static ACTION_WINDOW_DOCK_SWIPE: number;
                            public static ACTION_WINDOW_DOCK_UNRESIZABLE: number;
                            public static ACTION_WINDOW_UNDOCK_LONGPRESS: number;
                            public static ACTION_WINDOW_UNDOCK_MAX: number;
                            public static ACTION_ZEN_ADD_RULE: number;
                            public static ACTION_ZEN_ADD_RULE_OK: number;
                            public static ACTION_ZEN_ALLOW_CALLS: number;
                            public static ACTION_ZEN_ALLOW_EVENTS: number;
                            public static ACTION_ZEN_ALLOW_LIGHTS: number;
                            public static ACTION_ZEN_ALLOW_MESSAGES: number;
                            public static ACTION_ZEN_ALLOW_REMINDERS: number;
                            public static ACTION_ZEN_ALLOW_REPEAT_CALLS: number;
                            public static ACTION_ZEN_ALLOW_WHEN_SCREEN_OFF: number;
                            public static ACTION_ZEN_ALLOW_WHEN_SCREEN_ON: number;
                            public static ACTION_ZEN_DELETE_RULE: number;
                            public static ACTION_ZEN_DELETE_RULE_OK: number;
                            public static ACTION_ZEN_ENABLE_RULE: number;
                            public static ALERT_BEEP: number;
                            public static ALERT_BLINK: number;
                            public static ALERT_BUZZ: number;
                            public static APN: number;
                            public static APN_EDITOR: number;
                            public static APPLICATION: number;
                            public static APPLICATIONS_ADVANCED: number;
                            public static APPLICATIONS_APP_LAUNCH: number;
                            public static APPLICATIONS_APP_PERMISSION: number;
                            public static APPLICATIONS_APP_STORAGE: number;
                            public static APPLICATIONS_DEFAULT_APPS: number;
                            public static APPLICATIONS_HIGH_POWER_APPS: number;
                            public static APPLICATIONS_INSTALLED_APP_DETAILS: number;
                            public static APPLICATIONS_MANAGE_ASSIST: number;
                            public static APPLICATIONS_PROCESS_STATS_DETAIL: number;
                            public static APPLICATIONS_PROCESS_STATS_MEM_DETAIL: number;
                            public static APPLICATIONS_PROCESS_STATS_UI: number;
                            public static APPLICATIONS_STORAGE_APPS: number;
                            public static APPLICATIONS_STORAGE_GAMES: number;
                            public static APPLICATIONS_STORAGE_MOVIES: number;
                            public static APPLICATIONS_STORAGE_MUSIC: number;
                            public static APPLICATIONS_USAGE_ACCESS_DETAIL: number;
                            public static APP_DATA_USAGE: number;
                            public static APP_OPS_DETAILS: number;
                            public static APP_OPS_SUMMARY: number;
                            public static APP_PICTURE_IN_PICTURE_ALLOW: number;
                            public static APP_PICTURE_IN_PICTURE_DENY: number;
                            public static APP_SPECIAL_PERMISSION_ADMIN_ALLOW: number;
                            public static APP_SPECIAL_PERMISSION_ADMIN_DENY: number;
                            public static APP_SPECIAL_PERMISSION_APPDRAW_ALLOW: number;
                            public static APP_SPECIAL_PERMISSION_APPDRAW_DENY: number;
                            public static APP_SPECIAL_PERMISSION_BATTERY_ALLOW: number;
                            public static APP_SPECIAL_PERMISSION_BATTERY_DENY: number;
                            public static APP_SPECIAL_PERMISSION_DND_ALLOW: number;
                            public static APP_SPECIAL_PERMISSION_DND_DENY: number;
                            public static APP_SPECIAL_PERMISSION_NOTIVIEW_ALLOW: number;
                            public static APP_SPECIAL_PERMISSION_NOTIVIEW_DENY: number;
                            public static APP_SPECIAL_PERMISSION_PREMIUM_SMS_ALWAYS_ALLOW: number;
                            public static APP_SPECIAL_PERMISSION_PREMIUM_SMS_ASK: number;
                            public static APP_SPECIAL_PERMISSION_PREMIUM_SMS_DENY: number;
                            public static APP_SPECIAL_PERMISSION_SETTINGS_CHANGE_ALLOW: number;
                            public static APP_SPECIAL_PERMISSION_SETTINGS_CHANGE_DENY: number;
                            public static APP_SPECIAL_PERMISSION_UNL_DATA_ALLOW: number;
                            public static APP_SPECIAL_PERMISSION_UNL_DATA_DENY: number;
                            public static APP_SPECIAL_PERMISSION_USAGE_VIEW_ALLOW: number;
                            public static APP_SPECIAL_PERMISSION_USAGE_VIEW_DENY: number;
                            public static APP_SPECIAL_PERMISSION_VRHELPER_ALLOW: number;
                            public static APP_SPECIAL_PERMISSION_VRHELPER_DENY: number;
                            public static APP_TRANSITION: number;
                            public static APP_TRANSITION_BIND_APPLICATION_DELAY_MS: number;
                            public static APP_TRANSITION_CALLING_PACKAGE_NAME: number;
                            public static APP_TRANSITION_COMPONENT_NAME: number;
                            public static APP_TRANSITION_DELAY_MS: number;
                            public static APP_TRANSITION_DEVICE_UPTIME_SECONDS: number;
                            public static APP_TRANSITION_IS_EPHEMERAL: number;
                            public static APP_TRANSITION_PROCESS_RUNNING: number;
                            public static APP_TRANSITION_REASON: number;
                            public static APP_TRANSITION_STARTING_WINDOW_DELAY_MS: number;
                            public static APP_TRANSITION_WINDOWS_DRAWN_DELAY_MS: number;
                            public static AUTOFILL_AUTHENTICATED: number;
                            public static AUTOFILL_DATASET_APPLIED: number;
                            public static AUTOFILL_DATA_SAVE_REQUEST: number;
                            public static AUTOFILL_FILL_UI: number;
                            public static AUTOFILL_FORGED_COMPONENT_ATTEMPT: number;
                            public static AUTOFILL_REQUEST: number;
                            public static AUTOFILL_SAVE_UI: number;
                            public static AUTOFILL_SESSION_FINISHED: number;
                            public static AUTOFILL_SESSION_STARTED: number;
                            public static BACKGROUND_CHECK_SUMMARY: number;
                            public static BACKUP_SETTINGS: number;
                            public static BILLING_CYCLE: number;
                            public static BLUETOOTH: number;
                            public static BLUETOOTH_DEVICE_PICKER: number;
                            public static BLUETOOTH_DEVICE_PROFILES: number;
                            public static BLUETOOTH_DIALOG_FRAGMENT: number;
                            public static BOUNCER: number;
                            public static BRIGHTNESS_DIALOG: number;
                            public static CARRIER_DEMO_MODE_PASSWORD: number;
                            public static CHOOSE_LOCK_GENERIC: number;
                            public static CHOOSE_LOCK_PASSWORD: number;
                            public static CHOOSE_LOCK_PATTERN: number;
                            public static CONFIGURE_NOTIFICATION: number;
                            public static CONFIGURE_WIFI: number;
                            public static CONFIRM_LOCK_PASSWORD: number;
                            public static CONFIRM_LOCK_PATTERN: number;
                            public static CONVERT_FBE: number;
                            public static CONVERT_FBE_CONFIRM: number;
                            public static CRYPT_KEEPER: number;
                            public static CRYPT_KEEPER_CONFIRM: number;
                            public static DASHBOARD_CONTAINER: number;
                            public static DASHBOARD_SEARCH_RESULTS: number;
                            public static DASHBOARD_SUMMARY: number;
                            public static DATA_SAVER_SUMMARY: number;
                            public static DATA_USAGE: number;
                            public static DATA_USAGE_LIST: number;
                            public static DATA_USAGE_SUMMARY: number;
                            public static DATA_USAGE_UNRESTRICTED_ACCESS: number;
                            public static DATE_TIME: number;
                            public static DEFAULT_APP_PICKER_CONFIRMATION_DIALOG: number;
                            public static DEFAULT_ASSIST_PICKER: number;
                            public static DEFAULT_AUTOFILL_PICKER: number;
                            public static DEFAULT_BROWSER_PICKER: number;
                            public static DEFAULT_EMERGENCY_APP_PICKER: number;
                            public static DEFAULT_HOME_PICKER: number;
                            public static DEFAULT_NOTIFICATION_ASSISTANT: number;
                            public static DEFAULT_PHONE_PICKER: number;
                            public static DEFAULT_SMS_PICKER: number;
                            public static DEFAULT_VOICE_INPUT_PICKER: number;
                            public static DEVELOPMENT: number;
                            public static DEVICEINFO: number;
                            public static DEVICEINFO_IMEI_INFORMATION: number;
                            public static DEVICEINFO_SIM_STATUS: number;
                            public static DEVICEINFO_STATUS: number;
                            public static DEVICEINFO_STORAGE: number;
                            public static DEVICEINFO_USB: number;
                            public static DEVICE_ADMIN_SETTINGS: number;
                            public static DIALOG_ACCESSIBILITY_SERVICE_DISABLE: number;
                            public static DIALOG_ACCESSIBILITY_SERVICE_ENABLE: number;
                            public static DIALOG_ACCOUNT_SYNC_CANNOT_ONETIME_SYNC: number;
                            public static DIALOG_ACCOUNT_SYNC_FAILED_REMOVAL: number;
                            public static DIALOG_ACCOUNT_SYNC_REMOVE: number;
                            public static DIALOG_APN_EDITOR_ERROR: number;
                            public static DIALOG_APN_RESTORE_DEFAULT: number;
                            public static DIALOG_APP_INFO_ACTION: number;
                            public static DIALOG_AP_SETTINGS: number;
                            public static DIALOG_BILLING_BYTE_LIMIT: number;
                            public static DIALOG_BILLING_CONFIRM_LIMIT: number;
                            public static DIALOG_BILLING_CYCLE: number;
                            public static DIALOG_BLUETOOTH_PAIRED_DEVICE_PROFILE: number;
                            public static DIALOG_BLUETOOTH_RENAME: number;
                            public static DIALOG_CONFIRM_AUTO_SYNC_CHANGE: number;
                            public static DIALOG_CUSTOM_LIST_CONFIRMATION: number;
                            public static DIALOG_DATE_PICKER: number;
                            public static DIALOG_DISABLE_NOTIFICATION_ACCESS: number;
                            public static DIALOG_DREAM_START_DELAY: number;
                            public static DIALOG_ENCRYPTION_INTERSTITIAL_ACCESSIBILITY: number;
                            public static DIALOG_FINGERPINT_DELETE_LAST: number;
                            public static DIALOG_FINGERPINT_EDIT: number;
                            public static DIALOG_FINGERPINT_ERROR: number;
                            public static DIALOG_FINGERPRINT_CANCEL_SETUP: number;
                            public static DIALOG_FINGERPRINT_ICON_TOUCH: number;
                            public static DIALOG_FINGERPRINT_SKIP_SETUP: number;
                            public static DIALOG_FRP: number;
                            public static DIALOG_HIGH_POWER_DETAILS: number;
                            public static DIALOG_KEYBOARD_LAYOUT: number;
                            public static DIALOG_LEGACY_VPN_CONFIG: number;
                            public static DIALOG_MANAGE_MOBILE_PLAN: number;
                            public static DIALOG_NIGHT_DISPLAY_SET_END_TIME: number;
                            public static DIALOG_NIGHT_DISPLAY_SET_START_TIME: number;
                            public static DIALOG_NO_HOME: number;
                            public static DIALOG_OWNER_INFO_SETTINGS: number;
                            public static DIALOG_PROXY_SELECTOR_ERROR: number;
                            public static DIALOG_REMOVE_USER: number;
                            public static DIALOG_RUNNIGN_SERVICE: number;
                            public static DIALOG_SERVICE_ACCESS_WARNING: number;
                            public static DIALOG_SETTINGS_HARDWARE_INFO: number;
                            public static DIALOG_STORAGE_CLEAR_CACHE: number;
                            public static DIALOG_STORAGE_OTHER_INFO: number;
                            public static DIALOG_STORAGE_SYSTEM_INFO: number;
                            public static DIALOG_STORAGE_USER_INFO: number;
                            public static DIALOG_SUPPORT_DISCLAIMER: number;
                            public static DIALOG_SUPPORT_PHONE: number;
                            public static DIALOG_SUPPORT_SYSTEM_INFORMATION: number;
                            public static DIALOG_TIME_PICKER: number;
                            public static DIALOG_UNIFICATION_CONFIRMATION: number;
                            public static DIALOG_UNIFY_SOUND_SETTINGS: number;
                            public static DIALOG_USER_ADD: number;
                            public static DIALOG_USER_CANNOT_MANAGE: number;
                            public static DIALOG_USER_CHOOSE_TYPE: number;
                            public static DIALOG_USER_CONFIRM_EXIT_GUEST: number;
                            public static DIALOG_USER_CREDENTIAL: number;
                            public static DIALOG_USER_EDIT: number;
                            public static DIALOG_USER_EDIT_PROFILE: number;
                            public static DIALOG_USER_ENABLE_CALLING: number;
                            public static DIALOG_USER_ENABLE_CALLING_AND_SMS: number;
                            public static DIALOG_USER_NEED_LOCKSCREEN: number;
                            public static DIALOG_USER_REMOVE: number;
                            public static DIALOG_USER_SETUP: number;
                            public static DIALOG_USER_SETUP_PROFILE: number;
                            public static DIALOG_VOLUME_FORGET: number;
                            public static DIALOG_VOLUME_INIT: number;
                            public static DIALOG_VOLUME_RENAME: number;
                            public static DIALOG_VOLUME_SLOW_WARNING: number;
                            public static DIALOG_VOLUME_UNMOUNT: number;
                            public static DIALOG_VPN_APP_CONFIG: number;
                            public static DIALOG_VPN_CANNOT_CONNECT: number;
                            public static DIALOG_VPN_REPLACE_EXISTING: number;
                            public static DIALOG_WIFI_AP_EDIT: number;
                            public static DIALOG_WIFI_P2P_CANCEL_CONNECT: number;
                            public static DIALOG_WIFI_P2P_DELETE_GROUP: number;
                            public static DIALOG_WIFI_P2P_DISCONNECT: number;
                            public static DIALOG_WIFI_P2P_RENAME: number;
                            public static DIALOG_WIFI_PBC: number;
                            public static DIALOG_WIFI_PIN: number;
                            public static DIALOG_WIFI_SAVED_AP_EDIT: number;
                            public static DIALOG_WIFI_SCAN_MODE: number;
                            public static DIALOG_WIFI_SKIP: number;
                            public static DIALOG_WIFI_WRITE_NFC: number;
                            public static DIALOG_WPS_SETUP: number;
                            public static DIALOG_ZEN_ACCESS_GRANT: number;
                            public static DIALOG_ZEN_ACCESS_REVOKE: number;
                            public static DIALOG_ZEN_TIMEPICKER: number;
                            public static DISPLAY: number;
                            public static DISPLAY_SCREEN_ZOOM: number;
                            public static DOZING: number;
                            public static DREAM: number;
                            public static DREAMING: number;
                            public static ENABLE_VIRTUAL_KEYBOARDS: number;
                            public static ENCRYPTION: number;
                            public static ENCRYPTION_AND_CREDENTIAL: number;
                            public static ENTERPRISE_PRIVACY_DEFAULT_APPS: number;
                            public static ENTERPRISE_PRIVACY_INSTALLED_APPS: number;
                            public static ENTERPRISE_PRIVACY_PERMISSIONS: number;
                            public static ENTERPRISE_PRIVACY_SETTINGS: number;
                            public static FIELD_AUTOFILL_FILTERTEXT_LEN: number;
                            public static FIELD_AUTOFILL_FORGED_COMPONENT_NAME: number;
                            public static FIELD_AUTOFILL_NUM_DATASETS: number;
                            public static FIELD_AUTOFILL_NUM_IDS: number;
                            public static FIELD_AUTOFILL_NUM_VALUES: number;
                            public static FIELD_AUTOFILL_NUM_VIEWS_FILLED: number;
                            public static FIELD_AUTOFILL_SERVICE: number;
                            public static FIELD_CLASS_NAME: number;
                            public static FIELD_CONTEXT: number;
                            public static FIELD_FLAGS: number;
                            public static FIELD_GESTURE_LENGTH: number;
                            public static FIELD_GESTURE_VELOCITY: number;
                            public static FIELD_INSTANT_APP_LAUNCH_TOKEN: number;
                            public static FIELD_INSTANT_APP_RESOLUTION_DELAY_MS: number;
                            public static FIELD_INSTANT_APP_RESOLUTION_STATUS: number;
                            public static FIELD_NAV_ACTION: number;
                            public static FIELD_NOTIFICATION_CHANNEL_GROUP_ID: number;
                            public static FIELD_NOTIFICATION_CHANNEL_ID: number;
                            public static FIELD_NOTIFICATION_CHANNEL_IMPORTANCE: number;
                            public static FIELD_NOTIFICATION_GROUP_ID: number;
                            public static FIELD_NOTIFICATION_GROUP_SUMMARY: number;
                            public static FIELD_QS_POSITION: number;
                            public static FIELD_QS_VALUE: number;
                            public static FIELD_SETTINGS_BUILD_NUMBER_DEVELOPER_MODE_ENABLED: number;
                            public static FIELD_SETTINGS_PREFERENCE_CHANGE_NAME: number;
                            public static FIELD_SETTINGS_PREFERENCE_CHANGE_VALUE: number;
                            public static FIELD_SETTINGS_SEARCH_INLINE_RESULT_NAME: number;
                            public static FIELD_SETTINGS_SEARCH_INLINE_RESULT_VALUE: number;
                            public static FIELD_SETTINGS_SERACH_RESULT_RANK: number;
                            public static FINGERPRINT: number;
                            public static FINGERPRINT_ENROLL: number;
                            public static FINGERPRINT_ENROLLING: number;
                            public static FINGERPRINT_ENROLLING_SETUP: number;
                            public static FINGERPRINT_ENROLL_FINISH: number;
                            public static FINGERPRINT_ENROLL_FINISH_SETUP: number;
                            public static FINGERPRINT_ENROLL_INTRO: number;
                            public static FINGERPRINT_ENROLL_INTRO_SETUP: number;
                            public static FINGERPRINT_ENROLL_ONBOARD: number;
                            public static FINGERPRINT_ENROLL_ONBOARD_SETUP: number;
                            public static FINGERPRINT_ENROLL_SIDECAR: number;
                            public static FINGERPRINT_FIND_SENSOR: number;
                            public static FINGERPRINT_FIND_SENSOR_SETUP: number;
                            public static FINGERPRINT_REMOVE_SIDECAR: number;
                            public static FUELGAUGE_BATTERY_HISTORY_DETAIL: number;
                            public static FUELGAUGE_BATTERY_SAVER: number;
                            public static FUELGAUGE_HIGH_POWER_DETAILS: number;
                            public static FUELGAUGE_INACTIVE_APPS: number;
                            public static FUELGAUGE_POWER_USAGE_DETAIL: number;
                            public static FUELGAUGE_POWER_USAGE_SUMMARY: number;
                            public static HOME: number;
                            public static ICC_LOCK: number;
                            public static INPUTMETHOD_KEYBOARD: number;
                            public static INPUTMETHOD_LANGUAGE: number;
                            public static INPUTMETHOD_SPELL_CHECKERS: number;
                            public static INPUTMETHOD_SUBTYPE_ENABLER: number;
                            public static INPUTMETHOD_USER_DICTIONARY: number;
                            public static INPUTMETHOD_USER_DICTIONARY_ADD_WORD: number;
                            public static KEYBOARD_SHORTCUTS_HELPER: number;
                            public static LOCATION: number;
                            public static LOCATION_MODE: number;
                            public static LOCATION_SCANNING: number;
                            public static LOCKSCREEN: number;
                            public static MAIN_SETTINGS: number;
                            public static MANAGE_APPLICATIONS: number;
                            public static MANAGE_APPLICATIONS_ALL: number;
                            public static MANAGE_APPLICATIONS_NOTIFICATIONS: number;
                            public static MANAGE_DOMAIN_URLS: number;
                            public static MANAGE_EXTERNAL_SOURCES: number;
                            public static MANAGE_PERMISSIONS: number;
                            public static MASTER_CLEAR: number;
                            public static MASTER_CLEAR_CONFIRM: number;
                            public static METRICS_CHECKPOINT: number;
                            public static NET_DATA_USAGE_METERED: number;
                            public static NFC_BEAM: number;
                            public static NFC_PAYMENT: number;
                            public static NIGHT_DISPLAY_SETTINGS: number;
                            public static NOTIFICATION: number;
                            public static NOTIFICATION_ACCESS: number;
                            public static NOTIFICATION_ALERT: number;
                            public static NOTIFICATION_APP_NOTIFICATION: number;
                            public static NOTIFICATION_CHANNEL_IMPORTANCE: number;
                            public static NOTIFICATION_CHANNEL_LOCK_SCREEN_VIS: number;
                            public static NOTIFICATION_ID: number;
                            public static NOTIFICATION_ITEM: number;
                            public static NOTIFICATION_ITEM_ACTION: number;
                            public static NOTIFICATION_NETWORK_LOST_INTERNET: number;
                            public static NOTIFICATION_NETWORK_NO_INTERNET: number;
                            public static NOTIFICATION_NETWORK_SIGN_IN: number;
                            public static NOTIFICATION_NETWORK_SWITCH: number;
                            public static NOTIFICATION_OTHER_SOUND: number;
                            public static NOTIFICATION_PANEL: number;
                            public static NOTIFICATION_REDACTION: number;
                            public static NOTIFICATION_SHADE_INDEX: number;
                            public static NOTIFICATION_SINCE_CREATE_MILLIS: number;
                            public static NOTIFICATION_SINCE_UPDATE_MILLIS: number;
                            public static NOTIFICATION_SINCE_VISIBLE_MILLIS: number;
                            public static NOTIFICATION_SNOOZED: number;
                            public static NOTIFICATION_SNOOZED_CRITERIA: number;
                            public static NOTIFICATION_STATION: number;
                            public static NOTIFICATION_TAG: number;
                            public static NOTIFICATION_TOPIC_NOTIFICATION: number;
                            public static NOTIFICATION_ZEN_MODE: number;
                            public static NOTIFICATION_ZEN_MODE_ACCESS: number;
                            public static NOTIFICATION_ZEN_MODE_AUTOMATION: number;
                            public static NOTIFICATION_ZEN_MODE_EVENT_RULE: number;
                            public static NOTIFICATION_ZEN_MODE_EXTERNAL_RULE: number;
                            public static NOTIFICATION_ZEN_MODE_PRIORITY: number;
                            public static NOTIFICATION_ZEN_MODE_SCHEDULE_RULE: number;
                            public static NOTIFICATION_ZEN_MODE_VISUAL_INTERRUPTIONS: number;
                            public static OVERVIEW_ACTIVITY: number;
                            public static OVERVIEW_DISMISS: number;
                            public static OVERVIEW_DISMISS_ALL: number;
                            public static OVERVIEW_HISTORY: number;
                            public static OVERVIEW_LAUNCH_PREVIOUS_TASK: number;
                            public static OVERVIEW_SCROLL: number;
                            public static OVERVIEW_SELECT_TIMEOUT: number;
                            public static OWNER_INFO: number;
                            public static PHYSICAL_KEYBOARDS: number;
                            public static PICTURE_IN_PICTURE_ASPECT_RATIO: number;
                            public static PREMIUM_SMS_ACCESS: number;
                            public static PRINT_ADD_PRINTERS: number;
                            public static PRINT_ALL_PRINTERS: number;
                            public static PRINT_JOB_OPTIONS: number;
                            public static PRINT_JOB_SETTINGS: number;
                            public static PRINT_PREVIEW: number;
                            public static PRINT_SERVICE_SETTINGS: number;
                            public static PRINT_SETTINGS: number;
                            public static PRIVACY: number;
                            public static PROCESS_STATS_SUMMARY: number;
                            public static PROFILE_CHALLENGE: number;
                            public static PROVISIONING_ACTION: number;
                            public static PROVISIONING_CANCELLED: number;
                            public static PROVISIONING_COPY_ACCOUNT_STATUS: number;
                            public static PROVISIONING_COPY_ACCOUNT_TASK_MS: number;
                            public static PROVISIONING_CREATE_PROFILE_TASK_MS: number;
                            public static PROVISIONING_DOWNLOAD_PACKAGE_TASK_MS: number;
                            public static PROVISIONING_DPC_INSTALLED_BY_PACKAGE: number;
                            public static PROVISIONING_DPC_PACKAGE_NAME: number;
                            public static PROVISIONING_ENCRYPT_DEVICE_ACTIVITY_TIME_MS: number;
                            public static PROVISIONING_ENTRY_POINT_ADB: number;
                            public static PROVISIONING_ENTRY_POINT_NFC: number;
                            public static PROVISIONING_ENTRY_POINT_QR_CODE: number;
                            public static PROVISIONING_ENTRY_POINT_TRUSTED_SOURCE: number;
                            public static PROVISIONING_ENTRY_POINT_ZERO_TOUCH: number;
                            public static PROVISIONING_ERROR: number;
                            public static PROVISIONING_EXTRA: number;
                            public static PROVISIONING_FINALIZATION_ACTIVITY_TIME_MS: number;
                            public static PROVISIONING_INSTALL_PACKAGE_TASK_MS: number;
                            public static PROVISIONING_NETWORK_TYPE: number;
                            public static PROVISIONING_POST_ENCRYPTION_ACTIVITY_TIME_MS: number;
                            public static PROVISIONING_PREPROVISIONING_ACTIVITY_TIME_MS: number;
                            public static PROVISIONING_PROVISIONING_ACTIVITY_TIME_MS: number;
                            public static PROVISIONING_SESSION_COMPLETED: number;
                            public static PROVISIONING_SESSION_STARTED: number;
                            public static PROVISIONING_START_PROFILE_TASK_MS: number;
                            public static PROVISIONING_TERMS_ACTIVITY_TIME_MS: number;
                            public static PROVISIONING_TERMS_COUNT: number;
                            public static PROVISIONING_TERMS_READ: number;
                            public static PROVISIONING_TOTAL_TASK_TIME_MS: number;
                            public static PROVISIONING_TRAMPOLINE_ACTIVITY_TIME_MS: number;
                            public static PROVISIONING_WEB_ACTIVITY_TIME_MS: number;
                            public static PROXY_SELECTOR: number;
                            public static QS_AIRPLANEMODE: number;
                            public static QS_BATTERY_DETAIL: number;
                            public static QS_BATTERY_TILE: number;
                            public static QS_BLUETOOTH: number;
                            public static QS_BLUETOOTH_DETAILS: number;
                            public static QS_BLUETOOTH_TOGGLE: number;
                            public static QS_CAST: number;
                            public static QS_CAST_DETAILS: number;
                            public static QS_CAST_DISCONNECT: number;
                            public static QS_CAST_SELECT: number;
                            public static QS_CELLULAR: number;
                            public static QS_CELLULAR_TOGGLE: number;
                            public static QS_COLORINVERSION: number;
                            public static QS_COLOR_MATRIX: number;
                            public static QS_CUSTOM: number;
                            public static QS_DATAUSAGEDETAIL: number;
                            public static QS_DATA_SAVER: number;
                            public static QS_DND: number;
                            public static QS_DND_CONDITION_SELECT: number;
                            public static QS_DND_DETAILS: number;
                            public static QS_DND_TIME: number;
                            public static QS_DND_TOGGLE: number;
                            public static QS_DND_ZEN_SELECT: number;
                            public static QS_EDIT: number;
                            public static QS_FLASHLIGHT: number;
                            public static QS_HOTSPOT: number;
                            public static QS_INTENT: number;
                            public static QS_LOCATION: number;
                            public static QS_LOCK_TILE: number;
                            public static QS_NFC: number;
                            public static QS_NIGHT_DISPLAY: number;
                            public static QS_PANEL: number;
                            public static QS_ROTATIONLOCK: number;
                            public static QS_SWITCH_USER: number;
                            public static QS_USERDETAIL: number;
                            public static QS_USERDETAILITE: number;
                            public static QS_USER_TILE: number;
                            public static QS_WIFI: number;
                            public static QS_WIFI_DETAILS: number;
                            public static QS_WIFI_TOGGLE: number;
                            public static QS_WORKMODE: number;
                            public static REASON_APP_CANCEL: number;
                            public static REASON_APP_CANCEL_ALL: number;
                            public static REASON_CANCEL: number;
                            public static REASON_CANCEL_ALL: number;
                            public static REASON_CHANNEL_BANNED: number;
                            public static REASON_CLICK: number;
                            public static REASON_ERROR: number;
                            public static REASON_GROUP_OPTIMIZATION: number;
                            public static REASON_GROUP_SUMMARY_CANCELED: number;
                            public static REASON_LISTENER_CANCEL: number;
                            public static REASON_LISTENER_CANCEL_ALL: number;
                            public static REASON_PACKAGE_BANNED: number;
                            public static REASON_PACKAGE_CHANGED: number;
                            public static REASON_PACKAGE_SUSPENDED: number;
                            public static REASON_PROFILE_TURNED_OFF: number;
                            public static REASON_SNOOZED: number;
                            public static REASON_TIMEOUT: number;
                            public static REASON_UNAUTOBUNDLED: number;
                            public static REASON_USER_STOPPED: number;
                            public static RESERVED_FOR_LOGBUILDER_BUCKET: number;
                            public static RESERVED_FOR_LOGBUILDER_CATEGORY: number;
                            public static RESERVED_FOR_LOGBUILDER_COUNTER: number;
                            public static RESERVED_FOR_LOGBUILDER_HISTOGRAM: number;
                            public static RESERVED_FOR_LOGBUILDER_NAME: number;
                            public static RESERVED_FOR_LOGBUILDER_PACKAGENAME: number;
                            public static RESERVED_FOR_LOGBUILDER_PID: number;
                            public static RESERVED_FOR_LOGBUILDER_SUBTYPE: number;
                            public static RESERVED_FOR_LOGBUILDER_TIMESTAMP: number;
                            public static RESERVED_FOR_LOGBUILDER_TYPE: number;
                            public static RESERVED_FOR_LOGBUILDER_UID: number;
                            public static RESERVED_FOR_LOGBUILDER_VALUE: number;
                            public static RESET_DASHBOARD: number;
                            public static RESET_NETWORK: number;
                            public static RESET_NETWORK_CONFIRM: number;
                            public static RUNNING_BACKGROUND_APPS_DIALOG: number;
                            public static RUNNING_SERVICES: number;
                            public static RUNNING_SERVICE_DETAILS: number;
                            public static SCREEN: number;
                            public static SCREEN_PINNING: number;
                            public static SECURITY: number;
                            public static SETTINGS_APP_NOTIF_CATEGORY: number;
                            public static SETTINGS_CONDITION_AIRPLANE_MODE: number;
                            public static SETTINGS_CONDITION_BACKGROUND_DATA: number;
                            public static SETTINGS_CONDITION_BATTERY_SAVER: number;
                            public static SETTINGS_CONDITION_CELLULAR_DATA: number;
                            public static SETTINGS_CONDITION_DND: number;
                            public static SETTINGS_CONDITION_HOTSPOT: number;
                            public static SETTINGS_CONDITION_NIGHT_DISPLAY: number;
                            public static SETTINGS_CONDITION_WORK_MODE: number;
                            public static SETTINGS_CONNECTED_DEVICE_CATEGORY: number;
                            public static SETTINGS_GESTURES: number;
                            public static SETTINGS_GESTURE_DOUBLE_TAP_POWER: number;
                            public static SETTINGS_GESTURE_DOUBLE_TAP_SCREEN: number;
                            public static SETTINGS_GESTURE_DOUBLE_TWIST: number;
                            public static SETTINGS_GESTURE_PICKUP: number;
                            public static SETTINGS_GESTURE_SWIPE_TO_NOTIFICATION: number;
                            public static SETTINGS_INPUT_CATEGORY: number;
                            public static SETTINGS_LANGUAGE_CATEGORY: number;
                            public static SETTINGS_LOCK_SCREEN_PREFERENCES: number;
                            public static SETTINGS_MANAGE_PICTURE_IN_PICTURE: number;
                            public static SETTINGS_NETWORK_CATEGORY: number;
                            public static SETTINGS_NETWORK_SCORER: number;
                            public static SETTINGS_STORAGE_CATEGORY: number;
                            public static SETTINGS_STORAGE_PROFILE: number;
                            public static SETTINGS_SYSTEM_CATEGORY: number;
                            public static SIM: number;
                            public static SOUND: number;
                            public static SPECIAL_ACCESS: number;
                            public static STORAGE_FILES: number;
                            public static STORAGE_FREE_UP_SPACE_NOW: number;
                            public static STORAGE_MANAGER_SETTINGS: number;
                            public static SUPPORT_FRAGMENT: number;
                            public static SUW_ACCESSIBILITY: number;
                            public static SUW_ACCESSIBILITY_DISPLAY_SIZE: number;
                            public static SUW_ACCESSIBILITY_FONT_SIZE: number;
                            public static SUW_ACCESSIBILITY_TOGGLE_SCREEN_MAGNIFICATION: number;
                            public static SUW_ACCESSIBILITY_TOGGLE_SCREEN_READER: number;
                            public static SUW_ACCESSIBILITY_TOGGLE_SELECT_TO_SPEAK: number;
                            public static SYSTEM_ALERT_WINDOW_APPS: number;
                            public static TESTING: number;
                            public static TETHER: number;
                            public static TEXT_LONGPRESS: number;
                            public static TEXT_SELECTION_MENU_ITEM_ASSIST: number;
                            public static TRUSTED_CREDENTIALS: number;
                            public static TRUST_AGENT: number;
                            public static TTS_ENGINE_SETTINGS: number;
                            public static TTS_SLIDERS: number;
                            public static TTS_TEXT_TO_SPEECH: number;
                            public static TUNER: number;
                            public static TUNER_BATTERY_PERCENTAGE: number;
                            public static TUNER_CALIBRATE_DISPLAY: number;
                            public static TUNER_COLOR_AND_APPEARANCE: number;
                            public static TUNER_DEMO_MODE: number;
                            public static TUNER_DEMO_MODE_ENABLED: number;
                            public static TUNER_DEMO_MODE_ON: number;
                            public static TUNER_NIGHT_MODE: number;
                            public static TUNER_POWER_NOTIFICATION_CONTROLS: number;
                            public static TUNER_QS: number;
                            public static TUNER_QS_ADD: number;
                            public static TUNER_QS_REMOVE: number;
                            public static TUNER_QS_REORDER: number;
                            public static TUNER_STATUS_BAR_DISABLE: number;
                            public static TUNER_STATUS_BAR_ENABLE: number;
                            public static TYPE_ACTION: number;
                            public static TYPE_CLOSE: number;
                            public static TYPE_DETAIL: number;
                            public static TYPE_DISMISS: number;
                            public static TYPE_FAILURE: number;
                            public static TYPE_OPEN: number;
                            public static TYPE_SUCCESS: number;
                            public static TYPE_TRANSITION_COLD_LAUNCH: number;
                            public static TYPE_TRANSITION_HOT_LAUNCH: number;
                            public static TYPE_TRANSITION_WARM_LAUNCH: number;
                            public static TYPE_UNKNOWN: number;
                            public static TYPE_UPDATE: number;
                            public static USAGE_ACCESS: number;
                            public static USER: number;
                            public static USERS_APP_RESTRICTIONS: number;
                            public static USER_CREDENTIALS: number;
                            public static USER_DETAILS: number;
                            public static USER_DICTIONARY_SETTINGS: number;
                            public static USER_LOCALE_LIST: number;
                            public static VIEW_UNKNOWN: number;
                            public static VIRTUAL_KEYBOARDS: number;
                            public static VOICE_INPUT: number;
                            public static VOLUME_DIALOG: number;
                            public static VOLUME_DIALOG_DETAILS: number;
                            public static VPN: number;
                            public static VR_DISPLAY_PREFERENCE: number;
                            public static VR_MANAGE_LISTENERS: number;
                            public static WALLPAPER_TYPE: number;
                            public static WEBVIEW_IMPLEMENTATION: number;
                            public static WFD_WIFI_DISPLAY: number;
                            public static WIFI: number;
                            public static WIFI_ADVANCED: number;
                            public static WIFI_APITEST: number;
                            public static WIFI_CALLING: number;
                            public static WIFI_INFO: number;
                            public static WIFI_NETWORK_DETAILS: number;
                            public static WIFI_NETWORK_RECOMMENDATION_CONNECTION_SUCCESS: number;
                            public static WIFI_NETWORK_RECOMMENDATION_RECOMMENDED_NETWORK_EVALUATOR: number;
                            public static WIFI_NETWORK_RECOMMENDATION_SAVED_NETWORK_EVALUATOR: number;
                            public static WIFI_P2P: number;
                            public static WIFI_SAVED_ACCESS_POINTS: number;
                            public static WINDOW_DOCK_SHORTCUTS: number;
                            public static WIRELESS: number;
                            public static ZONE_PICKER: number;
                            public constructor();
                            public static parseFrom(param0: number[]): com.android.internal.logging.nano.MetricsProto.MetricsEvent;
                            public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                            public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.internal.logging.nano.MetricsProto.MetricsEvent;
                            public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                            public clear(): com.android.internal.logging.nano.MetricsProto.MetricsEvent;
                            public static emptyArray(): com.android.internal.logging.nano.MetricsProto.MetricsEvent[];
                            public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                            public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.internal.logging.nano.MetricsProto.MetricsEvent;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module logging {
                export module testing {
                    export class FakeMetricsLogger extends com.android.internal.logging.MetricsLogger {
                        public static class: java.lang.Class<com.android.internal.logging.testing.FakeMetricsLogger>;
                        public getLogs(): java.util.Queue<globalAndroid.metrics.LogMaker>;
                        public constructor();
                        public saveLog(param0: any[]): void;
                        public reset(): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module messages {
                export module nano {
                    export class SystemMessageProto extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.messages.nano.SystemMessageProto>;
                        /**
                         * Constructs a new instance of the com.android.internal.messages.nano.SystemMessageProto interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {});
                        public constructor();
                    }
                    export module SystemMessageProto {
                        export class SystemMessage extends com.android.framework.protobuf.nano.MessageNano {
                            public static class: java.lang.Class<com.android.internal.messages.nano.SystemMessageProto.SystemMessage>;
                            public static NOTE_ACCOUNT_CREDENTIAL_PERMISSION: number;
                            public static NOTE_ACCOUNT_REQUIRE_SIGNIN: number;
                            public static NOTE_ADB_ACTIVE: number;
                            public static NOTE_BAD_CHARGER: number;
                            public static NOTE_CAR_MODE_DISABLE: number;
                            public static NOTE_DUMP_HEAP_NOTIFICATION: number;
                            public static NOTE_FBE_ENCRYPTED_NOTIFICATION: number;
                            public static NOTE_FOREGROUND_SERVICES: number;
                            public static NOTE_GLOBAL_SCREENSHOT: number;
                            public static NOTE_HEAVY_WEIGHT_NOTIFICATION: number;
                            public static NOTE_HIDDEN_NOTIFICATIONS: number;
                            public static NOTE_HIGH_TEMP: number;
                            public static NOTE_INSTANT_APPS: number;
                            public static NOTE_LOGOUT_USER: number;
                            public static NOTE_LOW_STORAGE: number;
                            public static NOTE_NETWORK_LOGGING: number;
                            public static NOTE_NETWORK_LOST_INTERNET: number;
                            public static NOTE_NETWORK_NO_INTERNET: number;
                            public static NOTE_NETWORK_SIGN_IN: number;
                            public static NOTE_NETWORK_SWITCH: number;
                            public static NOTE_NET_LIMIT: number;
                            public static NOTE_NET_LIMIT_SNOOZED: number;
                            public static NOTE_NET_WARNING: number;
                            public static NOTE_PACKAGE_STATE: number;
                            public static NOTE_PLUGIN: number;
                            public static NOTE_POWER_LOW: number;
                            public static NOTE_PROFILE_WIPED: number;
                            public static NOTE_REMOTE_BUGREPORT: number;
                            public static NOTE_REMOVE_GUEST: number;
                            public static NOTE_RETAIL_RESET: number;
                            public static NOTE_SELECT_INPUT_METHOD: number;
                            public static NOTE_SELECT_KEYBOARD_LAYOUT: number;
                            public static NOTE_SSL_CERT_INFO: number;
                            public static NOTE_STORAGE_DISK: number;
                            public static NOTE_STORAGE_MOVE: number;
                            public static NOTE_STORAGE_PRIVATE: number;
                            public static NOTE_STORAGE_PUBLIC: number;
                            public static NOTE_SYNC_ERROR: number;
                            public static NOTE_SYSTEM_UPGRADING: number;
                            public static NOTE_TETHER_BLUETOOTH: number;
                            public static NOTE_TETHER_GENERAL: number;
                            public static NOTE_TETHER_USB: number;
                            public static NOTE_THERMAL_SHUTDOWN: number;
                            public static NOTE_TV_PIP: number;
                            public static NOTE_UNKNOWN: number;
                            public static NOTE_USB_ACCESSORY: number;
                            public static NOTE_USB_CHARGING: number;
                            public static NOTE_USB_MIDI: number;
                            public static NOTE_USB_MTP: number;
                            public static NOTE_USB_MTP_TAP: number;
                            public static NOTE_USB_PTP: number;
                            public static NOTE_USB_SUPPLYING: number;
                            public static NOTE_VPN_DISCONNECTED: number;
                            public static NOTE_VPN_STATUS: number;
                            public constructor();
                            public static emptyArray(): com.android.internal.messages.nano.SystemMessageProto.SystemMessage[];
                            public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                            public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                            public clear(): com.android.internal.messages.nano.SystemMessageProto.SystemMessage;
                            public static parseFrom(param0: number[]): com.android.internal.messages.nano.SystemMessageProto.SystemMessage;
                            public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.internal.messages.nano.SystemMessageProto.SystemMessage;
                            public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                            public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.internal.messages.nano.SystemMessageProto.SystemMessage;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module midi {
                export class EventScheduler extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.midi.EventScheduler>;
                    public getNextEvent(param0: number): com.android.internal.midi.EventScheduler.SchedulableEvent;
                    public constructor();
                    public add(param0: com.android.internal.midi.EventScheduler.SchedulableEvent): void;
                    public close(): void;
                    public waitNextEvent(): com.android.internal.midi.EventScheduler.SchedulableEvent;
                    public flush(): void;
                    public removeEventfromPool(): com.android.internal.midi.EventScheduler.SchedulableEvent;
                    public addEventToPool(param0: com.android.internal.midi.EventScheduler.SchedulableEvent): void;
                }
                export module EventScheduler {
                    export class FastEventQueue extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.midi.EventScheduler.FastEventQueue>;
                        public add(param0: com.android.internal.midi.EventScheduler.SchedulableEvent): void;
                        public remove(): com.android.internal.midi.EventScheduler.SchedulableEvent;
                    }
                    export class SchedulableEvent extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.midi.EventScheduler.SchedulableEvent>;
                        public setTimestamp(param0: number): void;
                        public getTimestamp(): number;
                        public constructor(param0: number);
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module midi {
                export class MidiConstants extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.midi.MidiConstants>;
                    public static CHANNEL_BYTE_LENGTHS: number[];
                    public static STATUS_ACTIVE_SENSING: number;
                    public static STATUS_CHANNEL_MASK: number;
                    public static STATUS_CHANNEL_PRESSURE: number;
                    public static STATUS_COMMAND_MASK: number;
                    public static STATUS_CONTINUE: number;
                    public static STATUS_CONTROL_CHANGE: number;
                    public static STATUS_END_SYSEX: number;
                    public static STATUS_MIDI_TIME_CODE: number;
                    public static STATUS_NOTE_OFF: number;
                    public static STATUS_NOTE_ON: number;
                    public static STATUS_PITCH_BEND: number;
                    public static STATUS_POLYPHONIC_AFTERTOUCH: number;
                    public static STATUS_PROGRAM_CHANGE: number;
                    public static STATUS_RESET: number;
                    public static STATUS_SONG_POSITION: number;
                    public static STATUS_SONG_SELECT: number;
                    public static STATUS_START: number;
                    public static STATUS_STOP: number;
                    public static STATUS_SYSTEM_EXCLUSIVE: number;
                    public static STATUS_TIMING_CLOCK: number;
                    public static STATUS_TUNE_REQUEST: number;
                    public static SYSTEM_BYTE_LENGTHS: number[];
                    public static allowRunningStatus(param0: number): boolean;
                    public static getBytesPerMessage(param0: number): number;
                    public static cancelsRunningStatus(param0: number): boolean;
                    public constructor();
                    public static isAllActiveSensing(param0: number[], param1: number, param2: number): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module midi {
                export class MidiDispatcher extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.midi.MidiDispatcher>;
                    public getReceiverCount(): number;
                    public constructor();
                    public getSender(): globalAndroid.media.midi.MidiSender;
                    public constructor(param0: com.android.internal.midi.MidiDispatcher.MidiReceiverFailureHandler);
                    public onSend(param0: number[], param1: number, param2: number, param3: number): void;
                    public onFlush(): void;
                }
                export module MidiDispatcher {
                    export class MidiReceiverFailureHandler extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.midi.MidiDispatcher.MidiReceiverFailureHandler>;
                        /**
                         * Constructs a new instance of the com.android.internal.midi.MidiDispatcher$MidiReceiverFailureHandler interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            onReceiverFailure(param0: globalAndroid.media.midi.MidiReceiver, param1: java.io.IOException): void;
                        });
                        public constructor();
                        public onReceiverFailure(param0: globalAndroid.media.midi.MidiReceiver, param1: java.io.IOException): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module midi {
                export class MidiEventScheduler extends com.android.internal.midi.EventScheduler {
                    public static class: java.lang.Class<com.android.internal.midi.MidiEventScheduler>;
                    public constructor();
                    public getReceiver(): globalAndroid.media.midi.MidiReceiver;
                    public addEventToPool(param0: com.android.internal.midi.EventScheduler.SchedulableEvent): void;
                }
                export module MidiEventScheduler {
                    export class MidiEvent extends com.android.internal.midi.EventScheduler.SchedulableEvent {
                        public static class: java.lang.Class<com.android.internal.midi.MidiEventScheduler.MidiEvent>;
                        public count: number;
                        public data: number[];
                        public toString(): string;
                    }
                    export class SchedulingReceiver extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.midi.MidiEventScheduler.SchedulingReceiver>;
                        public onSend(param0: number[], param1: number, param2: number, param3: number): void;
                        public onFlush(): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module midi {
                export class MidiFramer extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.midi.MidiFramer>;
                    public TAG: string;
                    public static formatMidiData(param0: number[], param1: number, param2: number): string;
                    public constructor(param0: globalAndroid.media.midi.MidiReceiver);
                    public onSend(param0: number[], param1: number, param2: number, param3: number): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module net {
                export class LegacyVpnInfo extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.net.LegacyVpnInfo>;
                    public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.net.LegacyVpnInfo>;
                    public static STATE_CONNECTED: number;
                    public static STATE_CONNECTING: number;
                    public static STATE_DISCONNECTED: number;
                    public static STATE_FAILED: number;
                    public static STATE_INITIALIZING: number;
                    public static STATE_TIMEOUT: number;
                    public intent: globalAndroid.app.PendingIntent;
                    public key: string;
                    public state: number;
                    public constructor();
                    public static stateFromNetworkInfo(param0: globalAndroid.net.NetworkInfo): number;
                    public describeContents(): number;
                    public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module net {
                export class NetworkStatsFactory extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.net.NetworkStatsFactory>;
                    public static noteStackedIface(param0: string, param1: string): void;
                    public readNetworkStatsDetail(): globalAndroid.net.NetworkStats;
                    public static javaReadNetworkStatsDetail(param0: java.io.File, param1: number, param2: string[], param3: number): globalAndroid.net.NetworkStats;
                    public static nativeReadNetworkStatsDetail(param0: globalAndroid.net.NetworkStats, param1: string, param2: number, param3: string[], param4: number): number;
                    public constructor();
                    public readNetworkStatsSummaryXt(): globalAndroid.net.NetworkStats;
                    public assertEquals(param0: globalAndroid.net.NetworkStats, param1: globalAndroid.net.NetworkStats): void;
                    public readNetworkStatsSummaryDev(): globalAndroid.net.NetworkStats;
                    public constructor(param0: java.io.File);
                    public readNetworkStatsDetail(param0: number, param1: string[], param2: number, param3: globalAndroid.net.NetworkStats): globalAndroid.net.NetworkStats;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module net {
                export class VpnConfig extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.net.VpnConfig>;
                    public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.net.VpnConfig>;
                    public static DIALOGS_PACKAGE: string;
                    public static LEGACY_VPN: string;
                    public static SERVICE_INTERFACE: string;
                    public addresses: java.util.List<globalAndroid.net.LinkAddress>;
                    public allowBypass: boolean;
                    public allowIPv4: boolean;
                    public allowIPv6: boolean;
                    public allowedApplications: java.util.List<string>;
                    public blocking: boolean;
                    public configureIntent: globalAndroid.app.PendingIntent;
                    public disallowedApplications: java.util.List<string>;
                    public dnsServers: java.util.List<string>;
                    public interfaze: string;
                    public legacy: boolean;
                    public mtu: number;
                    public routes: java.util.List<globalAndroid.net.RouteInfo>;
                    public searchDomains: java.util.List<string>;
                    public session: string;
                    public startTime: number;
                    public underlyingNetworks: globalAndroid.net.Network[];
                    public user: string;
                    public addLegacyAddresses(param0: string): void;
                    public static getIntentForStatusPanel(param0: globalAndroid.content.Context): globalAndroid.app.PendingIntent;
                    public constructor();
                    public describeContents(): number;
                    public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                    public addLegacyRoutes(param0: string): void;
                    public static getIntentForConfirmation(): globalAndroid.content.Intent;
                    public static getVpnLabel(param0: globalAndroid.content.Context, param1: string): string;
                    public updateAllowedFamilies(param0: java.net.InetAddress): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module net {
                export class VpnInfo extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.net.VpnInfo>;
                    public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.net.VpnInfo>;
                    public ownerUid: number;
                    public primaryUnderlyingIface: string;
                    public vpnIface: string;
                    public toString(): string;
                    public constructor();
                    public describeContents(): number;
                    public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module net {
                export class VpnProfile extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.net.VpnProfile>;
                    public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.net.VpnProfile>;
                    public static TYPE_IPSEC_HYBRID_RSA: number;
                    public static TYPE_IPSEC_XAUTH_PSK: number;
                    public static TYPE_IPSEC_XAUTH_RSA: number;
                    public static TYPE_L2TP_IPSEC_PSK: number;
                    public static TYPE_L2TP_IPSEC_RSA: number;
                    public static TYPE_MAX: number;
                    public static TYPE_PPTP: number;
                    public dnsServers: string;
                    public ipsecCaCert: string;
                    public ipsecIdentifier: string;
                    public ipsecSecret: string;
                    public ipsecServerCert: string;
                    public ipsecUserCert: string;
                    public key: string;
                    public l2tpSecret: string;
                    public mppe: boolean;
                    public name: string;
                    public password: string;
                    public routes: string;
                    public saveLogin: boolean;
                    public searchDomains: string;
                    public server: string;
                    public type: number;
                    public username: string;
                    public isValidLockdownProfile(): boolean;
                    public constructor(param0: globalAndroid.os.Parcel);
                    public hasDns(): boolean;
                    public constructor(param0: string);
                    public areDnsAddressesNumeric(): boolean;
                    public describeContents(): number;
                    public isTypeValidForLockdown(): boolean;
                    public encode(): number[];
                    public isServerAddressNumeric(): boolean;
                    public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                    public static decode(param0: string, param1: number[]): com.android.internal.net.VpnProfile;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module notification {
                export class NotificationAccessConfirmationActivityContract extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.notification.NotificationAccessConfirmationActivityContract>;
                    public static EXTRA_COMPONENT_NAME: string;
                    public static EXTRA_PACKAGE_TITLE: string;
                    public static EXTRA_USER_ID: string;
                    public constructor();
                    public static launcherIntent(param0: number, param1: globalAndroid.content.ComponentName, param2: string): globalAndroid.content.Intent;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module notification {
                export class SystemNotificationChannels extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.notification.SystemNotificationChannels>;
                    public static ACCOUNT: string;
                    public static ALERTS: string;
                    public static CAR_MODE: string;
                    public static DEVELOPER: string;
                    public static DEVICE_ADMIN: string;
                    public static FOREGROUND_SERVICE: string;
                    public static NETWORK_ALERTS: string;
                    public static NETWORK_AVAILABLE: string;
                    public static NETWORK_STATUS: string;
                    public static PHYSICAL_KEYBOARD: string;
                    public static RETAIL_MODE: string;
                    public static SECURITY: string;
                    public static UPDATES: string;
                    public static USB: string;
                    public static VIRTUAL_KEYBOARD: string;
                    public static VPN: string;
                    public static createAccountChannelForPackage(param0: string, param1: number, param2: globalAndroid.content.Context): void;
                    public static createAll(param0: globalAndroid.content.Context): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class AndroidPrintStream extends com.android.internal.os.LoggingPrintStream {
                    public static class: java.lang.Class<com.android.internal.os.AndroidPrintStream>;
                    public log(param0: string): void;
                    public constructor();
                    public constructor(param0: number, param1: string);
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class AppFuseMount extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.AppFuseMount>;
                    public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.os.AppFuseMount>;
                    public fd: globalAndroid.os.ParcelFileDescriptor;
                    public mountPointId: number;
                    public describeContents(): number;
                    public constructor(param0: number, param1: globalAndroid.os.ParcelFileDescriptor);
                    public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class AtomicFile extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.AtomicFile>;
                    public truncate(): void;
                    public getBaseFile(): java.io.File;
                    public openAppend(): java.io.FileOutputStream;
                    public delete(): void;
                    public readFully(): number[];
                    public failWrite(param0: java.io.FileOutputStream): void;
                    public finishWrite(param0: java.io.FileOutputStream): void;
                    public openRead(): java.io.FileInputStream;
                    public startWrite(): java.io.FileOutputStream;
                    public constructor(param0: java.io.File);
                    public exists(): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class BackgroundThread extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.BackgroundThread>;
                    public static get(): com.android.internal.os.BackgroundThread;
                    public static getHandler(): globalAndroid.os.Handler;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export abstract class BaseCommand {
                    public static class: java.lang.Class<com.android.internal.os.BaseCommand>;
                    public static FATAL_ERROR_CODE: string;
                    public static NO_CLASS_ERROR_CODE: string;
                    public static NO_SYSTEM_ERROR_CODE: string;
                    public mArgs: globalAndroid.os.ShellCommand;
                    public run(param0: string[]): void;
                    public constructor();
                    public onRun(): void;
                    public onShowUsage(param0: java.io.PrintStream): void;
                    public nextArg(): string;
                    public nextArgRequired(): string;
                    public getRawArgs(): string[];
                    public nextOption(): string;
                    public showError(param0: string): void;
                    public showUsage(): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class BatterySipper extends java.lang.Comparable<com.android.internal.os.BatterySipper> {
                    public static class: java.lang.Class<com.android.internal.os.BatterySipper>;
                    public bluetoothPowerMah: number;
                    public bluetoothRunningTimeMs: number;
                    public btRxBytes: number;
                    public btTxBytes: number;
                    public cameraPowerMah: number;
                    public cameraTimeMs: number;
                    public cpuFgTimeMs: number;
                    public cpuPowerMah: number;
                    public cpuTimeMs: number;
                    public drainType: com.android.internal.os.BatterySipper.DrainType;
                    public flashlightPowerMah: number;
                    public flashlightTimeMs: number;
                    public gpsPowerMah: number;
                    public gpsTimeMs: number;
                    public mPackages: string[];
                    public mobileActive: number;
                    public mobileActiveCount: number;
                    public mobileRadioPowerMah: number;
                    public mobileRxBytes: number;
                    public mobileRxPackets: number;
                    public mobileTxBytes: number;
                    public mobileTxPackets: number;
                    public mobilemspp: number;
                    public noCoveragePercent: number;
                    public packageWithHighestDrain: string;
                    public percent: number;
                    public proportionalSmearMah: number;
                    public screenPowerMah: number;
                    public sensorPowerMah: number;
                    public shouldHide: boolean;
                    public totalPowerMah: number;
                    public totalSmearedPowerMah: number;
                    public uidObj: globalAndroid.os.BatteryStats.Uid;
                    public usagePowerMah: number;
                    public usageTimeMs: number;
                    public userId: number;
                    public wakeLockPowerMah: number;
                    public wakeLockTimeMs: number;
                    public wifiPowerMah: number;
                    public wifiRunningTimeMs: number;
                    public wifiRxBytes: number;
                    public wifiRxPackets: number;
                    public wifiTxBytes: number;
                    public wifiTxPackets: number;
                    public constructor(param0: com.android.internal.os.BatterySipper.DrainType, param1: globalAndroid.os.BatteryStats.Uid, param2: number);
                    public getPackages(): string[];
                    public getUid(): number;
                    public sumPower(): number;
                    public add(param0: com.android.internal.os.BatterySipper): void;
                    public computeMobilemspp(): void;
                    public compareTo(param0: com.android.internal.os.BatterySipper): number;
                }
                export module BatterySipper {
                    export class DrainType extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.BatterySipper.DrainType>;
                        public static APP: com.android.internal.os.BatterySipper.DrainType;
                        public static BLUETOOTH: com.android.internal.os.BatterySipper.DrainType;
                        public static CAMERA: com.android.internal.os.BatterySipper.DrainType;
                        public static CELL: com.android.internal.os.BatterySipper.DrainType;
                        public static FLASHLIGHT: com.android.internal.os.BatterySipper.DrainType;
                        public static IDLE: com.android.internal.os.BatterySipper.DrainType;
                        public static MEMORY: com.android.internal.os.BatterySipper.DrainType;
                        public static OVERCOUNTED: com.android.internal.os.BatterySipper.DrainType;
                        public static PHONE: com.android.internal.os.BatterySipper.DrainType;
                        public static SCREEN: com.android.internal.os.BatterySipper.DrainType;
                        public static UNACCOUNTED: com.android.internal.os.BatterySipper.DrainType;
                        public static USER: com.android.internal.os.BatterySipper.DrainType;
                        public static WIFI: com.android.internal.os.BatterySipper.DrainType;
                        public static values(): com.android.internal.os.BatterySipper.DrainType[];
                        public static valueOf(param0: string): com.android.internal.os.BatterySipper.DrainType;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class BatteryStatsHelper extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.BatteryStatsHelper>;
                    public getMaxPower(): number;
                    public getMobilemsppList(): java.util.List<com.android.internal.os.BatterySipper>;
                    public refreshStats(param0: number, param1: java.util.List<globalAndroid.os.UserHandle>): void;
                    public getMinDrainedPower(): number;
                    public getMaxRealPower(): number;
                    public getPowerProfile(): com.android.internal.os.PowerProfile;
                    public getUsageList(): java.util.List<com.android.internal.os.BatterySipper>;
                    public getComputedPower(): number;
                    public storeStatsHistoryInFile(param0: string): void;
                    public getForegroundActivityTotalTimeUs(param0: globalAndroid.os.BatteryStats.Uid, param1: number): number;
                    public getProcessForegroundTimeMs(param0: globalAndroid.os.BatteryStats.Uid, param1: number): number;
                    public static dropFile(param0: globalAndroid.content.Context, param1: string): void;
                    public getStats(): globalAndroid.os.BatteryStats;
                    public getBatteryBroadcast(): globalAndroid.content.Intent;
                    public isTypeService(param0: com.android.internal.os.BatterySipper): boolean;
                    public static makemAh(param0: number): string;
                    public setPackageManager(param0: globalAndroid.content.pm.PackageManager): void;
                    public static readFully(param0: java.io.FileInputStream): number[];
                    public create(param0: globalAndroid.os.BatteryStats): void;
                    public removeHiddenBatterySippers(param0: java.util.List<com.android.internal.os.BatterySipper>): number;
                    public constructor(param0: globalAndroid.content.Context, param1: boolean, param2: boolean);
                    public getStatsType(): number;
                    public getMaxDrainedPower(): number;
                    public convertUsToMs(param0: number): number;
                    public convertMsToUs(param0: number): number;
                    public static checkHasWifiPowerReporting(param0: globalAndroid.os.BatteryStats, param1: com.android.internal.os.PowerProfile): boolean;
                    public create(param0: globalAndroid.os.Bundle): void;
                    public storeState(): void;
                    public static statsFromFile(param0: globalAndroid.content.Context, param1: string): globalAndroid.os.BatteryStats;
                    public clearStats(): void;
                    public getTotalPower(): number;
                    public shouldHideSipper(param0: com.android.internal.os.BatterySipper): boolean;
                    public isTypeSystem(param0: com.android.internal.os.BatterySipper): boolean;
                    public refreshStats(param0: number, param1: globalAndroid.util.SparseArray<globalAndroid.os.UserHandle>): void;
                    public constructor(param0: globalAndroid.content.Context);
                    public static checkWifiOnly(param0: globalAndroid.content.Context): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: boolean);
                    public setSystemPackageArray(param0: string[]): void;
                    public static readFully(param0: java.io.FileInputStream, param1: number): number[];
                    public refreshStats(param0: number, param1: number): void;
                    public smearScreenBatterySipper(param0: java.util.List<com.android.internal.os.BatterySipper>, param1: com.android.internal.os.BatterySipper): void;
                    public getStatsPeriod(): number;
                    public static checkHasBluetoothPowerReporting(param0: globalAndroid.os.BatteryStats, param1: com.android.internal.os.PowerProfile): boolean;
                    public refreshStats(param0: number, param1: globalAndroid.util.SparseArray<globalAndroid.os.UserHandle>, param2: number, param3: number): void;
                    public setServicePackageArray(param0: string[]): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class BatteryStatsImpl extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.BatteryStatsImpl>;
                    public static BATTERY_PLUGGED_NONE: number;
                    public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.os.BatteryStatsImpl>;
                    public static DEBUG_ENERGY: boolean;
                    public mBluetoothScanTimer: com.android.internal.os.BatteryStatsImpl.StopwatchTimer;
                    public mCheckinFile: com.android.internal.os.AtomicFile;
                    public mClocks: com.android.internal.os.BatteryStatsImpl.Clocks;
                    public mDailyFile: com.android.internal.os.AtomicFile;
                    public mHandler: com.android.internal.os.BatteryStatsImpl.MyHandler;
                    public mOnBatteryTimeBase: com.android.internal.os.BatteryStatsImpl.TimeBase;
                    public mRecordAllHistory: boolean;
                    public getBluetoothScanTime(param0: number, param1: number): number;
                    public startIteratingHistoryLocked(): boolean;
                    public noteVibratorOffLocked(param0: number): void;
                    public setCallback(param0: com.android.internal.os.BatteryStatsImpl.BatteryCallback): void;
                    public noteResetCameraLocked(): void;
                    public noteStopSensorLocked(param0: number, param1: number): void;
                    public noteWifiRadioPowerState(param0: number, param1: number, param2: number): void;
                    public readDailyStatsLocked(): void;
                    public commitCurrentHistoryBatchLocked(): void;
                    public noteStopGpsLocked(param0: number): void;
                    public updateMobileRadioState(param0: globalAndroid.telephony.ModemActivityInfo): void;
                    public constructor();
                    public hasBluetoothActivityReporting(): boolean;
                    public getLowDischargeAmountSinceCharge(): number;
                    public noteEventLocked(param0: number, param1: string, param2: number): void;
                    public notePackageUninstalledLocked(param0: string): void;
                    public getWakeupReasonTimerLocked(param0: string): com.android.internal.os.BatteryStatsImpl.SamplingTimer;
                    public getDischargeAmountScreenOff(): number;
                    public noteWifiRunningLocked(param0: globalAndroid.os.WorkSource): void;
                    public setBatteryStateLocked(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
                    public noteResetBluetoothScanLocked(): void;
                    public notePhoneOffLocked(): void;
                    public getWifiSupplStateTime(param0: number, param1: number, param2: number): number;
                    public getModemControllerActivity(): globalAndroid.os.BatteryStats.ControllerActivityCounter;
                    public noteWifiMulticastEnabledFromSourceLocked(param0: globalAndroid.os.WorkSource): void;
                    public getStartClockTime(): number;
                    public getPackageStatsLocked(param0: number, param1: string): com.android.internal.os.BatteryStatsImpl.Uid.Pkg;
                    public noteWifiRunningChangedLocked(param0: globalAndroid.os.WorkSource, param1: globalAndroid.os.WorkSource): void;
                    public getMaxLearnedBatteryCapacity(): number;
                    public getDischargeCoulombCounter(): globalAndroid.os.BatteryStats.LongCounter;
                    public noteBluetoothScanResultsFromSourceLocked(param0: globalAndroid.os.WorkSource, param1: number): void;
                    public noteResetVideoLocked(): void;
                    public notePhoneStateLocked(param0: number, param1: number): void;
                    public getKernelMemoryTimerLocked(param0: number): com.android.internal.os.BatteryStatsImpl.SamplingTimer;
                    public getMobileRadioActiveTime(param0: number, param1: number): number;
                    public noteActivityResumedLocked(param0: number): void;
                    public writeHistoryDelta(param0: globalAndroid.os.Parcel, param1: globalAndroid.os.BatteryStats.HistoryItem, param2: globalAndroid.os.BatteryStats.HistoryItem): void;
                    public noteFlashlightOnLocked(param0: number): void;
                    public getDeviceIdleModeTime(param0: number, param1: number, param2: number): number;
                    public pullPendingStateUpdatesLocked(): void;
                    public noteWifiOnLocked(): void;
                    public getKernelWakelockTimerLocked(param0: string): com.android.internal.os.BatteryStatsImpl.SamplingTimer;
                    public getCameraOnTime(param0: number, param1: number): number;
                    public getBatteryUptimeLocked(): number;
                    public getHistoryStringPoolSize(): number;
                    public getNextOldHistoryLocked(param0: globalAndroid.os.BatteryStats.HistoryItem): boolean;
                    public getChargeLevelStepTracker(): globalAndroid.os.BatteryStats.LevelStepTracker;
                    public getDailyDischargeLevelStepTracker(): globalAndroid.os.BatteryStats.LevelStepTracker;
                    public getWifiControllerActivity(): globalAndroid.os.BatteryStats.ControllerActivityCounter;
                    public getNextHistoryLocked(param0: globalAndroid.os.BatteryStats.HistoryItem): boolean;
                    public getDeviceIdleModeCount(param0: number, param1: number): number;
                    public noteJobFinishLocked(param0: string, param1: number): void;
                    public readHistoryDelta(param0: globalAndroid.os.Parcel, param1: globalAndroid.os.BatteryStats.HistoryItem): void;
                    public getWifiOnTime(param0: number, param1: number): number;
                    public getWifiSignalStrengthCount(param0: number, param1: number): number;
                    public noteScreenStateLocked(param0: number): void;
                    public noteWifiBatchedScanStartedFromSourceLocked(param0: globalAndroid.os.WorkSource, param1: number): void;
                    public noteAudioOffLocked(param0: number): void;
                    public noteWifiScanStoppedFromSourceLocked(param0: globalAndroid.os.WorkSource): void;
                    public finishIteratingHistoryLocked(): void;
                    public setPowerProfileLocked(param0: com.android.internal.os.PowerProfile): void;
                    public getHistoryStringPoolBytes(): number;
                    public getScreenBrightnessTime(param0: number, param1: number, param2: number): number;
                    public notePowerSaveModeLocked(param0: boolean): void;
                    public getDischargeStartLevel(): number;
                    public getHistoryTagPoolString(param0: number): string;
                    public noteAlarmStartLocked(param0: string, param1: number): void;
                    public notePhoneDataConnectionStateLocked(param0: number, param1: boolean): void;
                    public removeUidStatsLocked(param0: number): void;
                    public constructor(param0: com.android.internal.os.BatteryStatsImpl.Clocks);
                    public setPretendScreenOff(param0: boolean): void;
                    public reportExcessiveCpuLocked(param0: number, param1: string, param2: number, param3: number): void;
                    public writeSyncLocked(): void;
                    public getPowerSaveModeEnabledCount(param0: number): number;
                    public noteWifiBatchedScanStoppedLocked(param0: number): void;
                    public getWakeupReasonStats(): java.util.Map<string, any>;
                    public getPhoneSignalStrengthCount(param0: number, param1: number): number;
                    public addIsolatedUidLocked(param0: number, param1: number): void;
                    public getDailyChargeLevelStepTracker(): globalAndroid.os.BatteryStats.LevelStepTracker;
                    public noteWifiMulticastEnabledLocked(param0: number): void;
                    public noteProcessStartLocked(param0: string, param1: number): void;
                    public getWifiSupplStateCount(param0: number, param1: number): number;
                    public computeBatteryScreenOffUptime(param0: number, param1: number): number;
                    public getPhoneSignalScanningTime(param0: number, param1: number): number;
                    public noteChangeWakelockFromSourceLocked(param0: globalAndroid.os.WorkSource, param1: number, param2: string, param3: string, param4: number, param5: globalAndroid.os.WorkSource, param6: number, param7: string, param8: string, param9: number, param10: boolean): void;
                    public getInteractiveTime(param0: number, param1: number): number;
                    public readFromParcel(param0: globalAndroid.os.Parcel): void;
                    public noteAlarmFinishLocked(param0: string, param1: number): void;
                    public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                    public noteFullWifiLockAcquiredFromSourceLocked(param0: globalAndroid.os.WorkSource): void;
                    public getWifiStateTime(param0: number, param1: number, param2: number): number;
                    public updateBluetoothStateLocked(param0: globalAndroid.bluetooth.BluetoothActivityEnergyInfo): void;
                    public noteMobileRadioPowerStateLocked(param0: number, param1: number, param2: number): boolean;
                    public getDischargeCurrentLevelLocked(): number;
                    public getDischargeAmountScreenOnSinceCharge(): number;
                    public writeToParcelWithoutUids(param0: globalAndroid.os.Parcel, param1: number): void;
                    public getHighDischargeAmountSinceCharge(): number;
                    public getPowerSaveModeEnabledTime(param0: number, param1: number): number;
                    public getMobileRadioActiveUnknownTime(param0: number): number;
                    public getDischargeLevelStepTracker(): globalAndroid.os.BatteryStats.LevelStepTracker;
                    public writeAsyncLocked(): void;
                    public getGlobalWifiRunningTime(param0: number, param1: number): number;
                    public getFlashlightOnTime(param0: number, param1: number): number;
                    public dumpLocked(param0: globalAndroid.content.Context, param1: java.io.PrintWriter, param2: number, param3: number, param4: number): void;
                    public recordDailyStatsLocked(): void;
                    public getProcessWakeTime(param0: number, param1: number, param2: number): number;
                    public noteProcessDiedLocked(param0: number, param1: number): void;
                    public getCurrentDailyStartTime(): number;
                    public getScreenOnTime(param0: number, param1: number): number;
                    public getPhoneDataConnectionCount(param0: number, param1: number): number;
                    public finishIteratingOldHistoryLocked(): void;
                    public updateCpuTimeLocked(param0: boolean): void;
                    public noteResetAudioLocked(): void;
                    public noteResetFlashlightLocked(): void;
                    public describeContents(): number;
                    public noteSyncFinishLocked(param0: string, param1: number): void;
                    public commitPendingDataToDisk(): void;
                    public getKernelMemoryStats(): globalAndroid.util.LongSparseArray<com.android.internal.os.BatteryStatsImpl.SamplingTimer>;
                    public getIsOnBattery(): boolean;
                    public getUidStats(): globalAndroid.util.SparseArray<any>;
                    public noteFlashlightOffLocked(param0: number): void;
                    public computeUptime(param0: number, param1: number): number;
                    public isCharging(): boolean;
                    public noteStartWakeFromSourceLocked(param0: globalAndroid.os.WorkSource, param1: number, param2: string, param3: string, param4: number, param5: boolean): void;
                    public noteConnectivityChangedLocked(param0: number, param1: string): void;
                    public readLocked(): void;
                    public getAwakeTimeBattery(): number;
                    public noteProcessCrashLocked(param0: string, param1: number): void;
                    public getUidStatsLocked(param0: number): com.android.internal.os.BatteryStatsImpl.Uid;
                    public getAwakeTimePlugged(): number;
                    public noteWifiMulticastDisabledLocked(param0: number): void;
                    public getPhoneSignalStrengthTime(param0: number, param1: number, param2: number): number;
                    public noteProcessAnrLocked(param0: string, param1: number): void;
                    public constructor(param0: com.android.internal.os.BatteryStatsImpl.Clocks, param1: globalAndroid.os.Parcel);
                    public getHistoryTagPoolUid(param0: number): number;
                    public getMinLearnedBatteryCapacity(): number;
                    public noteFullWifiLockReleasedLocked(param0: number): void;
                    public getServiceStatsLocked(param0: number, param1: string, param2: string): com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv;
                    public getDischargeScreenOffCoulombCounter(): globalAndroid.os.BatteryStats.LongCounter;
                    public setRecordAllHistoryLocked(param0: boolean): void;
                    public getEstimatedBatteryCapacity(): number;
                    public noteStartWakeLocked(param0: number, param1: number, param2: string, param3: string, param4: number, param5: boolean, param6: number, param7: number): void;
                    public constructor(param0: com.android.internal.os.BatteryStatsImpl.Clocks, param1: java.io.File, param2: globalAndroid.os.Handler, param3: com.android.internal.os.BatteryStatsImpl.ExternalStatsSync, param4: com.android.internal.os.BatteryStatsImpl.PlatformIdleStateCallback);
                    public updateWifiState(param0: globalAndroid.net.wifi.WifiActivityEnergyInfo): void;
                    public computeBatteryRealtime(param0: number, param1: number): number;
                    public getParcelVersion(): number;
                    public noteCameraOnLocked(param0: number): void;
                    public noteWakeupReasonLocked(param0: string): void;
                    public noteWifiMulticastDisabledFromSourceLocked(param0: globalAndroid.os.WorkSource): void;
                    public writeSummaryToParcel(param0: globalAndroid.os.Parcel, param1: boolean): void;
                    public hasWifiActivityReporting(): boolean;
                    public isOnBattery(): boolean;
                    public noteCameraOffLocked(param0: number): void;
                    public getEndPlatformVersion(): string;
                    public noteLongPartialWakelockFinish(param0: string, param1: string, param2: number): void;
                    public getBatteryRealtime(param0: number): number;
                    public getNetworkActivityBytes(param0: number, param1: number): number;
                    public getNextMaxDailyDeadline(): number;
                    public noteLongPartialWakelockStart(param0: string, param1: string, param2: number): void;
                    public noteCurrentTimeChangedLocked(): void;
                    public getPhoneDataConnectionTime(param0: number, param1: number, param2: number): number;
                    public getStartCount(): number;
                    public recordDailyStatsIfNeededLocked(param0: boolean): void;
                    public getMobileRadioActiveUnknownCount(param0: number): number;
                    public getPhoneOnCount(param0: number): number;
                    public getHistoryUsedSize(): number;
                    public getDischargeStartLevelLocked(): number;
                    public noteStopWakeFromSourceLocked(param0: globalAndroid.os.WorkSource, param1: number, param2: string, param3: string, param4: number): void;
                    public getHistoryBaseTime(): number;
                    public noteWifiSupplicantStateChangedLocked(param0: number, param1: boolean): void;
                    public getDischargeAmountScreenOn(): number;
                    public getBluetoothControllerActivity(): globalAndroid.os.BatteryStats.ControllerActivityCounter;
                    public getWifiStateCount(param0: number, param1: number): number;
                    public noteWifiBatchedScanStoppedFromSourceLocked(param0: globalAndroid.os.WorkSource): void;
                    public getLongestDeviceIdleModeTime(param0: number): number;
                    public setRadioScanningTimeoutLocked(param0: number): void;
                    public computeChargeTimeRemaining(param0: number): number;
                    public noteSyncStartLocked(param0: string, param1: number): void;
                    public getWifiSignalStrengthTime(param0: number, param1: number, param2: number): number;
                    public constructor(param0: java.io.File, param1: globalAndroid.os.Handler, param2: com.android.internal.os.BatteryStatsImpl.ExternalStatsSync, param3: com.android.internal.os.BatteryStatsImpl.PlatformIdleStateCallback);
                    public updateKernelWakelocksLocked(): void;
                    public getNextMinDailyDeadline(): number;
                    public noteUidProcessStateLocked(param0: number, param1: number): void;
                    public getDischargeAmountScreenOffSinceCharge(): number;
                    public noteStartGpsLocked(param0: number): void;
                    public noteWifiOffLocked(): void;
                    public startAddingCpuLocked(): boolean;
                    public getDeviceIdlingCount(param0: number, param1: number): number;
                    public getDailyPackageChanges(): java.util.ArrayList<globalAndroid.os.BatteryStats.PackageChange>;
                    public getScreenOnCount(param0: number): number;
                    public getKernelWakelockStats(): java.util.Map<string, any>;
                    public noteWifiStoppedLocked(param0: globalAndroid.os.WorkSource): void;
                    public noteVideoOffLocked(param0: number): void;
                    public computeBatteryScreenOffRealtime(param0: number, param1: number): number;
                    public getProcessStatsLocked(param0: number, param1: string): com.android.internal.os.BatteryStatsImpl.Uid.Proc;
                    public noteInteractiveLocked(param0: boolean): void;
                    public isScreenOn(): boolean;
                    public getStartPlatformVersion(): string;
                    public mapUid(param0: number): number;
                    public updateDailyDeadlineLocked(): void;
                    public reportExcessiveWakeLocked(param0: number, param1: string, param2: number, param3: number): void;
                    public noteDeviceIdleModeLocked(param0: number, param1: string, param2: number): void;
                    public noteFullWifiLockAcquiredLocked(param0: number): void;
                    public finishAddingCpuLocked(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
                    public noteWifiScanStartedLocked(param0: number): void;
                    public noteWifiScanStoppedLocked(param0: number): void;
                    public getBatteryUptime(param0: number): number;
                    public notePhoneSignalStrengthLocked(param0: globalAndroid.telephony.SignalStrength): void;
                    public updateTimeBasesLocked(param0: boolean, param1: boolean, param2: number, param3: number): void;
                    public noteStopWakeLocked(param0: number, param1: number, param2: string, param3: string, param4: number, param5: number, param6: number): void;
                    public noteProcessFinishLocked(param0: string, param1: number): void;
                    public resetAllStatsCmdLocked(): void;
                    public addHistoryEventLocked(param0: number, param1: number, param2: number, param3: string, param4: number): void;
                    public getMobileRadioActiveCount(param0: number): number;
                    public noteBluetoothScanStartedFromSourceLocked(param0: globalAndroid.os.WorkSource, param1: boolean): void;
                    public notePackageInstalledLocked(param0: string, param1: number): void;
                    public getDischargeAmount(param0: number): number;
                    public constructor(param0: java.io.File, param1: globalAndroid.os.Handler, param2: com.android.internal.os.BatteryStatsImpl.ExternalStatsSync);
                    public noteBluetoothScanStoppedFromSourceLocked(param0: globalAndroid.os.WorkSource): void;
                    public prepareForDumpLocked(): void;
                    public noteActivityPausedLocked(param0: number): void;
                    public noteWifiRssiChangedLocked(param0: number): void;
                    public removeIsolatedUidLocked(param0: number): void;
                    public constructor(param0: globalAndroid.os.Parcel);
                    public noteAudioOnLocked(param0: number): void;
                    public noteJobStartLocked(param0: string, param1: number): void;
                    public noteWifiScanStartedFromSourceLocked(param0: globalAndroid.os.WorkSource): void;
                    public getHistoryTotalSize(): number;
                    public getPhoneOnTime(param0: number, param1: number): number;
                    public noteWifiStateLocked(param0: number, param1: string): void;
                    public startIteratingOldHistoryLocked(): boolean;
                    public getNumConnectivityChange(param0: number): number;
                    public noteVideoOnLocked(param0: number): void;
                    public noteWakeUpLocked(param0: string, param1: number): void;
                    public getMobileRadioActiveAdjustedTime(param0: number): number;
                    public getDischargeCurrentLevel(): number;
                    public shutdownLocked(): void;
                    public noteFullWifiLockReleasedFromSourceLocked(param0: globalAndroid.os.WorkSource): void;
                    public computeBatteryTimeRemaining(param0: number): number;
                    public getNetworkActivityPackets(param0: number, param1: number): number;
                    public noteVibratorOnLocked(param0: number, param1: number): void;
                    public noteStartSensorLocked(param0: number, param1: number): void;
                    public scheduleRemoveIsolatedUidLocked(param0: number, param1: number): void;
                    public getDeviceIdlingTime(param0: number, param1: number, param2: number): number;
                    public noteUserActivityLocked(param0: number, param1: number): void;
                    public noteScreenBrightnessLocked(param0: number): void;
                    public setNoAutoReset(param0: boolean): void;
                    public getCpuFreqs(): number[];
                    public hasModemActivityReporting(): boolean;
                    public getDailyItemLocked(param0: number): globalAndroid.os.BatteryStats.DailyItem;
                    public noteWifiBatchedScanStartedLocked(param0: number, param1: number): void;
                    public readSummaryFromParcel(param0: globalAndroid.os.Parcel): void;
                    public getFlashlightOnCount(param0: number): number;
                    public computeBatteryUptime(param0: number, param1: number): number;
                    public updateKernelMemoryBandwidthLocked(): void;
                    public computeRealtime(param0: number, param1: number): number;
                    public notePhoneOnLocked(): void;
                    public noteNetworkInterfaceTypeLocked(param0: string, param1: number): void;
                }
                export module BatteryStatsImpl {
                    export class BatchTimer extends com.android.internal.os.BatteryStatsImpl.Timer {
                        public static class: java.lang.Class<com.android.internal.os.BatteryStatsImpl.BatchTimer>;
                        public addDuration(param0: com.android.internal.os.BatteryStatsImpl, param1: number): void;
                        public computeCurrentCountLocked(): number;
                        public abortLastDuration(param0: com.android.internal.os.BatteryStatsImpl): void;
                        public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                        public onTimeStopped(param0: number, param1: number, param2: number): void;
                        public onTimeStarted(param0: number, param1: number, param2: number): void;
                        public computeRunTimeLocked(param0: number): number;
                        public reset(param0: boolean): boolean;
                        public logState(param0: globalAndroid.util.Printer, param1: string): void;
                    }
                    export class BatteryCallback extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.BatteryStatsImpl.BatteryCallback>;
                        /**
                         * Constructs a new instance of the com.android.internal.os.BatteryStatsImpl$BatteryCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            batteryNeedsCpuUpdate(): void;
                            batteryPowerChanged(param0: boolean): void;
                            batterySendBroadcast(param0: globalAndroid.content.Intent): void;
                        });
                        public constructor();
                        public batterySendBroadcast(param0: globalAndroid.content.Intent): void;
                        public batteryNeedsCpuUpdate(): void;
                        public batteryPowerChanged(param0: boolean): void;
                    }
                    export class Clocks extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.BatteryStatsImpl.Clocks>;
                        /**
                         * Constructs a new instance of the com.android.internal.os.BatteryStatsImpl$Clocks interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            elapsedRealtime(): number;
                            uptimeMillis(): number;
                        });
                        public constructor();
                        public elapsedRealtime(): number;
                        public uptimeMillis(): number;
                    }
                    export class ControllerActivityCounterImpl extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.BatteryStatsImpl.ControllerActivityCounterImpl>;
                        public constructor(param0: com.android.internal.os.BatteryStatsImpl.TimeBase, param1: number);
                        public describeContents(): number;
                        public getTxTimeCounters(): com.android.internal.os.BatteryStatsImpl.LongSamplingCounter[];
                        public getIdleTimeCounter(): com.android.internal.os.BatteryStatsImpl.LongSamplingCounter;
                        public readSummaryFromParcel(param0: globalAndroid.os.Parcel): void;
                        public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                        public getRxTimeCounter(): com.android.internal.os.BatteryStatsImpl.LongSamplingCounter;
                        public detach(): void;
                        public constructor(param0: com.android.internal.os.BatteryStatsImpl.TimeBase, param1: number, param2: globalAndroid.os.Parcel);
                        public writeSummaryToParcel(param0: globalAndroid.os.Parcel): void;
                        public getPowerCounter(): com.android.internal.os.BatteryStatsImpl.LongSamplingCounter;
                        public reset(param0: boolean): void;
                    }
                    export class Counter implements com.android.internal.os.BatteryStatsImpl.TimeBaseObs {
                        public static class: java.lang.Class<com.android.internal.os.BatteryStatsImpl.Counter>;
                        public readSummaryFromParcelLocked(param0: globalAndroid.os.Parcel): void;
                        public constructor(param0: com.android.internal.os.BatteryStatsImpl.TimeBase);
                        public onTimeStopped(param0: number, param1: number, param2: number): void;
                        public static writeCounterToParcel(param0: globalAndroid.os.Parcel, param1: com.android.internal.os.BatteryStatsImpl.Counter): void;
                        public onTimeStarted(param0: number, param1: number, param2: number): void;
                        public writeToParcel(param0: globalAndroid.os.Parcel): void;
                        public constructor(param0: com.android.internal.os.BatteryStatsImpl.TimeBase, param1: globalAndroid.os.Parcel);
                        public getCountLocked(param0: number): number;
                        public logState(param0: globalAndroid.util.Printer, param1: string): void;
                        public stepAtomic(): void;
                        public writeSummaryFromParcelLocked(param0: globalAndroid.os.Parcel): void;
                    }
                    export class DualTimer extends com.android.internal.os.BatteryStatsImpl.DurationTimer {
                        public static class: java.lang.Class<com.android.internal.os.BatteryStatsImpl.DualTimer>;
                        public constructor(param0: com.android.internal.os.BatteryStatsImpl.Clocks, param1: number, param2: com.android.internal.os.BatteryStatsImpl.TimeBase, param3: globalAndroid.os.Parcel);
                        public readSummaryFromParcelLocked(param0: globalAndroid.os.Parcel): void;
                        public stopRunningLocked(param0: number): void;
                        public startRunningLocked(param0: number): void;
                        public constructor(param0: com.android.internal.os.BatteryStatsImpl.Clocks, param1: com.android.internal.os.BatteryStatsImpl.Uid, param2: number, param3: java.util.ArrayList<com.android.internal.os.BatteryStatsImpl.StopwatchTimer>, param4: com.android.internal.os.BatteryStatsImpl.TimeBase, param5: com.android.internal.os.BatteryStatsImpl.TimeBase, param6: globalAndroid.os.Parcel);
                        public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                        public stopAllRunningLocked(param0: number): void;
                        public detach(): void;
                        public constructor(param0: com.android.internal.os.BatteryStatsImpl.Clocks, param1: com.android.internal.os.BatteryStatsImpl.Uid, param2: number, param3: java.util.ArrayList<com.android.internal.os.BatteryStatsImpl.StopwatchTimer>, param4: com.android.internal.os.BatteryStatsImpl.TimeBase);
                        public constructor(param0: com.android.internal.os.BatteryStatsImpl.Clocks, param1: com.android.internal.os.BatteryStatsImpl.Uid, param2: number, param3: java.util.ArrayList<com.android.internal.os.BatteryStatsImpl.StopwatchTimer>, param4: com.android.internal.os.BatteryStatsImpl.TimeBase, param5: globalAndroid.os.Parcel);
                        public constructor(param0: com.android.internal.os.BatteryStatsImpl.Clocks, param1: com.android.internal.os.BatteryStatsImpl.Uid, param2: number, param3: java.util.ArrayList<com.android.internal.os.BatteryStatsImpl.StopwatchTimer>, param4: com.android.internal.os.BatteryStatsImpl.TimeBase, param5: com.android.internal.os.BatteryStatsImpl.TimeBase);
                        public constructor(param0: com.android.internal.os.BatteryStatsImpl.Clocks, param1: number, param2: com.android.internal.os.BatteryStatsImpl.TimeBase);
                        public onTimeStopped(param0: number, param1: number, param2: number): void;
                        public getSubTimer(): com.android.internal.os.BatteryStatsImpl.DurationTimer;
                        public onTimeStarted(param0: number, param1: number, param2: number): void;
                        public reset(param0: boolean): boolean;
                        public writeSummaryFromParcelLocked(param0: globalAndroid.os.Parcel, param1: number): void;
                    }
                    export class DurationTimer extends com.android.internal.os.BatteryStatsImpl.StopwatchTimer {
                        public static class: java.lang.Class<com.android.internal.os.BatteryStatsImpl.DurationTimer>;
                        public getCurrentDurationMsLocked(param0: number): number;
                        public constructor(param0: com.android.internal.os.BatteryStatsImpl.Clocks, param1: number, param2: com.android.internal.os.BatteryStatsImpl.TimeBase, param3: globalAndroid.os.Parcel);
                        public readSummaryFromParcelLocked(param0: globalAndroid.os.Parcel): void;
                        public getMaxDurationMsLocked(param0: number): number;
                        public stopRunningLocked(param0: number): void;
                        public startRunningLocked(param0: number): void;
                        public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                        public logState(param0: globalAndroid.util.Printer, param1: string): void;
                        public constructor(param0: com.android.internal.os.BatteryStatsImpl.Clocks, param1: com.android.internal.os.BatteryStatsImpl.Uid, param2: number, param3: java.util.ArrayList<com.android.internal.os.BatteryStatsImpl.StopwatchTimer>, param4: com.android.internal.os.BatteryStatsImpl.TimeBase);
                        public constructor(param0: com.android.internal.os.BatteryStatsImpl.Clocks, param1: com.android.internal.os.BatteryStatsImpl.Uid, param2: number, param3: java.util.ArrayList<com.android.internal.os.BatteryStatsImpl.StopwatchTimer>, param4: com.android.internal.os.BatteryStatsImpl.TimeBase, param5: globalAndroid.os.Parcel);
                        public getTotalDurationMsLocked(param0: number): number;
                        public constructor(param0: com.android.internal.os.BatteryStatsImpl.Clocks, param1: number, param2: com.android.internal.os.BatteryStatsImpl.TimeBase);
                        public onTimeStopped(param0: number, param1: number, param2: number): void;
                        public onTimeStarted(param0: number, param1: number, param2: number): void;
                        public reset(param0: boolean): boolean;
                        public writeSummaryFromParcelLocked(param0: globalAndroid.os.Parcel, param1: number): void;
                    }
                    export class ExternalStatsSync extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.BatteryStatsImpl.ExternalStatsSync>;
                        /**
                         * Constructs a new instance of the com.android.internal.os.BatteryStatsImpl$ExternalStatsSync interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            scheduleCpuSyncDueToRemovedUid(param0: number): void;
                            scheduleSync(param0: string, param1: number): void;
                        });
                        public constructor();
                        public static UPDATE_CPU: number;
                        public static UPDATE_RADIO: number;
                        public static UPDATE_ALL: number;
                        public static UPDATE_BT: number;
                        public static UPDATE_WIFI: number;
                        public scheduleCpuSyncDueToRemovedUid(param0: number): void;
                        public scheduleSync(param0: string, param1: number): void;
                    }
                    export class LongSamplingCounter implements com.android.internal.os.BatteryStatsImpl.TimeBaseObs {
                        public static class: java.lang.Class<com.android.internal.os.BatteryStatsImpl.LongSamplingCounter>;
                        public onTimeStopped(param0: number, param1: number, param2: number): void;
                        public onTimeStarted(param0: number, param1: number, param2: number): void;
                        public writeToParcel(param0: globalAndroid.os.Parcel): void;
                        public getCountLocked(param0: number): number;
                        public logState(param0: globalAndroid.util.Printer, param1: string): void;
                    }
                    export class LongSamplingCounterArray implements com.android.internal.os.BatteryStatsImpl.TimeBaseObs {
                        public static class: java.lang.Class<com.android.internal.os.BatteryStatsImpl.LongSamplingCounterArray>;
                        public mCounts: number[];
                        public mLoadedCounts: number[];
                        public mPluggedCounts: number[];
                        public mUnpluggedCounts: number[];
                        public static readSummaryFromParcelLocked(param0: globalAndroid.os.Parcel, param1: com.android.internal.os.BatteryStatsImpl.TimeBase): com.android.internal.os.BatteryStatsImpl.LongSamplingCounterArray;
                        public static writeSummaryToParcelLocked(param0: globalAndroid.os.Parcel, param1: com.android.internal.os.BatteryStatsImpl.LongSamplingCounterArray): void;
                        public getCountsLocked(param0: number): number[];
                        public constructor(param0: com.android.internal.os.BatteryStatsImpl.TimeBase);
                        public onTimeStopped(param0: number, param1: number, param2: number): void;
                        public addCountLocked(param0: number[]): void;
                        public detach(): void;
                        public onTimeStarted(param0: number, param1: number, param2: number): void;
                        public logState(param0: globalAndroid.util.Printer, param1: string): void;
                        public static writeToParcel(param0: globalAndroid.os.Parcel, param1: com.android.internal.os.BatteryStatsImpl.LongSamplingCounterArray): void;
                        public static readFromParcel(param0: globalAndroid.os.Parcel, param1: com.android.internal.os.BatteryStatsImpl.TimeBase): com.android.internal.os.BatteryStatsImpl.LongSamplingCounterArray;
                        public reset(param0: boolean): void;
                    }
                    export class MyHandler extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.BatteryStatsImpl.MyHandler>;
                        public constructor(param0: com.android.internal.os.BatteryStatsImpl, param1: globalAndroid.os.Looper);
                        public handleMessage(param0: globalAndroid.os.Message): void;
                    }
                    export abstract class OverflowArrayMap<T> extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.BatteryStatsImpl.OverflowArrayMap<any>>;
                        public startObject(param0: string): T;
                        public getMap(): globalAndroid.util.ArrayMap<string, T>;
                        public constructor(param0: com.android.internal.os.BatteryStatsImpl, param1: number);
                        public stopObject(param0: string): T;
                        public cleanup(): void;
                        public clear(): void;
                        public instantiateObject(): T;
                        public add(param0: string, param1: T): void;
                    }
                    export class PlatformIdleStateCallback extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.BatteryStatsImpl.PlatformIdleStateCallback>;
                        /**
                         * Constructs a new instance of the com.android.internal.os.BatteryStatsImpl$PlatformIdleStateCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            getPlatformLowPowerStats(): string;
                        });
                        public constructor();
                        public getPlatformLowPowerStats(): string;
                    }
                    export class SamplingTimer extends com.android.internal.os.BatteryStatsImpl.Timer {
                        public static class: java.lang.Class<com.android.internal.os.BatteryStatsImpl.SamplingTimer>;
                        public constructor(param0: com.android.internal.os.BatteryStatsImpl.Clocks, param1: number, param2: com.android.internal.os.BatteryStatsImpl.TimeBase, param3: globalAndroid.os.Parcel);
                        public computeCurrentCountLocked(): number;
                        public add(param0: number, param1: number): void;
                        public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                        public update(param0: number, param1: number): void;
                        public constructor(param0: com.android.internal.os.BatteryStatsImpl.Clocks, param1: com.android.internal.os.BatteryStatsImpl.TimeBase);
                        public computeRunTimeLocked(param0: number): number;
                        public logState(param0: globalAndroid.util.Printer, param1: string): void;
                        public constructor(param0: com.android.internal.os.BatteryStatsImpl.Clocks, param1: com.android.internal.os.BatteryStatsImpl.TimeBase, param2: globalAndroid.os.Parcel);
                        public constructor(param0: com.android.internal.os.BatteryStatsImpl.Clocks, param1: number, param2: com.android.internal.os.BatteryStatsImpl.TimeBase);
                        public onTimeStopped(param0: number, param1: number, param2: number): void;
                        public endSample(): void;
                        public onTimeStarted(param0: number, param1: number, param2: number): void;
                        public reset(param0: boolean): boolean;
                        public getUpdateVersion(): number;
                        public setUpdateVersion(param0: number): void;
                    }
                    export class StopwatchTimer extends com.android.internal.os.BatteryStatsImpl.Timer {
                        public static class: java.lang.Class<com.android.internal.os.BatteryStatsImpl.StopwatchTimer>;
                        public constructor(param0: com.android.internal.os.BatteryStatsImpl.Clocks, param1: number, param2: com.android.internal.os.BatteryStatsImpl.TimeBase, param3: globalAndroid.os.Parcel);
                        public readSummaryFromParcelLocked(param0: globalAndroid.os.Parcel): void;
                        public setMark(param0: number): void;
                        public computeCurrentCountLocked(): number;
                        public stopRunningLocked(param0: number): void;
                        public startRunningLocked(param0: number): void;
                        public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                        public stopAllRunningLocked(param0: number): void;
                        public detach(): void;
                        public computeRunTimeLocked(param0: number): number;
                        public logState(param0: globalAndroid.util.Printer, param1: string): void;
                        public setTimeout(param0: number): void;
                        public constructor(param0: com.android.internal.os.BatteryStatsImpl.Clocks, param1: com.android.internal.os.BatteryStatsImpl.Uid, param2: number, param3: java.util.ArrayList<com.android.internal.os.BatteryStatsImpl.StopwatchTimer>, param4: com.android.internal.os.BatteryStatsImpl.TimeBase);
                        public constructor(param0: com.android.internal.os.BatteryStatsImpl.Clocks, param1: com.android.internal.os.BatteryStatsImpl.Uid, param2: number, param3: java.util.ArrayList<com.android.internal.os.BatteryStatsImpl.StopwatchTimer>, param4: com.android.internal.os.BatteryStatsImpl.TimeBase, param5: globalAndroid.os.Parcel);
                        public isRunningLocked(): boolean;
                        public constructor(param0: com.android.internal.os.BatteryStatsImpl.Clocks, param1: number, param2: com.android.internal.os.BatteryStatsImpl.TimeBase);
                        public onTimeStopped(param0: number, param1: number, param2: number): void;
                        public onTimeStarted(param0: number, param1: number, param2: number): void;
                        public reset(param0: boolean): boolean;
                    }
                    export class SystemClocks extends com.android.internal.os.BatteryStatsImpl.Clocks {
                        public static class: java.lang.Class<com.android.internal.os.BatteryStatsImpl.SystemClocks>;
                        public constructor();
                        public elapsedRealtime(): number;
                        public uptimeMillis(): number;
                    }
                    export class TimeBase extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.BatteryStatsImpl.TimeBase>;
                        public mObservers: java.util.ArrayList<com.android.internal.os.BatteryStatsImpl.TimeBaseObs>;
                        public mPastRealtime: number;
                        public mPastUptime: number;
                        public mRealtime: number;
                        public mRealtimeStart: number;
                        public mRunning: boolean;
                        public mUnpluggedRealtime: number;
                        public mUnpluggedUptime: number;
                        public mUptime: number;
                        public mUptimeStart: number;
                        public computeUptime(param0: number, param1: number): number;
                        public constructor();
                        public writeSummaryToParcel(param0: globalAndroid.os.Parcel, param1: number, param2: number): void;
                        public getUptimeStart(): number;
                        public writeToParcel(param0: globalAndroid.os.Parcel, param1: number, param2: number): void;
                        public isRunning(): boolean;
                        public getRealtime(param0: number): number;
                        public add(param0: com.android.internal.os.BatteryStatsImpl.TimeBaseObs): void;
                        public getRealtimeStart(): number;
                        public setRunning(param0: boolean, param1: number, param2: number): boolean;
                        public computeRealtime(param0: number, param1: number): number;
                        public init(param0: number, param1: number): void;
                        public getUptime(param0: number): number;
                        public hasObserver(param0: com.android.internal.os.BatteryStatsImpl.TimeBaseObs): boolean;
                        public reset(param0: number, param1: number): void;
                        public dump(param0: java.io.PrintWriter, param1: string): void;
                        public remove(param0: com.android.internal.os.BatteryStatsImpl.TimeBaseObs): void;
                        public readSummaryFromParcel(param0: globalAndroid.os.Parcel): void;
                        public readFromParcel(param0: globalAndroid.os.Parcel): void;
                    }
                    export class TimeBaseObs extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.BatteryStatsImpl.TimeBaseObs>;
                        /**
                         * Constructs a new instance of the com.android.internal.os.BatteryStatsImpl$TimeBaseObs interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            onTimeStarted(param0: number, param1: number, param2: number): void;
                            onTimeStopped(param0: number, param1: number, param2: number): void;
                        });
                        public constructor();
                        public onTimeStopped(param0: number, param1: number, param2: number): void;
                        public onTimeStarted(param0: number, param1: number, param2: number): void;
                    }
                    export abstract class Timer implements com.android.internal.os.BatteryStatsImpl.TimeBaseObs {
                        public static class: java.lang.Class<com.android.internal.os.BatteryStatsImpl.Timer>;
                        public mClocks: com.android.internal.os.BatteryStatsImpl.Clocks;
                        public mCount: number;
                        public mLastCount: number;
                        public mLastTime: number;
                        public mLoadedCount: number;
                        public mLoadedTime: number;
                        public mTimeBase: com.android.internal.os.BatteryStatsImpl.TimeBase;
                        public mTimeBeforeMark: number;
                        public mTotalTime: number;
                        public mType: number;
                        public mUnpluggedCount: number;
                        public mUnpluggedTime: number;
                        public getTimeSinceMarkLocked(param0: number): number;
                        public constructor(param0: com.android.internal.os.BatteryStatsImpl.Clocks, param1: number, param2: com.android.internal.os.BatteryStatsImpl.TimeBase, param3: globalAndroid.os.Parcel);
                        public getTotalTimeLocked(param0: number, param1: number): number;
                        public readSummaryFromParcelLocked(param0: globalAndroid.os.Parcel): void;
                        public computeCurrentCountLocked(): number;
                        public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                        public detach(): void;
                        public computeRunTimeLocked(param0: number): number;
                        public logState(param0: globalAndroid.util.Printer, param1: string): void;
                        public static writeTimerToParcel(param0: globalAndroid.os.Parcel, param1: com.android.internal.os.BatteryStatsImpl.Timer, param2: number): void;
                        public constructor(param0: com.android.internal.os.BatteryStatsImpl.Clocks, param1: number, param2: com.android.internal.os.BatteryStatsImpl.TimeBase);
                        public onTimeStopped(param0: number, param1: number, param2: number): void;
                        public onTimeStarted(param0: number, param1: number, param2: number): void;
                        public reset(param0: boolean): boolean;
                        public getCountLocked(param0: number): number;
                        public writeSummaryFromParcelLocked(param0: globalAndroid.os.Parcel, param1: number): void;
                    }
                    export class Uid extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.BatteryStatsImpl.Uid>;
                        public mBsi: com.android.internal.os.BatteryStatsImpl;
                        public mOnBatteryBackgroundTimeBase: com.android.internal.os.BatteryStatsImpl.TimeBase;
                        public mOnBatteryScreenOffBackgroundTimeBase: com.android.internal.os.BatteryStatsImpl.TimeBase;
                        public getVibratorOnTimer(): com.android.internal.os.BatteryStatsImpl.Timer;
                        public getWakelockStats(): globalAndroid.util.ArrayMap<string, any>;
                        public createCameraTurnedOnTimerLocked(): com.android.internal.os.BatteryStatsImpl.StopwatchTimer;
                        public noteWifiScanStartedLocked(param0: number): void;
                        public getScreenOffCpuFreqTimes(param0: number): number[];
                        public noteMobileRadioApWakeupLocked(): void;
                        public getPidStatsLocked(param0: number): globalAndroid.os.BatteryStats.Uid.Pid;
                        public getJobStats(): globalAndroid.util.ArrayMap<string, any>;
                        public noteWifiMulticastDisabledLocked(param0: number): void;
                        public noteStopSyncLocked(param0: string, param1: number): void;
                        public getNetworkActivityPackets(param0: number, param1: number): number;
                        public reportExcessiveWakeLocked(param0: string, param1: number, param2: number): void;
                        public noteWifiBatchedScanStoppedLocked(param0: number): void;
                        public getBluetoothScanBackgroundTimer(): com.android.internal.os.BatteryStatsImpl.Timer;
                        public noteWifiRunningLocked(param0: number): void;
                        public noteBluetoothScanStartedLocked(param0: number, param1: boolean): void;
                        public createBluetoothScanTimerLocked(): com.android.internal.os.BatteryStatsImpl.DualTimer;
                        public noteAudioTurnedOnLocked(param0: number): void;
                        public noteFullWifiLockAcquiredLocked(param0: number): void;
                        public createBluetoothUnoptimizedScanTimerLocked(): com.android.internal.os.BatteryStatsImpl.DualTimer;
                        public createBluetoothScanResultCounterLocked(): com.android.internal.os.BatteryStatsImpl.Counter;
                        public hasUserActivity(): boolean;
                        public getVideoTurnedOnTimer(): com.android.internal.os.BatteryStatsImpl.Timer;
                        public noteActivityResumedLocked(param0: number): void;
                        public noteWifiScanStoppedLocked(param0: number): void;
                        public getFlashlightTurnedOnTimer(): com.android.internal.os.BatteryStatsImpl.Timer;
                        public reportExcessiveCpuLocked(param0: string, param1: number, param2: number): void;
                        public getProcessStats(): globalAndroid.util.ArrayMap<string, any>;
                        public noteFlashlightTurnedOffLocked(param0: number): void;
                        public createForegroundActivityTimerLocked(): com.android.internal.os.BatteryStatsImpl.StopwatchTimer;
                        public getBluetoothScanResultCounter(): com.android.internal.os.BatteryStatsImpl.Counter;
                        public createAudioTurnedOnTimerLocked(): com.android.internal.os.BatteryStatsImpl.StopwatchTimer;
                        public getMobileRadioActiveTime(param0: number): number;
                        public createBluetoothScanResultBgCounterLocked(): com.android.internal.os.BatteryStatsImpl.Counter;
                        public getSensorTimerLocked(param0: number, param1: boolean): com.android.internal.os.BatteryStatsImpl.DualTimer;
                        public noteResetAudioLocked(param0: number): void;
                        public noteActivityPausedLocked(param0: number): void;
                        public hasNetworkActivity(): boolean;
                        public createVideoTurnedOnTimerLocked(): com.android.internal.os.BatteryStatsImpl.StopwatchTimer;
                        public noteStopGps(param0: number): void;
                        public createVibratorOnTimerLocked(): com.android.internal.os.BatteryStatsImpl.BatchTimer;
                        public readSyncSummaryFromParcelLocked(param0: string, param1: globalAndroid.os.Parcel): void;
                        public getCameraTurnedOnTimer(): com.android.internal.os.BatteryStatsImpl.Timer;
                        public getUserCpuTimeUs(param0: number): number;
                        public getMobileRadioApWakeupCount(param0: number): number;
                        public noteWifiBatchedScanStartedLocked(param0: number, param1: number): void;
                        public getTimeAtCpuSpeed(param0: number, param1: number, param2: number): number;
                        public noteStartJobLocked(param0: string, param1: number): void;
                        public noteWifiStoppedLocked(param0: number): void;
                        public readJobSummaryFromParcelLocked(param0: string, param1: globalAndroid.os.Parcel): void;
                        public getPackageStatsLocked(param0: string): com.android.internal.os.BatteryStatsImpl.Uid.Pkg;
                        public noteStopJobLocked(param0: string, param1: number): void;
                        public noteWifiRadioApWakeupLocked(): void;
                        public getPackageStats(): globalAndroid.util.ArrayMap<string, any>;
                        public noteAudioTurnedOffLocked(param0: number): void;
                        public getMobileRadioActiveCount(param0: number): number;
                        public createFlashlightTurnedOnTimerLocked(): com.android.internal.os.BatteryStatsImpl.StopwatchTimer;
                        public getAggregatedPartialWakelockTimer(): com.android.internal.os.BatteryStatsImpl.Timer;
                        public noteVideoTurnedOffLocked(param0: number): void;
                        public reset(param0: number, param1: number): boolean;
                        public getWifiBatchedScanTime(param0: number, param1: number, param2: number): number;
                        public getProcessStateTimer(param0: number): com.android.internal.os.BatteryStatsImpl.Timer;
                        public noteBluetoothScanStoppedLocked(param0: number): void;
                        public getModemControllerActivity(): globalAndroid.os.BatteryStats.ControllerActivityCounter;
                        public getSystemCpuTimeUs(param0: number): number;
                        public constructor(param0: com.android.internal.os.BatteryStatsImpl, param1: number);
                        public getWifiRadioApWakeupCount(param0: number): number;
                        public getSyncStats(): globalAndroid.util.ArrayMap<string, any>;
                        public getNetworkActivityBytes(param0: number, param1: number): number;
                        public getOrCreateBluetoothControllerActivityLocked(): com.android.internal.os.BatteryStatsImpl.ControllerActivityCounterImpl;
                        public noteStopSensor(param0: number, param1: number): void;
                        public noteVibratorOffLocked(): void;
                        public createAggregatedPartialWakelockTimerLocked(): com.android.internal.os.BatteryStatsImpl.DualTimer;
                        public getOrCreateWifiControllerActivityLocked(): com.android.internal.os.BatteryStatsImpl.ControllerActivityCounterImpl;
                        public getBluetoothUnoptimizedScanBackgroundTimer(): com.android.internal.os.BatteryStatsImpl.Timer;
                        public getWifiMulticastTime(param0: number, param1: number): number;
                        public getUserActivityCount(param0: number, param1: number): number;
                        public noteFullWifiLockReleasedLocked(param0: number): void;
                        public isInBackground(): boolean;
                        public noteResetVideoLocked(param0: number): void;
                        public noteVideoTurnedOnLocked(param0: number): void;
                        public getProcessStatsLocked(param0: string): com.android.internal.os.BatteryStatsImpl.Uid.Proc;
                        public noteStartSyncLocked(param0: string, param1: number): void;
                        public noteVibratorOnLocked(param0: number): void;
                        public getBluetoothUnoptimizedScanTimer(): com.android.internal.os.BatteryStatsImpl.Timer;
                        public noteStopWakeLocked(param0: number, param1: string, param2: number, param3: number): void;
                        public getUid(): number;
                        public noteResetCameraLocked(param0: number): void;
                        public getWifiScanBackgroundTime(param0: number): number;
                        public getBluetoothControllerActivity(): globalAndroid.os.BatteryStats.ControllerActivityCounter;
                        public getProcessStateTime(param0: number, param1: number, param2: number): number;
                        public getWifiScanTime(param0: number, param1: number): number;
                        public updateOnBatteryBgTimeBase(param0: number, param1: number): boolean;
                        public getWifiControllerActivity(): globalAndroid.os.BatteryStats.ControllerActivityCounter;
                        public getBluetoothScanResultBgCounter(): com.android.internal.os.BatteryStatsImpl.Counter;
                        public getSensorStats(): globalAndroid.util.SparseArray<any>;
                        public getFullWifiLockTime(param0: number, param1: number): number;
                        public noteBluetoothScanResultsLocked(param0: number): void;
                        public getOrCreateModemControllerActivityLocked(): com.android.internal.os.BatteryStatsImpl.ControllerActivityCounterImpl;
                        public noteUserActivityLocked(param0: number): void;
                        public getWifiScanBackgroundCount(param0: number): number;
                        public noteCameraTurnedOnLocked(param0: number): void;
                        public getWifiBatchedScanCount(param0: number, param1: number): number;
                        public noteFlashlightTurnedOnLocked(param0: number): void;
                        public readWakeSummaryFromParcelLocked(param0: string, param1: globalAndroid.os.Parcel): void;
                        public getForegroundActivityTimer(): com.android.internal.os.BatteryStatsImpl.Timer;
                        public noteCameraTurnedOffLocked(param0: number): void;
                        public getAudioTurnedOnTimer(): com.android.internal.os.BatteryStatsImpl.Timer;
                        public getWakelockTimerLocked(param0: com.android.internal.os.BatteryStatsImpl.Uid.Wakelock, param1: number): com.android.internal.os.BatteryStatsImpl.StopwatchTimer;
                        public getWifiScanActualTime(param0: number): number;
                        public noteStartSensor(param0: number, param1: number): void;
                        public getBatteryStats(): com.android.internal.os.BatteryStatsImpl;
                        public updateOnBatteryScreenOffBgTimeBase(param0: number, param1: number): boolean;
                        public updateUidProcessStateLocked(param0: number): void;
                        public noteStartGps(param0: number): void;
                        public getBluetoothScanTimer(): com.android.internal.os.BatteryStatsImpl.Timer;
                        public noteStartWakeLocked(param0: number, param1: string, param2: number, param3: number): void;
                        public getWifiRunningTime(param0: number, param1: number): number;
                        public getWifiScanCount(param0: number): number;
                        public getServiceStatsLocked(param0: string, param1: string): com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv;
                        public noteWifiMulticastEnabledLocked(param0: number): void;
                        public noteResetFlashlightLocked(param0: number): void;
                        public noteResetBluetoothScanLocked(param0: number): void;
                        public getCpuFreqTimes(param0: number): number[];
                        public getPidStats(): globalAndroid.util.SparseArray<any>;
                    }
                    export module Uid {
                        export class Pkg implements com.android.internal.os.BatteryStatsImpl.TimeBaseObs {
                            public static class: java.lang.Class<com.android.internal.os.BatteryStatsImpl.Uid.Pkg>;
                            public mBsi: com.android.internal.os.BatteryStatsImpl;
                            public getServiceStats(): globalAndroid.util.ArrayMap<string, any>;
                            public noteWakeupAlarmLocked(param0: string): void;
                            public getWakeupAlarmStats(): globalAndroid.util.ArrayMap<string, any>;
                            public onTimeStopped(param0: number, param1: number, param2: number): void;
                            public constructor(param0: com.android.internal.os.BatteryStatsImpl);
                            public onTimeStarted(param0: number, param1: number, param2: number): void;
                        }
                        export module Pkg {
                            export class Serv implements com.android.internal.os.BatteryStatsImpl.TimeBaseObs {
                                public static class: java.lang.Class<com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv>;
                                public mBsi: com.android.internal.os.BatteryStatsImpl;
                                public mLastLaunches: number;
                                public mLastStartTime: number;
                                public mLastStarts: number;
                                public mLaunched: boolean;
                                public mLaunchedSince: number;
                                public mLaunchedTime: number;
                                public mLaunches: number;
                                public mLoadedLaunches: number;
                                public mLoadedStartTime: number;
                                public mLoadedStarts: number;
                                public mPkg: com.android.internal.os.BatteryStatsImpl.Uid.Pkg;
                                public mRunning: boolean;
                                public mRunningSince: number;
                                public mStartTime: number;
                                public mStarts: number;
                                public mUnpluggedLaunches: number;
                                public mUnpluggedStartTime: number;
                                public mUnpluggedStarts: number;
                                public writeToParcelLocked(param0: globalAndroid.os.Parcel): void;
                                public getBatteryStats(): com.android.internal.os.BatteryStatsImpl;
                                public getStarts(param0: number): number;
                                public startRunningLocked(): void;
                                public constructor(param0: com.android.internal.os.BatteryStatsImpl);
                                public detach(): void;
                                public getStartTimeToNowLocked(param0: number): number;
                                public stopRunningLocked(): void;
                                public getLaunches(param0: number): number;
                                public onTimeStopped(param0: number, param1: number, param2: number): void;
                                public getLaunchTimeToNowLocked(param0: number): number;
                                public onTimeStarted(param0: number, param1: number, param2: number): void;
                                public startLaunchedLocked(): void;
                                public getStartTime(param0: number, param1: number): number;
                                public readFromParcelLocked(param0: globalAndroid.os.Parcel): void;
                                public stopLaunchedLocked(): void;
                            }
                        }
                        export class Proc implements com.android.internal.os.BatteryStatsImpl.TimeBaseObs {
                            public static class: java.lang.Class<com.android.internal.os.BatteryStatsImpl.Uid.Proc>;
                            public mBsi: com.android.internal.os.BatteryStatsImpl;
                            public isActive(): boolean;
                            public countExcessivePowers(): number;
                            public onTimeStopped(param0: number, param1: number, param2: number): void;
                            public addExcessiveCpu(param0: number, param1: number): void;
                            public getSystemTime(param0: number): number;
                            public getStarts(param0: number): number;
                            public getUserTime(param0: number): number;
                            public onTimeStarted(param0: number, param1: number, param2: number): void;
                            public constructor(param0: com.android.internal.os.BatteryStatsImpl, param1: string);
                            public getNumCrashes(param0: number): number;
                            public incNumAnrsLocked(): void;
                            public getExcessivePower(param0: number): globalAndroid.os.BatteryStats.Uid.Proc.ExcessivePower;
                            public getNumAnrs(param0: number): number;
                            public incNumCrashesLocked(): void;
                            public incStartsLocked(): void;
                            public addExcessiveWake(param0: number, param1: number): void;
                            public addCpuTimeLocked(param0: number, param1: number): void;
                            public addForegroundTimeLocked(param0: number): void;
                            public getForegroundTime(param0: number): number;
                        }
                        export class Sensor extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.os.BatteryStatsImpl.Uid.Sensor>;
                            public mBsi: com.android.internal.os.BatteryStatsImpl;
                            public mUid: com.android.internal.os.BatteryStatsImpl.Uid;
                            public getSensorBackgroundTime(): com.android.internal.os.BatteryStatsImpl.Timer;
                            public getHandle(): number;
                            public getSensorTime(): com.android.internal.os.BatteryStatsImpl.Timer;
                            public constructor(param0: com.android.internal.os.BatteryStatsImpl, param1: com.android.internal.os.BatteryStatsImpl.Uid, param2: number);
                        }
                        export class Wakelock extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.os.BatteryStatsImpl.Uid.Wakelock>;
                            public mBsi: com.android.internal.os.BatteryStatsImpl;
                            public mUid: com.android.internal.os.BatteryStatsImpl.Uid;
                            public constructor(param0: com.android.internal.os.BatteryStatsImpl, param1: com.android.internal.os.BatteryStatsImpl.Uid);
                            public getWakeTime(param0: number): com.android.internal.os.BatteryStatsImpl.Timer;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class BinderInternal extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.BinderInternal>;
                    public static forceGc(param0: string): void;
                    public static setMaxThreads(param0: number): void;
                    public static getContextObject(): globalAndroid.os.IBinder;
                    public constructor();
                    public static getLastGcTime(): number;
                    public static joinThreadPool(): void;
                    public static addGcWatcher(param0: java.lang.Runnable): void;
                    public static disableBackgroundScheduling(param0: boolean): void;
                }
                export module BinderInternal {
                    export class GcWatcher extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.BinderInternal.GcWatcher>;
                        public finalize(): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class BluetoothPowerCalculator extends com.android.internal.os.PowerCalculator {
                    public static class: java.lang.Class<com.android.internal.os.BluetoothPowerCalculator>;
                    public reset(): void;
                    public constructor();
                    public calculateApp(param0: com.android.internal.os.BatterySipper, param1: globalAndroid.os.BatteryStats.Uid, param2: number, param3: number, param4: number): void;
                    public calculateRemaining(param0: com.android.internal.os.BatterySipper, param1: globalAndroid.os.BatteryStats, param2: number, param3: number, param4: number): void;
                    public constructor(param0: com.android.internal.os.PowerProfile);
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class CameraPowerCalculator extends com.android.internal.os.PowerCalculator {
                    public static class: java.lang.Class<com.android.internal.os.CameraPowerCalculator>;
                    public constructor();
                    public calculateApp(param0: com.android.internal.os.BatterySipper, param1: globalAndroid.os.BatteryStats.Uid, param2: number, param3: number, param4: number): void;
                    public constructor(param0: com.android.internal.os.PowerProfile);
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class CpuPowerCalculator extends com.android.internal.os.PowerCalculator {
                    public static class: java.lang.Class<com.android.internal.os.CpuPowerCalculator>;
                    public constructor();
                    public calculateApp(param0: com.android.internal.os.BatterySipper, param1: globalAndroid.os.BatteryStats.Uid, param2: number, param3: number, param4: number): void;
                    public constructor(param0: com.android.internal.os.PowerProfile);
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class FlashlightPowerCalculator extends com.android.internal.os.PowerCalculator {
                    public static class: java.lang.Class<com.android.internal.os.FlashlightPowerCalculator>;
                    public constructor();
                    public calculateApp(param0: com.android.internal.os.BatterySipper, param1: globalAndroid.os.BatteryStats.Uid, param2: number, param3: number, param4: number): void;
                    public constructor(param0: com.android.internal.os.PowerProfile);
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class FuseAppLoop extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.FuseAppLoop>;
                    public static ROOT_INODE: number;
                    public constructor(param0: number, param1: globalAndroid.os.ParcelFileDescriptor, param2: java.util.concurrent.ThreadFactory);
                    public registerCallback(param0: globalAndroid.os.ProxyFileDescriptorCallback, param1: globalAndroid.os.Handler): number;
                    public unregisterCallback(param0: number): void;
                    public getMountPointId(): number;
                    public handleMessage(param0: globalAndroid.os.Message): boolean;
                }
                export module FuseAppLoop {
                    export class Args extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.FuseAppLoop.Args>;
                    }
                    export class BytesMap extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.FuseAppLoop.BytesMap>;
                    }
                    export class BytesMapEntry extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.FuseAppLoop.BytesMapEntry>;
                    }
                    export class CallbackEntry extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.FuseAppLoop.CallbackEntry>;
                    }
                    export class UnmountedException extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.FuseAppLoop.UnmountedException>;
                        public constructor();
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class FuseUnavailableMountException extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.FuseUnavailableMountException>;
                    public constructor(param0: number);
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class HandlerCaller extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.HandlerCaller>;
                    public obtainMessageIIII(param0: number, param1: number, param2: number, param3: number, param4: number): globalAndroid.os.Message;
                    public obtainMessageIIO(param0: number, param1: number, param2: number, param3: any): globalAndroid.os.Message;
                    public obtainMessage(param0: number): globalAndroid.os.Message;
                    public obtainMessageOOOOO(param0: number, param1: any, param2: any, param3: any, param4: any, param5: any): globalAndroid.os.Message;
                    public obtainMessageI(param0: number, param1: number): globalAndroid.os.Message;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.os.Looper, param2: com.android.internal.os.HandlerCaller.Callback, param3: boolean);
                    public obtainMessageBOO(param0: number, param1: boolean, param2: any, param3: any): globalAndroid.os.Message;
                    public removeMessages(param0: number): void;
                    public obtainMessageII(param0: number, param1: number, param2: number): globalAndroid.os.Message;
                    public obtainMessageIIIIII(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number): globalAndroid.os.Message;
                    public obtainMessageIOOO(param0: number, param1: number, param2: any, param3: any, param4: any): globalAndroid.os.Message;
                    public obtainMessageIIIIO(param0: number, param1: number, param2: number, param3: number, param4: number, param5: any): globalAndroid.os.Message;
                    public obtainMessageO(param0: number, param1: any): globalAndroid.os.Message;
                    public sendMessageAndWait(param0: globalAndroid.os.Message): com.android.internal.os.SomeArgs;
                    public obtainMessageIIOO(param0: number, param1: number, param2: number, param3: any, param4: any): globalAndroid.os.Message;
                    public obtainMessageOOO(param0: number, param1: any, param2: any, param3: any): globalAndroid.os.Message;
                    public removeMessages(param0: number, param1: any): void;
                    public hasMessages(param0: number): boolean;
                    public obtainMessageBO(param0: number, param1: boolean, param2: any): globalAndroid.os.Message;
                    public obtainMessageOOOOII(param0: number, param1: any, param2: any, param3: any, param4: any, param5: number, param6: number): globalAndroid.os.Message;
                    public sendMessage(param0: globalAndroid.os.Message): void;
                    public obtainMessageIIOOOO(param0: number, param1: number, param2: number, param3: any, param4: any, param5: any, param6: any): globalAndroid.os.Message;
                    public sendMessageDelayed(param0: globalAndroid.os.Message, param1: number): void;
                    public getHandler(): globalAndroid.os.Handler;
                    public obtainMessageIO(param0: number, param1: number, param2: any): globalAndroid.os.Message;
                    public obtainMessageOOOO(param0: number, param1: any, param2: any, param3: any, param4: any): globalAndroid.os.Message;
                    public obtainMessageOO(param0: number, param1: any, param2: any): globalAndroid.os.Message;
                    public executeOrSendMessage(param0: globalAndroid.os.Message): void;
                    public obtainMessageIOO(param0: number, param1: number, param2: any, param3: any): globalAndroid.os.Message;
                    public obtainMessageIIOOO(param0: number, param1: number, param2: number, param3: any, param4: any, param5: any): globalAndroid.os.Message;
                }
                export module HandlerCaller {
                    export class Callback extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.HandlerCaller.Callback>;
                        /**
                         * Constructs a new instance of the com.android.internal.os.HandlerCaller$Callback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            executeMessage(param0: globalAndroid.os.Message): void;
                        });
                        public constructor();
                        public executeMessage(param0: globalAndroid.os.Message): void;
                    }
                    export class MyHandler extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.HandlerCaller.MyHandler>;
                        public handleMessage(param0: globalAndroid.os.Message): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class IDropBoxManagerService extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.IDropBoxManagerService>;
                    /**
                     * Constructs a new instance of the com.android.internal.os.IDropBoxManagerService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        add(param0: globalAndroid.os.DropBoxManager.Entry): void;
                        getNextEntry(param0: string, param1: number): globalAndroid.os.DropBoxManager.Entry;
                        isTagEnabled(param0: string): boolean;
                    });
                    public constructor();
                    public add(param0: globalAndroid.os.DropBoxManager.Entry): void;
                    public getNextEntry(param0: string, param1: number): globalAndroid.os.DropBoxManager.Entry;
                    public isTagEnabled(param0: string): boolean;
                }
                export module IDropBoxManagerService {
                    export abstract class Stub implements com.android.internal.os.IDropBoxManagerService {
                        public static class: java.lang.Class<com.android.internal.os.IDropBoxManagerService.Stub>;
                        public add(param0: globalAndroid.os.DropBoxManager.Entry): void;
                        public constructor();
                        public getNextEntry(param0: string, param1: number): globalAndroid.os.DropBoxManager.Entry;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.os.IDropBoxManagerService;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public isTagEnabled(param0: string): boolean;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.os.IDropBoxManagerService {
                            public static class: java.lang.Class<com.android.internal.os.IDropBoxManagerService.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public getNextEntry(param0: string, param1: number): globalAndroid.os.DropBoxManager.Entry;
                            public isTagEnabled(param0: string): boolean;
                            public add(param0: globalAndroid.os.DropBoxManager.Entry): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class IParcelFileDescriptorFactory extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.IParcelFileDescriptorFactory>;
                    /**
                     * Constructs a new instance of the com.android.internal.os.IParcelFileDescriptorFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        open(param0: string, param1: number): globalAndroid.os.ParcelFileDescriptor;
                    });
                    public constructor();
                    public open(param0: string, param1: number): globalAndroid.os.ParcelFileDescriptor;
                }
                export module IParcelFileDescriptorFactory {
                    export abstract class Stub implements com.android.internal.os.IParcelFileDescriptorFactory {
                        public static class: java.lang.Class<com.android.internal.os.IParcelFileDescriptorFactory.Stub>;
                        public constructor();
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.os.IParcelFileDescriptorFactory;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public open(param0: string, param1: number): globalAndroid.os.ParcelFileDescriptor;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.os.IParcelFileDescriptorFactory {
                            public static class: java.lang.Class<com.android.internal.os.IParcelFileDescriptorFactory.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public open(param0: string, param1: number): globalAndroid.os.ParcelFileDescriptor;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class IRegionalizationService extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.IRegionalizationService>;
                    /**
                     * Constructs a new instance of the com.android.internal.os.IRegionalizationService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        checkFileExists(param0: string): boolean;
                        deleteFilesUnderDir(param0: string, param1: string, param2: boolean): void;
                        readFile(param0: string, param1: string): java.util.List<string>;
                        writeFile(param0: string, param1: string, param2: boolean): boolean;
                    });
                    public constructor();
                    public readFile(param0: string, param1: string): java.util.List<string>;
                    public writeFile(param0: string, param1: string, param2: boolean): boolean;
                    public checkFileExists(param0: string): boolean;
                    public deleteFilesUnderDir(param0: string, param1: string, param2: boolean): void;
                }
                export module IRegionalizationService {
                    export abstract class Stub implements com.android.internal.os.IRegionalizationService {
                        public static class: java.lang.Class<com.android.internal.os.IRegionalizationService.Stub>;
                        public deleteFilesUnderDir(param0: string, param1: string, param2: boolean): void;
                        public constructor();
                        public readFile(param0: string, param1: string): java.util.List<string>;
                        public checkFileExists(param0: string): boolean;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public writeFile(param0: string, param1: string, param2: boolean): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.os.IRegionalizationService;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.os.IRegionalizationService {
                            public static class: java.lang.Class<com.android.internal.os.IRegionalizationService.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public deleteFilesUnderDir(param0: string, param1: string, param2: boolean): void;
                            public checkFileExists(param0: string): boolean;
                            public writeFile(param0: string, param1: string, param2: boolean): boolean;
                            public readFile(param0: string, param1: string): java.util.List<string>;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class IResultReceiver extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.IResultReceiver>;
                    /**
                     * Constructs a new instance of the com.android.internal.os.IResultReceiver interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        send(param0: number, param1: globalAndroid.os.Bundle): void;
                    });
                    public constructor();
                    public send(param0: number, param1: globalAndroid.os.Bundle): void;
                }
                export module IResultReceiver {
                    export abstract class Stub implements com.android.internal.os.IResultReceiver {
                        public static class: java.lang.Class<com.android.internal.os.IResultReceiver.Stub>;
                        public constructor();
                        public send(param0: number, param1: globalAndroid.os.Bundle): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.os.IResultReceiver;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.os.IResultReceiver {
                            public static class: java.lang.Class<com.android.internal.os.IResultReceiver.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public send(param0: number, param1: globalAndroid.os.Bundle): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class IShellCallback extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.IShellCallback>;
                    /**
                     * Constructs a new instance of the com.android.internal.os.IShellCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        openOutputFile(param0: string, param1: string): globalAndroid.os.ParcelFileDescriptor;
                    });
                    public constructor();
                    public openOutputFile(param0: string, param1: string): globalAndroid.os.ParcelFileDescriptor;
                }
                export module IShellCallback {
                    export abstract class Stub implements com.android.internal.os.IShellCallback {
                        public static class: java.lang.Class<com.android.internal.os.IShellCallback.Stub>;
                        public constructor();
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.os.IShellCallback;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public openOutputFile(param0: string, param1: string): globalAndroid.os.ParcelFileDescriptor;
                        public asBinder(): globalAndroid.os.IBinder;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.os.IShellCallback {
                            public static class: java.lang.Class<com.android.internal.os.IShellCallback.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public openOutputFile(param0: string, param1: string): globalAndroid.os.ParcelFileDescriptor;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class KernelCpuSpeedReader extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.KernelCpuSpeedReader>;
                    public readDelta(): number[];
                    public constructor(param0: number, param1: number);
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class KernelMemoryBandwidthStats extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.KernelMemoryBandwidthStats>;
                    public mBandwidthEntries: globalAndroid.util.LongSparseLongArray;
                    public getBandwidthEntries(): globalAndroid.util.LongSparseLongArray;
                    public updateStats(): void;
                    public constructor();
                    public parseStats(param0: java.io.BufferedReader): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class KernelUidCpuFreqTimeReader extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.KernelUidCpuFreqTimeReader>;
                    public readDelta(param0: java.io.BufferedReader, param1: com.android.internal.os.KernelUidCpuFreqTimeReader.Callback): void;
                    public removeUid(param0: number): void;
                    public constructor();
                    public readDelta(param0: com.android.internal.os.KernelUidCpuFreqTimeReader.Callback): void;
                }
                export module KernelUidCpuFreqTimeReader {
                    export class Callback extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.KernelUidCpuFreqTimeReader.Callback>;
                        /**
                         * Constructs a new instance of the com.android.internal.os.KernelUidCpuFreqTimeReader$Callback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            onCpuFreqs(param0: number[]): void;
                            onUidCpuFreqTime(param0: number, param1: number[]): void;
                        });
                        public constructor();
                        public onCpuFreqs(param0: number[]): void;
                        public onUidCpuFreqTime(param0: number, param1: number[]): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class KernelUidCpuTimeReader extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.KernelUidCpuTimeReader>;
                    public removeUid(param0: number): void;
                    public constructor();
                    public readDelta(param0: com.android.internal.os.KernelUidCpuTimeReader.Callback): void;
                }
                export module KernelUidCpuTimeReader {
                    export class Callback extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.KernelUidCpuTimeReader.Callback>;
                        /**
                         * Constructs a new instance of the com.android.internal.os.KernelUidCpuTimeReader$Callback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            onUidCpuTime(param0: number, param1: number, param2: number): void;
                        });
                        public constructor();
                        public onUidCpuTime(param0: number, param1: number, param2: number): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class KernelWakelockReader extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.KernelWakelockReader>;
                    public constructor();
                    public parseProcWakelocks(param0: number[], param1: number, param2: boolean, param3: com.android.internal.os.KernelWakelockStats): com.android.internal.os.KernelWakelockStats;
                    public readKernelWakelockStats(param0: com.android.internal.os.KernelWakelockStats): com.android.internal.os.KernelWakelockStats;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class KernelWakelockStats extends java.util.HashMap<string, com.android.internal.os.KernelWakelockStats.Entry> {
                    public static class: java.lang.Class<com.android.internal.os.KernelWakelockStats>;
                    public constructor();
                }
                export module KernelWakelockStats {
                    export class Entry extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.KernelWakelockStats.Entry>;
                        public mCount: number;
                        public mTotalTime: number;
                        public mVersion: number;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export abstract class LoggingPrintStream {
                    public static class: java.lang.Class<com.android.internal.os.LoggingPrintStream>;
                    public println(param0: number): void;
                    public append(param0: string, param1: number, param2: number): java.io.PrintStream;
                    public print(param0: any): void;
                    public print(param0: string[]): void;
                    public write(param0: number[], param1: number, param2: number): void;
                    public constructor();
                    public close(): void;
                    public format(param0: java.util.Locale, param1: string, param2: any[]): java.io.PrintStream;
                    public print(param0: number): void;
                    public println(param0: string): void;
                    public print(param0: boolean): void;
                    public format(param0: string, param1: any[]): java.io.PrintStream;
                    public print(param0: string): void;
                    public write(param0: number[]): void;
                    public flush(): void;
                    public setError(): void;
                    public write(param0: number): void;
                    public checkError(): boolean;
                    public println(): void;
                    public println(param0: boolean): void;
                    public log(param0: string): void;
                    public printf(param0: string, param1: any[]): java.io.PrintStream;
                    public println(param0: string[]): void;
                    public printf(param0: java.util.Locale, param1: string, param2: any[]): java.io.PrintStream;
                    public append(param0: string): java.io.PrintStream;
                    public println(param0: any): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class MemoryPowerCalculator extends com.android.internal.os.PowerCalculator {
                    public static class: java.lang.Class<com.android.internal.os.MemoryPowerCalculator>;
                    public static TAG: string;
                    public constructor();
                    public calculateApp(param0: com.android.internal.os.BatterySipper, param1: globalAndroid.os.BatteryStats.Uid, param2: number, param3: number, param4: number): void;
                    public calculateRemaining(param0: com.android.internal.os.BatterySipper, param1: globalAndroid.os.BatteryStats, param2: number, param3: number, param4: number): void;
                    public constructor(param0: com.android.internal.os.PowerProfile);
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class MobileRadioPowerCalculator extends com.android.internal.os.PowerCalculator {
                    public static class: java.lang.Class<com.android.internal.os.MobileRadioPowerCalculator>;
                    public reset(): void;
                    public constructor();
                    public reset(param0: globalAndroid.os.BatteryStats): void;
                    public calculateApp(param0: com.android.internal.os.BatterySipper, param1: globalAndroid.os.BatteryStats.Uid, param2: number, param3: number, param4: number): void;
                    public constructor(param0: com.android.internal.os.PowerProfile, param1: globalAndroid.os.BatteryStats);
                    public calculateRemaining(param0: com.android.internal.os.BatterySipper, param1: globalAndroid.os.BatteryStats, param2: number, param3: number, param4: number): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class PathClassLoaderFactory extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.PathClassLoaderFactory>;
                    public static createClassLoader(param0: string, param1: string, param2: string, param3: java.lang.ClassLoader, param4: number, param5: boolean): dalvik.system.PathClassLoader;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export abstract class PowerCalculator {
                    public static class: java.lang.Class<com.android.internal.os.PowerCalculator>;
                    public reset(): void;
                    public constructor();
                    public calculateApp(param0: com.android.internal.os.BatterySipper, param1: globalAndroid.os.BatteryStats.Uid, param2: number, param3: number, param4: number): void;
                    public calculateRemaining(param0: com.android.internal.os.BatterySipper, param1: globalAndroid.os.BatteryStats, param2: number, param3: number, param4: number): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class PowerProfile extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.PowerProfile>;
                    public static POWER_AUDIO: string;
                    public static POWER_BATTERY_CAPACITY: string;
                    public static POWER_BLUETOOTH_ACTIVE: string;
                    public static POWER_BLUETOOTH_AT_CMD: string;
                    public static POWER_BLUETOOTH_CONTROLLER_IDLE: string;
                    public static POWER_BLUETOOTH_CONTROLLER_OPERATING_VOLTAGE: string;
                    public static POWER_BLUETOOTH_CONTROLLER_RX: string;
                    public static POWER_BLUETOOTH_CONTROLLER_TX: string;
                    public static POWER_BLUETOOTH_ON: string;
                    public static POWER_CAMERA: string;
                    public static POWER_CPU_ACTIVE: string;
                    public static POWER_CPU_AWAKE: string;
                    public static POWER_CPU_IDLE: string;
                    public static POWER_CPU_SPEEDS: string;
                    public static POWER_FLASHLIGHT: string;
                    public static POWER_GPS_ON: string;
                    public static POWER_MEMORY: string;
                    public static POWER_MODEM_CONTROLLER_IDLE: string;
                    public static POWER_MODEM_CONTROLLER_OPERATING_VOLTAGE: string;
                    public static POWER_MODEM_CONTROLLER_RX: string;
                    public static POWER_MODEM_CONTROLLER_TX: string;
                    public static POWER_NONE: string;
                    public static POWER_RADIO_ACTIVE: string;
                    public static POWER_RADIO_ON: string;
                    public static POWER_RADIO_SCANNING: string;
                    public static POWER_SCREEN_FULL: string;
                    public static POWER_SCREEN_ON: string;
                    public static POWER_VIDEO: string;
                    public static POWER_WIFI_ACTIVE: string;
                    public static POWER_WIFI_BATCHED_SCAN: string;
                    public static POWER_WIFI_CONTROLLER_IDLE: string;
                    public static POWER_WIFI_CONTROLLER_OPERATING_VOLTAGE: string;
                    public static POWER_WIFI_CONTROLLER_RX: string;
                    public static POWER_WIFI_CONTROLLER_TX: string;
                    public static POWER_WIFI_CONTROLLER_TX_LEVELS: string;
                    public static POWER_WIFI_ON: string;
                    public static POWER_WIFI_SCAN: string;
                    public constructor(param0: globalAndroid.content.Context);
                    public getAveragePowerForCpu(param0: number, param1: number): number;
                    public getNumCpuClusters(): number;
                    public getBatteryCapacity(): number;
                    public getNumSpeedStepsInCpuCluster(param0: number): number;
                    public getNumElements(param0: string): number;
                    public getAveragePowerOrDefault(param0: string, param1: number): number;
                    public getAveragePower(param0: string): number;
                    public getNumCoresInCpuCluster(param0: number): number;
                    public getAveragePower(param0: string, param1: number): number;
                }
                export module PowerProfile {
                    export class CpuClusterKey extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.PowerProfile.CpuClusterKey>;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class ProcessCpuTracker extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.ProcessCpuTracker>;
                    public getLastIrqTime(): number;
                    public getStats(param0: number): com.android.internal.os.ProcessCpuTracker.Stats;
                    public getCpuTimeForPid(param0: number): number;
                    public printCurrentState(param0: number): string;
                    public getStats(param0: com.android.internal.os.ProcessCpuTracker.FilterStats): java.util.List<com.android.internal.os.ProcessCpuTracker.Stats>;
                    public getLastUserTime(): number;
                    public getLastSystemTime(): number;
                    public init(): void;
                    public countStats(): number;
                    public onMeasureProcessName(param0: string): number;
                    public onLoadChanged(param0: number, param1: number, param2: number): void;
                    public constructor(param0: boolean);
                    public getTotalCpuPercent(): number;
                    public printCurrentLoad(): string;
                    public update(): void;
                    public getWorkingStats(param0: number): com.android.internal.os.ProcessCpuTracker.Stats;
                    public getLastIoWaitTime(): number;
                    public getLastSoftIrqTime(): number;
                    public countWorkingStats(): number;
                    public getLastIdleTime(): number;
                    public hasGoodLastStats(): boolean;
                }
                export module ProcessCpuTracker {
                    export class FilterStats extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.ProcessCpuTracker.FilterStats>;
                        /**
                         * Constructs a new instance of the com.android.internal.os.ProcessCpuTracker$FilterStats interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            needed(param0: com.android.internal.os.ProcessCpuTracker.Stats): boolean;
                        });
                        public constructor();
                        public needed(param0: com.android.internal.os.ProcessCpuTracker.Stats): boolean;
                    }
                    export class Stats extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.ProcessCpuTracker.Stats>;
                        public active: boolean;
                        public added: boolean;
                        public baseName: string;
                        public base_majfaults: number;
                        public base_minfaults: number;
                        public base_stime: number;
                        public base_uptime: number;
                        public base_utime: number;
                        public batteryStats: com.android.internal.os.BatteryStatsImpl.Uid.Proc;
                        public interesting: boolean;
                        public name: string;
                        public nameWidth: number;
                        public pid: number;
                        public rel_majfaults: number;
                        public rel_minfaults: number;
                        public rel_stime: number;
                        public rel_uptime: number;
                        public rel_utime: number;
                        public removed: boolean;
                        public uid: number;
                        public vsize: number;
                        public working: boolean;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class RegionalizationEnvironment extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.RegionalizationEnvironment>;
                    public static ISREGIONAL_APP: string;
                    public static ISREGIONAL_FRAMEWORK: string;
                    public static isSupported(): boolean;
                    public constructor();
                    public static getPackagesCount(): number;
                    public static isExcludedApp(param0: string): boolean;
                    public static getAllPackageDirectories(): java.util.List<java.io.File>;
                    public static getRegionalizationService(): com.android.internal.os.IRegionalizationService;
                    public static getStoragePos(): string;
                    public static isRegionalizationCarrierOverlayPackage(param0: string, param1: string): boolean;
                    public static getAllPackageNames(): java.util.List<string>;
                }
                export module RegionalizationEnvironment {
                    export class Package extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.RegionalizationEnvironment.Package>;
                        public getExcludedListFilePath(): string;
                        public getPriority(): number;
                        public getDirectory(): java.io.File;
                        public constructor(param0: string, param1: number, param2: string);
                        public getName(): string;
                        public getStoragePos(): string;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class RoSystemProperties extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.RoSystemProperties>;
                    public static CONFIG_LOW_RAM: boolean;
                    public static CONTROL_PRIVAPP_PERMISSIONS: string;
                    public static CONTROL_PRIVAPP_PERMISSIONS_DISABLE: boolean;
                    public static CONTROL_PRIVAPP_PERMISSIONS_ENFORCE: boolean;
                    public static CONTROL_PRIVAPP_PERMISSIONS_LOG: boolean;
                    public static CRYPTO_BLOCK_ENCRYPTED: boolean;
                    public static CRYPTO_ENCRYPTABLE: boolean;
                    public static CRYPTO_ENCRYPTED: boolean;
                    public static CRYPTO_FILE_ENCRYPTED: boolean;
                    public static CRYPTO_STATE: string;
                    public static CRYPTO_TYPE: string;
                    public static DEBUGGABLE: boolean;
                    public static FACTORYTEST: number;
                    public static FW_SYSTEM_USER_SPLIT: boolean;
                    public constructor();
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class RuntimeInit extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.RuntimeInit>;
                    public static getApplicationObject(): globalAndroid.os.IBinder;
                    public static redirectLogStreams(): void;
                    public static wtf(param0: string, param1: java.lang.Throwable, param2: boolean): void;
                    public constructor();
                    public static applicationInit(param0: number, param1: string[], param2: java.lang.ClassLoader): void;
                    public static commonInit(): void;
                    public static setApplicationObject(param0: globalAndroid.os.IBinder): void;
                    public static main(param0: string[]): void;
                }
                export module RuntimeInit {
                    export class Arguments extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.RuntimeInit.Arguments>;
                    }
                    export class KillApplicationHandler extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.RuntimeInit.KillApplicationHandler>;
                        public uncaughtException(param0: java.lang.Thread, param1: java.lang.Throwable): void;
                    }
                    export class LoggingHandler extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.RuntimeInit.LoggingHandler>;
                        public uncaughtException(param0: java.lang.Thread, param1: java.lang.Throwable): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class SamplingProfilerIntegration extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.SamplingProfilerIntegration>;
                    public static SNAPSHOT_DIR: string;
                    public static start(): void;
                    public static writeZygoteSnapshot(): void;
                    public static isEnabled(): boolean;
                    public static writeSnapshot(param0: string, param1: globalAndroid.content.pm.PackageInfo): void;
                    public constructor();
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class SensorPowerCalculator extends com.android.internal.os.PowerCalculator {
                    public static class: java.lang.Class<com.android.internal.os.SensorPowerCalculator>;
                    public constructor();
                    public calculateApp(param0: com.android.internal.os.BatterySipper, param1: globalAndroid.os.BatteryStats.Uid, param2: number, param3: number, param4: number): void;
                    public constructor(param0: com.android.internal.os.PowerProfile, param1: globalAndroid.hardware.SensorManager);
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class SomeArgs extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.SomeArgs>;
                    public arg1: any;
                    public arg2: any;
                    public arg3: any;
                    public arg4: any;
                    public arg5: any;
                    public arg6: any;
                    public arg7: any;
                    public arg8: any;
                    public argi1: number;
                    public argi2: number;
                    public argi3: number;
                    public argi4: number;
                    public argi5: number;
                    public argi6: number;
                    public recycle(): void;
                    public static obtain(): com.android.internal.os.SomeArgs;
                    public complete(): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class TransferPipe extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.TransferPipe>;
                    public constructor(param0: string);
                    public constructor();
                    public run(): void;
                    public close(): void;
                    public setBufferPrefix(param0: string): void;
                    public go(param0: java.io.FileDescriptor, param1: number): void;
                    public go(param0: java.io.FileDescriptor): void;
                    public kill(): void;
                    public static dumpAsync(param0: globalAndroid.os.IBinder, param1: java.io.FileDescriptor, param2: string[]): void;
                    public getWriteFd(): globalAndroid.os.ParcelFileDescriptor;
                }
                export module TransferPipe {
                    export class Caller extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.TransferPipe.Caller>;
                        /**
                         * Constructs a new instance of the com.android.internal.os.TransferPipe$Caller interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            go(param0: globalAndroid.os.IInterface, param1: java.io.FileDescriptor, param2: string, param3: string[]): void;
                        });
                        public constructor();
                        public go(param0: globalAndroid.os.IInterface, param1: java.io.FileDescriptor, param2: string, param3: string[]): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class WakelockPowerCalculator extends com.android.internal.os.PowerCalculator {
                    public static class: java.lang.Class<com.android.internal.os.WakelockPowerCalculator>;
                    public reset(): void;
                    public constructor();
                    public calculateApp(param0: com.android.internal.os.BatterySipper, param1: globalAndroid.os.BatteryStats.Uid, param2: number, param3: number, param4: number): void;
                    public calculateRemaining(param0: com.android.internal.os.BatterySipper, param1: globalAndroid.os.BatteryStats, param2: number, param3: number, param4: number): void;
                    public constructor(param0: com.android.internal.os.PowerProfile);
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class WebViewZygoteInit extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.WebViewZygoteInit>;
                    public static TAG: string;
                    public static main(param0: string[]): void;
                }
                export module WebViewZygoteInit {
                    export class WebViewZygoteConnection extends com.android.internal.os.ZygoteConnection {
                        public static class: java.lang.Class<com.android.internal.os.WebViewZygoteInit.WebViewZygoteConnection>;
                        public handlePreloadPackage(param0: string, param1: string, param2: string): boolean;
                        public preload(): void;
                        public isPreloadComplete(): boolean;
                    }
                    export class WebViewZygoteServer extends com.android.internal.os.ZygoteServer {
                        public static class: java.lang.Class<com.android.internal.os.WebViewZygoteInit.WebViewZygoteServer>;
                        public createNewConnection(param0: globalAndroid.net.LocalSocket, param1: string): com.android.internal.os.ZygoteConnection;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class WifiPowerCalculator extends com.android.internal.os.PowerCalculator {
                    public static class: java.lang.Class<com.android.internal.os.WifiPowerCalculator>;
                    public reset(): void;
                    public constructor();
                    public calculateApp(param0: com.android.internal.os.BatterySipper, param1: globalAndroid.os.BatteryStats.Uid, param2: number, param3: number, param4: number): void;
                    public calculateRemaining(param0: com.android.internal.os.BatterySipper, param1: globalAndroid.os.BatteryStats, param2: number, param3: number, param4: number): void;
                    public constructor(param0: com.android.internal.os.PowerProfile);
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class WifiPowerEstimator extends com.android.internal.os.PowerCalculator {
                    public static class: java.lang.Class<com.android.internal.os.WifiPowerEstimator>;
                    public reset(): void;
                    public constructor();
                    public calculateApp(param0: com.android.internal.os.BatterySipper, param1: globalAndroid.os.BatteryStats.Uid, param2: number, param3: number, param4: number): void;
                    public calculateRemaining(param0: com.android.internal.os.BatterySipper, param1: globalAndroid.os.BatteryStats, param2: number, param3: number, param4: number): void;
                    public constructor(param0: com.android.internal.os.PowerProfile);
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class WrapperInit extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.WrapperInit>;
                    public static main(param0: string[]): void;
                    public static execApplication(param0: string, param1: string, param2: number, param3: string, param4: java.io.FileDescriptor, param5: string[]): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class Zygote extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.Zygote>;
                    public static DEBUG_ALWAYS_JIT: number;
                    public static DEBUG_ENABLE_ASSERT: number;
                    public static DEBUG_ENABLE_CHECKJNI: number;
                    public static DEBUG_ENABLE_JDWP: number;
                    public static DEBUG_ENABLE_JNI_LOGGING: number;
                    public static DEBUG_ENABLE_SAFEMODE: number;
                    public static DEBUG_GENERATE_DEBUG_INFO: number;
                    public static DEBUG_JAVA_DEBUGGABLE: number;
                    public static DEBUG_NATIVE_DEBUGGABLE: number;
                    public static MOUNT_EXTERNAL_DEFAULT: number;
                    public static MOUNT_EXTERNAL_NONE: number;
                    public static MOUNT_EXTERNAL_READ: number;
                    public static MOUNT_EXTERNAL_WRITE: number;
                    public static forkSystemServer(param0: number, param1: number, param2: number[], param3: number, param4: number[][], param5: number, param6: number): number;
                    public static appendQuotedShellArgs(param0: java.lang.StringBuilder, param1: string[]): void;
                    public static forkAndSpecialize(param0: number, param1: number, param2: number[], param3: number, param4: number[][], param5: number, param6: string, param7: string, param8: number[], param9: number[], param10: string, param11: string): number;
                    public static execShell(param0: string): void;
                    public static nativeAllowFileAcrossFork(param0: string): void;
                    public static nativeUnmountStorageOnInit(): void;
                }
                export module Zygote {
                    export class MethodAndArgsCaller extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.Zygote.MethodAndArgsCaller>;
                        public constructor(param0: java.lang.reflect.Method, param1: string[]);
                        public run(): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class ZygoteConnection extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.ZygoteConnection>;
                    public isPreloadComplete(): boolean;
                    public handlePreloadPackage(param0: string, param1: string, param2: string): boolean;
                    public static applyInvokeWithSystemProperty(param0: com.android.internal.os.ZygoteConnection.Arguments): void;
                    public static applyDebuggerSystemProperty(param0: com.android.internal.os.ZygoteConnection.Arguments): void;
                    public preload(): void;
                }
                export module ZygoteConnection {
                    export class Arguments extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.os.ZygoteConnection.Arguments>;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class ZygoteInit extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.ZygoteInit>;
                    public static PRELOAD_RESOURCES: boolean;
                    public static zygoteInit(param0: number, param1: string[], param2: java.lang.ClassLoader): void;
                    public static lazyPreload(): void;
                    public static main(param0: string[]): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class ZygoteSecurityException extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.ZygoteSecurityException>;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module os {
                export class ZygoteServer extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.os.ZygoteServer>;
                    public static TAG: string;
                    public createNewConnection(param0: globalAndroid.net.LocalSocket, param1: string): com.android.internal.os.ZygoteConnection;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module policy {
                export class BackdropFrameRenderer implements globalAndroid.view.Choreographer.FrameCallback {
                    public static class: java.lang.Class<com.android.internal.policy.BackdropFrameRenderer>;
                    public onConfigurationChange(): void;
                    public doFrame(param0: number): void;
                    public setTargetRect(param0: globalAndroid.graphics.Rect, param1: boolean, param2: globalAndroid.graphics.Rect, param3: globalAndroid.graphics.Rect): void;
                    public run(): void;
                    public onRequestDraw(param0: boolean): void;
                    public releaseRenderer(): void;
                    public onContentDrawn(param0: number, param1: number, param2: number, param3: number): boolean;
                    public constructor(param0: com.android.internal.policy.DecorView, param1: globalAndroid.view.ThreadedRenderer, param2: globalAndroid.graphics.Rect, param3: globalAndroid.graphics.drawable.Drawable, param4: globalAndroid.graphics.drawable.Drawable, param5: globalAndroid.graphics.drawable.Drawable, param6: number, param7: number, param8: boolean, param9: globalAndroid.graphics.Rect, param10: globalAndroid.graphics.Rect, param11: number);
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module policy {
                export class DecorContext extends globalAndroid.view.ContextThemeWrapper {
                    public static class: java.lang.Class<com.android.internal.policy.DecorContext>;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.content.res.Resources.Theme);
                    public getAssets(): globalAndroid.content.res.AssetManager;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.content.res.Resources);
                    public constructor();
                    public constructor(param0: globalAndroid.content.Context, param1: number);
                    public getResources(): globalAndroid.content.res.Resources;
                    public getSystemService(param0: string): any;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module policy {
                export class DecorView extends globalAndroid.widget.FrameLayout implements com.android.internal.view.RootViewSurfaceTaker, globalAndroid.view.WindowCallbacks {
                    public static class: java.lang.Class<com.android.internal.policy.DecorView>;
                    public static NAVIGATION_BAR_COLOR_VIEW_ATTRIBUTES: com.android.internal.policy.DecorView.ColorViewAttributes;
                    public static STATUS_BAR_COLOR_VIEW_ATTRIBUTES: com.android.internal.policy.DecorView.ColorViewAttributes;
                    public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                    public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                    public static getColorViewTopInset(param0: number, param1: number): number;
                    public isTextDirectionResolved(): boolean;
                    public superDispatchKeyShortcutEvent(param0: globalAndroid.view.KeyEvent): boolean;
                    public onRequestDraw(param0: boolean): void;
                    public startActionMode(param0: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public addView(param0: globalAndroid.view.View): void;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public dispatchGenericMotionEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public clearChildFocus(param0: globalAndroid.view.View): void;
                    public onWindowSystemUiVisibilityChanged(param0: number): void;
                    public static getColorViewBottomInset(param0: number, param1: number): number;
                    public getLayoutDirection(): number;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                    public onContentDrawn(param0: number, param1: number, param2: number, param3: number): boolean;
                    public dispatchTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public willYouTakeTheSurface(): globalAndroid.view.SurfaceHolder.Callback2;
                    public requestTransparentRegion(param0: globalAndroid.view.View): void;
                    public setSurfaceFormat(param0: number): void;
                    public onPostDraw(param0: globalAndroid.view.DisplayListCanvas): void;
                    public onApplyWindowInsets(param0: globalAndroid.view.WindowInsets): globalAndroid.view.WindowInsets;
                    public getParent(): globalAndroid.view.ViewParent;
                    public isTextAlignmentResolved(): boolean;
                    public canResolveTextAlignment(): boolean;
                    public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                    public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                    public updatePictureInPictureOutlineProvider(param0: boolean): void;
                    public isTransitionGroup(): boolean;
                    public onWindowSizeIsChanging(param0: globalAndroid.graphics.Rect, param1: boolean, param2: globalAndroid.graphics.Rect, param3: globalAndroid.graphics.Rect): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public requestLayout(): void;
                    public onDetachedFromWindow(): void;
                    public onMeasure(param0: number, param1: number): void;
                    public getTextAlignment(): number;
                    public dispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
                    public setFrame(param0: number, param1: number, param2: number, param3: number): boolean;
                    public static calculateStatusBarColor(param0: number, param1: number, param2: number): number;
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public static getResizingBackgroundDrawable(param0: globalAndroid.content.Context, param1: number, param2: number, param3: boolean): globalAndroid.graphics.drawable.Drawable;
                    public gatherTransparentRegion(param0: globalAndroid.graphics.Region): boolean;
                    public static isNavBarToLeftEdge(param0: number, param1: number): boolean;
                    public startActionMode(param0: globalAndroid.view.ActionMode.Callback, param1: number): globalAndroid.view.ActionMode;
                    public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                    public static isNavBarToRightEdge(param0: number, param1: number): boolean;
                    public focusSearch(param0: number): globalAndroid.view.View;
                    public focusableViewAvailable(param0: globalAndroid.view.View): void;
                    public onWindowDragResizeEnd(): void;
                    public onRootViewScrollYChanged(param0: number): void;
                    public isLayoutRequested(): boolean;
                    public onAttachedToWindow(): void;
                    public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public requestKeyboardShortcuts(param0: java.util.List<any>, param1: number): void;
                    public isLayoutDirectionResolved(): boolean;
                    public setSurfaceKeepScreenOn(param0: boolean): void;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                    public onCloseSystemDialogs(param0: string): void;
                    public static getColorViewRightInset(param0: number, param1: number): number;
                    public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                    public onDraw(param0: globalAndroid.graphics.Canvas): void;
                    public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                    public dispatchKeyShortcutEvent(param0: globalAndroid.view.KeyEvent): boolean;
                    public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
                    public onWindowDragResizeStart(param0: globalAndroid.graphics.Rect, param1: boolean, param2: globalAndroid.graphics.Rect, param3: globalAndroid.graphics.Rect, param4: number): void;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                    public bringChildToFront(param0: globalAndroid.view.View): void;
                    public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public dispatchTrackballEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                    public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public getTextDirection(): number;
                    public onWindowFocusChanged(param0: boolean): void;
                    public static getColorViewLeftInset(param0: number, param1: number): number;
                    public requestFitSystemWindows(): void;
                    public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                    public setWindowBackground(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public canResolveTextDirection(): boolean;
                    public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public setSuppressForceStatusBarWindowDrawing(param0: boolean): void;
                    public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                    public dispatchPointerCaptureChanged(param0: boolean): void;
                    public requestDisallowInterceptTouchEvent(param0: boolean): void;
                    public toString(): string;
                    public superDispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
                    public addView(param0: globalAndroid.view.View, param1: number): void;
                    public setOutlineProvider(param0: globalAndroid.view.ViewOutlineProvider): void;
                    public setSurfaceType(param0: number): void;
                    public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                    public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                    public getAccessibilityViewId(): number;
                    public getParentForAccessibility(): globalAndroid.view.ViewParent;
                    public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                    public setWindowFrame(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public canResolveLayoutDirection(): boolean;
                    public superDispatchTrackballEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public willYouTakeTheInputQueue(): globalAndroid.view.InputQueue.Callback;
                    public superDispatchTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public static getNavigationBarRect(param0: number, param1: number, param2: globalAndroid.graphics.Rect, param3: globalAndroid.graphics.Rect, param4: globalAndroid.graphics.Rect): void;
                    public superDispatchGenericMotionEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public removeView(param0: globalAndroid.view.View): void;
                    public static getNavBarSize(param0: number, param1: number, param2: number): number;
                    public onStopNestedScroll(param0: globalAndroid.view.View): void;
                    public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    public draw(param0: globalAndroid.graphics.Canvas): void;
                    public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                    public dispatchPopulateAccessibilityEventInternal(param0: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                }
                export module DecorView {
                    export class ActionModeCallback2Wrapper extends globalAndroid.view.ActionMode.Callback2 {
                        public static class: java.lang.Class<com.android.internal.policy.DecorView.ActionModeCallback2Wrapper>;
                        public constructor();
                        public onDestroyActionMode(param0: globalAndroid.view.ActionMode): void;
                        public onPrepareActionMode(param0: globalAndroid.view.ActionMode, param1: globalAndroid.view.Menu): boolean;
                        public onGetContentRect(param0: globalAndroid.view.ActionMode, param1: globalAndroid.view.View, param2: globalAndroid.graphics.Rect): void;
                        public onCreateActionMode(param0: globalAndroid.view.ActionMode, param1: globalAndroid.view.Menu): boolean;
                        public constructor(param0: com.android.internal.policy.DecorView, param1: globalAndroid.view.ActionMode.Callback);
                        public onActionItemClicked(param0: globalAndroid.view.ActionMode, param1: globalAndroid.view.MenuItem): boolean;
                    }
                    export class ColorViewAttributes extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.policy.DecorView.ColorViewAttributes>;
                        public isVisible(param0: boolean, param1: number, param2: number, param3: boolean): boolean;
                        public isPresent(param0: number, param1: number, param2: boolean): boolean;
                        public isVisible(param0: number, param1: number, param2: number, param3: boolean): boolean;
                    }
                    export class ColorViewState extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.policy.DecorView.ColorViewState>;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module policy {
                export class DividerSnapAlgorithm extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.policy.DividerSnapAlgorithm>;
                    public isSplitScreenFeasible(): boolean;
                    public constructor(param0: globalAndroid.content.res.Resources, param1: number, param2: number, param3: number, param4: boolean, param5: globalAndroid.graphics.Rect, param6: boolean);
                    public getPreviousTarget(param0: com.android.internal.policy.DividerSnapAlgorithm.SnapTarget): com.android.internal.policy.DividerSnapAlgorithm.SnapTarget;
                    public calculateSnapTarget(param0: number, param1: number): com.android.internal.policy.DividerSnapAlgorithm.SnapTarget;
                    public getClosestDismissTarget(param0: number): com.android.internal.policy.DividerSnapAlgorithm.SnapTarget;
                    public calculateNonDismissingSnapTarget(param0: number): com.android.internal.policy.DividerSnapAlgorithm.SnapTarget;
                    public calculateSnapTarget(param0: number, param1: number, param2: boolean): com.android.internal.policy.DividerSnapAlgorithm.SnapTarget;
                    public calculateDismissingFraction(param0: number): number;
                    public getMiddleTarget(): com.android.internal.policy.DividerSnapAlgorithm.SnapTarget;
                    public constructor(param0: globalAndroid.content.res.Resources, param1: number, param2: number, param3: number, param4: boolean, param5: globalAndroid.graphics.Rect);
                    public getFirstSplitTarget(): com.android.internal.policy.DividerSnapAlgorithm.SnapTarget;
                    public getNextTarget(param0: com.android.internal.policy.DividerSnapAlgorithm.SnapTarget): com.android.internal.policy.DividerSnapAlgorithm.SnapTarget;
                    public static create(param0: globalAndroid.content.Context, param1: globalAndroid.graphics.Rect): com.android.internal.policy.DividerSnapAlgorithm;
                    public getDismissEndTarget(): com.android.internal.policy.DividerSnapAlgorithm.SnapTarget;
                    public cycleNonDismissTarget(param0: com.android.internal.policy.DividerSnapAlgorithm.SnapTarget, param1: number): com.android.internal.policy.DividerSnapAlgorithm.SnapTarget;
                    public isFirstSplitTargetAvailable(): boolean;
                    public isLastSplitTargetAvailable(): boolean;
                    public getDismissStartTarget(): com.android.internal.policy.DividerSnapAlgorithm.SnapTarget;
                    public getLastSplitTarget(): com.android.internal.policy.DividerSnapAlgorithm.SnapTarget;
                }
                export module DividerSnapAlgorithm {
                    export class SnapTarget extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.policy.DividerSnapAlgorithm.SnapTarget>;
                        public static FLAG_DISMISS_END: number;
                        public static FLAG_DISMISS_START: number;
                        public static FLAG_NONE: number;
                        public flag: number;
                        public position: number;
                        public taskPosition: number;
                        public constructor(param0: number, param1: number, param2: number);
                        public constructor(param0: number, param1: number, param2: number, param3: number);
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module policy {
                export class DockedDividerUtils extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.policy.DockedDividerUtils>;
                    public constructor();
                    public static calculateBoundsForPosition(param0: number, param1: number, param2: globalAndroid.graphics.Rect, param3: number, param4: number, param5: number): void;
                    public static calculatePositionForBounds(param0: globalAndroid.graphics.Rect, param1: number, param2: number): number;
                    public static sanitizeStackBounds(param0: globalAndroid.graphics.Rect, param1: boolean): void;
                    public static invertDockSide(param0: number): number;
                    public static calculateMiddlePosition(param0: boolean, param1: globalAndroid.graphics.Rect, param2: number, param3: number, param4: number): number;
                    public static getDockSideFromCreatedMode(param0: boolean, param1: boolean): number;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module policy {
                export class IKeyguardDismissCallback extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.policy.IKeyguardDismissCallback>;
                    /**
                     * Constructs a new instance of the com.android.internal.policy.IKeyguardDismissCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        onDismissCancelled(): void;
                        onDismissError(): void;
                        onDismissSucceeded(): void;
                    });
                    public constructor();
                    public onDismissError(): void;
                    public onDismissCancelled(): void;
                    public onDismissSucceeded(): void;
                }
                export module IKeyguardDismissCallback {
                    export abstract class Stub implements com.android.internal.policy.IKeyguardDismissCallback {
                        public static class: java.lang.Class<com.android.internal.policy.IKeyguardDismissCallback.Stub>;
                        public onDismissError(): void;
                        public constructor();
                        public onDismissCancelled(): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.policy.IKeyguardDismissCallback;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public onDismissSucceeded(): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.policy.IKeyguardDismissCallback {
                            public static class: java.lang.Class<com.android.internal.policy.IKeyguardDismissCallback.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public onDismissSucceeded(): void;
                            public onDismissError(): void;
                            public onDismissCancelled(): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module policy {
                export class IKeyguardDrawnCallback extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.policy.IKeyguardDrawnCallback>;
                    /**
                     * Constructs a new instance of the com.android.internal.policy.IKeyguardDrawnCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        onDrawn(): void;
                    });
                    public constructor();
                    public onDrawn(): void;
                }
                export module IKeyguardDrawnCallback {
                    export abstract class Stub implements com.android.internal.policy.IKeyguardDrawnCallback {
                        public static class: java.lang.Class<com.android.internal.policy.IKeyguardDrawnCallback.Stub>;
                        public constructor();
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.policy.IKeyguardDrawnCallback;
                        public onDrawn(): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.policy.IKeyguardDrawnCallback {
                            public static class: java.lang.Class<com.android.internal.policy.IKeyguardDrawnCallback.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public onDrawn(): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module policy {
                export class IKeyguardExitCallback extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.policy.IKeyguardExitCallback>;
                    /**
                     * Constructs a new instance of the com.android.internal.policy.IKeyguardExitCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        onKeyguardExitResult(param0: boolean): void;
                    });
                    public constructor();
                    public onKeyguardExitResult(param0: boolean): void;
                }
                export module IKeyguardExitCallback {
                    export abstract class Stub implements com.android.internal.policy.IKeyguardExitCallback {
                        public static class: java.lang.Class<com.android.internal.policy.IKeyguardExitCallback.Stub>;
                        public constructor();
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.policy.IKeyguardExitCallback;
                        public onKeyguardExitResult(param0: boolean): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.policy.IKeyguardExitCallback {
                            public static class: java.lang.Class<com.android.internal.policy.IKeyguardExitCallback.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public onKeyguardExitResult(param0: boolean): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module policy {
                export class IKeyguardService extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.policy.IKeyguardService>;
                    /**
                     * Constructs a new instance of the com.android.internal.policy.IKeyguardService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        addStateMonitorCallback(param0: com.android.internal.policy.IKeyguardStateCallback): void;
                        dismiss(param0: com.android.internal.policy.IKeyguardDismissCallback): void;
                        doKeyguardTimeout(param0: globalAndroid.os.Bundle): void;
                        onBootCompleted(): void;
                        onDreamingStarted(): void;
                        onDreamingStopped(): void;
                        onFinishedGoingToSleep(param0: number, param1: boolean): void;
                        onScreenTurnedOff(): void;
                        onScreenTurnedOn(): void;
                        onScreenTurningOn(param0: com.android.internal.policy.IKeyguardDrawnCallback): void;
                        onShortPowerPressedGoHome(): void;
                        onStartedGoingToSleep(param0: number): void;
                        onStartedWakingUp(): void;
                        onSystemReady(): void;
                        setCurrentUser(param0: number): void;
                        setKeyguardEnabled(param0: boolean): void;
                        setOccluded(param0: boolean, param1: boolean): void;
                        setSwitchingUser(param0: boolean): void;
                        startKeyguardExitAnimation(param0: number, param1: number): void;
                        verifyUnlock(param0: com.android.internal.policy.IKeyguardExitCallback): void;
                    });
                    public constructor();
                    public onSystemReady(): void;
                    public onBootCompleted(): void;
                    public dismiss(param0: com.android.internal.policy.IKeyguardDismissCallback): void;
                    public onDreamingStopped(): void;
                    public onScreenTurningOn(param0: com.android.internal.policy.IKeyguardDrawnCallback): void;
                    public onScreenTurnedOn(): void;
                    public onDreamingStarted(): void;
                    public setCurrentUser(param0: number): void;
                    public onFinishedGoingToSleep(param0: number, param1: boolean): void;
                    public doKeyguardTimeout(param0: globalAndroid.os.Bundle): void;
                    public onShortPowerPressedGoHome(): void;
                    public setKeyguardEnabled(param0: boolean): void;
                    public setOccluded(param0: boolean, param1: boolean): void;
                    public verifyUnlock(param0: com.android.internal.policy.IKeyguardExitCallback): void;
                    public setSwitchingUser(param0: boolean): void;
                    public addStateMonitorCallback(param0: com.android.internal.policy.IKeyguardStateCallback): void;
                    public onScreenTurnedOff(): void;
                    public startKeyguardExitAnimation(param0: number, param1: number): void;
                    public onStartedGoingToSleep(param0: number): void;
                    public onStartedWakingUp(): void;
                }
                export module IKeyguardService {
                    export abstract class Stub implements com.android.internal.policy.IKeyguardService {
                        public static class: java.lang.Class<com.android.internal.policy.IKeyguardService.Stub>;
                        public onBootCompleted(): void;
                        public setKeyguardEnabled(param0: boolean): void;
                        public setOccluded(param0: boolean, param1: boolean): void;
                        public verifyUnlock(param0: com.android.internal.policy.IKeyguardExitCallback): void;
                        public constructor();
                        public onScreenTurnedOn(): void;
                        public startKeyguardExitAnimation(param0: number, param1: number): void;
                        public onScreenTurnedOff(): void;
                        public dismiss(param0: com.android.internal.policy.IKeyguardDismissCallback): void;
                        public onDreamingStopped(): void;
                        public onFinishedGoingToSleep(param0: number, param1: boolean): void;
                        public doKeyguardTimeout(param0: globalAndroid.os.Bundle): void;
                        public onStartedWakingUp(): void;
                        public setSwitchingUser(param0: boolean): void;
                        public onScreenTurningOn(param0: com.android.internal.policy.IKeyguardDrawnCallback): void;
                        public onShortPowerPressedGoHome(): void;
                        public onSystemReady(): void;
                        public addStateMonitorCallback(param0: com.android.internal.policy.IKeyguardStateCallback): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public onDreamingStarted(): void;
                        public asBinder(): globalAndroid.os.IBinder;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.policy.IKeyguardService;
                        public onStartedGoingToSleep(param0: number): void;
                        public setCurrentUser(param0: number): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.policy.IKeyguardService {
                            public static class: java.lang.Class<com.android.internal.policy.IKeyguardService.Stub.Proxy>;
                            public onFinishedGoingToSleep(param0: number, param1: boolean): void;
                            public setCurrentUser(param0: number): void;
                            public onSystemReady(): void;
                            public onShortPowerPressedGoHome(): void;
                            public onStartedGoingToSleep(param0: number): void;
                            public setOccluded(param0: boolean, param1: boolean): void;
                            public onScreenTurningOn(param0: com.android.internal.policy.IKeyguardDrawnCallback): void;
                            public onDreamingStopped(): void;
                            public getInterfaceDescriptor(): string;
                            public onBootCompleted(): void;
                            public asBinder(): globalAndroid.os.IBinder;
                            public onStartedWakingUp(): void;
                            public setKeyguardEnabled(param0: boolean): void;
                            public onScreenTurnedOff(): void;
                            public onDreamingStarted(): void;
                            public addStateMonitorCallback(param0: com.android.internal.policy.IKeyguardStateCallback): void;
                            public dismiss(param0: com.android.internal.policy.IKeyguardDismissCallback): void;
                            public doKeyguardTimeout(param0: globalAndroid.os.Bundle): void;
                            public onScreenTurnedOn(): void;
                            public startKeyguardExitAnimation(param0: number, param1: number): void;
                            public setSwitchingUser(param0: boolean): void;
                            public verifyUnlock(param0: com.android.internal.policy.IKeyguardExitCallback): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module policy {
                export class IKeyguardStateCallback extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.policy.IKeyguardStateCallback>;
                    /**
                     * Constructs a new instance of the com.android.internal.policy.IKeyguardStateCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        onHasLockscreenWallpaperChanged(param0: boolean): void;
                        onInputRestrictedStateChanged(param0: boolean): void;
                        onShowingStateChanged(param0: boolean): void;
                        onSimSecureStateChanged(param0: boolean): void;
                        onTrustedChanged(param0: boolean): void;
                    });
                    public constructor();
                    public onTrustedChanged(param0: boolean): void;
                    public onSimSecureStateChanged(param0: boolean): void;
                    public onInputRestrictedStateChanged(param0: boolean): void;
                    public onShowingStateChanged(param0: boolean): void;
                    public onHasLockscreenWallpaperChanged(param0: boolean): void;
                }
                export module IKeyguardStateCallback {
                    export abstract class Stub implements com.android.internal.policy.IKeyguardStateCallback {
                        public static class: java.lang.Class<com.android.internal.policy.IKeyguardStateCallback.Stub>;
                        public constructor();
                        public onInputRestrictedStateChanged(param0: boolean): void;
                        public onShowingStateChanged(param0: boolean): void;
                        public onTrustedChanged(param0: boolean): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public onHasLockscreenWallpaperChanged(param0: boolean): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.policy.IKeyguardStateCallback;
                        public asBinder(): globalAndroid.os.IBinder;
                        public onSimSecureStateChanged(param0: boolean): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.policy.IKeyguardStateCallback {
                            public static class: java.lang.Class<com.android.internal.policy.IKeyguardStateCallback.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public onHasLockscreenWallpaperChanged(param0: boolean): void;
                            public onSimSecureStateChanged(param0: boolean): void;
                            public onShowingStateChanged(param0: boolean): void;
                            public onTrustedChanged(param0: boolean): void;
                            public onInputRestrictedStateChanged(param0: boolean): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module policy {
                export class IShortcutService extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.policy.IShortcutService>;
                    /**
                     * Constructs a new instance of the com.android.internal.policy.IShortcutService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        notifyShortcutKeyPressed(param0: number): void;
                    });
                    public constructor();
                    public notifyShortcutKeyPressed(param0: number): void;
                }
                export module IShortcutService {
                    export abstract class Stub implements com.android.internal.policy.IShortcutService {
                        public static class: java.lang.Class<com.android.internal.policy.IShortcutService.Stub>;
                        public constructor();
                        public notifyShortcutKeyPressed(param0: number): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.policy.IShortcutService;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.policy.IShortcutService {
                            public static class: java.lang.Class<com.android.internal.policy.IShortcutService.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public notifyShortcutKeyPressed(param0: number): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module policy {
                export class PhoneFallbackEventHandler extends globalAndroid.view.FallbackEventHandler {
                    public static class: java.lang.Class<com.android.internal.policy.PhoneFallbackEventHandler>;
                    public constructor(param0: globalAndroid.content.Context);
                    public preDispatchKeyEvent(param0: globalAndroid.view.KeyEvent): void;
                    public setView(param0: globalAndroid.view.View): void;
                    public dispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module policy {
                export class PhoneLayoutInflater extends globalAndroid.view.LayoutInflater {
                    public static class: java.lang.Class<com.android.internal.policy.PhoneLayoutInflater>;
                    public constructor(param0: globalAndroid.content.Context);
                    public constructor(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.content.Context);
                    public onCreateView(param0: string, param1: globalAndroid.util.AttributeSet): globalAndroid.view.View;
                    public cloneInContext(param0: globalAndroid.content.Context): globalAndroid.view.LayoutInflater;
                    public onCreateView(param0: globalAndroid.view.View, param1: string, param2: globalAndroid.util.AttributeSet): globalAndroid.view.View;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module policy {
                export class PhoneWindow extends globalAndroid.view.Window implements com.android.internal.view.menu.MenuBuilder.Callback {
                    public static class: java.lang.Class<com.android.internal.policy.PhoneWindow>;
                    public getElevation(): number;
                    public getSharedElementEnterTransition(): globalAndroid.transition.Transition;
                    public getReenterTransition(): globalAndroid.transition.Transition;
                    public setVolumeControlStream(param0: number): void;
                    public setDefaultIcon(param0: number): void;
                    public saveHierarchyState(): globalAndroid.os.Bundle;
                    public setReturnTransition(param0: globalAndroid.transition.Transition): void;
                    public superDispatchKeyShortcutEvent(param0: globalAndroid.view.KeyEvent): boolean;
                    public findMenuPanel(param0: globalAndroid.view.Menu): com.android.internal.policy.PhoneWindow.PanelFeatureState;
                    public setNavigationBarColor(param0: number): void;
                    public setResizingCaptionDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public generateDecor(param0: number): com.android.internal.policy.DecorView;
                    public setContentView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public setDefaultWindowFormat(param0: number): void;
                    public getAllowReturnTransitionOverlap(): boolean;
                    public setSharedElementsUseOverlay(param0: boolean): void;
                    public setTransitionManager(param0: globalAndroid.transition.TransitionManager): void;
                    public updateDrawable(param0: number, param1: boolean): void;
                    public getMediaController(): any;
                    public setFeatureDrawable(param0: number, param1: globalAndroid.graphics.drawable.Drawable): void;
                    public setLocalFocus(param0: boolean, param1: boolean): void;
                    public getSharedElementExitTransition(): globalAndroid.transition.Transition;
                    public setDefaultLogo(param0: number): void;
                    public setTheme(param0: number): void;
                    public getStatusBarColor(): number;
                    public setContentView(param0: globalAndroid.view.View): void;
                    public clearContentView(): void;
                    public getReturnTransition(): globalAndroid.transition.Transition;
                    public setExitTransition(param0: globalAndroid.transition.Transition): void;
                    public takeSurface(param0: globalAndroid.view.SurfaceHolder.Callback2): void;
                    public setElevation(param0: number): void;
                    public preparePanel(param0: com.android.internal.policy.PhoneWindow.PanelFeatureState, param1: globalAndroid.view.KeyEvent): boolean;
                    public restoreHierarchyState(param0: globalAndroid.os.Bundle): void;
                    public setContainer(param0: globalAndroid.view.Window): void;
                    public setBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public alwaysReadCloseOnTouchAttr(): void;
                    public requestFeature(param0: number): boolean;
                    public togglePanel(param0: number, param1: globalAndroid.view.KeyEvent): void;
                    public isTranslucent(): boolean;
                    public invalidatePanelMenu(param0: number): void;
                    public setMediaController(param0: any): void;
                    public setDecorCaptionShade(param0: number): void;
                    public static sendCloseSystemWindows(param0: globalAndroid.content.Context, param1: string): void;
                    public getSharedElementsUseOverlay(): boolean;
                    public closeAllPanels(): void;
                    public getVolumeControlStream(): number;
                    public onKeyUp(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public takeInputQueue(param0: globalAndroid.view.InputQueue.Callback): void;
                    public getContentScene(): globalAndroid.transition.Scene;
                    public reportActivityRelaunched(): void;
                    public onKeyDown(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public setContentView(param0: number): void;
                    public getSharedElementReenterTransition(): globalAndroid.transition.Transition;
                    public getSharedElementReturnTransition(): globalAndroid.transition.Transition;
                    public performPanelIdentifierAction(param0: number, param1: number, param2: number): boolean;
                    public constructor(param0: globalAndroid.content.Context);
                    public getDecorView(): globalAndroid.view.View;
                    public setTitleColor(param0: number): void;
                    public setReenterTransition(param0: globalAndroid.transition.Transition): void;
                    public addContentView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public setLogo(param0: number): void;
                    public setTitle(param0: string): void;
                    public setIsStartingWindow(param0: boolean): void;
                    public initializePanelContent(param0: com.android.internal.policy.PhoneWindow.PanelFeatureState): boolean;
                    public onPictureInPictureModeChanged(param0: boolean): void;
                    public setUiOptions(param0: number): void;
                    public closePanel(param0: number): void;
                    public getTransitionBackgroundFadeDuration(): number;
                    public setAllowReturnTransitionOverlap(param0: boolean): void;
                    public setSharedElementExitTransition(param0: globalAndroid.transition.Transition): void;
                    public takeKeyEvents(param0: boolean): void;
                    public setCloseOnSwipeEnabled(param0: boolean): void;
                    public setStatusBarColor(param0: number): void;
                    public getCurrentFocus(): globalAndroid.view.View;
                    public onMenuModeChange(param0: com.android.internal.view.menu.MenuBuilder): void;
                    public setChildDrawable(param0: number, param1: globalAndroid.graphics.drawable.Drawable): void;
                    public getAllowEnterTransitionOverlap(): boolean;
                    public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
                    public onDrawableChanged(param0: number, param1: globalAndroid.graphics.drawable.Drawable, param2: number): void;
                    public getTransitionManager(): globalAndroid.transition.TransitionManager;
                    public isFloating(): boolean;
                    public getEnterTransition(): globalAndroid.transition.Transition;
                    public getLayoutInflater(): globalAndroid.view.LayoutInflater;
                    public setAllowEnterTransitionOverlap(param0: boolean): void;
                    public setIcon(param0: number): void;
                    public isShortcutKey(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public setFeatureDrawableUri(param0: number, param1: globalAndroid.net.Uri): void;
                    public initializePanelDecor(param0: com.android.internal.policy.PhoneWindow.PanelFeatureState): boolean;
                    public getExitTransition(): globalAndroid.transition.Transition;
                    public onMenuItemSelected(param0: com.android.internal.view.menu.MenuBuilder, param1: globalAndroid.view.MenuItem): boolean;
                    public setClipToOutline(param0: boolean): void;
                    public setSharedElementEnterTransition(param0: globalAndroid.transition.Transition): void;
                    public performContextMenuIdentifierAction(param0: number, param1: number): boolean;
                    public setUiOptions(param0: number, param1: number): void;
                    public setTransitionBackgroundFadeDuration(param0: number): void;
                    public setAttributes(param0: globalAndroid.view.WindowManager.LayoutParams): void;
                    public setSharedElementReenterTransition(param0: globalAndroid.transition.Transition): void;
                    public setFeatureDrawableResource(param0: number, param1: number): void;
                    public setEnterTransition(param0: globalAndroid.transition.Transition): void;
                    public superDispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
                    public setSharedElementReturnTransition(param0: globalAndroid.transition.Transition): void;
                    public getNavigationBarColor(): number;
                    public dispatchWindowAttributesChanged(param0: globalAndroid.view.WindowManager.LayoutParams): void;
                    public onActive(): void;
                    public onKeyUpPanel(param0: number, param1: globalAndroid.view.KeyEvent): void;
                    public onIntChanged(param0: number, param1: number): void;
                    public superDispatchTrackballEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public setFeatureDefaultDrawable(param0: number, param1: globalAndroid.graphics.drawable.Drawable): void;
                    public superDispatchTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public generateLayout(param0: com.android.internal.policy.DecorView): globalAndroid.view.ViewGroup;
                    public onMultiWindowModeChanged(): void;
                    public setFeatureDrawableAlpha(param0: number, param1: number): void;
                    public superDispatchGenericMotionEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public setFeatureInt(param0: number, param1: number): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.view.Window, param2: globalAndroid.view.ViewRootImpl.ActivityConfigCallback);
                    public setTitle(param0: string, param1: boolean): void;
                    public openPanel(param0: number, param1: globalAndroid.view.KeyEvent): void;
                    public injectInputEvent(param0: globalAndroid.view.InputEvent): void;
                    public setChildInt(param0: number, param1: number): void;
                    public onKeyDownPanel(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public peekDecorView(): globalAndroid.view.View;
                    public initializePanelMenu(param0: com.android.internal.policy.PhoneWindow.PanelFeatureState): boolean;
                    public closePanel(param0: com.android.internal.policy.PhoneWindow.PanelFeatureState, param1: boolean): void;
                    public performPanelShortcut(param0: number, param1: number, param2: globalAndroid.view.KeyEvent, param3: number): boolean;
                }
                export module PhoneWindow {
                    export class ActionMenuPresenterCallback extends com.android.internal.view.menu.MenuPresenter.Callback {
                        public static class: java.lang.Class<com.android.internal.policy.PhoneWindow.ActionMenuPresenterCallback>;
                        public onOpenSubMenu(param0: com.android.internal.view.menu.MenuBuilder): boolean;
                        public onCloseMenu(param0: com.android.internal.view.menu.MenuBuilder, param1: boolean): void;
                    }
                    export class DrawableFeatureState extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.policy.PhoneWindow.DrawableFeatureState>;
                    }
                    export class PanelFeatureState extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.policy.PhoneWindow.PanelFeatureState>;
                        public qwertyMode: boolean;
                        public isInListMode(): boolean;
                        public hasPanelItems(): boolean;
                        public clearMenuPresenters(): void;
                    }
                    export module PanelFeatureState {
                        export class SavedState extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.policy.PhoneWindow.PanelFeatureState.SavedState>;
                            public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.policy.PhoneWindow.PanelFeatureState.SavedState>;
                            public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                            public describeContents(): number;
                        }
                    }
                    export class PanelMenuPresenterCallback extends com.android.internal.view.menu.MenuPresenter.Callback {
                        public static class: java.lang.Class<com.android.internal.policy.PhoneWindow.PanelMenuPresenterCallback>;
                        public onOpenSubMenu(param0: com.android.internal.view.menu.MenuBuilder): boolean;
                        public onCloseMenu(param0: com.android.internal.view.menu.MenuBuilder, param1: boolean): void;
                    }
                    export class PhoneWindowMenuCallback implements com.android.internal.view.menu.MenuBuilder.Callback, com.android.internal.view.menu.MenuPresenter.Callback {
                        public static class: java.lang.Class<com.android.internal.policy.PhoneWindow.PhoneWindowMenuCallback>;
                        public constructor(param0: com.android.internal.policy.PhoneWindow);
                        public onMenuModeChange(param0: com.android.internal.view.menu.MenuBuilder): void;
                        public onOpenSubMenu(param0: com.android.internal.view.menu.MenuBuilder): boolean;
                        public onCloseMenu(param0: com.android.internal.view.menu.MenuBuilder, param1: boolean): void;
                        public setShowDialogForSubmenu(param0: boolean): void;
                        public onMenuItemSelected(param0: com.android.internal.view.menu.MenuBuilder, param1: globalAndroid.view.MenuItem): boolean;
                    }
                    export class RotationWatcher extends globalAndroid.view.IRotationWatcher.Stub {
                        public static class: java.lang.Class<com.android.internal.policy.PhoneWindow.RotationWatcher>;
                        public removeWindow(param0: com.android.internal.policy.PhoneWindow): void;
                        public addWindow(param0: com.android.internal.policy.PhoneWindow): void;
                        public onRotationChanged(param0: number): void;
                    }
                    export class WindowManagerHolder extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.policy.PhoneWindow.WindowManagerHolder>;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module policy {
                export class PipSnapAlgorithm extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.policy.PipSnapAlgorithm>;
                    public constructor(param0: globalAndroid.content.Context);
                    public getMovementBounds(param0: globalAndroid.graphics.Rect, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Rect, param3: number): void;
                    public getSizeForAspectRatio(param0: number, param1: number, param2: number, param3: number): any;
                    public getSnapFraction(param0: globalAndroid.graphics.Rect, param1: globalAndroid.graphics.Rect): number;
                    public setMinimized(param0: boolean): void;
                    public findClosestSnapBounds(param0: globalAndroid.graphics.Rect, param1: globalAndroid.graphics.Rect, param2: number, param3: number): globalAndroid.graphics.Rect;
                    public findClosestSnapBounds(param0: globalAndroid.graphics.Rect, param1: globalAndroid.graphics.Rect): globalAndroid.graphics.Rect;
                    public applyMinimizedOffset(param0: globalAndroid.graphics.Rect, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: globalAndroid.graphics.Rect): void;
                    public applySnapFraction(param0: globalAndroid.graphics.Rect, param1: globalAndroid.graphics.Rect, param2: number): void;
                    public onConfigurationChanged(): void;
                    public dump(param0: java.io.PrintWriter, param1: string): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module preference {
                export class YesNoPreference extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.preference.YesNoPreference>;
                    public constructor(param0: globalAndroid.content.Context);
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public setValue(param0: boolean): void;
                    public shouldDisableDependents(): boolean;
                    public onDialogClosed(param0: boolean): void;
                    public getValue(): boolean;
                    public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public onSaveInstanceState(): globalAndroid.os.Parcelable;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public onGetDefaultValue(param0: globalAndroid.content.res.TypedArray, param1: number): any;
                    public onSetInitialValue(param0: boolean, param1: any): void;
                }
                export module YesNoPreference {
                    export class SavedState extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.preference.YesNoPreference.SavedState>;
                        public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.preference.YesNoPreference.SavedState>;
                        public constructor(param0: globalAndroid.os.Parcel);
                        public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                        public constructor(param0: globalAndroid.os.Parcelable);
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module statusbar {
                export class IStatusBar extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.statusbar.IStatusBar>;
                    /**
                     * Constructs a new instance of the com.android.internal.statusbar.IStatusBar interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        addQsTile(param0: globalAndroid.content.ComponentName): void;
                        animateCollapsePanels(): void;
                        animateExpandNotificationsPanel(): void;
                        animateExpandSettingsPanel(param0: string): void;
                        appTransitionCancelled(): void;
                        appTransitionFinished(): void;
                        appTransitionPending(): void;
                        appTransitionStarting(param0: number, param1: number): void;
                        cancelPreloadRecentApps(): void;
                        clickQsTile(param0: globalAndroid.content.ComponentName): void;
                        disable(param0: number, param1: number): void;
                        dismissKeyboardShortcutsMenu(): void;
                        handleSystemNavigationKey(param0: number): void;
                        hideRecentApps(param0: boolean, param1: boolean): void;
                        onCameraLaunchGestureDetected(param0: number): void;
                        preloadRecentApps(): void;
                        remQsTile(param0: globalAndroid.content.ComponentName): void;
                        removeIcon(param0: string): void;
                        setIcon(param0: string, param1: com.android.internal.statusbar.StatusBarIcon): void;
                        setImeWindowStatus(param0: globalAndroid.os.IBinder, param1: number, param2: number, param3: boolean): void;
                        setSystemUiVisibility(param0: number, param1: number, param2: number, param3: number, param4: globalAndroid.graphics.Rect, param5: globalAndroid.graphics.Rect): void;
                        setWindowState(param0: number, param1: number): void;
                        showAssistDisclosure(): void;
                        showGlobalActionsMenu(): void;
                        showPictureInPictureMenu(): void;
                        showRecentApps(param0: boolean, param1: boolean): void;
                        showScreenPinningRequest(param0: number): void;
                        startAssist(param0: globalAndroid.os.Bundle): void;
                        toggleKeyboardShortcutsMenu(param0: number): void;
                        toggleRecentApps(): void;
                        toggleSplitScreen(): void;
                        topAppWindowChanged(param0: boolean): void;
                    });
                    public constructor();
                    public dismissKeyboardShortcutsMenu(): void;
                    public toggleSplitScreen(): void;
                    public hideRecentApps(param0: boolean, param1: boolean): void;
                    public addQsTile(param0: globalAndroid.content.ComponentName): void;
                    public appTransitionCancelled(): void;
                    public setSystemUiVisibility(param0: number, param1: number, param2: number, param3: number, param4: globalAndroid.graphics.Rect, param5: globalAndroid.graphics.Rect): void;
                    public handleSystemNavigationKey(param0: number): void;
                    public topAppWindowChanged(param0: boolean): void;
                    public showScreenPinningRequest(param0: number): void;
                    public animateCollapsePanels(): void;
                    public setImeWindowStatus(param0: globalAndroid.os.IBinder, param1: number, param2: number, param3: boolean): void;
                    public remQsTile(param0: globalAndroid.content.ComponentName): void;
                    public clickQsTile(param0: globalAndroid.content.ComponentName): void;
                    public showGlobalActionsMenu(): void;
                    public disable(param0: number, param1: number): void;
                    public startAssist(param0: globalAndroid.os.Bundle): void;
                    public showPictureInPictureMenu(): void;
                    public toggleKeyboardShortcutsMenu(param0: number): void;
                    public toggleRecentApps(): void;
                    public cancelPreloadRecentApps(): void;
                    public preloadRecentApps(): void;
                    public setIcon(param0: string, param1: com.android.internal.statusbar.StatusBarIcon): void;
                    public showAssistDisclosure(): void;
                    public appTransitionPending(): void;
                    public removeIcon(param0: string): void;
                    public animateExpandSettingsPanel(param0: string): void;
                    public appTransitionFinished(): void;
                    public showRecentApps(param0: boolean, param1: boolean): void;
                    public animateExpandNotificationsPanel(): void;
                    public appTransitionStarting(param0: number, param1: number): void;
                    public setWindowState(param0: number, param1: number): void;
                    public onCameraLaunchGestureDetected(param0: number): void;
                }
                export module IStatusBar {
                    export abstract class Stub implements com.android.internal.statusbar.IStatusBar {
                        public static class: java.lang.Class<com.android.internal.statusbar.IStatusBar.Stub>;
                        public appTransitionStarting(param0: number, param1: number): void;
                        public appTransitionCancelled(): void;
                        public appTransitionFinished(): void;
                        public topAppWindowChanged(param0: boolean): void;
                        public hideRecentApps(param0: boolean, param1: boolean): void;
                        public showGlobalActionsMenu(): void;
                        public removeIcon(param0: string): void;
                        public setImeWindowStatus(param0: globalAndroid.os.IBinder, param1: number, param2: number, param3: boolean): void;
                        public toggleRecentApps(): void;
                        public showAssistDisclosure(): void;
                        public animateCollapsePanels(): void;
                        public disable(param0: number, param1: number): void;
                        public showScreenPinningRequest(param0: number): void;
                        public handleSystemNavigationKey(param0: number): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public animateExpandNotificationsPanel(): void;
                        public appTransitionPending(): void;
                        public showPictureInPictureMenu(): void;
                        public preloadRecentApps(): void;
                        public constructor();
                        public setSystemUiVisibility(param0: number, param1: number, param2: number, param3: number, param4: globalAndroid.graphics.Rect, param5: globalAndroid.graphics.Rect): void;
                        public clickQsTile(param0: globalAndroid.content.ComponentName): void;
                        public toggleKeyboardShortcutsMenu(param0: number): void;
                        public remQsTile(param0: globalAndroid.content.ComponentName): void;
                        public showRecentApps(param0: boolean, param1: boolean): void;
                        public setIcon(param0: string, param1: com.android.internal.statusbar.StatusBarIcon): void;
                        public startAssist(param0: globalAndroid.os.Bundle): void;
                        public animateExpandSettingsPanel(param0: string): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.statusbar.IStatusBar;
                        public dismissKeyboardShortcutsMenu(): void;
                        public onCameraLaunchGestureDetected(param0: number): void;
                        public toggleSplitScreen(): void;
                        public addQsTile(param0: globalAndroid.content.ComponentName): void;
                        public cancelPreloadRecentApps(): void;
                        public setWindowState(param0: number, param1: number): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.statusbar.IStatusBar {
                            public static class: java.lang.Class<com.android.internal.statusbar.IStatusBar.Stub.Proxy>;
                            public animateExpandNotificationsPanel(): void;
                            public showPictureInPictureMenu(): void;
                            public setWindowState(param0: number, param1: number): void;
                            public dismissKeyboardShortcutsMenu(): void;
                            public clickQsTile(param0: globalAndroid.content.ComponentName): void;
                            public remQsTile(param0: globalAndroid.content.ComponentName): void;
                            public topAppWindowChanged(param0: boolean): void;
                            public addQsTile(param0: globalAndroid.content.ComponentName): void;
                            public removeIcon(param0: string): void;
                            public showRecentApps(param0: boolean, param1: boolean): void;
                            public animateCollapsePanels(): void;
                            public toggleSplitScreen(): void;
                            public handleSystemNavigationKey(param0: number): void;
                            public toggleRecentApps(): void;
                            public animateExpandSettingsPanel(param0: string): void;
                            public showGlobalActionsMenu(): void;
                            public appTransitionStarting(param0: number, param1: number): void;
                            public setIcon(param0: string, param1: com.android.internal.statusbar.StatusBarIcon): void;
                            public appTransitionCancelled(): void;
                            public cancelPreloadRecentApps(): void;
                            public setImeWindowStatus(param0: globalAndroid.os.IBinder, param1: number, param2: number, param3: boolean): void;
                            public hideRecentApps(param0: boolean, param1: boolean): void;
                            public appTransitionPending(): void;
                            public getInterfaceDescriptor(): string;
                            public showScreenPinningRequest(param0: number): void;
                            public asBinder(): globalAndroid.os.IBinder;
                            public preloadRecentApps(): void;
                            public onCameraLaunchGestureDetected(param0: number): void;
                            public showAssistDisclosure(): void;
                            public toggleKeyboardShortcutsMenu(param0: number): void;
                            public disable(param0: number, param1: number): void;
                            public setSystemUiVisibility(param0: number, param1: number, param2: number, param3: number, param4: globalAndroid.graphics.Rect, param5: globalAndroid.graphics.Rect): void;
                            public startAssist(param0: globalAndroid.os.Bundle): void;
                            public appTransitionFinished(): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module statusbar {
                export class IStatusBarService extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.statusbar.IStatusBarService>;
                    /**
                     * Constructs a new instance of the com.android.internal.statusbar.IStatusBarService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        addTile(param0: globalAndroid.content.ComponentName): void;
                        clearNotificationEffects(): void;
                        clickTile(param0: globalAndroid.content.ComponentName): void;
                        collapsePanels(): void;
                        disable(param0: number, param1: globalAndroid.os.IBinder, param2: string): void;
                        disable2(param0: number, param1: globalAndroid.os.IBinder, param2: string): void;
                        disable2ForUser(param0: number, param1: globalAndroid.os.IBinder, param2: string, param3: number): void;
                        disableForUser(param0: number, param1: globalAndroid.os.IBinder, param2: string, param3: number): void;
                        expandNotificationsPanel(): void;
                        expandSettingsPanel(param0: string): void;
                        handleSystemNavigationKey(param0: number): void;
                        onClearAllNotifications(param0: number): void;
                        onGlobalActionsHidden(): void;
                        onGlobalActionsShown(): void;
                        onNotificationActionClick(param0: string, param1: number): void;
                        onNotificationClear(param0: string, param1: string, param2: number, param3: number): void;
                        onNotificationClick(param0: string): void;
                        onNotificationError(param0: string, param1: string, param2: number, param3: number, param4: number, param5: string, param6: number): void;
                        onNotificationExpansionChanged(param0: string, param1: boolean, param2: boolean): void;
                        onNotificationVisibilityChanged(param0: com.android.internal.statusbar.NotificationVisibility[], param1: com.android.internal.statusbar.NotificationVisibility[]): void;
                        onPanelHidden(): void;
                        onPanelRevealed(param0: boolean, param1: number): void;
                        reboot(param0: boolean): void;
                        registerStatusBar(param0: com.android.internal.statusbar.IStatusBar, param1: java.util.List<string>, param2: java.util.List<com.android.internal.statusbar.StatusBarIcon>, param3: number[], param4: java.util.List<globalAndroid.os.IBinder>, param5: globalAndroid.graphics.Rect, param6: globalAndroid.graphics.Rect): void;
                        remTile(param0: globalAndroid.content.ComponentName): void;
                        removeIcon(param0: string): void;
                        setIcon(param0: string, param1: string, param2: number, param3: number, param4: string): void;
                        setIconVisibility(param0: string, param1: boolean): void;
                        setImeWindowStatus(param0: globalAndroid.os.IBinder, param1: number, param2: number, param3: boolean): void;
                        setSystemUiVisibility(param0: number, param1: number, param2: string): void;
                        shutdown(): void;
                    });
                    public constructor();
                    public remTile(param0: globalAndroid.content.ComponentName): void;
                    public onNotificationVisibilityChanged(param0: com.android.internal.statusbar.NotificationVisibility[], param1: com.android.internal.statusbar.NotificationVisibility[]): void;
                    public setIconVisibility(param0: string, param1: boolean): void;
                    public handleSystemNavigationKey(param0: number): void;
                    public onNotificationExpansionChanged(param0: string, param1: boolean, param2: boolean): void;
                    public shutdown(): void;
                    public setIcon(param0: string, param1: string, param2: number, param3: number, param4: string): void;
                    public collapsePanels(): void;
                    public onGlobalActionsShown(): void;
                    public setImeWindowStatus(param0: globalAndroid.os.IBinder, param1: number, param2: number, param3: boolean): void;
                    public expandSettingsPanel(param0: string): void;
                    public onClearAllNotifications(param0: number): void;
                    public reboot(param0: boolean): void;
                    public disable2ForUser(param0: number, param1: globalAndroid.os.IBinder, param2: string, param3: number): void;
                    public setSystemUiVisibility(param0: number, param1: number, param2: string): void;
                    public disable(param0: number, param1: globalAndroid.os.IBinder, param2: string): void;
                    public expandNotificationsPanel(): void;
                    public onNotificationClick(param0: string): void;
                    public onNotificationError(param0: string, param1: string, param2: number, param3: number, param4: number, param5: string, param6: number): void;
                    public disableForUser(param0: number, param1: globalAndroid.os.IBinder, param2: string, param3: number): void;
                    public onPanelHidden(): void;
                    public disable2(param0: number, param1: globalAndroid.os.IBinder, param2: string): void;
                    public onPanelRevealed(param0: boolean, param1: number): void;
                    public removeIcon(param0: string): void;
                    public onNotificationClear(param0: string, param1: string, param2: number, param3: number): void;
                    public clickTile(param0: globalAndroid.content.ComponentName): void;
                    public onNotificationActionClick(param0: string, param1: number): void;
                    public onGlobalActionsHidden(): void;
                    public addTile(param0: globalAndroid.content.ComponentName): void;
                    public clearNotificationEffects(): void;
                    public registerStatusBar(param0: com.android.internal.statusbar.IStatusBar, param1: java.util.List<string>, param2: java.util.List<com.android.internal.statusbar.StatusBarIcon>, param3: number[], param4: java.util.List<globalAndroid.os.IBinder>, param5: globalAndroid.graphics.Rect, param6: globalAndroid.graphics.Rect): void;
                }
                export module IStatusBarService {
                    export abstract class Stub implements com.android.internal.statusbar.IStatusBarService {
                        public static class: java.lang.Class<com.android.internal.statusbar.IStatusBarService.Stub>;
                        public onNotificationClear(param0: string, param1: string, param2: number, param3: number): void;
                        public setIconVisibility(param0: string, param1: boolean): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.statusbar.IStatusBarService;
                        public removeIcon(param0: string): void;
                        public setImeWindowStatus(param0: globalAndroid.os.IBinder, param1: number, param2: number, param3: boolean): void;
                        public disableForUser(param0: number, param1: globalAndroid.os.IBinder, param2: string, param3: number): void;
                        public onNotificationClick(param0: string): void;
                        public disable2(param0: number, param1: globalAndroid.os.IBinder, param2: string): void;
                        public shutdown(): void;
                        public remTile(param0: globalAndroid.content.ComponentName): void;
                        public onNotificationVisibilityChanged(param0: com.android.internal.statusbar.NotificationVisibility[], param1: com.android.internal.statusbar.NotificationVisibility[]): void;
                        public expandNotificationsPanel(): void;
                        public collapsePanels(): void;
                        public handleSystemNavigationKey(param0: number): void;
                        public expandSettingsPanel(param0: string): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public registerStatusBar(param0: com.android.internal.statusbar.IStatusBar, param1: java.util.List<string>, param2: java.util.List<com.android.internal.statusbar.StatusBarIcon>, param3: number[], param4: java.util.List<globalAndroid.os.IBinder>, param5: globalAndroid.graphics.Rect, param6: globalAndroid.graphics.Rect): void;
                        public disable(param0: number, param1: globalAndroid.os.IBinder, param2: string): void;
                        public setSystemUiVisibility(param0: number, param1: number, param2: string): void;
                        public constructor();
                        public onNotificationError(param0: string, param1: string, param2: number, param3: number, param4: number, param5: string, param6: number): void;
                        public reboot(param0: boolean): void;
                        public onPanelHidden(): void;
                        public setIcon(param0: string, param1: string, param2: number, param3: number, param4: string): void;
                        public clickTile(param0: globalAndroid.content.ComponentName): void;
                        public onGlobalActionsShown(): void;
                        public onGlobalActionsHidden(): void;
                        public onClearAllNotifications(param0: number): void;
                        public onNotificationActionClick(param0: string, param1: number): void;
                        public onNotificationExpansionChanged(param0: string, param1: boolean, param2: boolean): void;
                        public addTile(param0: globalAndroid.content.ComponentName): void;
                        public clearNotificationEffects(): void;
                        public disable2ForUser(param0: number, param1: globalAndroid.os.IBinder, param2: string, param3: number): void;
                        public onPanelRevealed(param0: boolean, param1: number): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.statusbar.IStatusBarService {
                            public static class: java.lang.Class<com.android.internal.statusbar.IStatusBarService.Stub.Proxy>;
                            public setSystemUiVisibility(param0: number, param1: number, param2: string): void;
                            public setIconVisibility(param0: string, param1: boolean): void;
                            public addTile(param0: globalAndroid.content.ComponentName): void;
                            public onNotificationVisibilityChanged(param0: com.android.internal.statusbar.NotificationVisibility[], param1: com.android.internal.statusbar.NotificationVisibility[]): void;
                            public expandNotificationsPanel(): void;
                            public disable(param0: number, param1: globalAndroid.os.IBinder, param2: string): void;
                            public disable2ForUser(param0: number, param1: globalAndroid.os.IBinder, param2: string, param3: number): void;
                            public onNotificationClear(param0: string, param1: string, param2: number, param3: number): void;
                            public removeIcon(param0: string): void;
                            public collapsePanels(): void;
                            public remTile(param0: globalAndroid.content.ComponentName): void;
                            public handleSystemNavigationKey(param0: number): void;
                            public onGlobalActionsShown(): void;
                            public expandSettingsPanel(param0: string): void;
                            public onNotificationExpansionChanged(param0: string, param1: boolean, param2: boolean): void;
                            public clearNotificationEffects(): void;
                            public reboot(param0: boolean): void;
                            public onPanelRevealed(param0: boolean, param1: number): void;
                            public disableForUser(param0: number, param1: globalAndroid.os.IBinder, param2: string, param3: number): void;
                            public onGlobalActionsHidden(): void;
                            public setImeWindowStatus(param0: globalAndroid.os.IBinder, param1: number, param2: number, param3: boolean): void;
                            public onNotificationError(param0: string, param1: string, param2: number, param3: number, param4: number, param5: string, param6: number): void;
                            public onNotificationActionClick(param0: string, param1: number): void;
                            public shutdown(): void;
                            public onNotificationClick(param0: string): void;
                            public disable2(param0: number, param1: globalAndroid.os.IBinder, param2: string): void;
                            public getInterfaceDescriptor(): string;
                            public setIcon(param0: string, param1: string, param2: number, param3: number, param4: string): void;
                            public asBinder(): globalAndroid.os.IBinder;
                            public clickTile(param0: globalAndroid.content.ComponentName): void;
                            public registerStatusBar(param0: com.android.internal.statusbar.IStatusBar, param1: java.util.List<string>, param2: java.util.List<com.android.internal.statusbar.StatusBarIcon>, param3: number[], param4: java.util.List<globalAndroid.os.IBinder>, param5: globalAndroid.graphics.Rect, param6: globalAndroid.graphics.Rect): void;
                            public onClearAllNotifications(param0: number): void;
                            public onPanelHidden(): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module statusbar {
                export class NotificationVisibility extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.statusbar.NotificationVisibility>;
                    public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.statusbar.NotificationVisibility>;
                    public key: string;
                    public rank: number;
                    public visible: boolean;
                    public equals(param0: any): boolean;
                    public static obtain(param0: string, param1: number, param2: boolean): com.android.internal.statusbar.NotificationVisibility;
                    public toString(): string;
                    public recycle(): void;
                    public describeContents(): number;
                    public clone(): com.android.internal.statusbar.NotificationVisibility;
                    public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                    public hashCode(): number;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module statusbar {
                export class StatusBarIcon extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.statusbar.StatusBarIcon>;
                    public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.statusbar.StatusBarIcon>;
                    public contentDescription: string;
                    public icon: any;
                    public iconLevel: number;
                    public number: number;
                    public pkg: string;
                    public user: globalAndroid.os.UserHandle;
                    public visible: boolean;
                    public constructor(param0: globalAndroid.os.Parcel);
                    public toString(): string;
                    public describeContents(): number;
                    public clone(): com.android.internal.statusbar.StatusBarIcon;
                    public readFromParcel(param0: globalAndroid.os.Parcel): void;
                    public constructor(param0: globalAndroid.os.UserHandle, param1: string, param2: any, param3: number, param4: number, param5: string);
                    public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                    public constructor(param0: string, param1: globalAndroid.os.UserHandle, param2: number, param3: number, param4: number, param5: string);
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telecom {
                export class ICallScreeningAdapter extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telecom.ICallScreeningAdapter>;
                    /**
                     * Constructs a new instance of the com.android.internal.telecom.ICallScreeningAdapter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        allowCall(param0: string): void;
                        disallowCall(param0: string, param1: boolean, param2: boolean, param3: boolean): void;
                    });
                    public constructor();
                    public allowCall(param0: string): void;
                    public disallowCall(param0: string, param1: boolean, param2: boolean, param3: boolean): void;
                }
                export module ICallScreeningAdapter {
                    export abstract class Stub implements com.android.internal.telecom.ICallScreeningAdapter {
                        public static class: java.lang.Class<com.android.internal.telecom.ICallScreeningAdapter.Stub>;
                        public constructor();
                        public allowCall(param0: string): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.telecom.ICallScreeningAdapter;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public disallowCall(param0: string, param1: boolean, param2: boolean, param3: boolean): void;
                        public asBinder(): globalAndroid.os.IBinder;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.telecom.ICallScreeningAdapter {
                            public static class: java.lang.Class<com.android.internal.telecom.ICallScreeningAdapter.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public allowCall(param0: string): void;
                            public asBinder(): globalAndroid.os.IBinder;
                            public disallowCall(param0: string, param1: boolean, param2: boolean, param3: boolean): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telecom {
                export class ICallScreeningService extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telecom.ICallScreeningService>;
                    /**
                     * Constructs a new instance of the com.android.internal.telecom.ICallScreeningService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        screenCall(param0: com.android.internal.telecom.ICallScreeningAdapter, param1: globalAndroid.telecom.ParcelableCall): void;
                    });
                    public constructor();
                    public screenCall(param0: com.android.internal.telecom.ICallScreeningAdapter, param1: globalAndroid.telecom.ParcelableCall): void;
                }
                export module ICallScreeningService {
                    export abstract class Stub implements com.android.internal.telecom.ICallScreeningService {
                        public static class: java.lang.Class<com.android.internal.telecom.ICallScreeningService.Stub>;
                        public constructor();
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.telecom.ICallScreeningService;
                        public screenCall(param0: com.android.internal.telecom.ICallScreeningAdapter, param1: globalAndroid.telecom.ParcelableCall): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.telecom.ICallScreeningService {
                            public static class: java.lang.Class<com.android.internal.telecom.ICallScreeningService.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public screenCall(param0: com.android.internal.telecom.ICallScreeningAdapter, param1: globalAndroid.telecom.ParcelableCall): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telecom {
                export class IConnectionService extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telecom.IConnectionService>;
                    /**
                     * Constructs a new instance of the com.android.internal.telecom.IConnectionService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        abort(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        addConnectionServiceAdapter(param0: com.android.internal.telecom.IConnectionServiceAdapter, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        addParticipantWithConference(param0: string, param1: string): void;
                        answer(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        answerVideo(param0: string, param1: number, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        conference(param0: string, param1: string, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        createConnection(param0: globalAndroid.telecom.PhoneAccountHandle, param1: string, param2: globalAndroid.telecom.ConnectionRequest, param3: boolean, param4: boolean, param5: globalAndroid.telecom.Logging.Session.Info): void;
                        createConnectionComplete(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        createConnectionFailed(param0: globalAndroid.telecom.PhoneAccountHandle, param1: string, param2: globalAndroid.telecom.ConnectionRequest, param3: boolean, param4: globalAndroid.telecom.Logging.Session.Info): void;
                        disconnect(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        hold(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        mergeConference(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        onCallAudioStateChanged(param0: string, param1: globalAndroid.telecom.CallAudioState, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        onExtrasChanged(param0: string, param1: globalAndroid.os.Bundle, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        onPostDialContinue(param0: string, param1: boolean, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        playDtmfTone(param0: string, param1: string, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        pullExternalCall(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        reject(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        rejectWithMessage(param0: string, param1: string, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        removeConnectionServiceAdapter(param0: com.android.internal.telecom.IConnectionServiceAdapter, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        respondToRttUpgradeRequest(param0: string, param1: globalAndroid.os.ParcelFileDescriptor, param2: globalAndroid.os.ParcelFileDescriptor, param3: globalAndroid.telecom.Logging.Session.Info): void;
                        sendCallEvent(param0: string, param1: string, param2: globalAndroid.os.Bundle, param3: globalAndroid.telecom.Logging.Session.Info): void;
                        silence(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        splitFromConference(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        startRtt(param0: string, param1: globalAndroid.os.ParcelFileDescriptor, param2: globalAndroid.os.ParcelFileDescriptor, param3: globalAndroid.telecom.Logging.Session.Info): void;
                        stopDtmfTone(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        stopRtt(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        swapConference(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        unhold(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                    });
                    public constructor();
                    public startRtt(param0: string, param1: globalAndroid.os.ParcelFileDescriptor, param2: globalAndroid.os.ParcelFileDescriptor, param3: globalAndroid.telecom.Logging.Session.Info): void;
                    public createConnection(param0: globalAndroid.telecom.PhoneAccountHandle, param1: string, param2: globalAndroid.telecom.ConnectionRequest, param3: boolean, param4: boolean, param5: globalAndroid.telecom.Logging.Session.Info): void;
                    public onExtrasChanged(param0: string, param1: globalAndroid.os.Bundle, param2: globalAndroid.telecom.Logging.Session.Info): void;
                    public unhold(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                    public createConnectionComplete(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                    public sendCallEvent(param0: string, param1: string, param2: globalAndroid.os.Bundle, param3: globalAndroid.telecom.Logging.Session.Info): void;
                    public disconnect(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                    public hold(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                    public mergeConference(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                    public createConnectionFailed(param0: globalAndroid.telecom.PhoneAccountHandle, param1: string, param2: globalAndroid.telecom.ConnectionRequest, param3: boolean, param4: globalAndroid.telecom.Logging.Session.Info): void;
                    public answerVideo(param0: string, param1: number, param2: globalAndroid.telecom.Logging.Session.Info): void;
                    public reject(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                    public rejectWithMessage(param0: string, param1: string, param2: globalAndroid.telecom.Logging.Session.Info): void;
                    public silence(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                    public splitFromConference(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                    public answer(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                    public respondToRttUpgradeRequest(param0: string, param1: globalAndroid.os.ParcelFileDescriptor, param2: globalAndroid.os.ParcelFileDescriptor, param3: globalAndroid.telecom.Logging.Session.Info): void;
                    public playDtmfTone(param0: string, param1: string, param2: globalAndroid.telecom.Logging.Session.Info): void;
                    public swapConference(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                    public removeConnectionServiceAdapter(param0: com.android.internal.telecom.IConnectionServiceAdapter, param1: globalAndroid.telecom.Logging.Session.Info): void;
                    public addParticipantWithConference(param0: string, param1: string): void;
                    public pullExternalCall(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                    public abort(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                    public addConnectionServiceAdapter(param0: com.android.internal.telecom.IConnectionServiceAdapter, param1: globalAndroid.telecom.Logging.Session.Info): void;
                    public stopRtt(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                    public conference(param0: string, param1: string, param2: globalAndroid.telecom.Logging.Session.Info): void;
                    public onCallAudioStateChanged(param0: string, param1: globalAndroid.telecom.CallAudioState, param2: globalAndroid.telecom.Logging.Session.Info): void;
                    public onPostDialContinue(param0: string, param1: boolean, param2: globalAndroid.telecom.Logging.Session.Info): void;
                    public stopDtmfTone(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                }
                export module IConnectionService {
                    export abstract class Stub implements com.android.internal.telecom.IConnectionService {
                        public static class: java.lang.Class<com.android.internal.telecom.IConnectionService.Stub>;
                        public onExtrasChanged(param0: string, param1: globalAndroid.os.Bundle, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        public conference(param0: string, param1: string, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        public answer(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        public disconnect(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        public rejectWithMessage(param0: string, param1: string, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        public respondToRttUpgradeRequest(param0: string, param1: globalAndroid.os.ParcelFileDescriptor, param2: globalAndroid.os.ParcelFileDescriptor, param3: globalAndroid.telecom.Logging.Session.Info): void;
                        public onPostDialContinue(param0: string, param1: boolean, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        public answerVideo(param0: string, param1: number, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        public hold(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        public removeConnectionServiceAdapter(param0: com.android.internal.telecom.IConnectionServiceAdapter, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public createConnection(param0: globalAndroid.telecom.PhoneAccountHandle, param1: string, param2: globalAndroid.telecom.ConnectionRequest, param3: boolean, param4: boolean, param5: globalAndroid.telecom.Logging.Session.Info): void;
                        public asBinder(): globalAndroid.os.IBinder;
                        public swapConference(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        public unhold(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        public constructor();
                        public addParticipantWithConference(param0: string, param1: string): void;
                        public stopRtt(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.telecom.IConnectionService;
                        public createConnectionComplete(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        public splitFromConference(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        public pullExternalCall(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        public stopDtmfTone(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        public addConnectionServiceAdapter(param0: com.android.internal.telecom.IConnectionServiceAdapter, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        public createConnectionFailed(param0: globalAndroid.telecom.PhoneAccountHandle, param1: string, param2: globalAndroid.telecom.ConnectionRequest, param3: boolean, param4: globalAndroid.telecom.Logging.Session.Info): void;
                        public abort(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        public sendCallEvent(param0: string, param1: string, param2: globalAndroid.os.Bundle, param3: globalAndroid.telecom.Logging.Session.Info): void;
                        public silence(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        public reject(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        public playDtmfTone(param0: string, param1: string, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        public mergeConference(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        public startRtt(param0: string, param1: globalAndroid.os.ParcelFileDescriptor, param2: globalAndroid.os.ParcelFileDescriptor, param3: globalAndroid.telecom.Logging.Session.Info): void;
                        public onCallAudioStateChanged(param0: string, param1: globalAndroid.telecom.CallAudioState, param2: globalAndroid.telecom.Logging.Session.Info): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.telecom.IConnectionService {
                            public static class: java.lang.Class<com.android.internal.telecom.IConnectionService.Stub.Proxy>;
                            public stopDtmfTone(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                            public reject(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                            public answer(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                            public onCallAudioStateChanged(param0: string, param1: globalAndroid.telecom.CallAudioState, param2: globalAndroid.telecom.Logging.Session.Info): void;
                            public sendCallEvent(param0: string, param1: string, param2: globalAndroid.os.Bundle, param3: globalAndroid.telecom.Logging.Session.Info): void;
                            public splitFromConference(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                            public addConnectionServiceAdapter(param0: com.android.internal.telecom.IConnectionServiceAdapter, param1: globalAndroid.telecom.Logging.Session.Info): void;
                            public respondToRttUpgradeRequest(param0: string, param1: globalAndroid.os.ParcelFileDescriptor, param2: globalAndroid.os.ParcelFileDescriptor, param3: globalAndroid.telecom.Logging.Session.Info): void;
                            public silence(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                            public answerVideo(param0: string, param1: number, param2: globalAndroid.telecom.Logging.Session.Info): void;
                            public startRtt(param0: string, param1: globalAndroid.os.ParcelFileDescriptor, param2: globalAndroid.os.ParcelFileDescriptor, param3: globalAndroid.telecom.Logging.Session.Info): void;
                            public hold(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                            public addParticipantWithConference(param0: string, param1: string): void;
                            public abort(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                            public playDtmfTone(param0: string, param1: string, param2: globalAndroid.telecom.Logging.Session.Info): void;
                            public createConnectionComplete(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                            public createConnectionFailed(param0: globalAndroid.telecom.PhoneAccountHandle, param1: string, param2: globalAndroid.telecom.ConnectionRequest, param3: boolean, param4: globalAndroid.telecom.Logging.Session.Info): void;
                            public stopRtt(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                            public unhold(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                            public pullExternalCall(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                            public conference(param0: string, param1: string, param2: globalAndroid.telecom.Logging.Session.Info): void;
                            public onExtrasChanged(param0: string, param1: globalAndroid.os.Bundle, param2: globalAndroid.telecom.Logging.Session.Info): void;
                            public rejectWithMessage(param0: string, param1: string, param2: globalAndroid.telecom.Logging.Session.Info): void;
                            public onPostDialContinue(param0: string, param1: boolean, param2: globalAndroid.telecom.Logging.Session.Info): void;
                            public removeConnectionServiceAdapter(param0: com.android.internal.telecom.IConnectionServiceAdapter, param1: globalAndroid.telecom.Logging.Session.Info): void;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public mergeConference(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                            public createConnection(param0: globalAndroid.telecom.PhoneAccountHandle, param1: string, param2: globalAndroid.telecom.ConnectionRequest, param3: boolean, param4: boolean, param5: globalAndroid.telecom.Logging.Session.Info): void;
                            public disconnect(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                            public swapConference(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telecom {
                export class IConnectionServiceAdapter extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telecom.IConnectionServiceAdapter>;
                    /**
                     * Constructs a new instance of the com.android.internal.telecom.IConnectionServiceAdapter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        addConferenceCall(param0: string, param1: globalAndroid.telecom.ParcelableConference, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        addExistingConnection(param0: string, param1: globalAndroid.telecom.ParcelableConnection, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        handleCreateConnectionComplete(param0: string, param1: globalAndroid.telecom.ConnectionRequest, param2: globalAndroid.telecom.ParcelableConnection, param3: globalAndroid.telecom.Logging.Session.Info): void;
                        onConnectionEvent(param0: string, param1: string, param2: globalAndroid.os.Bundle, param3: globalAndroid.telecom.Logging.Session.Info): void;
                        onPostDialChar(param0: string, param1: string, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        onPostDialWait(param0: string, param1: string, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        onRemoteRttRequest(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        onRttInitiationFailure(param0: string, param1: number, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        onRttInitiationSuccess(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        onRttSessionRemotelyTerminated(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        putExtras(param0: string, param1: globalAndroid.os.Bundle, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        queryRemoteConnectionServices(param0: com.android.internal.telecom.RemoteServiceCallback, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        removeCall(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        removeExtras(param0: string, param1: java.util.List<string>, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        resetCdmaConnectionTime(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        setActive(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        setAddress(param0: string, param1: globalAndroid.net.Uri, param2: number, param3: globalAndroid.telecom.Logging.Session.Info): void;
                        setAudioRoute(param0: string, param1: number, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        setCallerDisplayName(param0: string, param1: string, param2: number, param3: globalAndroid.telecom.Logging.Session.Info): void;
                        setConferenceMergeFailed(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        setConferenceableConnections(param0: string, param1: java.util.List<string>, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        setConnectionCapabilities(param0: string, param1: number, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        setConnectionProperties(param0: string, param1: number, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        setDialing(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        setDisconnected(param0: string, param1: globalAndroid.telecom.DisconnectCause, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        setIsConferenced(param0: string, param1: string, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        setIsVoipAudioMode(param0: string, param1: boolean, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        setOnHold(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        setPulling(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        setRingbackRequested(param0: string, param1: boolean, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        setRinging(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        setStatusHints(param0: string, param1: globalAndroid.telecom.StatusHints, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        setVideoProvider(param0: string, param1: com.android.internal.telecom.IVideoProvider, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        setVideoState(param0: string, param1: number, param2: globalAndroid.telecom.Logging.Session.Info): void;
                    });
                    public constructor();
                    public addConferenceCall(param0: string, param1: globalAndroid.telecom.ParcelableConference, param2: globalAndroid.telecom.Logging.Session.Info): void;
                    public setConnectionProperties(param0: string, param1: number, param2: globalAndroid.telecom.Logging.Session.Info): void;
                    public setOnHold(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                    public onRemoteRttRequest(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                    public setPulling(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                    public addExistingConnection(param0: string, param1: globalAndroid.telecom.ParcelableConnection, param2: globalAndroid.telecom.Logging.Session.Info): void;
                    public setAddress(param0: string, param1: globalAndroid.net.Uri, param2: number, param3: globalAndroid.telecom.Logging.Session.Info): void;
                    public setAudioRoute(param0: string, param1: number, param2: globalAndroid.telecom.Logging.Session.Info): void;
                    public setIsVoipAudioMode(param0: string, param1: boolean, param2: globalAndroid.telecom.Logging.Session.Info): void;
                    public setIsConferenced(param0: string, param1: string, param2: globalAndroid.telecom.Logging.Session.Info): void;
                    public onPostDialWait(param0: string, param1: string, param2: globalAndroid.telecom.Logging.Session.Info): void;
                    public setDialing(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                    public setVideoState(param0: string, param1: number, param2: globalAndroid.telecom.Logging.Session.Info): void;
                    public handleCreateConnectionComplete(param0: string, param1: globalAndroid.telecom.ConnectionRequest, param2: globalAndroid.telecom.ParcelableConnection, param3: globalAndroid.telecom.Logging.Session.Info): void;
                    public setStatusHints(param0: string, param1: globalAndroid.telecom.StatusHints, param2: globalAndroid.telecom.Logging.Session.Info): void;
                    public onRttInitiationSuccess(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                    public setConferenceableConnections(param0: string, param1: java.util.List<string>, param2: globalAndroid.telecom.Logging.Session.Info): void;
                    public queryRemoteConnectionServices(param0: com.android.internal.telecom.RemoteServiceCallback, param1: globalAndroid.telecom.Logging.Session.Info): void;
                    public setConferenceMergeFailed(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                    public removeCall(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                    public resetCdmaConnectionTime(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                    public onRttSessionRemotelyTerminated(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                    public setRinging(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                    public setActive(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                    public setDisconnected(param0: string, param1: globalAndroid.telecom.DisconnectCause, param2: globalAndroid.telecom.Logging.Session.Info): void;
                    public onPostDialChar(param0: string, param1: string, param2: globalAndroid.telecom.Logging.Session.Info): void;
                    public removeExtras(param0: string, param1: java.util.List<string>, param2: globalAndroid.telecom.Logging.Session.Info): void;
                    public setVideoProvider(param0: string, param1: com.android.internal.telecom.IVideoProvider, param2: globalAndroid.telecom.Logging.Session.Info): void;
                    public onRttInitiationFailure(param0: string, param1: number, param2: globalAndroid.telecom.Logging.Session.Info): void;
                    public putExtras(param0: string, param1: globalAndroid.os.Bundle, param2: globalAndroid.telecom.Logging.Session.Info): void;
                    public setCallerDisplayName(param0: string, param1: string, param2: number, param3: globalAndroid.telecom.Logging.Session.Info): void;
                    public setConnectionCapabilities(param0: string, param1: number, param2: globalAndroid.telecom.Logging.Session.Info): void;
                    public onConnectionEvent(param0: string, param1: string, param2: globalAndroid.os.Bundle, param3: globalAndroid.telecom.Logging.Session.Info): void;
                    public setRingbackRequested(param0: string, param1: boolean, param2: globalAndroid.telecom.Logging.Session.Info): void;
                }
                export module IConnectionServiceAdapter {
                    export abstract class Stub implements com.android.internal.telecom.IConnectionServiceAdapter {
                        public static class: java.lang.Class<com.android.internal.telecom.IConnectionServiceAdapter.Stub>;
                        public setActive(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        public resetCdmaConnectionTime(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        public setConferenceMergeFailed(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        public addConferenceCall(param0: string, param1: globalAndroid.telecom.ParcelableConference, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        public setPulling(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        public setAddress(param0: string, param1: globalAndroid.net.Uri, param2: number, param3: globalAndroid.telecom.Logging.Session.Info): void;
                        public setConferenceableConnections(param0: string, param1: java.util.List<string>, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        public onRemoteRttRequest(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        public setVideoProvider(param0: string, param1: com.android.internal.telecom.IVideoProvider, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        public removeExtras(param0: string, param1: java.util.List<string>, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        public setIsVoipAudioMode(param0: string, param1: boolean, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        public setOnHold(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        public setRinging(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        public setDialing(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        public addExistingConnection(param0: string, param1: globalAndroid.telecom.ParcelableConnection, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        public setDisconnected(param0: string, param1: globalAndroid.telecom.DisconnectCause, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public putExtras(param0: string, param1: globalAndroid.os.Bundle, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        public constructor();
                        public onConnectionEvent(param0: string, param1: string, param2: globalAndroid.os.Bundle, param3: globalAndroid.telecom.Logging.Session.Info): void;
                        public setCallerDisplayName(param0: string, param1: string, param2: number, param3: globalAndroid.telecom.Logging.Session.Info): void;
                        public onRttInitiationSuccess(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        public onRttInitiationFailure(param0: string, param1: number, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        public queryRemoteConnectionServices(param0: com.android.internal.telecom.RemoteServiceCallback, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        public onPostDialChar(param0: string, param1: string, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        public setConnectionCapabilities(param0: string, param1: number, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.telecom.IConnectionServiceAdapter;
                        public handleCreateConnectionComplete(param0: string, param1: globalAndroid.telecom.ConnectionRequest, param2: globalAndroid.telecom.ParcelableConnection, param3: globalAndroid.telecom.Logging.Session.Info): void;
                        public setConnectionProperties(param0: string, param1: number, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        public setIsConferenced(param0: string, param1: string, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        public onRttSessionRemotelyTerminated(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        public setVideoState(param0: string, param1: number, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        public setRingbackRequested(param0: string, param1: boolean, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        public setStatusHints(param0: string, param1: globalAndroid.telecom.StatusHints, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        public removeCall(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        public setAudioRoute(param0: string, param1: number, param2: globalAndroid.telecom.Logging.Session.Info): void;
                        public onPostDialWait(param0: string, param1: string, param2: globalAndroid.telecom.Logging.Session.Info): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.telecom.IConnectionServiceAdapter {
                            public static class: java.lang.Class<com.android.internal.telecom.IConnectionServiceAdapter.Stub.Proxy>;
                            public setCallerDisplayName(param0: string, param1: string, param2: number, param3: globalAndroid.telecom.Logging.Session.Info): void;
                            public queryRemoteConnectionServices(param0: com.android.internal.telecom.RemoteServiceCallback, param1: globalAndroid.telecom.Logging.Session.Info): void;
                            public setConferenceableConnections(param0: string, param1: java.util.List<string>, param2: globalAndroid.telecom.Logging.Session.Info): void;
                            public setOnHold(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                            public onConnectionEvent(param0: string, param1: string, param2: globalAndroid.os.Bundle, param3: globalAndroid.telecom.Logging.Session.Info): void;
                            public onRttInitiationFailure(param0: string, param1: number, param2: globalAndroid.telecom.Logging.Session.Info): void;
                            public setConnectionProperties(param0: string, param1: number, param2: globalAndroid.telecom.Logging.Session.Info): void;
                            public onRemoteRttRequest(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                            public removeCall(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                            public setAddress(param0: string, param1: globalAndroid.net.Uri, param2: number, param3: globalAndroid.telecom.Logging.Session.Info): void;
                            public setStatusHints(param0: string, param1: globalAndroid.telecom.StatusHints, param2: globalAndroid.telecom.Logging.Session.Info): void;
                            public resetCdmaConnectionTime(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                            public setConnectionCapabilities(param0: string, param1: number, param2: globalAndroid.telecom.Logging.Session.Info): void;
                            public setIsConferenced(param0: string, param1: string, param2: globalAndroid.telecom.Logging.Session.Info): void;
                            public setRingbackRequested(param0: string, param1: boolean, param2: globalAndroid.telecom.Logging.Session.Info): void;
                            public removeExtras(param0: string, param1: java.util.List<string>, param2: globalAndroid.telecom.Logging.Session.Info): void;
                            public onPostDialWait(param0: string, param1: string, param2: globalAndroid.telecom.Logging.Session.Info): void;
                            public setAudioRoute(param0: string, param1: number, param2: globalAndroid.telecom.Logging.Session.Info): void;
                            public onRttSessionRemotelyTerminated(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                            public putExtras(param0: string, param1: globalAndroid.os.Bundle, param2: globalAndroid.telecom.Logging.Session.Info): void;
                            public setVideoProvider(param0: string, param1: com.android.internal.telecom.IVideoProvider, param2: globalAndroid.telecom.Logging.Session.Info): void;
                            public handleCreateConnectionComplete(param0: string, param1: globalAndroid.telecom.ConnectionRequest, param2: globalAndroid.telecom.ParcelableConnection, param3: globalAndroid.telecom.Logging.Session.Info): void;
                            public addExistingConnection(param0: string, param1: globalAndroid.telecom.ParcelableConnection, param2: globalAndroid.telecom.Logging.Session.Info): void;
                            public setVideoState(param0: string, param1: number, param2: globalAndroid.telecom.Logging.Session.Info): void;
                            public setActive(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                            public setIsVoipAudioMode(param0: string, param1: boolean, param2: globalAndroid.telecom.Logging.Session.Info): void;
                            public setDisconnected(param0: string, param1: globalAndroid.telecom.DisconnectCause, param2: globalAndroid.telecom.Logging.Session.Info): void;
                            public getInterfaceDescriptor(): string;
                            public setConferenceMergeFailed(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                            public asBinder(): globalAndroid.os.IBinder;
                            public addConferenceCall(param0: string, param1: globalAndroid.telecom.ParcelableConference, param2: globalAndroid.telecom.Logging.Session.Info): void;
                            public setPulling(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                            public onPostDialChar(param0: string, param1: string, param2: globalAndroid.telecom.Logging.Session.Info): void;
                            public onRttInitiationSuccess(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                            public setDialing(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                            public setRinging(param0: string, param1: globalAndroid.telecom.Logging.Session.Info): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telecom {
                export class IInCallAdapter extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telecom.IInCallAdapter>;
                    /**
                     * Constructs a new instance of the com.android.internal.telecom.IInCallAdapter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        answerCall(param0: string, param1: number): void;
                        conference(param0: string, param1: string): void;
                        disconnectCall(param0: string): void;
                        holdCall(param0: string): void;
                        mergeConference(param0: string): void;
                        mute(param0: boolean): void;
                        phoneAccountSelected(param0: string, param1: globalAndroid.telecom.PhoneAccountHandle, param2: boolean): void;
                        playDtmfTone(param0: string, param1: string): void;
                        postDialContinue(param0: string, param1: boolean): void;
                        pullExternalCall(param0: string): void;
                        putExtras(param0: string, param1: globalAndroid.os.Bundle): void;
                        rejectCall(param0: string, param1: boolean, param2: string): void;
                        removeExtras(param0: string, param1: java.util.List<string>): void;
                        respondToRttRequest(param0: string, param1: number, param2: boolean): void;
                        sendCallEvent(param0: string, param1: string, param2: globalAndroid.os.Bundle): void;
                        sendRttRequest(param0: string): void;
                        setAudioRoute(param0: number): void;
                        setRttMode(param0: string, param1: number): void;
                        splitFromConference(param0: string): void;
                        stopDtmfTone(param0: string): void;
                        stopRtt(param0: string): void;
                        swapConference(param0: string): void;
                        turnOffProximitySensor(param0: boolean): void;
                        turnOnProximitySensor(): void;
                        unholdCall(param0: string): void;
                    });
                    public constructor();
                    public disconnectCall(param0: string): void;
                    public rejectCall(param0: string, param1: boolean, param2: string): void;
                    public stopRtt(param0: string): void;
                    public phoneAccountSelected(param0: string, param1: globalAndroid.telecom.PhoneAccountHandle, param2: boolean): void;
                    public setRttMode(param0: string, param1: number): void;
                    public sendCallEvent(param0: string, param1: string, param2: globalAndroid.os.Bundle): void;
                    public sendRttRequest(param0: string): void;
                    public holdCall(param0: string): void;
                    public answerCall(param0: string, param1: number): void;
                    public pullExternalCall(param0: string): void;
                    public setAudioRoute(param0: number): void;
                    public putExtras(param0: string, param1: globalAndroid.os.Bundle): void;
                    public conference(param0: string, param1: string): void;
                    public postDialContinue(param0: string, param1: boolean): void;
                    public turnOffProximitySensor(param0: boolean): void;
                    public mergeConference(param0: string): void;
                    public swapConference(param0: string): void;
                    public turnOnProximitySensor(): void;
                    public respondToRttRequest(param0: string, param1: number, param2: boolean): void;
                    public removeExtras(param0: string, param1: java.util.List<string>): void;
                    public splitFromConference(param0: string): void;
                    public stopDtmfTone(param0: string): void;
                    public playDtmfTone(param0: string, param1: string): void;
                    public unholdCall(param0: string): void;
                    public mute(param0: boolean): void;
                }
                export module IInCallAdapter {
                    export abstract class Stub implements com.android.internal.telecom.IInCallAdapter {
                        public static class: java.lang.Class<com.android.internal.telecom.IInCallAdapter.Stub>;
                        public postDialContinue(param0: string, param1: boolean): void;
                        public conference(param0: string, param1: string): void;
                        public stopRtt(param0: string): void;
                        public unholdCall(param0: string): void;
                        public turnOnProximitySensor(): void;
                        public mute(param0: boolean): void;
                        public pullExternalCall(param0: string): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public removeExtras(param0: string, param1: java.util.List<string>): void;
                        public answerCall(param0: string, param1: number): void;
                        public asBinder(): globalAndroid.os.IBinder;
                        public swapConference(param0: string): void;
                        public sendRttRequest(param0: string): void;
                        public turnOffProximitySensor(param0: boolean): void;
                        public disconnectCall(param0: string): void;
                        public constructor();
                        public splitFromConference(param0: string): void;
                        public setRttMode(param0: string, param1: number): void;
                        public rejectCall(param0: string, param1: boolean, param2: string): void;
                        public sendCallEvent(param0: string, param1: string, param2: globalAndroid.os.Bundle): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.telecom.IInCallAdapter;
                        public holdCall(param0: string): void;
                        public phoneAccountSelected(param0: string, param1: globalAndroid.telecom.PhoneAccountHandle, param2: boolean): void;
                        public putExtras(param0: string, param1: globalAndroid.os.Bundle): void;
                        public respondToRttRequest(param0: string, param1: number, param2: boolean): void;
                        public setAudioRoute(param0: number): void;
                        public playDtmfTone(param0: string, param1: string): void;
                        public mergeConference(param0: string): void;
                        public stopDtmfTone(param0: string): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.telecom.IInCallAdapter {
                            public static class: java.lang.Class<com.android.internal.telecom.IInCallAdapter.Stub.Proxy>;
                            public stopDtmfTone(param0: string): void;
                            public conference(param0: string, param1: string): void;
                            public sendRttRequest(param0: string): void;
                            public stopRtt(param0: string): void;
                            public removeExtras(param0: string, param1: java.util.List<string>): void;
                            public phoneAccountSelected(param0: string, param1: globalAndroid.telecom.PhoneAccountHandle, param2: boolean): void;
                            public pullExternalCall(param0: string): void;
                            public postDialContinue(param0: string, param1: boolean): void;
                            public turnOffProximitySensor(param0: boolean): void;
                            public holdCall(param0: string): void;
                            public unholdCall(param0: string): void;
                            public disconnectCall(param0: string): void;
                            public rejectCall(param0: string, param1: boolean, param2: string): void;
                            public setRttMode(param0: string, param1: number): void;
                            public turnOnProximitySensor(): void;
                            public respondToRttRequest(param0: string, param1: number, param2: boolean): void;
                            public mute(param0: boolean): void;
                            public getInterfaceDescriptor(): string;
                            public swapConference(param0: string): void;
                            public asBinder(): globalAndroid.os.IBinder;
                            public putExtras(param0: string, param1: globalAndroid.os.Bundle): void;
                            public sendCallEvent(param0: string, param1: string, param2: globalAndroid.os.Bundle): void;
                            public setAudioRoute(param0: number): void;
                            public mergeConference(param0: string): void;
                            public answerCall(param0: string, param1: number): void;
                            public playDtmfTone(param0: string, param1: string): void;
                            public splitFromConference(param0: string): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telecom {
                export class IInCallService extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telecom.IInCallService>;
                    /**
                     * Constructs a new instance of the com.android.internal.telecom.IInCallService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        addCall(param0: globalAndroid.telecom.ParcelableCall): void;
                        bringToForeground(param0: boolean): void;
                        onCallAudioStateChanged(param0: globalAndroid.telecom.CallAudioState): void;
                        onCanAddCallChanged(param0: boolean): void;
                        onConnectionEvent(param0: string, param1: string, param2: globalAndroid.os.Bundle): void;
                        onRttInitiationFailure(param0: string, param1: number): void;
                        onRttUpgradeRequest(param0: string, param1: number): void;
                        setInCallAdapter(param0: com.android.internal.telecom.IInCallAdapter): void;
                        setPostDial(param0: string, param1: string): void;
                        setPostDialWait(param0: string, param1: string): void;
                        silenceRinger(): void;
                        updateCall(param0: globalAndroid.telecom.ParcelableCall): void;
                    });
                    public constructor();
                    public bringToForeground(param0: boolean): void;
                    public silenceRinger(): void;
                    public setInCallAdapter(param0: com.android.internal.telecom.IInCallAdapter): void;
                    public onRttInitiationFailure(param0: string, param1: number): void;
                    public updateCall(param0: globalAndroid.telecom.ParcelableCall): void;
                    public onCanAddCallChanged(param0: boolean): void;
                    public onConnectionEvent(param0: string, param1: string, param2: globalAndroid.os.Bundle): void;
                    public onRttUpgradeRequest(param0: string, param1: number): void;
                    public setPostDialWait(param0: string, param1: string): void;
                    public onCallAudioStateChanged(param0: globalAndroid.telecom.CallAudioState): void;
                    public setPostDial(param0: string, param1: string): void;
                    public addCall(param0: globalAndroid.telecom.ParcelableCall): void;
                }
                export module IInCallService {
                    export abstract class Stub implements com.android.internal.telecom.IInCallService {
                        public static class: java.lang.Class<com.android.internal.telecom.IInCallService.Stub>;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.telecom.IInCallService;
                        public constructor();
                        public onCanAddCallChanged(param0: boolean): void;
                        public onRttUpgradeRequest(param0: string, param1: number): void;
                        public silenceRinger(): void;
                        public onRttInitiationFailure(param0: string, param1: number): void;
                        public bringToForeground(param0: boolean): void;
                        public addCall(param0: globalAndroid.telecom.ParcelableCall): void;
                        public setInCallAdapter(param0: com.android.internal.telecom.IInCallAdapter): void;
                        public setPostDial(param0: string, param1: string): void;
                        public onCallAudioStateChanged(param0: globalAndroid.telecom.CallAudioState): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public onConnectionEvent(param0: string, param1: string, param2: globalAndroid.os.Bundle): void;
                        public setPostDialWait(param0: string, param1: string): void;
                        public updateCall(param0: globalAndroid.telecom.ParcelableCall): void;
                        public asBinder(): globalAndroid.os.IBinder;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.telecom.IInCallService {
                            public static class: java.lang.Class<com.android.internal.telecom.IInCallService.Stub.Proxy>;
                            public setPostDial(param0: string, param1: string): void;
                            public silenceRinger(): void;
                            public updateCall(param0: globalAndroid.telecom.ParcelableCall): void;
                            public getInterfaceDescriptor(): string;
                            public setPostDialWait(param0: string, param1: string): void;
                            public asBinder(): globalAndroid.os.IBinder;
                            public addCall(param0: globalAndroid.telecom.ParcelableCall): void;
                            public onCallAudioStateChanged(param0: globalAndroid.telecom.CallAudioState): void;
                            public setInCallAdapter(param0: com.android.internal.telecom.IInCallAdapter): void;
                            public onCanAddCallChanged(param0: boolean): void;
                            public onConnectionEvent(param0: string, param1: string, param2: globalAndroid.os.Bundle): void;
                            public onRttInitiationFailure(param0: string, param1: number): void;
                            public bringToForeground(param0: boolean): void;
                            public onRttUpgradeRequest(param0: string, param1: number): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telecom {
                export class ITelecomService extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telecom.ITelecomService>;
                    /**
                     * Constructs a new instance of the com.android.internal.telecom.ITelecomService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        acceptRingingCall(param0: string): void;
                        acceptRingingCallWithVideoState(param0: string, param1: number): void;
                        addNewIncomingCall(param0: globalAndroid.telecom.PhoneAccountHandle, param1: globalAndroid.os.Bundle): void;
                        addNewUnknownCall(param0: globalAndroid.telecom.PhoneAccountHandle, param1: globalAndroid.os.Bundle): void;
                        cancelMissedCallsNotification(param0: string): void;
                        clearAccounts(param0: string): void;
                        createManageBlockedNumbersIntent(): globalAndroid.content.Intent;
                        dumpCallAnalytics(): globalAndroid.telecom.TelecomAnalytics;
                        enablePhoneAccount(param0: globalAndroid.telecom.PhoneAccountHandle, param1: boolean): boolean;
                        endCall(): boolean;
                        getAdnUriForPhoneAccount(param0: globalAndroid.telecom.PhoneAccountHandle, param1: string): globalAndroid.net.Uri;
                        getAllPhoneAccountHandles(): java.util.List<globalAndroid.telecom.PhoneAccountHandle>;
                        getAllPhoneAccounts(): java.util.List<globalAndroid.telecom.PhoneAccount>;
                        getAllPhoneAccountsCount(): number;
                        getCallCapablePhoneAccounts(param0: boolean, param1: string): java.util.List<globalAndroid.telecom.PhoneAccountHandle>;
                        getCallState(): number;
                        getCurrentTtyMode(param0: string): number;
                        getDefaultDialerPackage(): string;
                        getDefaultOutgoingPhoneAccount(param0: string, param1: string): globalAndroid.telecom.PhoneAccountHandle;
                        getDefaultPhoneApp(): globalAndroid.content.ComponentName;
                        getLine1Number(param0: globalAndroid.telecom.PhoneAccountHandle, param1: string): string;
                        getPhoneAccount(param0: globalAndroid.telecom.PhoneAccountHandle): globalAndroid.telecom.PhoneAccount;
                        getPhoneAccountsForPackage(param0: string): java.util.List<globalAndroid.telecom.PhoneAccountHandle>;
                        getPhoneAccountsSupportingScheme(param0: string, param1: string): java.util.List<globalAndroid.telecom.PhoneAccountHandle>;
                        getSelfManagedPhoneAccounts(param0: string): java.util.List<globalAndroid.telecom.PhoneAccountHandle>;
                        getSimCallManager(): globalAndroid.telecom.PhoneAccountHandle;
                        getSimCallManagerForUser(param0: number): globalAndroid.telecom.PhoneAccountHandle;
                        getSystemDialerPackage(): string;
                        getUserSelectedOutgoingPhoneAccount(): globalAndroid.telecom.PhoneAccountHandle;
                        getVoiceMailNumber(param0: globalAndroid.telecom.PhoneAccountHandle, param1: string): string;
                        handlePinMmi(param0: string, param1: string): boolean;
                        handlePinMmiForPhoneAccount(param0: globalAndroid.telecom.PhoneAccountHandle, param1: string, param2: string): boolean;
                        isInCall(param0: string): boolean;
                        isInManagedCall(param0: string): boolean;
                        isIncomingCallPermitted(param0: globalAndroid.telecom.PhoneAccountHandle): boolean;
                        isOutgoingCallPermitted(param0: globalAndroid.telecom.PhoneAccountHandle): boolean;
                        isRinging(param0: string): boolean;
                        isTtySupported(param0: string): boolean;
                        isVoiceMailNumber(param0: globalAndroid.telecom.PhoneAccountHandle, param1: string, param2: string): boolean;
                        placeCall(param0: globalAndroid.net.Uri, param1: globalAndroid.os.Bundle, param2: string): void;
                        registerPhoneAccount(param0: globalAndroid.telecom.PhoneAccount): void;
                        setDefaultDialer(param0: string): boolean;
                        setUserSelectedOutgoingPhoneAccount(param0: globalAndroid.telecom.PhoneAccountHandle): void;
                        showInCallScreen(param0: boolean, param1: string): void;
                        silenceRinger(param0: string): void;
                        unregisterPhoneAccount(param0: globalAndroid.telecom.PhoneAccountHandle): void;
                        waitOnHandlers(): void;
                    });
                    public constructor();
                    public getDefaultDialerPackage(): string;
                    public createManageBlockedNumbersIntent(): globalAndroid.content.Intent;
                    public getLine1Number(param0: globalAndroid.telecom.PhoneAccountHandle, param1: string): string;
                    public getDefaultPhoneApp(): globalAndroid.content.ComponentName;
                    public clearAccounts(param0: string): void;
                    public getPhoneAccountsForPackage(param0: string): java.util.List<globalAndroid.telecom.PhoneAccountHandle>;
                    public getSimCallManagerForUser(param0: number): globalAndroid.telecom.PhoneAccountHandle;
                    public setDefaultDialer(param0: string): boolean;
                    public getCallCapablePhoneAccounts(param0: boolean, param1: string): java.util.List<globalAndroid.telecom.PhoneAccountHandle>;
                    public getVoiceMailNumber(param0: globalAndroid.telecom.PhoneAccountHandle, param1: string): string;
                    public unregisterPhoneAccount(param0: globalAndroid.telecom.PhoneAccountHandle): void;
                    public getPhoneAccount(param0: globalAndroid.telecom.PhoneAccountHandle): globalAndroid.telecom.PhoneAccount;
                    public addNewUnknownCall(param0: globalAndroid.telecom.PhoneAccountHandle, param1: globalAndroid.os.Bundle): void;
                    public isIncomingCallPermitted(param0: globalAndroid.telecom.PhoneAccountHandle): boolean;
                    public isTtySupported(param0: string): boolean;
                    public showInCallScreen(param0: boolean, param1: string): void;
                    public placeCall(param0: globalAndroid.net.Uri, param1: globalAndroid.os.Bundle, param2: string): void;
                    public endCall(): boolean;
                    public getAdnUriForPhoneAccount(param0: globalAndroid.telecom.PhoneAccountHandle, param1: string): globalAndroid.net.Uri;
                    public setUserSelectedOutgoingPhoneAccount(param0: globalAndroid.telecom.PhoneAccountHandle): void;
                    public handlePinMmi(param0: string, param1: string): boolean;
                    public addNewIncomingCall(param0: globalAndroid.telecom.PhoneAccountHandle, param1: globalAndroid.os.Bundle): void;
                    public getCallState(): number;
                    public handlePinMmiForPhoneAccount(param0: globalAndroid.telecom.PhoneAccountHandle, param1: string, param2: string): boolean;
                    public isVoiceMailNumber(param0: globalAndroid.telecom.PhoneAccountHandle, param1: string, param2: string): boolean;
                    public getCurrentTtyMode(param0: string): number;
                    public getAllPhoneAccounts(): java.util.List<globalAndroid.telecom.PhoneAccount>;
                    public getSystemDialerPackage(): string;
                    public isOutgoingCallPermitted(param0: globalAndroid.telecom.PhoneAccountHandle): boolean;
                    public dumpCallAnalytics(): globalAndroid.telecom.TelecomAnalytics;
                    public isInCall(param0: string): boolean;
                    public cancelMissedCallsNotification(param0: string): void;
                    public getDefaultOutgoingPhoneAccount(param0: string, param1: string): globalAndroid.telecom.PhoneAccountHandle;
                    public getAllPhoneAccountHandles(): java.util.List<globalAndroid.telecom.PhoneAccountHandle>;
                    public getAllPhoneAccountsCount(): number;
                    public enablePhoneAccount(param0: globalAndroid.telecom.PhoneAccountHandle, param1: boolean): boolean;
                    public acceptRingingCallWithVideoState(param0: string, param1: number): void;
                    public getSimCallManager(): globalAndroid.telecom.PhoneAccountHandle;
                    public isRinging(param0: string): boolean;
                    public getSelfManagedPhoneAccounts(param0: string): java.util.List<globalAndroid.telecom.PhoneAccountHandle>;
                    public waitOnHandlers(): void;
                    public getUserSelectedOutgoingPhoneAccount(): globalAndroid.telecom.PhoneAccountHandle;
                    public getPhoneAccountsSupportingScheme(param0: string, param1: string): java.util.List<globalAndroid.telecom.PhoneAccountHandle>;
                    public isInManagedCall(param0: string): boolean;
                    public silenceRinger(param0: string): void;
                    public acceptRingingCall(param0: string): void;
                    public registerPhoneAccount(param0: globalAndroid.telecom.PhoneAccount): void;
                }
                export module ITelecomService {
                    export abstract class Stub implements com.android.internal.telecom.ITelecomService {
                        public static class: java.lang.Class<com.android.internal.telecom.ITelecomService.Stub>;
                        public showInCallScreen(param0: boolean, param1: string): void;
                        public getUserSelectedOutgoingPhoneAccount(): globalAndroid.telecom.PhoneAccountHandle;
                        public getSimCallManagerForUser(param0: number): globalAndroid.telecom.PhoneAccountHandle;
                        public addNewIncomingCall(param0: globalAndroid.telecom.PhoneAccountHandle, param1: globalAndroid.os.Bundle): void;
                        public createManageBlockedNumbersIntent(): globalAndroid.content.Intent;
                        public getPhoneAccountsSupportingScheme(param0: string, param1: string): java.util.List<globalAndroid.telecom.PhoneAccountHandle>;
                        public waitOnHandlers(): void;
                        public isIncomingCallPermitted(param0: globalAndroid.telecom.PhoneAccountHandle): boolean;
                        public getCallCapablePhoneAccounts(param0: boolean, param1: string): java.util.List<globalAndroid.telecom.PhoneAccountHandle>;
                        public endCall(): boolean;
                        public isVoiceMailNumber(param0: globalAndroid.telecom.PhoneAccountHandle, param1: string, param2: string): boolean;
                        public isInCall(param0: string): boolean;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.telecom.ITelecomService;
                        public getAdnUriForPhoneAccount(param0: globalAndroid.telecom.PhoneAccountHandle, param1: string): globalAndroid.net.Uri;
                        public asBinder(): globalAndroid.os.IBinder;
                        public getSimCallManager(): globalAndroid.telecom.PhoneAccountHandle;
                        public silenceRinger(param0: string): void;
                        public constructor();
                        public isInManagedCall(param0: string): boolean;
                        public getPhoneAccountsForPackage(param0: string): java.util.List<globalAndroid.telecom.PhoneAccountHandle>;
                        public clearAccounts(param0: string): void;
                        public placeCall(param0: globalAndroid.net.Uri, param1: globalAndroid.os.Bundle, param2: string): void;
                        public getAllPhoneAccountsCount(): number;
                        public addNewUnknownCall(param0: globalAndroid.telecom.PhoneAccountHandle, param1: globalAndroid.os.Bundle): void;
                        public getAllPhoneAccounts(): java.util.List<globalAndroid.telecom.PhoneAccount>;
                        public isOutgoingCallPermitted(param0: globalAndroid.telecom.PhoneAccountHandle): boolean;
                        public getDefaultOutgoingPhoneAccount(param0: string, param1: string): globalAndroid.telecom.PhoneAccountHandle;
                        public getAllPhoneAccountHandles(): java.util.List<globalAndroid.telecom.PhoneAccountHandle>;
                        public getVoiceMailNumber(param0: globalAndroid.telecom.PhoneAccountHandle, param1: string): string;
                        public isRinging(param0: string): boolean;
                        public handlePinMmiForPhoneAccount(param0: globalAndroid.telecom.PhoneAccountHandle, param1: string, param2: string): boolean;
                        public registerPhoneAccount(param0: globalAndroid.telecom.PhoneAccount): void;
                        public acceptRingingCallWithVideoState(param0: string, param1: number): void;
                        public getDefaultDialerPackage(): string;
                        public getSystemDialerPackage(): string;
                        public acceptRingingCall(param0: string): void;
                        public getPhoneAccount(param0: globalAndroid.telecom.PhoneAccountHandle): globalAndroid.telecom.PhoneAccount;
                        public getCallState(): number;
                        public getSelfManagedPhoneAccounts(param0: string): java.util.List<globalAndroid.telecom.PhoneAccountHandle>;
                        public getCurrentTtyMode(param0: string): number;
                        public setUserSelectedOutgoingPhoneAccount(param0: globalAndroid.telecom.PhoneAccountHandle): void;
                        public cancelMissedCallsNotification(param0: string): void;
                        public dumpCallAnalytics(): globalAndroid.telecom.TelecomAnalytics;
                        public getLine1Number(param0: globalAndroid.telecom.PhoneAccountHandle, param1: string): string;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public enablePhoneAccount(param0: globalAndroid.telecom.PhoneAccountHandle, param1: boolean): boolean;
                        public setDefaultDialer(param0: string): boolean;
                        public handlePinMmi(param0: string, param1: string): boolean;
                        public getDefaultPhoneApp(): globalAndroid.content.ComponentName;
                        public unregisterPhoneAccount(param0: globalAndroid.telecom.PhoneAccountHandle): void;
                        public isTtySupported(param0: string): boolean;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.telecom.ITelecomService {
                            public static class: java.lang.Class<com.android.internal.telecom.ITelecomService.Stub.Proxy>;
                            public endCall(): boolean;
                            public registerPhoneAccount(param0: globalAndroid.telecom.PhoneAccount): void;
                            public getDefaultDialerPackage(): string;
                            public isTtySupported(param0: string): boolean;
                            public unregisterPhoneAccount(param0: globalAndroid.telecom.PhoneAccountHandle): void;
                            public setUserSelectedOutgoingPhoneAccount(param0: globalAndroid.telecom.PhoneAccountHandle): void;
                            public isRinging(param0: string): boolean;
                            public clearAccounts(param0: string): void;
                            public addNewUnknownCall(param0: globalAndroid.telecom.PhoneAccountHandle, param1: globalAndroid.os.Bundle): void;
                            public getCallState(): number;
                            public getCurrentTtyMode(param0: string): number;
                            public isInCall(param0: string): boolean;
                            public createManageBlockedNumbersIntent(): globalAndroid.content.Intent;
                            public getSimCallManagerForUser(param0: number): globalAndroid.telecom.PhoneAccountHandle;
                            public getInterfaceDescriptor(): string;
                            public addNewIncomingCall(param0: globalAndroid.telecom.PhoneAccountHandle, param1: globalAndroid.os.Bundle): void;
                            public asBinder(): globalAndroid.os.IBinder;
                            public isVoiceMailNumber(param0: globalAndroid.telecom.PhoneAccountHandle, param1: string, param2: string): boolean;
                            public acceptRingingCallWithVideoState(param0: string, param1: number): void;
                            public waitOnHandlers(): void;
                            public showInCallScreen(param0: boolean, param1: string): void;
                            public placeCall(param0: globalAndroid.net.Uri, param1: globalAndroid.os.Bundle, param2: string): void;
                            public getSelfManagedPhoneAccounts(param0: string): java.util.List<globalAndroid.telecom.PhoneAccountHandle>;
                            public getDefaultPhoneApp(): globalAndroid.content.ComponentName;
                            public isOutgoingCallPermitted(param0: globalAndroid.telecom.PhoneAccountHandle): boolean;
                            public getSystemDialerPackage(): string;
                            public getPhoneAccount(param0: globalAndroid.telecom.PhoneAccountHandle): globalAndroid.telecom.PhoneAccount;
                            public isInManagedCall(param0: string): boolean;
                            public setDefaultDialer(param0: string): boolean;
                            public getAllPhoneAccountHandles(): java.util.List<globalAndroid.telecom.PhoneAccountHandle>;
                            public getUserSelectedOutgoingPhoneAccount(): globalAndroid.telecom.PhoneAccountHandle;
                            public handlePinMmi(param0: string, param1: string): boolean;
                            public handlePinMmiForPhoneAccount(param0: globalAndroid.telecom.PhoneAccountHandle, param1: string, param2: string): boolean;
                            public getAllPhoneAccounts(): java.util.List<globalAndroid.telecom.PhoneAccount>;
                            public getAdnUriForPhoneAccount(param0: globalAndroid.telecom.PhoneAccountHandle, param1: string): globalAndroid.net.Uri;
                            public getPhoneAccountsSupportingScheme(param0: string, param1: string): java.util.List<globalAndroid.telecom.PhoneAccountHandle>;
                            public cancelMissedCallsNotification(param0: string): void;
                            public enablePhoneAccount(param0: globalAndroid.telecom.PhoneAccountHandle, param1: boolean): boolean;
                            public getCallCapablePhoneAccounts(param0: boolean, param1: string): java.util.List<globalAndroid.telecom.PhoneAccountHandle>;
                            public getDefaultOutgoingPhoneAccount(param0: string, param1: string): globalAndroid.telecom.PhoneAccountHandle;
                            public getVoiceMailNumber(param0: globalAndroid.telecom.PhoneAccountHandle, param1: string): string;
                            public getSimCallManager(): globalAndroid.telecom.PhoneAccountHandle;
                            public acceptRingingCall(param0: string): void;
                            public silenceRinger(param0: string): void;
                            public getAllPhoneAccountsCount(): number;
                            public isIncomingCallPermitted(param0: globalAndroid.telecom.PhoneAccountHandle): boolean;
                            public dumpCallAnalytics(): globalAndroid.telecom.TelecomAnalytics;
                            public getPhoneAccountsForPackage(param0: string): java.util.List<globalAndroid.telecom.PhoneAccountHandle>;
                            public getLine1Number(param0: globalAndroid.telecom.PhoneAccountHandle, param1: string): string;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telecom {
                export class IVideoCallback extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telecom.IVideoCallback>;
                    /**
                     * Constructs a new instance of the com.android.internal.telecom.IVideoCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        changeCallDataUsage(param0: number): void;
                        changeCameraCapabilities(param0: globalAndroid.telecom.VideoProfile.CameraCapabilities): void;
                        changePeerDimensions(param0: number, param1: number): void;
                        changeVideoQuality(param0: number): void;
                        handleCallSessionEvent(param0: number): void;
                        receiveSessionModifyRequest(param0: globalAndroid.telecom.VideoProfile): void;
                        receiveSessionModifyResponse(param0: number, param1: globalAndroid.telecom.VideoProfile, param2: globalAndroid.telecom.VideoProfile): void;
                    });
                    public constructor();
                    public changePeerDimensions(param0: number, param1: number): void;
                    public handleCallSessionEvent(param0: number): void;
                    public receiveSessionModifyResponse(param0: number, param1: globalAndroid.telecom.VideoProfile, param2: globalAndroid.telecom.VideoProfile): void;
                    public receiveSessionModifyRequest(param0: globalAndroid.telecom.VideoProfile): void;
                    public changeCameraCapabilities(param0: globalAndroid.telecom.VideoProfile.CameraCapabilities): void;
                    public changeCallDataUsage(param0: number): void;
                    public changeVideoQuality(param0: number): void;
                }
                export module IVideoCallback {
                    export abstract class Stub implements com.android.internal.telecom.IVideoCallback {
                        public static class: java.lang.Class<com.android.internal.telecom.IVideoCallback.Stub>;
                        public changeVideoQuality(param0: number): void;
                        public handleCallSessionEvent(param0: number): void;
                        public constructor();
                        public receiveSessionModifyRequest(param0: globalAndroid.telecom.VideoProfile): void;
                        public receiveSessionModifyResponse(param0: number, param1: globalAndroid.telecom.VideoProfile, param2: globalAndroid.telecom.VideoProfile): void;
                        public changeCallDataUsage(param0: number): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public changeCameraCapabilities(param0: globalAndroid.telecom.VideoProfile.CameraCapabilities): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.telecom.IVideoCallback;
                        public changePeerDimensions(param0: number, param1: number): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.telecom.IVideoCallback {
                            public static class: java.lang.Class<com.android.internal.telecom.IVideoCallback.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public changePeerDimensions(param0: number, param1: number): void;
                            public receiveSessionModifyResponse(param0: number, param1: globalAndroid.telecom.VideoProfile, param2: globalAndroid.telecom.VideoProfile): void;
                            public changeCallDataUsage(param0: number): void;
                            public changeCameraCapabilities(param0: globalAndroid.telecom.VideoProfile.CameraCapabilities): void;
                            public changeVideoQuality(param0: number): void;
                            public handleCallSessionEvent(param0: number): void;
                            public receiveSessionModifyRequest(param0: globalAndroid.telecom.VideoProfile): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telecom {
                export class IVideoProvider extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telecom.IVideoProvider>;
                    /**
                     * Constructs a new instance of the com.android.internal.telecom.IVideoProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        addVideoCallback(param0: globalAndroid.os.IBinder): void;
                        removeVideoCallback(param0: globalAndroid.os.IBinder): void;
                        requestCallDataUsage(): void;
                        requestCameraCapabilities(): void;
                        sendSessionModifyRequest(param0: globalAndroid.telecom.VideoProfile, param1: globalAndroid.telecom.VideoProfile): void;
                        sendSessionModifyResponse(param0: globalAndroid.telecom.VideoProfile): void;
                        setCamera(param0: string, param1: string, param2: number): void;
                        setDeviceOrientation(param0: number): void;
                        setDisplaySurface(param0: globalAndroid.view.Surface): void;
                        setPauseImage(param0: globalAndroid.net.Uri): void;
                        setPreviewSurface(param0: globalAndroid.view.Surface): void;
                        setZoom(param0: number): void;
                    });
                    public constructor();
                    public removeVideoCallback(param0: globalAndroid.os.IBinder): void;
                    public sendSessionModifyRequest(param0: globalAndroid.telecom.VideoProfile, param1: globalAndroid.telecom.VideoProfile): void;
                    public setCamera(param0: string, param1: string, param2: number): void;
                    public setPreviewSurface(param0: globalAndroid.view.Surface): void;
                    public requestCallDataUsage(): void;
                    public setDeviceOrientation(param0: number): void;
                    public addVideoCallback(param0: globalAndroid.os.IBinder): void;
                    public setPauseImage(param0: globalAndroid.net.Uri): void;
                    public setDisplaySurface(param0: globalAndroid.view.Surface): void;
                    public sendSessionModifyResponse(param0: globalAndroid.telecom.VideoProfile): void;
                    public setZoom(param0: number): void;
                    public requestCameraCapabilities(): void;
                }
                export module IVideoProvider {
                    export abstract class Stub implements com.android.internal.telecom.IVideoProvider {
                        public static class: java.lang.Class<com.android.internal.telecom.IVideoProvider.Stub>;
                        public constructor();
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.telecom.IVideoProvider;
                        public requestCallDataUsage(): void;
                        public removeVideoCallback(param0: globalAndroid.os.IBinder): void;
                        public sendSessionModifyRequest(param0: globalAndroid.telecom.VideoProfile, param1: globalAndroid.telecom.VideoProfile): void;
                        public setDeviceOrientation(param0: number): void;
                        public setPauseImage(param0: globalAndroid.net.Uri): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public addVideoCallback(param0: globalAndroid.os.IBinder): void;
                        public setCamera(param0: string, param1: string, param2: number): void;
                        public setZoom(param0: number): void;
                        public requestCameraCapabilities(): void;
                        public sendSessionModifyResponse(param0: globalAndroid.telecom.VideoProfile): void;
                        public asBinder(): globalAndroid.os.IBinder;
                        public setDisplaySurface(param0: globalAndroid.view.Surface): void;
                        public setPreviewSurface(param0: globalAndroid.view.Surface): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.telecom.IVideoProvider {
                            public static class: java.lang.Class<com.android.internal.telecom.IVideoProvider.Stub.Proxy>;
                            public requestCallDataUsage(): void;
                            public sendSessionModifyResponse(param0: globalAndroid.telecom.VideoProfile): void;
                            public addVideoCallback(param0: globalAndroid.os.IBinder): void;
                            public setDeviceOrientation(param0: number): void;
                            public setDisplaySurface(param0: globalAndroid.view.Surface): void;
                            public setPreviewSurface(param0: globalAndroid.view.Surface): void;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public requestCameraCapabilities(): void;
                            public sendSessionModifyRequest(param0: globalAndroid.telecom.VideoProfile, param1: globalAndroid.telecom.VideoProfile): void;
                            public setZoom(param0: number): void;
                            public setPauseImage(param0: globalAndroid.net.Uri): void;
                            public removeVideoCallback(param0: globalAndroid.os.IBinder): void;
                            public setCamera(param0: string, param1: string, param2: number): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telecom {
                export class RemoteServiceCallback extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telecom.RemoteServiceCallback>;
                    /**
                     * Constructs a new instance of the com.android.internal.telecom.RemoteServiceCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        onError(): void;
                        onResult(param0: java.util.List<globalAndroid.content.ComponentName>, param1: java.util.List<globalAndroid.os.IBinder>): void;
                    });
                    public constructor();
                    public onError(): void;
                    public onResult(param0: java.util.List<globalAndroid.content.ComponentName>, param1: java.util.List<globalAndroid.os.IBinder>): void;
                }
                export module RemoteServiceCallback {
                    export abstract class Stub implements com.android.internal.telecom.RemoteServiceCallback {
                        public static class: java.lang.Class<com.android.internal.telecom.RemoteServiceCallback.Stub>;
                        public onError(): void;
                        public onResult(param0: java.util.List<globalAndroid.content.ComponentName>, param1: java.util.List<globalAndroid.os.IBinder>): void;
                        public constructor();
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.telecom.RemoteServiceCallback;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.telecom.RemoteServiceCallback {
                            public static class: java.lang.Class<com.android.internal.telecom.RemoteServiceCallback.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public onError(): void;
                            public onResult(param0: java.util.List<globalAndroid.content.ComponentName>, param1: java.util.List<globalAndroid.os.IBinder>): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class CallInfo extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.CallInfo>;
                    public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.telephony.CallInfo>;
                    public constructor(param0: string);
                    public describeContents(): number;
                    public getHandle(): string;
                    public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class CallerInfo extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.CallerInfo>;
                    public static USER_TYPE_CURRENT: number;
                    public static USER_TYPE_WORK: number;
                    public cachedPhoto: globalAndroid.graphics.drawable.Drawable;
                    public cachedPhotoIcon: globalAndroid.graphics.Bitmap;
                    public cnapName: string;
                    public contactDisplayPhotoUri: globalAndroid.net.Uri;
                    public contactExists: boolean;
                    public contactIdOrZero: number;
                    public contactRefUri: globalAndroid.net.Uri;
                    public contactRingtoneUri: globalAndroid.net.Uri;
                    public geoDescription: string;
                    public isCachedPhotoCurrent: boolean;
                    public lookupKey: string;
                    public name: string;
                    public namePresentation: number;
                    public needUpdate: boolean;
                    public normalizedNumber: string;
                    public numberLabel: string;
                    public numberPresentation: number;
                    public numberType: number;
                    public phoneLabel: string;
                    public phoneNumber: string;
                    public photoResource: number;
                    public shouldSendToVoicemail: boolean;
                    public userType: number;
                    public toString(): string;
                    public static getCallerInfo(param0: globalAndroid.content.Context, param1: string): com.android.internal.telephony.CallerInfo;
                    public static getCurrentCountryIso(param0: globalAndroid.content.Context): string;
                    public constructor();
                    public isEmergencyNumber(): boolean;
                    public static getCallerInfo(param0: globalAndroid.content.Context, param1: string, param2: number): com.android.internal.telephony.CallerInfo;
                    public static getCallerInfo(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri, param2: globalAndroid.database.Cursor): com.android.internal.telephony.CallerInfo;
                    public static getCallerInfo(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri): com.android.internal.telephony.CallerInfo;
                    public updateGeoDescription(param0: globalAndroid.content.Context, param1: string): void;
                    public isVoiceMailNumber(): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class CallerInfoAsyncQuery extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.CallerInfoAsyncQuery>;
                    public static startQuery(param0: number, param1: globalAndroid.content.Context, param2: string, param3: com.android.internal.telephony.CallerInfoAsyncQuery.OnQueryCompleteListener, param4: any): com.android.internal.telephony.CallerInfoAsyncQuery;
                    public static startQuery(param0: number, param1: globalAndroid.content.Context, param2: globalAndroid.net.Uri, param3: com.android.internal.telephony.CallerInfoAsyncQuery.OnQueryCompleteListener, param4: any): com.android.internal.telephony.CallerInfoAsyncQuery;
                    public static startQuery(param0: number, param1: globalAndroid.content.Context, param2: string, param3: com.android.internal.telephony.CallerInfoAsyncQuery.OnQueryCompleteListener, param4: any, param5: number): com.android.internal.telephony.CallerInfoAsyncQuery;
                    public addQueryListener(param0: number, param1: com.android.internal.telephony.CallerInfoAsyncQuery.OnQueryCompleteListener, param2: any): void;
                }
                export module CallerInfoAsyncQuery {
                    export class CallerInfoAsyncQueryHandler extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.telephony.CallerInfoAsyncQuery.CallerInfoAsyncQueryHandler>;
                        public onQueryComplete(param0: number, param1: any, param2: globalAndroid.database.Cursor): void;
                        public createHandler(param0: globalAndroid.os.Looper): globalAndroid.os.Handler;
                    }
                    export module CallerInfoAsyncQueryHandler {
                        export class CallerInfoWorkerHandler extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.telephony.CallerInfoAsyncQuery.CallerInfoAsyncQueryHandler.CallerInfoWorkerHandler>;
                            public constructor(param0: com.android.internal.telephony.CallerInfoAsyncQuery.CallerInfoAsyncQueryHandler, param1: globalAndroid.os.Looper);
                            public handleMessage(param0: globalAndroid.os.Message): void;
                        }
                    }
                    export class CookieWrapper extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.telephony.CallerInfoAsyncQuery.CookieWrapper>;
                        public cookie: any;
                        public event: number;
                        public listener: com.android.internal.telephony.CallerInfoAsyncQuery.OnQueryCompleteListener;
                        public number: string;
                        public subId: number;
                    }
                    export class OnQueryCompleteListener extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.telephony.CallerInfoAsyncQuery.OnQueryCompleteListener>;
                        /**
                         * Constructs a new instance of the com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            onQueryComplete(param0: number, param1: any, param2: com.android.internal.telephony.CallerInfo): void;
                        });
                        public constructor();
                        public onQueryComplete(param0: number, param1: any, param2: com.android.internal.telephony.CallerInfo): void;
                    }
                    export class QueryPoolException extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.telephony.CallerInfoAsyncQuery.QueryPoolException>;
                        public constructor(param0: string);
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class CarrierAppUtils extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.CarrierAppUtils>;
                    public static disableCarrierAppsUntilPrivileged(param0: string, param1: globalAndroid.content.pm.IPackageManager, param2: globalAndroid.telephony.TelephonyManager, param3: globalAndroid.content.ContentResolver, param4: number, param5: string[], param6: globalAndroid.util.ArrayMap<string, java.util.List<string>>): void;
                    public static getDefaultCarrierAppCandidates(param0: globalAndroid.content.pm.IPackageManager, param1: number): java.util.List<globalAndroid.content.pm.ApplicationInfo>;
                    public static disableCarrierAppsUntilPrivileged(param0: string, param1: globalAndroid.content.pm.IPackageManager, param2: globalAndroid.telephony.TelephonyManager, param3: globalAndroid.content.ContentResolver, param4: number): void;
                    public static getDefaultCarrierApps(param0: globalAndroid.content.pm.IPackageManager, param1: globalAndroid.telephony.TelephonyManager, param2: number): java.util.List<globalAndroid.content.pm.ApplicationInfo>;
                    public static disableCarrierAppsUntilPrivileged(param0: string, param1: globalAndroid.content.pm.IPackageManager, param2: globalAndroid.content.ContentResolver, param3: number): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class CellNetworkScanResult extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.CellNetworkScanResult>;
                    public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.telephony.CellNetworkScanResult>;
                    public static STATUS_RADIO_GENERIC_FAILURE: number;
                    public static STATUS_RADIO_NOT_AVAILABLE: number;
                    public static STATUS_SUCCESS: number;
                    public static STATUS_UNKNOWN_ERROR: number;
                    public toString(): string;
                    public getOperators(): java.util.List<com.android.internal.telephony.OperatorInfo>;
                    public describeContents(): number;
                    public constructor(param0: number, param1: java.util.List<com.android.internal.telephony.OperatorInfo>);
                    public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                    public getStatus(): number;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class DcParamObject extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.DcParamObject>;
                    public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.telephony.DcParamObject>;
                    public constructor(param0: globalAndroid.os.Parcel);
                    public describeContents(): number;
                    public getSubId(): number;
                    public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                    public constructor(param0: number);
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class DctConstants extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.DctConstants>;
                    public static APN_CBS_ID: number;
                    public static APN_DEFAULT_ID: number;
                    public static APN_DUN_ID: number;
                    public static APN_EMERGENCY_ID: number;
                    public static APN_FOTA_ID: number;
                    public static APN_HIPRI_ID: number;
                    public static APN_IA_ID: number;
                    public static APN_IMS_ID: number;
                    public static APN_INVALID_ID: number;
                    public static APN_MMS_ID: number;
                    public static APN_NUM_TYPES: number;
                    public static APN_SUPL_ID: number;
                    public static APN_TYPE_KEY: string;
                    public static BASE: number;
                    public static CMD_CLEAR_PROVISIONING_SPINNER: number;
                    public static CMD_ENABLE_MOBILE_PROVISIONING: number;
                    public static CMD_IS_PROVISIONING_APN: number;
                    public static CMD_NET_STAT_POLL: number;
                    public static CMD_SET_DEPENDENCY_MET: number;
                    public static CMD_SET_ENABLE_FAIL_FAST_MOBILE_DATA: number;
                    public static CMD_SET_POLICY_DATA_ENABLE: number;
                    public static CMD_SET_USER_DATA_ENABLE: number;
                    public static DISABLED: number;
                    public static ENABLED: number;
                    public static EVENT_APN_CHANGED: number;
                    public static EVENT_CDMA_DATA_DETACHED: number;
                    public static EVENT_CDMA_OTA_PROVISION: number;
                    public static EVENT_CDMA_SUBSCRIPTION_SOURCE_CHANGED: number;
                    public static EVENT_CLEAN_UP_ALL_CONNECTIONS: number;
                    public static EVENT_CLEAN_UP_CONNECTION: number;
                    public static EVENT_DATA_CONNECTION_ATTACHED: number;
                    public static EVENT_DATA_CONNECTION_DETACHED: number;
                    public static EVENT_DATA_RAT_CHANGED: number;
                    public static EVENT_DATA_SETUP_COMPLETE: number;
                    public static EVENT_DATA_SETUP_COMPLETE_ERROR: number;
                    public static EVENT_DATA_STALL_ALARM: number;
                    public static EVENT_DATA_STATE_CHANGED: number;
                    public static EVENT_DEVICE_PROVISIONED_CHANGE: number;
                    public static EVENT_DISCONNECT_DC_RETRYING: number;
                    public static EVENT_DISCONNECT_DONE: number;
                    public static EVENT_DO_RECOVERY: number;
                    public static EVENT_ENABLE_NEW_APN: number;
                    public static EVENT_ICC_CHANGED: number;
                    public static EVENT_LINK_STATE_CHANGED: number;
                    public static EVENT_MODEM_STATE_CHANGED: number;
                    public static EVENT_PCO_DATA_RECEIVED: number;
                    public static EVENT_POLL_PDP: number;
                    public static EVENT_PROVISIONING_APN_ALARM: number;
                    public static EVENT_PS_RESTRICT_DISABLED: number;
                    public static EVENT_PS_RESTRICT_ENABLED: number;
                    public static EVENT_RADIO_AVAILABLE: number;
                    public static EVENT_RADIO_OFF_OR_NOT_AVAILABLE: number;
                    public static EVENT_RECORDS_LOADED: number;
                    public static EVENT_REDIRECTION_DETECTED: number;
                    public static EVENT_RESET_DONE: number;
                    public static EVENT_RESTART_RADIO: number;
                    public static EVENT_RESTORE_DEFAULT_APN: number;
                    public static EVENT_ROAMING_OFF: number;
                    public static EVENT_ROAMING_ON: number;
                    public static EVENT_SET_CARRIER_DATA_ENABLED: number;
                    public static EVENT_SET_INTERNAL_DATA_ENABLE: number;
                    public static EVENT_TRY_SETUP_DATA: number;
                    public static EVENT_VOICE_CALL_ENDED: number;
                    public static EVENT_VOICE_CALL_STARTED: number;
                    public static INVALID: number;
                    public static PROVISIONING_URL_KEY: string;
                    public constructor();
                }
                export module DctConstants {
                    export class Activity extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.telephony.DctConstants.Activity>;
                        public static DATAIN: com.android.internal.telephony.DctConstants.Activity;
                        public static DATAINANDOUT: com.android.internal.telephony.DctConstants.Activity;
                        public static DATAOUT: com.android.internal.telephony.DctConstants.Activity;
                        public static DORMANT: com.android.internal.telephony.DctConstants.Activity;
                        public static NONE: com.android.internal.telephony.DctConstants.Activity;
                        public static values(): com.android.internal.telephony.DctConstants.Activity[];
                        public static valueOf(param0: string): com.android.internal.telephony.DctConstants.Activity;
                    }
                    export class State extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.telephony.DctConstants.State>;
                        public static CONNECTED: com.android.internal.telephony.DctConstants.State;
                        public static CONNECTING: com.android.internal.telephony.DctConstants.State;
                        public static DISCONNECTING: com.android.internal.telephony.DctConstants.State;
                        public static FAILED: com.android.internal.telephony.DctConstants.State;
                        public static IDLE: com.android.internal.telephony.DctConstants.State;
                        public static RETRYING: com.android.internal.telephony.DctConstants.State;
                        public static SCANNING: com.android.internal.telephony.DctConstants.State;
                        public static valueOf(param0: string): com.android.internal.telephony.DctConstants.State;
                        public static values(): com.android.internal.telephony.DctConstants.State[];
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class EncodeException extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.EncodeException>;
                    public constructor(param0: string);
                    public constructor();
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class GsmAlphabet extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.GsmAlphabet>;
                    public static GSM_EXTENDED_ESCAPE: number;
                    public static UDH_SEPTET_COST_CONCATENATED_MESSAGE: number;
                    public static UDH_SEPTET_COST_LENGTH: number;
                    public static UDH_SEPTET_COST_ONE_SHIFT_TABLE: number;
                    public static UDH_SEPTET_COST_TWO_SHIFT_TABLES: number;
                    public static gsm7BitPackedToString(param0: number[], param1: number, param2: number, param3: number, param4: number, param5: number): string;
                    public static stringToGsm8BitUnpackedField(param0: string, param1: number[], param2: number, param3: number): void;
                    public static gsmExtendedToChar(param0: number): string;
                    public static isGsmSeptets(param0: string): boolean;
                    public static stringToGsm7BitPackedWithHeader(param0: string, param1: number[], param2: number, param3: number): number[];
                    public static stringToGsm7BitPacked(param0: string): number[];
                    public static stringToGsm8BitPacked(param0: string): number[];
                    public static setEnabledLockingShiftTables(param0: number[]): void;
                    public static countGsmSeptets(param0: string, param1: boolean): com.android.internal.telephony.GsmAlphabet.TextEncodingDetails;
                    public static setEnabledSingleShiftTables(param0: number[]): void;
                    public static countGsmSeptets(param0: string, param1: boolean): number;
                    public static countGsmSeptets(param0: string): number;
                    public static stringToGsm7BitPackedWithHeader(param0: string, param1: number[]): number[];
                    public static gsmToChar(param0: number): string;
                    public static getEnabledLockingShiftTables(): number[];
                    public static charToGsm(param0: string, param1: boolean): number;
                    public static charToGsmExtended(param0: string): number;
                    public static gsm7BitPackedToString(param0: number[], param1: number, param2: number): string;
                    public static stringToGsm7BitPacked(param0: string, param1: number, param2: boolean, param3: number, param4: number): number[];
                    public static stringToGsm7BitPacked(param0: string, param1: number, param2: number): number[];
                    public static getEnabledSingleShiftTables(): number[];
                    public static charToGsm(param0: string): number;
                    public static findGsmSeptetLimitIndex(param0: string, param1: number, param2: number, param3: number, param4: number): number;
                    public static gsm8BitUnpackedToString(param0: number[], param1: number, param2: number): string;
                    public static gsm8BitUnpackedToString(param0: number[], param1: number, param2: number, param3: string): string;
                    public static countGsmSeptetsUsingTables(param0: string, param1: boolean, param2: number, param3: number): number;
                }
                export module GsmAlphabet {
                    export class LanguagePairCount extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.telephony.GsmAlphabet.LanguagePairCount>;
                    }
                    export class TextEncodingDetails extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.telephony.GsmAlphabet.TextEncodingDetails>;
                        public codeUnitCount: number;
                        public codeUnitSize: number;
                        public codeUnitsRemaining: number;
                        public languageShiftTable: number;
                        public languageTable: number;
                        public msgCount: number;
                        public constructor();
                        public toString(): string;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class ICarrierConfigLoader extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.ICarrierConfigLoader>;
                    /**
                     * Constructs a new instance of the com.android.internal.telephony.ICarrierConfigLoader interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        getConfigForSubId(param0: number): any;
                        notifyConfigChangedForSubId(param0: number): void;
                        updateConfigForPhoneId(param0: number, param1: string): void;
                    });
                    public constructor();
                    public notifyConfigChangedForSubId(param0: number): void;
                    public getConfigForSubId(param0: number): any;
                    public updateConfigForPhoneId(param0: number, param1: string): void;
                }
                export module ICarrierConfigLoader {
                    export abstract class Stub implements com.android.internal.telephony.ICarrierConfigLoader {
                        public static class: java.lang.Class<com.android.internal.telephony.ICarrierConfigLoader.Stub>;
                        public constructor();
                        public updateConfigForPhoneId(param0: number, param1: string): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.telephony.ICarrierConfigLoader;
                        public getConfigForSubId(param0: number): any;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public notifyConfigChangedForSubId(param0: number): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.telephony.ICarrierConfigLoader {
                            public static class: java.lang.Class<com.android.internal.telephony.ICarrierConfigLoader.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public getConfigForSubId(param0: number): any;
                            public updateConfigForPhoneId(param0: number, param1: string): void;
                            public notifyConfigChangedForSubId(param0: number): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class IMms extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.IMms>;
                    /**
                     * Constructs a new instance of the com.android.internal.telephony.IMms interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        addMultimediaMessageDraft(param0: string, param1: globalAndroid.net.Uri): globalAndroid.net.Uri;
                        addTextMessageDraft(param0: string, param1: string, param2: string): globalAndroid.net.Uri;
                        archiveStoredConversation(param0: string, param1: number, param2: boolean): boolean;
                        deleteStoredConversation(param0: string, param1: number): boolean;
                        deleteStoredMessage(param0: string, param1: globalAndroid.net.Uri): boolean;
                        downloadMessage(param0: number, param1: string, param2: string, param3: globalAndroid.net.Uri, param4: globalAndroid.os.Bundle, param5: globalAndroid.app.PendingIntent): void;
                        getAutoPersisting(): boolean;
                        getCarrierConfigValues(param0: number): globalAndroid.os.Bundle;
                        importMultimediaMessage(param0: string, param1: globalAndroid.net.Uri, param2: string, param3: number, param4: boolean, param5: boolean): globalAndroid.net.Uri;
                        importTextMessage(param0: string, param1: string, param2: number, param3: string, param4: number, param5: boolean, param6: boolean): globalAndroid.net.Uri;
                        sendMessage(param0: number, param1: string, param2: globalAndroid.net.Uri, param3: string, param4: globalAndroid.os.Bundle, param5: globalAndroid.app.PendingIntent): void;
                        sendStoredMessage(param0: number, param1: string, param2: globalAndroid.net.Uri, param3: globalAndroid.os.Bundle, param4: globalAndroid.app.PendingIntent): void;
                        setAutoPersisting(param0: string, param1: boolean): void;
                        updateStoredMessageStatus(param0: string, param1: globalAndroid.net.Uri, param2: globalAndroid.content.ContentValues): boolean;
                    });
                    public constructor();
                    public importMultimediaMessage(param0: string, param1: globalAndroid.net.Uri, param2: string, param3: number, param4: boolean, param5: boolean): globalAndroid.net.Uri;
                    public updateStoredMessageStatus(param0: string, param1: globalAndroid.net.Uri, param2: globalAndroid.content.ContentValues): boolean;
                    public getCarrierConfigValues(param0: number): globalAndroid.os.Bundle;
                    public sendMessage(param0: number, param1: string, param2: globalAndroid.net.Uri, param3: string, param4: globalAndroid.os.Bundle, param5: globalAndroid.app.PendingIntent): void;
                    public archiveStoredConversation(param0: string, param1: number, param2: boolean): boolean;
                    public deleteStoredMessage(param0: string, param1: globalAndroid.net.Uri): boolean;
                    public sendStoredMessage(param0: number, param1: string, param2: globalAndroid.net.Uri, param3: globalAndroid.os.Bundle, param4: globalAndroid.app.PendingIntent): void;
                    public downloadMessage(param0: number, param1: string, param2: string, param3: globalAndroid.net.Uri, param4: globalAndroid.os.Bundle, param5: globalAndroid.app.PendingIntent): void;
                    public addTextMessageDraft(param0: string, param1: string, param2: string): globalAndroid.net.Uri;
                    public setAutoPersisting(param0: string, param1: boolean): void;
                    public addMultimediaMessageDraft(param0: string, param1: globalAndroid.net.Uri): globalAndroid.net.Uri;
                    public deleteStoredConversation(param0: string, param1: number): boolean;
                    public getAutoPersisting(): boolean;
                    public importTextMessage(param0: string, param1: string, param2: number, param3: string, param4: number, param5: boolean, param6: boolean): globalAndroid.net.Uri;
                }
                export module IMms {
                    export abstract class Stub implements com.android.internal.telephony.IMms {
                        public static class: java.lang.Class<com.android.internal.telephony.IMms.Stub>;
                        public sendMessage(param0: number, param1: string, param2: globalAndroid.net.Uri, param3: string, param4: globalAndroid.os.Bundle, param5: globalAndroid.app.PendingIntent): void;
                        public constructor();
                        public getAutoPersisting(): boolean;
                        public downloadMessage(param0: number, param1: string, param2: string, param3: globalAndroid.net.Uri, param4: globalAndroid.os.Bundle, param5: globalAndroid.app.PendingIntent): void;
                        public addMultimediaMessageDraft(param0: string, param1: globalAndroid.net.Uri): globalAndroid.net.Uri;
                        public importMultimediaMessage(param0: string, param1: globalAndroid.net.Uri, param2: string, param3: number, param4: boolean, param5: boolean): globalAndroid.net.Uri;
                        public setAutoPersisting(param0: string, param1: boolean): void;
                        public archiveStoredConversation(param0: string, param1: number, param2: boolean): boolean;
                        public importTextMessage(param0: string, param1: string, param2: number, param3: string, param4: number, param5: boolean, param6: boolean): globalAndroid.net.Uri;
                        public deleteStoredConversation(param0: string, param1: number): boolean;
                        public sendStoredMessage(param0: number, param1: string, param2: globalAndroid.net.Uri, param3: globalAndroid.os.Bundle, param4: globalAndroid.app.PendingIntent): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.telephony.IMms;
                        public deleteStoredMessage(param0: string, param1: globalAndroid.net.Uri): boolean;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public updateStoredMessageStatus(param0: string, param1: globalAndroid.net.Uri, param2: globalAndroid.content.ContentValues): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public addTextMessageDraft(param0: string, param1: string, param2: string): globalAndroid.net.Uri;
                        public getCarrierConfigValues(param0: number): globalAndroid.os.Bundle;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.telephony.IMms {
                            public static class: java.lang.Class<com.android.internal.telephony.IMms.Stub.Proxy>;
                            public getAutoPersisting(): boolean;
                            public archiveStoredConversation(param0: string, param1: number, param2: boolean): boolean;
                            public downloadMessage(param0: number, param1: string, param2: string, param3: globalAndroid.net.Uri, param4: globalAndroid.os.Bundle, param5: globalAndroid.app.PendingIntent): void;
                            public deleteStoredMessage(param0: string, param1: globalAndroid.net.Uri): boolean;
                            public addTextMessageDraft(param0: string, param1: string, param2: string): globalAndroid.net.Uri;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public sendMessage(param0: number, param1: string, param2: globalAndroid.net.Uri, param3: string, param4: globalAndroid.os.Bundle, param5: globalAndroid.app.PendingIntent): void;
                            public updateStoredMessageStatus(param0: string, param1: globalAndroid.net.Uri, param2: globalAndroid.content.ContentValues): boolean;
                            public importMultimediaMessage(param0: string, param1: globalAndroid.net.Uri, param2: string, param3: number, param4: boolean, param5: boolean): globalAndroid.net.Uri;
                            public addMultimediaMessageDraft(param0: string, param1: globalAndroid.net.Uri): globalAndroid.net.Uri;
                            public deleteStoredConversation(param0: string, param1: number): boolean;
                            public getCarrierConfigValues(param0: number): globalAndroid.os.Bundle;
                            public sendStoredMessage(param0: number, param1: string, param2: globalAndroid.net.Uri, param3: globalAndroid.os.Bundle, param4: globalAndroid.app.PendingIntent): void;
                            public importTextMessage(param0: string, param1: string, param2: number, param3: string, param4: number, param5: boolean, param6: boolean): globalAndroid.net.Uri;
                            public setAutoPersisting(param0: string, param1: boolean): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class IOnSubscriptionsChangedListener extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.IOnSubscriptionsChangedListener>;
                    /**
                     * Constructs a new instance of the com.android.internal.telephony.IOnSubscriptionsChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        onSubscriptionsChanged(): void;
                    });
                    public constructor();
                    public onSubscriptionsChanged(): void;
                }
                export module IOnSubscriptionsChangedListener {
                    export abstract class Stub implements com.android.internal.telephony.IOnSubscriptionsChangedListener {
                        public static class: java.lang.Class<com.android.internal.telephony.IOnSubscriptionsChangedListener.Stub>;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.telephony.IOnSubscriptionsChangedListener;
                        public constructor();
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public onSubscriptionsChanged(): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.telephony.IOnSubscriptionsChangedListener {
                            public static class: java.lang.Class<com.android.internal.telephony.IOnSubscriptionsChangedListener.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public onSubscriptionsChanged(): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class IPhoneStateListener extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.IPhoneStateListener>;
                    /**
                     * Constructs a new instance of the com.android.internal.telephony.IPhoneStateListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        onCallForwardingIndicatorChanged(param0: boolean): void;
                        onCallStateChanged(param0: number, param1: string): void;
                        onCarrierNetworkChange(param0: boolean): void;
                        onCellInfoChanged(param0: java.util.List<globalAndroid.telephony.CellInfo>): void;
                        onCellLocationChanged(param0: globalAndroid.os.Bundle): void;
                        onDataActivationStateChanged(param0: number): void;
                        onDataActivity(param0: number): void;
                        onDataConnectionRealTimeInfoChanged(param0: globalAndroid.telephony.DataConnectionRealTimeInfo): void;
                        onDataConnectionStateChanged(param0: number, param1: number): void;
                        onMessageWaitingIndicatorChanged(param0: boolean): void;
                        onOemHookRawEvent(param0: number[]): void;
                        onOtaspChanged(param0: number): void;
                        onPreciseCallStateChanged(param0: globalAndroid.telephony.PreciseCallState): void;
                        onPreciseDataConnectionStateChanged(param0: globalAndroid.telephony.PreciseDataConnectionState): void;
                        onServiceStateChanged(param0: globalAndroid.telephony.ServiceState): void;
                        onSignalStrengthChanged(param0: number): void;
                        onSignalStrengthsChanged(param0: globalAndroid.telephony.SignalStrength): void;
                        onSomcHookRawEvent(param0: number[]): void;
                        onVoLteServiceStateChanged(param0: globalAndroid.telephony.VoLteServiceState): void;
                        onVoiceActivationStateChanged(param0: number): void;
                    });
                    public constructor();
                    public onDataActivationStateChanged(param0: number): void;
                    public onCarrierNetworkChange(param0: boolean): void;
                    public onOtaspChanged(param0: number): void;
                    public onCallForwardingIndicatorChanged(param0: boolean): void;
                    public onDataConnectionRealTimeInfoChanged(param0: globalAndroid.telephony.DataConnectionRealTimeInfo): void;
                    public onDataConnectionStateChanged(param0: number, param1: number): void;
                    public onCellInfoChanged(param0: java.util.List<globalAndroid.telephony.CellInfo>): void;
                    public onDataActivity(param0: number): void;
                    public onMessageWaitingIndicatorChanged(param0: boolean): void;
                    public onOemHookRawEvent(param0: number[]): void;
                    public onSignalStrengthsChanged(param0: globalAndroid.telephony.SignalStrength): void;
                    public onServiceStateChanged(param0: globalAndroid.telephony.ServiceState): void;
                    public onSomcHookRawEvent(param0: number[]): void;
                    public onVoLteServiceStateChanged(param0: globalAndroid.telephony.VoLteServiceState): void;
                    public onCallStateChanged(param0: number, param1: string): void;
                    public onSignalStrengthChanged(param0: number): void;
                    public onVoiceActivationStateChanged(param0: number): void;
                    public onPreciseCallStateChanged(param0: globalAndroid.telephony.PreciseCallState): void;
                    public onPreciseDataConnectionStateChanged(param0: globalAndroid.telephony.PreciseDataConnectionState): void;
                    public onCellLocationChanged(param0: globalAndroid.os.Bundle): void;
                }
                export module IPhoneStateListener {
                    export abstract class Stub implements com.android.internal.telephony.IPhoneStateListener {
                        public static class: java.lang.Class<com.android.internal.telephony.IPhoneStateListener.Stub>;
                        public onCallStateChanged(param0: number, param1: string): void;
                        public onMessageWaitingIndicatorChanged(param0: boolean): void;
                        public constructor();
                        public onVoLteServiceStateChanged(param0: globalAndroid.telephony.VoLteServiceState): void;
                        public onDataConnectionStateChanged(param0: number, param1: number): void;
                        public onCarrierNetworkChange(param0: boolean): void;
                        public onCellInfoChanged(param0: java.util.List<globalAndroid.telephony.CellInfo>): void;
                        public onCellLocationChanged(param0: globalAndroid.os.Bundle): void;
                        public onSignalStrengthChanged(param0: number): void;
                        public onSomcHookRawEvent(param0: number[]): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.telephony.IPhoneStateListener;
                        public onOemHookRawEvent(param0: number[]): void;
                        public onDataActivationStateChanged(param0: number): void;
                        public onServiceStateChanged(param0: globalAndroid.telephony.ServiceState): void;
                        public onCallForwardingIndicatorChanged(param0: boolean): void;
                        public onSignalStrengthsChanged(param0: globalAndroid.telephony.SignalStrength): void;
                        public onDataConnectionRealTimeInfoChanged(param0: globalAndroid.telephony.DataConnectionRealTimeInfo): void;
                        public onOtaspChanged(param0: number): void;
                        public onPreciseDataConnectionStateChanged(param0: globalAndroid.telephony.PreciseDataConnectionState): void;
                        public onVoiceActivationStateChanged(param0: number): void;
                        public onDataActivity(param0: number): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public onPreciseCallStateChanged(param0: globalAndroid.telephony.PreciseCallState): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.telephony.IPhoneStateListener {
                            public static class: java.lang.Class<com.android.internal.telephony.IPhoneStateListener.Stub.Proxy>;
                            public onSignalStrengthChanged(param0: number): void;
                            public onVoiceActivationStateChanged(param0: number): void;
                            public onDataConnectionStateChanged(param0: number, param1: number): void;
                            public onDataActivationStateChanged(param0: number): void;
                            public onCarrierNetworkChange(param0: boolean): void;
                            public onCallStateChanged(param0: number, param1: string): void;
                            public onDataConnectionRealTimeInfoChanged(param0: globalAndroid.telephony.DataConnectionRealTimeInfo): void;
                            public onPreciseDataConnectionStateChanged(param0: globalAndroid.telephony.PreciseDataConnectionState): void;
                            public onCellInfoChanged(param0: java.util.List<globalAndroid.telephony.CellInfo>): void;
                            public onCallForwardingIndicatorChanged(param0: boolean): void;
                            public onServiceStateChanged(param0: globalAndroid.telephony.ServiceState): void;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public onOtaspChanged(param0: number): void;
                            public onDataActivity(param0: number): void;
                            public onMessageWaitingIndicatorChanged(param0: boolean): void;
                            public onPreciseCallStateChanged(param0: globalAndroid.telephony.PreciseCallState): void;
                            public onVoLteServiceStateChanged(param0: globalAndroid.telephony.VoLteServiceState): void;
                            public onSignalStrengthsChanged(param0: globalAndroid.telephony.SignalStrength): void;
                            public onSomcHookRawEvent(param0: number[]): void;
                            public onCellLocationChanged(param0: globalAndroid.os.Bundle): void;
                            public onOemHookRawEvent(param0: number[]): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class IPhoneSubInfo extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.IPhoneSubInfo>;
                    /**
                     * Constructs a new instance of the com.android.internal.telephony.IPhoneSubInfo interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        getCompleteVoiceMailNumber(): string;
                        getCompleteVoiceMailNumberForSubscriber(param0: number): string;
                        getDeviceId(param0: string): string;
                        getDeviceIdForPhone(param0: number, param1: string): string;
                        getDeviceSvn(param0: string): string;
                        getDeviceSvnUsingSubId(param0: number, param1: string): string;
                        getGroupIdLevel1(param0: string): string;
                        getGroupIdLevel1ForSubscriber(param0: number, param1: string): string;
                        getIccSerialNumber(param0: string): string;
                        getIccSerialNumberForSubscriber(param0: number, param1: string): string;
                        getIccSimChallengeResponse(param0: number, param1: number, param2: number, param3: string): string;
                        getImeiForSubscriber(param0: number, param1: string): string;
                        getIsimChallengeResponse(param0: string): string;
                        getIsimDomain(): string;
                        getIsimImpi(): string;
                        getIsimImpu(): string[];
                        getIsimIst(): string;
                        getIsimPcscf(): string[];
                        getLine1AlphaTag(param0: string): string;
                        getLine1AlphaTagForSubscriber(param0: number, param1: string): string;
                        getLine1Number(param0: string): string;
                        getLine1NumberForSubscriber(param0: number, param1: string): string;
                        getMsisdn(param0: string): string;
                        getMsisdnForSubscriber(param0: number, param1: string): string;
                        getNaiForSubscriber(param0: number, param1: string): string;
                        getSubscriberId(param0: string): string;
                        getSubscriberIdForSubscriber(param0: number, param1: string): string;
                        getVoiceMailAlphaTag(param0: string): string;
                        getVoiceMailAlphaTagForSubscriber(param0: number, param1: string): string;
                        getVoiceMailNumber(param0: string): string;
                        getVoiceMailNumberForSubscriber(param0: number, param1: string): string;
                    });
                    public constructor();
                    public getVoiceMailAlphaTag(param0: string): string;
                    public getVoiceMailAlphaTagForSubscriber(param0: number, param1: string): string;
                    public getVoiceMailNumberForSubscriber(param0: number, param1: string): string;
                    public getDeviceSvn(param0: string): string;
                    public getGroupIdLevel1ForSubscriber(param0: number, param1: string): string;
                    public getIccSimChallengeResponse(param0: number, param1: number, param2: number, param3: string): string;
                    public getIsimImpi(): string;
                    public getMsisdnForSubscriber(param0: number, param1: string): string;
                    public getDeviceSvnUsingSubId(param0: number, param1: string): string;
                    public getCompleteVoiceMailNumberForSubscriber(param0: number): string;
                    public getNaiForSubscriber(param0: number, param1: string): string;
                    public getImeiForSubscriber(param0: number, param1: string): string;
                    public getIsimDomain(): string;
                    public getLine1Number(param0: string): string;
                    public getIsimChallengeResponse(param0: string): string;
                    public getGroupIdLevel1(param0: string): string;
                    public getIsimIst(): string;
                    public getDeviceId(param0: string): string;
                    public getLine1AlphaTagForSubscriber(param0: number, param1: string): string;
                    public getIccSerialNumberForSubscriber(param0: number, param1: string): string;
                    public getLine1AlphaTag(param0: string): string;
                    public getSubscriberIdForSubscriber(param0: number, param1: string): string;
                    public getMsisdn(param0: string): string;
                    public getLine1NumberForSubscriber(param0: number, param1: string): string;
                    public getSubscriberId(param0: string): string;
                    public getIsimPcscf(): string[];
                    public getDeviceIdForPhone(param0: number, param1: string): string;
                    public getIccSerialNumber(param0: string): string;
                    public getVoiceMailNumber(param0: string): string;
                    public getCompleteVoiceMailNumber(): string;
                    public getIsimImpu(): string[];
                }
                export module IPhoneSubInfo {
                    export abstract class Stub implements com.android.internal.telephony.IPhoneSubInfo {
                        public static class: java.lang.Class<com.android.internal.telephony.IPhoneSubInfo.Stub>;
                        public getVoiceMailAlphaTag(param0: string): string;
                        public getGroupIdLevel1(param0: string): string;
                        public getCompleteVoiceMailNumber(): string;
                        public getImeiForSubscriber(param0: number, param1: string): string;
                        public getVoiceMailNumberForSubscriber(param0: number, param1: string): string;
                        public getNaiForSubscriber(param0: number, param1: string): string;
                        public getVoiceMailAlphaTagForSubscriber(param0: number, param1: string): string;
                        public getCompleteVoiceMailNumberForSubscriber(param0: number): string;
                        public getMsisdn(param0: string): string;
                        public getIccSerialNumberForSubscriber(param0: number, param1: string): string;
                        public getIsimImpu(): string[];
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public getIccSimChallengeResponse(param0: number, param1: number, param2: number, param3: string): string;
                        public getSubscriberIdForSubscriber(param0: number, param1: string): string;
                        public asBinder(): globalAndroid.os.IBinder;
                        public constructor();
                        public getDeviceIdForPhone(param0: number, param1: string): string;
                        public getGroupIdLevel1ForSubscriber(param0: number, param1: string): string;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.telephony.IPhoneSubInfo;
                        public getLine1Number(param0: string): string;
                        public getSubscriberId(param0: string): string;
                        public getIsimIst(): string;
                        public getIsimDomain(): string;
                        public getDeviceSvnUsingSubId(param0: number, param1: string): string;
                        public getLine1AlphaTagForSubscriber(param0: number, param1: string): string;
                        public getIsimPcscf(): string[];
                        public getVoiceMailNumber(param0: string): string;
                        public getDeviceId(param0: string): string;
                        public getDeviceSvn(param0: string): string;
                        public getIccSerialNumber(param0: string): string;
                        public getIsimChallengeResponse(param0: string): string;
                        public getLine1NumberForSubscriber(param0: number, param1: string): string;
                        public getIsimImpi(): string;
                        public getLine1AlphaTag(param0: string): string;
                        public getMsisdnForSubscriber(param0: number, param1: string): string;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.telephony.IPhoneSubInfo {
                            public static class: java.lang.Class<com.android.internal.telephony.IPhoneSubInfo.Stub.Proxy>;
                            public getDeviceIdForPhone(param0: number, param1: string): string;
                            public getDeviceSvn(param0: string): string;
                            public getIsimChallengeResponse(param0: string): string;
                            public getIccSerialNumberForSubscriber(param0: number, param1: string): string;
                            public getIsimIst(): string;
                            public getDeviceSvnUsingSubId(param0: number, param1: string): string;
                            public getIsimPcscf(): string[];
                            public getDeviceId(param0: string): string;
                            public getIsimDomain(): string;
                            public getLine1NumberForSubscriber(param0: number, param1: string): string;
                            public getLine1AlphaTagForSubscriber(param0: number, param1: string): string;
                            public getLine1Number(param0: string): string;
                            public getImeiForSubscriber(param0: number, param1: string): string;
                            public getGroupIdLevel1(param0: string): string;
                            public getVoiceMailAlphaTag(param0: string): string;
                            public getGroupIdLevel1ForSubscriber(param0: number, param1: string): string;
                            public getSubscriberId(param0: string): string;
                            public getNaiForSubscriber(param0: number, param1: string): string;
                            public getIccSimChallengeResponse(param0: number, param1: number, param2: number, param3: string): string;
                            public getMsisdnForSubscriber(param0: number, param1: string): string;
                            public getIsimImpu(): string[];
                            public getVoiceMailNumberForSubscriber(param0: number, param1: string): string;
                            public getCompleteVoiceMailNumberForSubscriber(param0: number): string;
                            public getIsimImpi(): string;
                            public getMsisdn(param0: string): string;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public getCompleteVoiceMailNumber(): string;
                            public getSubscriberIdForSubscriber(param0: number, param1: string): string;
                            public getVoiceMailAlphaTagForSubscriber(param0: number, param1: string): string;
                            public getLine1AlphaTag(param0: string): string;
                            public getIccSerialNumber(param0: string): string;
                            public getVoiceMailNumber(param0: string): string;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class ISms extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.ISms>;
                    /**
                     * Constructs a new instance of the com.android.internal.telephony.ISms interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        copyMessageToIccEfForSubscriber(param0: number, param1: string, param2: number, param3: number[], param4: number[]): boolean;
                        createAppSpecificSmsToken(param0: number, param1: string, param2: globalAndroid.app.PendingIntent): string;
                        disableCellBroadcastForSubscriber(param0: number, param1: number, param2: number): boolean;
                        disableCellBroadcastRangeForSubscriber(param0: number, param1: number, param2: number, param3: number): boolean;
                        enableCellBroadcastForSubscriber(param0: number, param1: number, param2: number): boolean;
                        enableCellBroadcastRangeForSubscriber(param0: number, param1: number, param2: number, param3: number): boolean;
                        getAllMessagesFromIccEfForSubscriber(param0: number, param1: string): java.util.List<com.android.internal.telephony.SmsRawData>;
                        getImsSmsFormatForSubscriber(param0: number): string;
                        getPreferredSmsSubscription(): number;
                        getPremiumSmsPermission(param0: string): number;
                        getPremiumSmsPermissionForSubscriber(param0: number, param1: string): number;
                        getSmsCapacityOnIccForSubscriber(param0: number): number;
                        injectSmsPduForSubscriber(param0: number, param1: number[], param2: string, param3: globalAndroid.app.PendingIntent): void;
                        isImsSmsSupportedForSubscriber(param0: number): boolean;
                        isSMSPromptEnabled(): boolean;
                        isSmsSimPickActivityNeeded(param0: number): boolean;
                        sendDataForSubscriber(param0: number, param1: string, param2: string, param3: string, param4: number, param5: number[], param6: globalAndroid.app.PendingIntent, param7: globalAndroid.app.PendingIntent): void;
                        sendDataForSubscriberWithSelfPermissions(param0: number, param1: string, param2: string, param3: string, param4: number, param5: number[], param6: globalAndroid.app.PendingIntent, param7: globalAndroid.app.PendingIntent): void;
                        sendMultipartTextForSubscriber(param0: number, param1: string, param2: string, param3: string, param4: java.util.List<string>, param5: java.util.List<globalAndroid.app.PendingIntent>, param6: java.util.List<globalAndroid.app.PendingIntent>, param7: boolean): void;
                        sendMultipartTextForSubscriberWithOptions(param0: number, param1: string, param2: string, param3: string, param4: java.util.List<string>, param5: java.util.List<globalAndroid.app.PendingIntent>, param6: java.util.List<globalAndroid.app.PendingIntent>, param7: boolean, param8: number, param9: boolean, param10: number): void;
                        sendStoredMultipartText(param0: number, param1: string, param2: globalAndroid.net.Uri, param3: string, param4: java.util.List<globalAndroid.app.PendingIntent>, param5: java.util.List<globalAndroid.app.PendingIntent>): void;
                        sendStoredText(param0: number, param1: string, param2: globalAndroid.net.Uri, param3: string, param4: globalAndroid.app.PendingIntent, param5: globalAndroid.app.PendingIntent): void;
                        sendTextForSubscriber(param0: number, param1: string, param2: string, param3: string, param4: string, param5: globalAndroid.app.PendingIntent, param6: globalAndroid.app.PendingIntent, param7: boolean): void;
                        sendTextForSubscriberWithOptions(param0: number, param1: string, param2: string, param3: string, param4: string, param5: globalAndroid.app.PendingIntent, param6: globalAndroid.app.PendingIntent, param7: boolean, param8: number, param9: boolean, param10: number): void;
                        sendTextForSubscriberWithSelfPermissions(param0: number, param1: string, param2: string, param3: string, param4: string, param5: globalAndroid.app.PendingIntent, param6: globalAndroid.app.PendingIntent, param7: boolean): void;
                        setPremiumSmsPermission(param0: string, param1: number): void;
                        setPremiumSmsPermissionForSubscriber(param0: number, param1: string, param2: number): void;
                        updateMessageOnIccEfForSubscriber(param0: number, param1: string, param2: number, param3: number, param4: number[]): boolean;
                    });
                    public constructor();
                    public enableCellBroadcastForSubscriber(param0: number, param1: number, param2: number): boolean;
                    public sendStoredMultipartText(param0: number, param1: string, param2: globalAndroid.net.Uri, param3: string, param4: java.util.List<globalAndroid.app.PendingIntent>, param5: java.util.List<globalAndroid.app.PendingIntent>): void;
                    public sendTextForSubscriber(param0: number, param1: string, param2: string, param3: string, param4: string, param5: globalAndroid.app.PendingIntent, param6: globalAndroid.app.PendingIntent, param7: boolean): void;
                    public sendTextForSubscriberWithSelfPermissions(param0: number, param1: string, param2: string, param3: string, param4: string, param5: globalAndroid.app.PendingIntent, param6: globalAndroid.app.PendingIntent, param7: boolean): void;
                    public setPremiumSmsPermission(param0: string, param1: number): void;
                    public enableCellBroadcastRangeForSubscriber(param0: number, param1: number, param2: number, param3: number): boolean;
                    public sendTextForSubscriberWithOptions(param0: number, param1: string, param2: string, param3: string, param4: string, param5: globalAndroid.app.PendingIntent, param6: globalAndroid.app.PendingIntent, param7: boolean, param8: number, param9: boolean, param10: number): void;
                    public setPremiumSmsPermissionForSubscriber(param0: number, param1: string, param2: number): void;
                    public getImsSmsFormatForSubscriber(param0: number): string;
                    public createAppSpecificSmsToken(param0: number, param1: string, param2: globalAndroid.app.PendingIntent): string;
                    public getPremiumSmsPermissionForSubscriber(param0: number, param1: string): number;
                    public injectSmsPduForSubscriber(param0: number, param1: number[], param2: string, param3: globalAndroid.app.PendingIntent): void;
                    public sendDataForSubscriberWithSelfPermissions(param0: number, param1: string, param2: string, param3: string, param4: number, param5: number[], param6: globalAndroid.app.PendingIntent, param7: globalAndroid.app.PendingIntent): void;
                    public isSmsSimPickActivityNeeded(param0: number): boolean;
                    public getPreferredSmsSubscription(): number;
                    public sendStoredText(param0: number, param1: string, param2: globalAndroid.net.Uri, param3: string, param4: globalAndroid.app.PendingIntent, param5: globalAndroid.app.PendingIntent): void;
                    public sendMultipartTextForSubscriber(param0: number, param1: string, param2: string, param3: string, param4: java.util.List<string>, param5: java.util.List<globalAndroid.app.PendingIntent>, param6: java.util.List<globalAndroid.app.PendingIntent>, param7: boolean): void;
                    public disableCellBroadcastForSubscriber(param0: number, param1: number, param2: number): boolean;
                    public getAllMessagesFromIccEfForSubscriber(param0: number, param1: string): java.util.List<com.android.internal.telephony.SmsRawData>;
                    public getPremiumSmsPermission(param0: string): number;
                    public isSMSPromptEnabled(): boolean;
                    public isImsSmsSupportedForSubscriber(param0: number): boolean;
                    public sendDataForSubscriber(param0: number, param1: string, param2: string, param3: string, param4: number, param5: number[], param6: globalAndroid.app.PendingIntent, param7: globalAndroid.app.PendingIntent): void;
                    public sendMultipartTextForSubscriberWithOptions(param0: number, param1: string, param2: string, param3: string, param4: java.util.List<string>, param5: java.util.List<globalAndroid.app.PendingIntent>, param6: java.util.List<globalAndroid.app.PendingIntent>, param7: boolean, param8: number, param9: boolean, param10: number): void;
                    public copyMessageToIccEfForSubscriber(param0: number, param1: string, param2: number, param3: number[], param4: number[]): boolean;
                    public updateMessageOnIccEfForSubscriber(param0: number, param1: string, param2: number, param3: number, param4: number[]): boolean;
                    public getSmsCapacityOnIccForSubscriber(param0: number): number;
                    public disableCellBroadcastRangeForSubscriber(param0: number, param1: number, param2: number, param3: number): boolean;
                }
                export module ISms {
                    export abstract class Stub implements com.android.internal.telephony.ISms {
                        public static class: java.lang.Class<com.android.internal.telephony.ISms.Stub>;
                        public sendMultipartTextForSubscriber(param0: number, param1: string, param2: string, param3: string, param4: java.util.List<string>, param5: java.util.List<globalAndroid.app.PendingIntent>, param6: java.util.List<globalAndroid.app.PendingIntent>, param7: boolean): void;
                        public injectSmsPduForSubscriber(param0: number, param1: number[], param2: string, param3: globalAndroid.app.PendingIntent): void;
                        public sendStoredText(param0: number, param1: string, param2: globalAndroid.net.Uri, param3: string, param4: globalAndroid.app.PendingIntent, param5: globalAndroid.app.PendingIntent): void;
                        public sendTextForSubscriber(param0: number, param1: string, param2: string, param3: string, param4: string, param5: globalAndroid.app.PendingIntent, param6: globalAndroid.app.PendingIntent, param7: boolean): void;
                        public sendDataForSubscriber(param0: number, param1: string, param2: string, param3: string, param4: number, param5: number[], param6: globalAndroid.app.PendingIntent, param7: globalAndroid.app.PendingIntent): void;
                        public setPremiumSmsPermissionForSubscriber(param0: number, param1: string, param2: number): void;
                        public sendStoredMultipartText(param0: number, param1: string, param2: globalAndroid.net.Uri, param3: string, param4: java.util.List<globalAndroid.app.PendingIntent>, param5: java.util.List<globalAndroid.app.PendingIntent>): void;
                        public isImsSmsSupportedForSubscriber(param0: number): boolean;
                        public disableCellBroadcastForSubscriber(param0: number, param1: number, param2: number): boolean;
                        public sendTextForSubscriberWithSelfPermissions(param0: number, param1: string, param2: string, param3: string, param4: string, param5: globalAndroid.app.PendingIntent, param6: globalAndroid.app.PendingIntent, param7: boolean): void;
                        public createAppSpecificSmsToken(param0: number, param1: string, param2: globalAndroid.app.PendingIntent): string;
                        public getAllMessagesFromIccEfForSubscriber(param0: number, param1: string): java.util.List<com.android.internal.telephony.SmsRawData>;
                        public enableCellBroadcastForSubscriber(param0: number, param1: number, param2: number): boolean;
                        public isSmsSimPickActivityNeeded(param0: number): boolean;
                        public getPreferredSmsSubscription(): number;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public setPremiumSmsPermission(param0: string, param1: number): void;
                        public constructor();
                        public disableCellBroadcastRangeForSubscriber(param0: number, param1: number, param2: number, param3: number): boolean;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.telephony.ISms;
                        public getImsSmsFormatForSubscriber(param0: number): string;
                        public getPremiumSmsPermissionForSubscriber(param0: number, param1: string): number;
                        public isSMSPromptEnabled(): boolean;
                        public sendTextForSubscriberWithOptions(param0: number, param1: string, param2: string, param3: string, param4: string, param5: globalAndroid.app.PendingIntent, param6: globalAndroid.app.PendingIntent, param7: boolean, param8: number, param9: boolean, param10: number): void;
                        public enableCellBroadcastRangeForSubscriber(param0: number, param1: number, param2: number, param3: number): boolean;
                        public getPremiumSmsPermission(param0: string): number;
                        public sendMultipartTextForSubscriberWithOptions(param0: number, param1: string, param2: string, param3: string, param4: java.util.List<string>, param5: java.util.List<globalAndroid.app.PendingIntent>, param6: java.util.List<globalAndroid.app.PendingIntent>, param7: boolean, param8: number, param9: boolean, param10: number): void;
                        public updateMessageOnIccEfForSubscriber(param0: number, param1: string, param2: number, param3: number, param4: number[]): boolean;
                        public copyMessageToIccEfForSubscriber(param0: number, param1: string, param2: number, param3: number[], param4: number[]): boolean;
                        public sendDataForSubscriberWithSelfPermissions(param0: number, param1: string, param2: string, param3: string, param4: number, param5: number[], param6: globalAndroid.app.PendingIntent, param7: globalAndroid.app.PendingIntent): void;
                        public getSmsCapacityOnIccForSubscriber(param0: number): number;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.telephony.ISms {
                            public static class: java.lang.Class<com.android.internal.telephony.ISms.Stub.Proxy>;
                            public updateMessageOnIccEfForSubscriber(param0: number, param1: string, param2: number, param3: number, param4: number[]): boolean;
                            public sendStoredMultipartText(param0: number, param1: string, param2: globalAndroid.net.Uri, param3: string, param4: java.util.List<globalAndroid.app.PendingIntent>, param5: java.util.List<globalAndroid.app.PendingIntent>): void;
                            public setPremiumSmsPermissionForSubscriber(param0: number, param1: string, param2: number): void;
                            public getPreferredSmsSubscription(): number;
                            public copyMessageToIccEfForSubscriber(param0: number, param1: string, param2: number, param3: number[], param4: number[]): boolean;
                            public getSmsCapacityOnIccForSubscriber(param0: number): number;
                            public isSMSPromptEnabled(): boolean;
                            public sendStoredText(param0: number, param1: string, param2: globalAndroid.net.Uri, param3: string, param4: globalAndroid.app.PendingIntent, param5: globalAndroid.app.PendingIntent): void;
                            public createAppSpecificSmsToken(param0: number, param1: string, param2: globalAndroid.app.PendingIntent): string;
                            public sendTextForSubscriber(param0: number, param1: string, param2: string, param3: string, param4: string, param5: globalAndroid.app.PendingIntent, param6: globalAndroid.app.PendingIntent, param7: boolean): void;
                            public sendTextForSubscriberWithSelfPermissions(param0: number, param1: string, param2: string, param3: string, param4: string, param5: globalAndroid.app.PendingIntent, param6: globalAndroid.app.PendingIntent, param7: boolean): void;
                            public isImsSmsSupportedForSubscriber(param0: number): boolean;
                            public sendMultipartTextForSubscriberWithOptions(param0: number, param1: string, param2: string, param3: string, param4: java.util.List<string>, param5: java.util.List<globalAndroid.app.PendingIntent>, param6: java.util.List<globalAndroid.app.PendingIntent>, param7: boolean, param8: number, param9: boolean, param10: number): void;
                            public disableCellBroadcastRangeForSubscriber(param0: number, param1: number, param2: number, param3: number): boolean;
                            public sendMultipartTextForSubscriber(param0: number, param1: string, param2: string, param3: string, param4: java.util.List<string>, param5: java.util.List<globalAndroid.app.PendingIntent>, param6: java.util.List<globalAndroid.app.PendingIntent>, param7: boolean): void;
                            public enableCellBroadcastRangeForSubscriber(param0: number, param1: number, param2: number, param3: number): boolean;
                            public isSmsSimPickActivityNeeded(param0: number): boolean;
                            public enableCellBroadcastForSubscriber(param0: number, param1: number, param2: number): boolean;
                            public sendDataForSubscriberWithSelfPermissions(param0: number, param1: string, param2: string, param3: string, param4: number, param5: number[], param6: globalAndroid.app.PendingIntent, param7: globalAndroid.app.PendingIntent): void;
                            public getInterfaceDescriptor(): string;
                            public getPremiumSmsPermissionForSubscriber(param0: number, param1: string): number;
                            public asBinder(): globalAndroid.os.IBinder;
                            public sendDataForSubscriber(param0: number, param1: string, param2: string, param3: string, param4: number, param5: number[], param6: globalAndroid.app.PendingIntent, param7: globalAndroid.app.PendingIntent): void;
                            public disableCellBroadcastForSubscriber(param0: number, param1: number, param2: number): boolean;
                            public setPremiumSmsPermission(param0: string, param1: number): void;
                            public sendTextForSubscriberWithOptions(param0: number, param1: string, param2: string, param3: string, param4: string, param5: globalAndroid.app.PendingIntent, param6: globalAndroid.app.PendingIntent, param7: boolean, param8: number, param9: boolean, param10: number): void;
                            public getAllMessagesFromIccEfForSubscriber(param0: number, param1: string): java.util.List<com.android.internal.telephony.SmsRawData>;
                            public getImsSmsFormatForSubscriber(param0: number): string;
                            public getPremiumSmsPermission(param0: string): number;
                            public injectSmsPduForSubscriber(param0: number, param1: number[], param2: string, param3: globalAndroid.app.PendingIntent): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class ISmsSecurityAgent extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.ISmsSecurityAgent>;
                    /**
                     * Constructs a new instance of the com.android.internal.telephony.ISmsSecurityAgent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        onAuthorize(param0: com.android.internal.telephony.SmsAuthorizationRequest): void;
                    });
                    public constructor();
                    public onAuthorize(param0: com.android.internal.telephony.SmsAuthorizationRequest): void;
                }
                export module ISmsSecurityAgent {
                    export abstract class Stub implements com.android.internal.telephony.ISmsSecurityAgent {
                        public static class: java.lang.Class<com.android.internal.telephony.ISmsSecurityAgent.Stub>;
                        public constructor();
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.telephony.ISmsSecurityAgent;
                        public onAuthorize(param0: com.android.internal.telephony.SmsAuthorizationRequest): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.telephony.ISmsSecurityAgent {
                            public static class: java.lang.Class<com.android.internal.telephony.ISmsSecurityAgent.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public onAuthorize(param0: com.android.internal.telephony.SmsAuthorizationRequest): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class ISmsSecurityService extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.ISmsSecurityService>;
                    /**
                     * Constructs a new instance of the com.android.internal.telephony.ISmsSecurityService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        register(param0: com.android.internal.telephony.ISmsSecurityAgent): boolean;
                        sendResponse(param0: com.android.internal.telephony.SmsAuthorizationRequest, param1: boolean): boolean;
                        unregister(param0: com.android.internal.telephony.ISmsSecurityAgent): boolean;
                    });
                    public constructor();
                    public unregister(param0: com.android.internal.telephony.ISmsSecurityAgent): boolean;
                    public sendResponse(param0: com.android.internal.telephony.SmsAuthorizationRequest, param1: boolean): boolean;
                    public register(param0: com.android.internal.telephony.ISmsSecurityAgent): boolean;
                }
                export module ISmsSecurityService {
                    export abstract class Stub implements com.android.internal.telephony.ISmsSecurityService {
                        public static class: java.lang.Class<com.android.internal.telephony.ISmsSecurityService.Stub>;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.telephony.ISmsSecurityService;
                        public sendResponse(param0: com.android.internal.telephony.SmsAuthorizationRequest, param1: boolean): boolean;
                        public constructor();
                        public register(param0: com.android.internal.telephony.ISmsSecurityAgent): boolean;
                        public unregister(param0: com.android.internal.telephony.ISmsSecurityAgent): boolean;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.telephony.ISmsSecurityService {
                            public static class: java.lang.Class<com.android.internal.telephony.ISmsSecurityService.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public register(param0: com.android.internal.telephony.ISmsSecurityAgent): boolean;
                            public unregister(param0: com.android.internal.telephony.ISmsSecurityAgent): boolean;
                            public sendResponse(param0: com.android.internal.telephony.SmsAuthorizationRequest, param1: boolean): boolean;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class ISub extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.ISub>;
                    /**
                     * Constructs a new instance of the com.android.internal.telephony.ISub interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        addSubInfoRecord(param0: string, param1: number): number;
                        clearDefaultsForInactiveSubIds(): void;
                        clearSubInfo(): number;
                        getActiveSubIdList(): number[];
                        getActiveSubInfoCount(param0: string): number;
                        getActiveSubInfoCountMax(): number;
                        getActiveSubscriptionInfo(param0: number, param1: string): globalAndroid.telephony.SubscriptionInfo;
                        getActiveSubscriptionInfoForIccId(param0: string, param1: string): globalAndroid.telephony.SubscriptionInfo;
                        getActiveSubscriptionInfoForSimSlotIndex(param0: number, param1: string): globalAndroid.telephony.SubscriptionInfo;
                        getActiveSubscriptionInfoList(param0: string): java.util.List<globalAndroid.telephony.SubscriptionInfo>;
                        getAllSubInfoCount(param0: string): number;
                        getAllSubInfoList(param0: string): java.util.List<globalAndroid.telephony.SubscriptionInfo>;
                        getDefaultDataSubId(): number;
                        getDefaultSmsSubId(): number;
                        getDefaultSubId(): number;
                        getDefaultVoiceSubId(): number;
                        getPhoneId(param0: number): number;
                        getSimStateForSlotIndex(param0: number): number;
                        getSlotIndex(param0: number): number;
                        getSubId(param0: number): number[];
                        getSubscriptionProperty(param0: number, param1: string, param2: string): string;
                        isActiveSubId(param0: number): boolean;
                        setDataRoaming(param0: number, param1: number): number;
                        setDefaultDataSubId(param0: number): void;
                        setDefaultSmsSubId(param0: number): void;
                        setDefaultVoiceSubId(param0: number): void;
                        setDisplayName(param0: string, param1: number): number;
                        setDisplayNameUsingSrc(param0: string, param1: number, param2: number): number;
                        setDisplayNumber(param0: string, param1: number): number;
                        setIconTint(param0: number, param1: number): number;
                        setSubscriptionProperty(param0: number, param1: string, param2: string): void;
                    });
                    public constructor();
                    public isActiveSubId(param0: number): boolean;
                    public getAllSubInfoCount(param0: string): number;
                    public getSubscriptionProperty(param0: number, param1: string, param2: string): string;
                    public clearDefaultsForInactiveSubIds(): void;
                    public getActiveSubscriptionInfo(param0: number, param1: string): globalAndroid.telephony.SubscriptionInfo;
                    public getAllSubInfoList(param0: string): java.util.List<globalAndroid.telephony.SubscriptionInfo>;
                    public getDefaultSmsSubId(): number;
                    public getPhoneId(param0: number): number;
                    public getSubId(param0: number): number[];
                    public getActiveSubInfoCount(param0: string): number;
                    public getSlotIndex(param0: number): number;
                    public setDefaultSmsSubId(param0: number): void;
                    public addSubInfoRecord(param0: string, param1: number): number;
                    public getDefaultSubId(): number;
                    public clearSubInfo(): number;
                    public getDefaultVoiceSubId(): number;
                    public getActiveSubscriptionInfoForSimSlotIndex(param0: number, param1: string): globalAndroid.telephony.SubscriptionInfo;
                    public setDisplayNameUsingSrc(param0: string, param1: number, param2: number): number;
                    public setIconTint(param0: number, param1: number): number;
                    public getDefaultDataSubId(): number;
                    public setDataRoaming(param0: number, param1: number): number;
                    public setDisplayNumber(param0: string, param1: number): number;
                    public getActiveSubInfoCountMax(): number;
                    public getActiveSubscriptionInfoList(param0: string): java.util.List<globalAndroid.telephony.SubscriptionInfo>;
                    public setDefaultDataSubId(param0: number): void;
                    public setDisplayName(param0: string, param1: number): number;
                    public getActiveSubIdList(): number[];
                    public setDefaultVoiceSubId(param0: number): void;
                    public setSubscriptionProperty(param0: number, param1: string, param2: string): void;
                    public getActiveSubscriptionInfoForIccId(param0: string, param1: string): globalAndroid.telephony.SubscriptionInfo;
                    public getSimStateForSlotIndex(param0: number): number;
                }
                export module ISub {
                    export abstract class Stub implements com.android.internal.telephony.ISub {
                        public static class: java.lang.Class<com.android.internal.telephony.ISub.Stub>;
                        public getSubscriptionProperty(param0: number, param1: string, param2: string): string;
                        public getSubId(param0: number): number[];
                        public getDefaultSubId(): number;
                        public getSimStateForSlotIndex(param0: number): number;
                        public getActiveSubscriptionInfoForIccId(param0: string, param1: string): globalAndroid.telephony.SubscriptionInfo;
                        public getActiveSubInfoCountMax(): number;
                        public setIconTint(param0: number, param1: number): number;
                        public getActiveSubscriptionInfoForSimSlotIndex(param0: number, param1: string): globalAndroid.telephony.SubscriptionInfo;
                        public getSlotIndex(param0: number): number;
                        public setDefaultSmsSubId(param0: number): void;
                        public getAllSubInfoCount(param0: string): number;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public getDefaultDataSubId(): number;
                        public asBinder(): globalAndroid.os.IBinder;
                        public getDefaultVoiceSubId(): number;
                        public getPhoneId(param0: number): number;
                        public setDataRoaming(param0: number, param1: number): number;
                        public constructor();
                        public getActiveSubscriptionInfoList(param0: string): java.util.List<globalAndroid.telephony.SubscriptionInfo>;
                        public setDisplayName(param0: string, param1: number): number;
                        public setSubscriptionProperty(param0: number, param1: string, param2: string): void;
                        public setDisplayNameUsingSrc(param0: string, param1: number, param2: number): number;
                        public setDisplayNumber(param0: string, param1: number): number;
                        public addSubInfoRecord(param0: string, param1: number): number;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.telephony.ISub;
                        public getAllSubInfoList(param0: string): java.util.List<globalAndroid.telephony.SubscriptionInfo>;
                        public clearSubInfo(): number;
                        public clearDefaultsForInactiveSubIds(): void;
                        public getDefaultSmsSubId(): number;
                        public getActiveSubIdList(): number[];
                        public getActiveSubInfoCount(param0: string): number;
                        public setDefaultDataSubId(param0: number): void;
                        public getActiveSubscriptionInfo(param0: number, param1: string): globalAndroid.telephony.SubscriptionInfo;
                        public setDefaultVoiceSubId(param0: number): void;
                        public isActiveSubId(param0: number): boolean;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.telephony.ISub {
                            public static class: java.lang.Class<com.android.internal.telephony.ISub.Stub.Proxy>;
                            public setDefaultVoiceSubId(param0: number): void;
                            public getAllSubInfoCount(param0: string): number;
                            public getDefaultVoiceSubId(): number;
                            public getDefaultSubId(): number;
                            public getActiveSubscriptionInfoForIccId(param0: string, param1: string): globalAndroid.telephony.SubscriptionInfo;
                            public getSlotIndex(param0: number): number;
                            public isActiveSubId(param0: number): boolean;
                            public setDisplayName(param0: string, param1: number): number;
                            public getAllSubInfoList(param0: string): java.util.List<globalAndroid.telephony.SubscriptionInfo>;
                            public clearSubInfo(): number;
                            public getActiveSubscriptionInfoForSimSlotIndex(param0: number, param1: string): globalAndroid.telephony.SubscriptionInfo;
                            public clearDefaultsForInactiveSubIds(): void;
                            public setIconTint(param0: number, param1: number): number;
                            public getSubscriptionProperty(param0: number, param1: string, param2: string): string;
                            public getActiveSubInfoCountMax(): number;
                            public setDefaultSmsSubId(param0: number): void;
                            public setDisplayNumber(param0: string, param1: number): number;
                            public getDefaultDataSubId(): number;
                            public addSubInfoRecord(param0: string, param1: number): number;
                            public setDisplayNameUsingSrc(param0: string, param1: number, param2: number): number;
                            public getSubId(param0: number): number[];
                            public getActiveSubscriptionInfoList(param0: string): java.util.List<globalAndroid.telephony.SubscriptionInfo>;
                            public getDefaultSmsSubId(): number;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public getSimStateForSlotIndex(param0: number): number;
                            public getActiveSubscriptionInfo(param0: number, param1: string): globalAndroid.telephony.SubscriptionInfo;
                            public setDataRoaming(param0: number, param1: number): number;
                            public getPhoneId(param0: number): number;
                            public setDefaultDataSubId(param0: number): void;
                            public setSubscriptionProperty(param0: number, param1: string, param2: string): void;
                            public getActiveSubIdList(): number[];
                            public getActiveSubInfoCount(param0: string): number;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class ITelephony extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.ITelephony>;
                    /**
                     * Constructs a new instance of the com.android.internal.telephony.ITelephony interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        answerRingingCall(): void;
                        answerRingingCallForSubscriber(param0: number): void;
                        call(param0: string, param1: string): void;
                        canChangeDtmfToneLength(): boolean;
                        carrierActionSetMeteredApnsEnabled(param0: number, param1: boolean): void;
                        carrierActionSetRadioEnabled(param0: number, param1: boolean): void;
                        checkCarrierPrivilegesForPackage(param0: string): number;
                        checkCarrierPrivilegesForPackageAnyPhone(param0: string): number;
                        dial(param0: string): void;
                        disableDataConnectivity(): boolean;
                        disableLocationUpdates(): void;
                        disableLocationUpdatesForSubscriber(param0: number): void;
                        disableVisualVoicemailSmsFilter(param0: string, param1: number): void;
                        enableDataConnectivity(): boolean;
                        enableLocationUpdates(): void;
                        enableLocationUpdatesForSubscriber(param0: number): void;
                        enableVideoCalling(param0: boolean): void;
                        enableVisualVoicemailSmsFilter(param0: string, param1: number, param2: globalAndroid.telephony.VisualVoicemailSmsFilterSettings): void;
                        endCall(): boolean;
                        endCallForSubscriber(param0: number): boolean;
                        factoryReset(param0: number): void;
                        getActivePhoneType(): number;
                        getActivePhoneTypeForSlot(param0: number): number;
                        getActiveVisualVoicemailSmsFilterSettings(param0: number): globalAndroid.telephony.VisualVoicemailSmsFilterSettings;
                        getAidForAppType(param0: number, param1: number): string;
                        getAllCellInfo(param0: string): java.util.List<globalAndroid.telephony.CellInfo>;
                        getAllowedCarriers(param0: number): java.util.List<globalAndroid.service.carrier.CarrierIdentifier>;
                        getAtr(): number[];
                        getAtrUsingSubId(param0: number): number[];
                        getCalculatedPreferredNetworkType(param0: string): number;
                        getCallState(): number;
                        getCallStateForSlot(param0: number): number;
                        getCarrierPackageNamesForIntentAndPhone(param0: globalAndroid.content.Intent, param1: number): java.util.List<string>;
                        getCarrierPrivilegeStatus(param0: number): number;
                        getCdmaEriIconIndex(param0: string): number;
                        getCdmaEriIconIndexForSubscriber(param0: number, param1: string): number;
                        getCdmaEriIconMode(param0: string): number;
                        getCdmaEriIconModeForSubscriber(param0: number, param1: string): number;
                        getCdmaEriText(param0: string): string;
                        getCdmaEriTextForSubscriber(param0: number, param1: string): string;
                        getCdmaMdn(param0: number): string;
                        getCdmaMin(param0: number): string;
                        getCdmaPrlVersion(param0: number): string;
                        getCellLocation(param0: string): globalAndroid.os.Bundle;
                        getCellNetworkScanResults(param0: number): com.android.internal.telephony.CellNetworkScanResult;
                        getClientRequestStats(param0: string, param1: number): java.util.List<globalAndroid.telephony.ClientRequestStats>;
                        getDataActivationState(param0: number, param1: string): number;
                        getDataActivity(): number;
                        getDataEnabled(param0: number): boolean;
                        getDataNetworkType(param0: string): number;
                        getDataNetworkTypeForSubscriber(param0: number, param1: string): number;
                        getDataState(): number;
                        getDefaultSim(): number;
                        getDeviceId(param0: string): string;
                        getDeviceSoftwareVersionForSlot(param0: number, param1: string): string;
                        getEmergencyCallbackMode(param0: number): boolean;
                        getEsn(param0: number): string;
                        getForbiddenPlmns(param0: number, param1: number): string[];
                        getImeiForSlot(param0: number, param1: string): string;
                        getImsServiceControllerAndListen(param0: number, param1: number, param2: com.android.ims.internal.IImsServiceFeatureListener): com.android.ims.internal.IImsServiceController;
                        getLine1AlphaTagForDisplay(param0: number, param1: string): string;
                        getLine1NumberForDisplay(param0: number, param1: string): string;
                        getLocaleFromDefaultSim(): string;
                        getLteOnCdmaMode(param0: string): number;
                        getLteOnCdmaModeForSubscriber(param0: number, param1: string): number;
                        getMeidForSlot(param0: number, param1: string): string;
                        getMergedSubscriberIds(param0: string): string[];
                        getNeighboringCellInfo(param0: string): java.util.List<globalAndroid.telephony.NeighboringCellInfo>;
                        getNetworkType(): number;
                        getNetworkTypeForSubscriber(param0: number, param1: string): number;
                        getPackagesWithCarrierPrivileges(): java.util.List<string>;
                        getPcscfAddress(param0: string, param1: string): string[];
                        getPreferredNetworkType(param0: number): number;
                        getRadioAccessFamily(param0: number, param1: string): number;
                        getServiceStateForSubscriber(param0: number, param1: string): globalAndroid.telephony.ServiceState;
                        getSubIdForPhoneAccount(param0: globalAndroid.telecom.PhoneAccount): number;
                        getTelephonyHistograms(): java.util.List<globalAndroid.telephony.TelephonyHistogram>;
                        getTetherApnRequired(): number;
                        getVisualVoicemailPackageName(param0: string, param1: number): string;
                        getVisualVoicemailSettings(param0: string, param1: number): globalAndroid.os.Bundle;
                        getVisualVoicemailSmsFilterSettings(param0: string, param1: number): globalAndroid.telephony.VisualVoicemailSmsFilterSettings;
                        getVoiceActivationState(param0: number, param1: string): number;
                        getVoiceMessageCount(): number;
                        getVoiceMessageCountForSubscriber(param0: number): number;
                        getVoiceNetworkTypeForSubscriber(param0: number, param1: string): number;
                        getVoicemailRingtoneUri(param0: globalAndroid.telecom.PhoneAccountHandle): globalAndroid.net.Uri;
                        getVtDataUsage(): number;
                        handlePinMmi(param0: string): boolean;
                        handlePinMmiForSubscriber(param0: number, param1: string): boolean;
                        handleUssdRequest(param0: number, param1: string, param2: globalAndroid.os.ResultReceiver): void;
                        hasIccCard(): boolean;
                        hasIccCardUsingSlotIndex(param0: number): boolean;
                        iccCloseLogicalChannel(param0: number, param1: number): boolean;
                        iccExchangeSimIO(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: string): number[];
                        iccOpenLogicalChannel(param0: number, param1: string, param2: number): globalAndroid.telephony.IccOpenLogicalChannelResponse;
                        iccTransmitApduBasicChannel(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: string): string;
                        iccTransmitApduLogicalChannel(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: string): string;
                        invokeOemRilRequestRaw(param0: number[], param1: number[]): number;
                        invokeSomcRilRequestRaw(param0: number[], param1: number[]): number;
                        isConcurrentVoiceAndDataAllowed(param0: number): boolean;
                        isDataConnectivityPossible(): boolean;
                        isHearingAidCompatibilitySupported(): boolean;
                        isIdle(param0: string): boolean;
                        isIdleForSubscriber(param0: number, param1: string): boolean;
                        isImsRegistered(): boolean;
                        isImsRegisteredForSubscriber(param0: number): boolean;
                        isOffhook(param0: string): boolean;
                        isOffhookForSubscriber(param0: number, param1: string): boolean;
                        isRadioOn(param0: string): boolean;
                        isRadioOnForSubscriber(param0: number, param1: string): boolean;
                        isRinging(param0: string): boolean;
                        isRingingForSubscriber(param0: number, param1: string): boolean;
                        isTtyModeSupported(): boolean;
                        isVideoCallingEnabled(param0: string): boolean;
                        isVideoTelephonyAvailable(): boolean;
                        isVoicemailVibrationEnabled(param0: globalAndroid.telecom.PhoneAccountHandle): boolean;
                        isVolteAvailable(): boolean;
                        isWifiCallingAvailable(): boolean;
                        isWorldPhone(): boolean;
                        needMobileRadioShutdown(): boolean;
                        needsOtaServiceProvisioning(): boolean;
                        nvReadItem(param0: number): string;
                        nvResetConfig(param0: number): boolean;
                        nvWriteCdmaPrl(param0: number[]): boolean;
                        nvWriteItem(param0: number, param1: string): boolean;
                        requestModemActivityInfo(param0: globalAndroid.os.ResultReceiver): void;
                        sendDialerSpecialCode(param0: string, param1: string): void;
                        sendEnvelopeWithStatus(param0: number, param1: string): string;
                        sendVisualVoicemailSmsForSubscriber(param0: string, param1: number, param2: string, param3: number, param4: string, param5: globalAndroid.app.PendingIntent): void;
                        setAllowedCarriers(param0: number, param1: java.util.List<globalAndroid.service.carrier.CarrierIdentifier>): number;
                        setCellInfoListRate(param0: number): void;
                        setDataActivationState(param0: number, param1: number): void;
                        setDataEnabled(param0: number, param1: boolean): void;
                        setImsRegistrationState(param0: boolean): void;
                        setLine1NumberForDisplayForSubscriber(param0: number, param1: string, param2: string): boolean;
                        setNetworkSelectionModeAutomatic(param0: number): void;
                        setNetworkSelectionModeManual(param0: number, param1: com.android.internal.telephony.OperatorInfo, param2: boolean): boolean;
                        setOperatorBrandOverride(param0: number, param1: string): boolean;
                        setPolicyDataEnabled(param0: boolean, param1: number): void;
                        setPreferredNetworkType(param0: number, param1: number): boolean;
                        setRadio(param0: boolean): boolean;
                        setRadioCapability(param0: globalAndroid.telephony.RadioAccessFamily[]): void;
                        setRadioForSubscriber(param0: number, param1: boolean): boolean;
                        setRadioPower(param0: boolean): boolean;
                        setRoamingOverride(param0: number, param1: java.util.List<string>, param2: java.util.List<string>, param3: java.util.List<string>, param4: java.util.List<string>): boolean;
                        setSimPowerStateForSlot(param0: number, param1: boolean): void;
                        setVoiceActivationState(param0: number, param1: number): void;
                        setVoiceMailNumber(param0: number, param1: string, param2: string): boolean;
                        setVoicemailRingtoneUri(param0: string, param1: globalAndroid.telecom.PhoneAccountHandle, param2: globalAndroid.net.Uri): void;
                        setVoicemailVibrationEnabled(param0: string, param1: globalAndroid.telecom.PhoneAccountHandle, param2: boolean): void;
                        shutdownMobileRadios(): void;
                        silenceRinger(): void;
                        supplyPin(param0: string): boolean;
                        supplyPinForSubscriber(param0: number, param1: string): boolean;
                        supplyPinReportResult(param0: string): number[];
                        supplyPinReportResultForSubscriber(param0: number, param1: string): number[];
                        supplyPuk(param0: string, param1: string): boolean;
                        supplyPukForSubscriber(param0: number, param1: string, param2: string): boolean;
                        supplyPukReportResult(param0: string, param1: string): number[];
                        supplyPukReportResultForSubscriber(param0: number, param1: string, param2: string): number[];
                        toggleRadioOnOff(): void;
                        toggleRadioOnOffForSubscriber(param0: number): void;
                        updateServiceLocation(): void;
                        updateServiceLocationForSubscriber(param0: number): void;
                    });
                    public constructor();
                    public enableVideoCalling(param0: boolean): void;
                    public canChangeDtmfToneLength(): boolean;
                    public getCdmaEriText(param0: string): string;
                    public setRadioPower(param0: boolean): boolean;
                    public isIdleForSubscriber(param0: number, param1: string): boolean;
                    public handlePinMmiForSubscriber(param0: number, param1: string): boolean;
                    public sendDialerSpecialCode(param0: string, param1: string): void;
                    public supplyPukForSubscriber(param0: number, param1: string, param2: string): boolean;
                    public getDataState(): number;
                    public supplyPuk(param0: string, param1: string): boolean;
                    public getActiveVisualVoicemailSmsFilterSettings(param0: number): globalAndroid.telephony.VisualVoicemailSmsFilterSettings;
                    public getEmergencyCallbackMode(param0: number): boolean;
                    public getLine1AlphaTagForDisplay(param0: number, param1: string): string;
                    public getAidForAppType(param0: number, param1: number): string;
                    public silenceRinger(): void;
                    public getVisualVoicemailSettings(param0: string, param1: number): globalAndroid.os.Bundle;
                    public isRadioOnForSubscriber(param0: number, param1: string): boolean;
                    public setVoicemailRingtoneUri(param0: string, param1: globalAndroid.telecom.PhoneAccountHandle, param2: globalAndroid.net.Uri): void;
                    public factoryReset(param0: number): void;
                    public getCdmaEriIconIndex(param0: string): number;
                    public handlePinMmi(param0: string): boolean;
                    public isVolteAvailable(): boolean;
                    public checkCarrierPrivilegesForPackage(param0: string): number;
                    public endCall(): boolean;
                    public requestModemActivityInfo(param0: globalAndroid.os.ResultReceiver): void;
                    public getPackagesWithCarrierPrivileges(): java.util.List<string>;
                    public getVoiceMessageCount(): number;
                    public getActivePhoneTypeForSlot(param0: number): number;
                    public getCallStateForSlot(param0: number): number;
                    public nvReadItem(param0: number): string;
                    public carrierActionSetMeteredApnsEnabled(param0: number, param1: boolean): void;
                    public getVoicemailRingtoneUri(param0: globalAndroid.telecom.PhoneAccountHandle): globalAndroid.net.Uri;
                    public needsOtaServiceProvisioning(): boolean;
                    public getImeiForSlot(param0: number, param1: string): string;
                    public hasIccCardUsingSlotIndex(param0: number): boolean;
                    public isDataConnectivityPossible(): boolean;
                    public setRadioForSubscriber(param0: number, param1: boolean): boolean;
                    public isRingingForSubscriber(param0: number, param1: string): boolean;
                    public setCellInfoListRate(param0: number): void;
                    public dial(param0: string): void;
                    public nvWriteCdmaPrl(param0: number[]): boolean;
                    public toggleRadioOnOffForSubscriber(param0: number): void;
                    public supplyPin(param0: string): boolean;
                    public updateServiceLocation(): void;
                    public toggleRadioOnOff(): void;
                    public enableDataConnectivity(): boolean;
                    public getNeighboringCellInfo(param0: string): java.util.List<globalAndroid.telephony.NeighboringCellInfo>;
                    public getPreferredNetworkType(param0: number): number;
                    public setNetworkSelectionModeManual(param0: number, param1: com.android.internal.telephony.OperatorInfo, param2: boolean): boolean;
                    public getCdmaEriIconMode(param0: string): number;
                    public getCellNetworkScanResults(param0: number): com.android.internal.telephony.CellNetworkScanResult;
                    public iccOpenLogicalChannel(param0: number, param1: string, param2: number): globalAndroid.telephony.IccOpenLogicalChannelResponse;
                    public checkCarrierPrivilegesForPackageAnyPhone(param0: string): number;
                    public endCallForSubscriber(param0: number): boolean;
                    public getClientRequestStats(param0: string, param1: number): java.util.List<globalAndroid.telephony.ClientRequestStats>;
                    public iccCloseLogicalChannel(param0: number, param1: number): boolean;
                    public nvWriteItem(param0: number, param1: string): boolean;
                    public getCalculatedPreferredNetworkType(param0: string): number;
                    public isOffhook(param0: string): boolean;
                    public getCarrierPrivilegeStatus(param0: number): number;
                    public getDeviceSoftwareVersionForSlot(param0: number, param1: string): string;
                    public getVoiceActivationState(param0: number, param1: string): number;
                    public setVoicemailVibrationEnabled(param0: string, param1: globalAndroid.telecom.PhoneAccountHandle, param2: boolean): void;
                    public isIdle(param0: string): boolean;
                    public getLocaleFromDefaultSim(): string;
                    public isImsRegistered(): boolean;
                    public sendEnvelopeWithStatus(param0: number, param1: string): string;
                    public isWifiCallingAvailable(): boolean;
                    public getDataEnabled(param0: number): boolean;
                    public needMobileRadioShutdown(): boolean;
                    public isVoicemailVibrationEnabled(param0: globalAndroid.telecom.PhoneAccountHandle): boolean;
                    public enableVisualVoicemailSmsFilter(param0: string, param1: number, param2: globalAndroid.telephony.VisualVoicemailSmsFilterSettings): void;
                    public getAllowedCarriers(param0: number): java.util.List<globalAndroid.service.carrier.CarrierIdentifier>;
                    public getRadioAccessFamily(param0: number, param1: string): number;
                    public getDataActivity(): number;
                    public getEsn(param0: number): string;
                    public isConcurrentVoiceAndDataAllowed(param0: number): boolean;
                    public carrierActionSetRadioEnabled(param0: number, param1: boolean): void;
                    public getDataNetworkType(param0: string): number;
                    public isTtyModeSupported(): boolean;
                    public getMergedSubscriberIds(param0: string): string[];
                    public setNetworkSelectionModeAutomatic(param0: number): void;
                    public shutdownMobileRadios(): void;
                    public setSimPowerStateForSlot(param0: number, param1: boolean): void;
                    public getVisualVoicemailSmsFilterSettings(param0: string, param1: number): globalAndroid.telephony.VisualVoicemailSmsFilterSettings;
                    public setDataActivationState(param0: number, param1: number): void;
                    public getCdmaMdn(param0: number): string;
                    public getDataActivationState(param0: number, param1: string): number;
                    public getLteOnCdmaModeForSubscriber(param0: number, param1: string): number;
                    public isVideoCallingEnabled(param0: string): boolean;
                    public invokeOemRilRequestRaw(param0: number[], param1: number[]): number;
                    public supplyPukReportResult(param0: string, param1: string): number[];
                    public getSubIdForPhoneAccount(param0: globalAndroid.telecom.PhoneAccount): number;
                    public supplyPinReportResult(param0: string): number[];
                    public getCellLocation(param0: string): globalAndroid.os.Bundle;
                    public setDataEnabled(param0: number, param1: boolean): void;
                    public getDataNetworkTypeForSubscriber(param0: number, param1: string): number;
                    public getCallState(): number;
                    public setPreferredNetworkType(param0: number, param1: number): boolean;
                    public setPolicyDataEnabled(param0: boolean, param1: number): void;
                    public call(param0: string, param1: string): void;
                    public getTelephonyHistograms(): java.util.List<globalAndroid.telephony.TelephonyHistogram>;
                    public hasIccCard(): boolean;
                    public setAllowedCarriers(param0: number, param1: java.util.List<globalAndroid.service.carrier.CarrierIdentifier>): number;
                    public getNetworkType(): number;
                    public isOffhookForSubscriber(param0: number, param1: string): boolean;
                    public getCdmaEriTextForSubscriber(param0: number, param1: string): string;
                    public setVoiceMailNumber(param0: number, param1: string, param2: string): boolean;
                    public disableLocationUpdates(): void;
                    public getVoiceNetworkTypeForSubscriber(param0: number, param1: string): number;
                    public getCdmaPrlVersion(param0: number): string;
                    public setVoiceActivationState(param0: number, param1: number): void;
                    public supplyPinReportResultForSubscriber(param0: number, param1: string): number[];
                    public enableLocationUpdates(): void;
                    public getActivePhoneType(): number;
                    public isRinging(param0: string): boolean;
                    public getCdmaEriIconIndexForSubscriber(param0: number, param1: string): number;
                    public sendVisualVoicemailSmsForSubscriber(param0: string, param1: number, param2: string, param3: number, param4: string, param5: globalAndroid.app.PendingIntent): void;
                    public getDefaultSim(): number;
                    public invokeSomcRilRequestRaw(param0: number[], param1: number[]): number;
                    public answerRingingCall(): void;
                    public supplyPukReportResultForSubscriber(param0: number, param1: string, param2: string): number[];
                    public getMeidForSlot(param0: number, param1: string): string;
                    public iccExchangeSimIO(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: string): number[];
                    public iccTransmitApduBasicChannel(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: string): string;
                    public nvResetConfig(param0: number): boolean;
                    public setRadio(param0: boolean): boolean;
                    public setRadioCapability(param0: globalAndroid.telephony.RadioAccessFamily[]): void;
                    public getForbiddenPlmns(param0: number, param1: number): string[];
                    public getCdmaMin(param0: number): string;
                    public isHearingAidCompatibilitySupported(): boolean;
                    public disableDataConnectivity(): boolean;
                    public setImsRegistrationState(param0: boolean): void;
                    public isRadioOn(param0: string): boolean;
                    public getNetworkTypeForSubscriber(param0: number, param1: string): number;
                    public getAtr(): number[];
                    public enableLocationUpdatesForSubscriber(param0: number): void;
                    public getAllCellInfo(param0: string): java.util.List<globalAndroid.telephony.CellInfo>;
                    public iccTransmitApduLogicalChannel(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: string): string;
                    public isImsRegisteredForSubscriber(param0: number): boolean;
                    public getCarrierPackageNamesForIntentAndPhone(param0: globalAndroid.content.Intent, param1: number): java.util.List<string>;
                    public isVideoTelephonyAvailable(): boolean;
                    public getCdmaEriIconModeForSubscriber(param0: number, param1: string): number;
                    public getLine1NumberForDisplay(param0: number, param1: string): string;
                    public supplyPinForSubscriber(param0: number, param1: string): boolean;
                    public getVoiceMessageCountForSubscriber(param0: number): number;
                    public getAtrUsingSubId(param0: number): number[];
                    public getImsServiceControllerAndListen(param0: number, param1: number, param2: com.android.ims.internal.IImsServiceFeatureListener): com.android.ims.internal.IImsServiceController;
                    public disableLocationUpdatesForSubscriber(param0: number): void;
                    public getDeviceId(param0: string): string;
                    public setLine1NumberForDisplayForSubscriber(param0: number, param1: string, param2: string): boolean;
                    public setRoamingOverride(param0: number, param1: java.util.List<string>, param2: java.util.List<string>, param3: java.util.List<string>, param4: java.util.List<string>): boolean;
                    public updateServiceLocationForSubscriber(param0: number): void;
                    public disableVisualVoicemailSmsFilter(param0: string, param1: number): void;
                    public getServiceStateForSubscriber(param0: number, param1: string): globalAndroid.telephony.ServiceState;
                    public getLteOnCdmaMode(param0: string): number;
                    public setOperatorBrandOverride(param0: number, param1: string): boolean;
                    public getPcscfAddress(param0: string, param1: string): string[];
                    public handleUssdRequest(param0: number, param1: string, param2: globalAndroid.os.ResultReceiver): void;
                    public isWorldPhone(): boolean;
                    public getVisualVoicemailPackageName(param0: string, param1: number): string;
                    public getVtDataUsage(): number;
                    public answerRingingCallForSubscriber(param0: number): void;
                    public getTetherApnRequired(): number;
                }
                export module ITelephony {
                    export abstract class Stub implements com.android.internal.telephony.ITelephony {
                        public static class: java.lang.Class<com.android.internal.telephony.ITelephony.Stub>;
                        public dial(param0: string): void;
                        public getDeviceSoftwareVersionForSlot(param0: number, param1: string): string;
                        public setLine1NumberForDisplayForSubscriber(param0: number, param1: string, param2: string): boolean;
                        public enableVisualVoicemailSmsFilter(param0: string, param1: number, param2: globalAndroid.telephony.VisualVoicemailSmsFilterSettings): void;
                        public getDataActivationState(param0: number, param1: string): number;
                        public setNetworkSelectionModeAutomatic(param0: number): void;
                        public isTtyModeSupported(): boolean;
                        public isWorldPhone(): boolean;
                        public shutdownMobileRadios(): void;
                        public setSimPowerStateForSlot(param0: number, param1: boolean): void;
                        public getCarrierPrivilegeStatus(param0: number): number;
                        public answerRingingCall(): void;
                        public supplyPinForSubscriber(param0: number, param1: string): boolean;
                        public toggleRadioOnOff(): void;
                        public endCall(): boolean;
                        public getTelephonyHistograms(): java.util.List<globalAndroid.telephony.TelephonyHistogram>;
                        public asBinder(): globalAndroid.os.IBinder;
                        public supplyPinReportResultForSubscriber(param0: number, param1: string): number[];
                        public setImsRegistrationState(param0: boolean): void;
                        public setVoicemailRingtoneUri(param0: string, param1: globalAndroid.telecom.PhoneAccountHandle, param2: globalAndroid.net.Uri): void;
                        public constructor();
                        public getLteOnCdmaModeForSubscriber(param0: number, param1: string): number;
                        public isIdleForSubscriber(param0: number, param1: string): boolean;
                        public getNetworkTypeForSubscriber(param0: number, param1: string): number;
                        public isImsRegisteredForSubscriber(param0: number): boolean;
                        public nvReadItem(param0: number): string;
                        public supplyPin(param0: string): boolean;
                        public getNetworkType(): number;
                        public supplyPinReportResult(param0: string): number[];
                        public getVoicemailRingtoneUri(param0: globalAndroid.telecom.PhoneAccountHandle): globalAndroid.net.Uri;
                        public carrierActionSetRadioEnabled(param0: number, param1: boolean): void;
                        public getClientRequestStats(param0: string, param1: number): java.util.List<globalAndroid.telephony.ClientRequestStats>;
                        public getForbiddenPlmns(param0: number, param1: number): string[];
                        public endCallForSubscriber(param0: number): boolean;
                        public getDeviceId(param0: string): string;
                        public setRadio(param0: boolean): boolean;
                        public getDataNetworkType(param0: string): number;
                        public getDataActivity(): number;
                        public getAtr(): number[];
                        public handlePinMmiForSubscriber(param0: number, param1: string): boolean;
                        public iccTransmitApduBasicChannel(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: string): string;
                        public getLine1NumberForDisplay(param0: number, param1: string): string;
                        public getDataNetworkTypeForSubscriber(param0: number, param1: string): number;
                        public getCdmaMdn(param0: number): string;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.telephony.ITelephony;
                        public getServiceStateForSubscriber(param0: number, param1: string): globalAndroid.telephony.ServiceState;
                        public getCdmaEriIconMode(param0: string): number;
                        public sendVisualVoicemailSmsForSubscriber(param0: string, param1: number, param2: string, param3: number, param4: string, param5: globalAndroid.app.PendingIntent): void;
                        public getCallState(): number;
                        public getDefaultSim(): number;
                        public getRadioAccessFamily(param0: number, param1: string): number;
                        public getCdmaEriIconIndex(param0: string): number;
                        public getLteOnCdmaMode(param0: string): number;
                        public enableLocationUpdates(): void;
                        public enableVideoCalling(param0: boolean): void;
                        public isImsRegistered(): boolean;
                        public getLine1AlphaTagForDisplay(param0: number, param1: string): string;
                        public getTetherApnRequired(): number;
                        public needMobileRadioShutdown(): boolean;
                        public getMeidForSlot(param0: number, param1: string): string;
                        public isDataConnectivityPossible(): boolean;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public nvWriteItem(param0: number, param1: string): boolean;
                        public getCdmaEriIconIndexForSubscriber(param0: number, param1: string): number;
                        public invokeOemRilRequestRaw(param0: number[], param1: number[]): number;
                        public isIdle(param0: string): boolean;
                        public sendDialerSpecialCode(param0: string, param1: string): void;
                        public isVideoCallingEnabled(param0: string): boolean;
                        public getSubIdForPhoneAccount(param0: globalAndroid.telecom.PhoneAccount): number;
                        public getVoiceActivationState(param0: number, param1: string): number;
                        public handlePinMmi(param0: string): boolean;
                        public iccCloseLogicalChannel(param0: number, param1: number): boolean;
                        public sendEnvelopeWithStatus(param0: number, param1: string): string;
                        public getMergedSubscriberIds(param0: string): string[];
                        public setRadioForSubscriber(param0: number, param1: boolean): boolean;
                        public enableLocationUpdatesForSubscriber(param0: number): void;
                        public getCallStateForSlot(param0: number): number;
                        public getCellNetworkScanResults(param0: number): com.android.internal.telephony.CellNetworkScanResult;
                        public getImeiForSlot(param0: number, param1: string): string;
                        public hasIccCardUsingSlotIndex(param0: number): boolean;
                        public getActivePhoneTypeForSlot(param0: number): number;
                        public supplyPukReportResult(param0: string, param1: string): number[];
                        public getCalculatedPreferredNetworkType(param0: string): number;
                        public updateServiceLocationForSubscriber(param0: number): void;
                        public getVtDataUsage(): number;
                        public getCdmaPrlVersion(param0: number): string;
                        public requestModemActivityInfo(param0: globalAndroid.os.ResultReceiver): void;
                        public iccOpenLogicalChannel(param0: number, param1: string, param2: number): globalAndroid.telephony.IccOpenLogicalChannelResponse;
                        public toggleRadioOnOffForSubscriber(param0: number): void;
                        public getCdmaEriIconModeForSubscriber(param0: number, param1: string): number;
                        public iccTransmitApduLogicalChannel(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: string): string;
                        public getNeighboringCellInfo(param0: string): java.util.List<globalAndroid.telephony.NeighboringCellInfo>;
                        public supplyPukForSubscriber(param0: number, param1: string, param2: string): boolean;
                        public setRadioPower(param0: boolean): boolean;
                        public getImsServiceControllerAndListen(param0: number, param1: number, param2: com.android.ims.internal.IImsServiceFeatureListener): com.android.ims.internal.IImsServiceController;
                        public setOperatorBrandOverride(param0: number, param1: string): boolean;
                        public supplyPuk(param0: string, param1: string): boolean;
                        public isVolteAvailable(): boolean;
                        public call(param0: string, param1: string): void;
                        public disableDataConnectivity(): boolean;
                        public updateServiceLocation(): void;
                        public getAllowedCarriers(param0: number): java.util.List<globalAndroid.service.carrier.CarrierIdentifier>;
                        public getCdmaEriTextForSubscriber(param0: number, param1: string): string;
                        public isOffhook(param0: string): boolean;
                        public disableVisualVoicemailSmsFilter(param0: string, param1: number): void;
                        public carrierActionSetMeteredApnsEnabled(param0: number, param1: boolean): void;
                        public disableLocationUpdates(): void;
                        public isVideoTelephonyAvailable(): boolean;
                        public setVoiceActivationState(param0: number, param1: number): void;
                        public getActiveVisualVoicemailSmsFilterSettings(param0: number): globalAndroid.telephony.VisualVoicemailSmsFilterSettings;
                        public isRadioOn(param0: string): boolean;
                        public getAtrUsingSubId(param0: number): number[];
                        public getDataEnabled(param0: number): boolean;
                        public getEsn(param0: number): string;
                        public answerRingingCallForSubscriber(param0: number): void;
                        public setDataEnabled(param0: number, param1: boolean): void;
                        public setDataActivationState(param0: number, param1: number): void;
                        public getCdmaMin(param0: number): string;
                        public isRinging(param0: string): boolean;
                        public getAllCellInfo(param0: string): java.util.List<globalAndroid.telephony.CellInfo>;
                        public needsOtaServiceProvisioning(): boolean;
                        public getEmergencyCallbackMode(param0: number): boolean;
                        public checkCarrierPrivilegesForPackageAnyPhone(param0: string): number;
                        public getCdmaEriText(param0: string): string;
                        public setCellInfoListRate(param0: number): void;
                        public getCarrierPackageNamesForIntentAndPhone(param0: globalAndroid.content.Intent, param1: number): java.util.List<string>;
                        public isVoicemailVibrationEnabled(param0: globalAndroid.telecom.PhoneAccountHandle): boolean;
                        public silenceRinger(): void;
                        public getAidForAppType(param0: number, param1: number): string;
                        public nvWriteCdmaPrl(param0: number[]): boolean;
                        public canChangeDtmfToneLength(): boolean;
                        public setNetworkSelectionModeManual(param0: number, param1: com.android.internal.telephony.OperatorInfo, param2: boolean): boolean;
                        public isRadioOnForSubscriber(param0: number, param1: string): boolean;
                        public enableDataConnectivity(): boolean;
                        public factoryReset(param0: number): void;
                        public supplyPukReportResultForSubscriber(param0: number, param1: string, param2: string): number[];
                        public getPackagesWithCarrierPrivileges(): java.util.List<string>;
                        public isHearingAidCompatibilitySupported(): boolean;
                        public getVisualVoicemailPackageName(param0: string, param1: number): string;
                        public hasIccCard(): boolean;
                        public getVisualVoicemailSettings(param0: string, param1: number): globalAndroid.os.Bundle;
                        public getActivePhoneType(): number;
                        public getCellLocation(param0: string): globalAndroid.os.Bundle;
                        public getDataState(): number;
                        public iccExchangeSimIO(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: string): number[];
                        public setPolicyDataEnabled(param0: boolean, param1: number): void;
                        public getVisualVoicemailSmsFilterSettings(param0: string, param1: number): globalAndroid.telephony.VisualVoicemailSmsFilterSettings;
                        public setVoiceMailNumber(param0: number, param1: string, param2: string): boolean;
                        public isWifiCallingAvailable(): boolean;
                        public getPcscfAddress(param0: string, param1: string): string[];
                        public getVoiceNetworkTypeForSubscriber(param0: number, param1: string): number;
                        public checkCarrierPrivilegesForPackage(param0: string): number;
                        public disableLocationUpdatesForSubscriber(param0: number): void;
                        public getLocaleFromDefaultSim(): string;
                        public isOffhookForSubscriber(param0: number, param1: string): boolean;
                        public invokeSomcRilRequestRaw(param0: number[], param1: number[]): number;
                        public setRadioCapability(param0: globalAndroid.telephony.RadioAccessFamily[]): void;
                        public isConcurrentVoiceAndDataAllowed(param0: number): boolean;
                        public setAllowedCarriers(param0: number, param1: java.util.List<globalAndroid.service.carrier.CarrierIdentifier>): number;
                        public getVoiceMessageCountForSubscriber(param0: number): number;
                        public handleUssdRequest(param0: number, param1: string, param2: globalAndroid.os.ResultReceiver): void;
                        public getVoiceMessageCount(): number;
                        public setVoicemailVibrationEnabled(param0: string, param1: globalAndroid.telecom.PhoneAccountHandle, param2: boolean): void;
                        public setRoamingOverride(param0: number, param1: java.util.List<string>, param2: java.util.List<string>, param3: java.util.List<string>, param4: java.util.List<string>): boolean;
                        public getPreferredNetworkType(param0: number): number;
                        public setPreferredNetworkType(param0: number, param1: number): boolean;
                        public nvResetConfig(param0: number): boolean;
                        public isRingingForSubscriber(param0: number, param1: string): boolean;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.telephony.ITelephony {
                            public static class: java.lang.Class<com.android.internal.telephony.ITelephony.Stub.Proxy>;
                            public factoryReset(param0: number): void;
                            public isRingingForSubscriber(param0: number, param1: string): boolean;
                            public requestModemActivityInfo(param0: globalAndroid.os.ResultReceiver): void;
                            public getAtrUsingSubId(param0: number): number[];
                            public needsOtaServiceProvisioning(): boolean;
                            public needMobileRadioShutdown(): boolean;
                            public getSubIdForPhoneAccount(param0: globalAndroid.telecom.PhoneAccount): number;
                            public getDeviceId(param0: string): string;
                            public isVolteAvailable(): boolean;
                            public enableVisualVoicemailSmsFilter(param0: string, param1: number, param2: globalAndroid.telephony.VisualVoicemailSmsFilterSettings): void;
                            public getCellLocation(param0: string): globalAndroid.os.Bundle;
                            public getPreferredNetworkType(param0: number): number;
                            public setVoiceMailNumber(param0: number, param1: string, param2: string): boolean;
                            public getPackagesWithCarrierPrivileges(): java.util.List<string>;
                            public getDefaultSim(): number;
                            public getLine1AlphaTagForDisplay(param0: number, param1: string): string;
                            public getVoiceMessageCount(): number;
                            public carrierActionSetRadioEnabled(param0: number, param1: boolean): void;
                            public getVisualVoicemailSmsFilterSettings(param0: string, param1: number): globalAndroid.telephony.VisualVoicemailSmsFilterSettings;
                            public getImeiForSlot(param0: number, param1: string): string;
                            public getVisualVoicemailSettings(param0: string, param1: number): globalAndroid.os.Bundle;
                            public carrierActionSetMeteredApnsEnabled(param0: number, param1: boolean): void;
                            public getServiceStateForSubscriber(param0: number, param1: string): globalAndroid.telephony.ServiceState;
                            public setAllowedCarriers(param0: number, param1: java.util.List<globalAndroid.service.carrier.CarrierIdentifier>): number;
                            public sendEnvelopeWithStatus(param0: number, param1: string): string;
                            public hasIccCard(): boolean;
                            public setVoiceActivationState(param0: number, param1: number): void;
                            public getActivePhoneTypeForSlot(param0: number): number;
                            public iccTransmitApduLogicalChannel(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: string): string;
                            public getVtDataUsage(): number;
                            public getMeidForSlot(param0: number, param1: string): string;
                            public checkCarrierPrivilegesForPackageAnyPhone(param0: string): number;
                            public invokeOemRilRequestRaw(param0: number[], param1: number[]): number;
                            public getDataEnabled(param0: number): boolean;
                            public asBinder(): globalAndroid.os.IBinder;
                            public getCdmaPrlVersion(param0: number): string;
                            public getDeviceSoftwareVersionForSlot(param0: number, param1: string): string;
                            public toggleRadioOnOffForSubscriber(param0: number): void;
                            public setCellInfoListRate(param0: number): void;
                            public isVideoCallingEnabled(param0: string): boolean;
                            public handlePinMmiForSubscriber(param0: number, param1: string): boolean;
                            public isOffhookForSubscriber(param0: number, param1: string): boolean;
                            public getLine1NumberForDisplay(param0: number, param1: string): string;
                            public iccOpenLogicalChannel(param0: number, param1: string, param2: number): globalAndroid.telephony.IccOpenLogicalChannelResponse;
                            public isTtyModeSupported(): boolean;
                            public handleUssdRequest(param0: number, param1: string, param2: globalAndroid.os.ResultReceiver): void;
                            public getClientRequestStats(param0: string, param1: number): java.util.List<globalAndroid.telephony.ClientRequestStats>;
                            public getDataActivationState(param0: number, param1: string): number;
                            public sendDialerSpecialCode(param0: string, param1: string): void;
                            public getMergedSubscriberIds(param0: string): string[];
                            public setPreferredNetworkType(param0: number, param1: number): boolean;
                            public getDataState(): number;
                            public getPcscfAddress(param0: string, param1: string): string[];
                            public getTelephonyHistograms(): java.util.List<globalAndroid.telephony.TelephonyHistogram>;
                            public getLteOnCdmaModeForSubscriber(param0: number, param1: string): number;
                            public isIdleForSubscriber(param0: number, param1: string): boolean;
                            public getCdmaEriText(param0: string): string;
                            public getDataActivity(): number;
                            public answerRingingCallForSubscriber(param0: number): void;
                            public getVoiceMessageCountForSubscriber(param0: number): number;
                            public setDataActivationState(param0: number, param1: number): void;
                            public getEsn(param0: number): string;
                            public enableLocationUpdatesForSubscriber(param0: number): void;
                            public setRadio(param0: boolean): boolean;
                            public disableLocationUpdatesForSubscriber(param0: number): void;
                            public isHearingAidCompatibilitySupported(): boolean;
                            public sendVisualVoicemailSmsForSubscriber(param0: string, param1: number, param2: string, param3: number, param4: string, param5: globalAndroid.app.PendingIntent): void;
                            public setRadioCapability(param0: globalAndroid.telephony.RadioAccessFamily[]): void;
                            public supplyPinForSubscriber(param0: number, param1: string): boolean;
                            public getRadioAccessFamily(param0: number, param1: string): number;
                            public supplyPukReportResultForSubscriber(param0: number, param1: string, param2: string): number[];
                            public getCarrierPackageNamesForIntentAndPhone(param0: globalAndroid.content.Intent, param1: number): java.util.List<string>;
                            public iccTransmitApduBasicChannel(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: string): string;
                            public nvReadItem(param0: number): string;
                            public getNetworkTypeForSubscriber(param0: number, param1: string): number;
                            public iccExchangeSimIO(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: string): number[];
                            public setRoamingOverride(param0: number, param1: java.util.List<string>, param2: java.util.List<string>, param3: java.util.List<string>, param4: java.util.List<string>): boolean;
                            public getVisualVoicemailPackageName(param0: string, param1: number): string;
                            public getCellNetworkScanResults(param0: number): com.android.internal.telephony.CellNetworkScanResult;
                            public getActiveVisualVoicemailSmsFilterSettings(param0: number): globalAndroid.telephony.VisualVoicemailSmsFilterSettings;
                            public getCdmaEriIconIndexForSubscriber(param0: number, param1: string): number;
                            public setRadioPower(param0: boolean): boolean;
                            public disableVisualVoicemailSmsFilter(param0: string, param1: number): void;
                            public getDataNetworkType(param0: string): number;
                            public getNetworkType(): number;
                            public handlePinMmi(param0: string): boolean;
                            public supplyPinReportResultForSubscriber(param0: number, param1: string): number[];
                            public getAidForAppType(param0: number, param1: number): string;
                            public endCall(): boolean;
                            public isIdle(param0: string): boolean;
                            public getCdmaEriIconMode(param0: string): number;
                            public setVoicemailRingtoneUri(param0: string, param1: globalAndroid.telecom.PhoneAccountHandle, param2: globalAndroid.net.Uri): void;
                            public nvResetConfig(param0: number): boolean;
                            public updateServiceLocationForSubscriber(param0: number): void;
                            public enableDataConnectivity(): boolean;
                            public isDataConnectivityPossible(): boolean;
                            public setVoicemailVibrationEnabled(param0: string, param1: globalAndroid.telecom.PhoneAccountHandle, param2: boolean): void;
                            public getAllowedCarriers(param0: number): java.util.List<globalAndroid.service.carrier.CarrierIdentifier>;
                            public isRinging(param0: string): boolean;
                            public getCallState(): number;
                            public getCdmaMin(param0: number): string;
                            public getLteOnCdmaMode(param0: string): number;
                            public setRadioForSubscriber(param0: number, param1: boolean): boolean;
                            public disableDataConnectivity(): boolean;
                            public isVoicemailVibrationEnabled(param0: globalAndroid.telecom.PhoneAccountHandle): boolean;
                            public dial(param0: string): void;
                            public silenceRinger(): void;
                            public endCallForSubscriber(param0: number): boolean;
                            public call(param0: string, param1: string): void;
                            public isRadioOn(param0: string): boolean;
                            public getCarrierPrivilegeStatus(param0: number): number;
                            public setPolicyDataEnabled(param0: boolean, param1: number): void;
                            public supplyPukForSubscriber(param0: number, param1: string, param2: string): boolean;
                            public getInterfaceDescriptor(): string;
                            public getCdmaEriIconIndex(param0: string): number;
                            public getCdmaMdn(param0: number): string;
                            public getDataNetworkTypeForSubscriber(param0: number, param1: string): number;
                            public isOffhook(param0: string): boolean;
                            public isConcurrentVoiceAndDataAllowed(param0: number): boolean;
                            public setSimPowerStateForSlot(param0: number, param1: boolean): void;
                            public enableVideoCalling(param0: boolean): void;
                            public isRadioOnForSubscriber(param0: number, param1: string): boolean;
                            public hasIccCardUsingSlotIndex(param0: number): boolean;
                            public answerRingingCall(): void;
                            public disableLocationUpdates(): void;
                            public getTetherApnRequired(): number;
                            public nvWriteCdmaPrl(param0: number[]): boolean;
                            public nvWriteItem(param0: number, param1: string): boolean;
                            public setImsRegistrationState(param0: boolean): void;
                            public getCdmaEriTextForSubscriber(param0: number, param1: string): string;
                            public getCalculatedPreferredNetworkType(param0: string): number;
                            public supplyPuk(param0: string, param1: string): boolean;
                            public setOperatorBrandOverride(param0: number, param1: string): boolean;
                            public toggleRadioOnOff(): void;
                            public getCallStateForSlot(param0: number): number;
                            public supplyPinReportResult(param0: string): number[];
                            public getVoicemailRingtoneUri(param0: globalAndroid.telecom.PhoneAccountHandle): globalAndroid.net.Uri;
                            public isVideoTelephonyAvailable(): boolean;
                            public isImsRegisteredForSubscriber(param0: number): boolean;
                            public updateServiceLocation(): void;
                            public supplyPin(param0: string): boolean;
                            public setNetworkSelectionModeAutomatic(param0: number): void;
                            public isWorldPhone(): boolean;
                            public setDataEnabled(param0: number, param1: boolean): void;
                            public checkCarrierPrivilegesForPackage(param0: string): number;
                            public getLocaleFromDefaultSim(): string;
                            public isImsRegistered(): boolean;
                            public getVoiceNetworkTypeForSubscriber(param0: number, param1: string): number;
                            public getAtr(): number[];
                            public getImsServiceControllerAndListen(param0: number, param1: number, param2: com.android.ims.internal.IImsServiceFeatureListener): com.android.ims.internal.IImsServiceController;
                            public getNeighboringCellInfo(param0: string): java.util.List<globalAndroid.telephony.NeighboringCellInfo>;
                            public iccCloseLogicalChannel(param0: number, param1: number): boolean;
                            public canChangeDtmfToneLength(): boolean;
                            public getForbiddenPlmns(param0: number, param1: number): string[];
                            public getActivePhoneType(): number;
                            public getEmergencyCallbackMode(param0: number): boolean;
                            public getVoiceActivationState(param0: number, param1: string): number;
                            public supplyPukReportResult(param0: string, param1: string): number[];
                            public invokeSomcRilRequestRaw(param0: number[], param1: number[]): number;
                            public setNetworkSelectionModeManual(param0: number, param1: com.android.internal.telephony.OperatorInfo, param2: boolean): boolean;
                            public isWifiCallingAvailable(): boolean;
                            public enableLocationUpdates(): void;
                            public setLine1NumberForDisplayForSubscriber(param0: number, param1: string, param2: string): boolean;
                            public getCdmaEriIconModeForSubscriber(param0: number, param1: string): number;
                            public shutdownMobileRadios(): void;
                            public getAllCellInfo(param0: string): java.util.List<globalAndroid.telephony.CellInfo>;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class ITelephonyRegistry extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.ITelephonyRegistry>;
                    /**
                     * Constructs a new instance of the com.android.internal.telephony.ITelephonyRegistry interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        addOnSubscriptionsChangedListener(param0: string, param1: com.android.internal.telephony.IOnSubscriptionsChangedListener): void;
                        listen(param0: string, param1: com.android.internal.telephony.IPhoneStateListener, param2: number, param3: boolean): void;
                        listenForSubscriber(param0: number, param1: string, param2: com.android.internal.telephony.IPhoneStateListener, param3: number, param4: boolean): void;
                        notifyCallForwardingChanged(param0: boolean): void;
                        notifyCallForwardingChangedForSubscriber(param0: number, param1: boolean): void;
                        notifyCallState(param0: number, param1: string): void;
                        notifyCallStateForPhoneId(param0: number, param1: number, param2: number, param3: string, param4: number): void;
                        notifyCarrierNetworkChange(param0: boolean): void;
                        notifyCellInfo(param0: java.util.List<globalAndroid.telephony.CellInfo>): void;
                        notifyCellInfoForSubscriber(param0: number, param1: java.util.List<globalAndroid.telephony.CellInfo>): void;
                        notifyCellLocation(param0: globalAndroid.os.Bundle): void;
                        notifyCellLocationForSubscriber(param0: number, param1: globalAndroid.os.Bundle): void;
                        notifyDataActivity(param0: number): void;
                        notifyDataActivityForSubscriber(param0: number, param1: number): void;
                        notifyDataConnection(param0: number, param1: boolean, param2: string, param3: string, param4: string, param5: globalAndroid.net.LinkProperties, param6: globalAndroid.net.NetworkCapabilities, param7: number, param8: boolean): void;
                        notifyDataConnectionFailed(param0: string, param1: string): void;
                        notifyDataConnectionFailedForSubscriber(param0: number, param1: string, param2: string): void;
                        notifyDataConnectionForSubscriber(param0: number, param1: number, param2: boolean, param3: string, param4: string, param5: string, param6: globalAndroid.net.LinkProperties, param7: globalAndroid.net.NetworkCapabilities, param8: number, param9: boolean): void;
                        notifyDisconnectCause(param0: number, param1: number): void;
                        notifyMessageWaitingChangedForPhoneId(param0: number, param1: number, param2: boolean): void;
                        notifyOemHookRawEventForSubscriber(param0: number, param1: number[]): void;
                        notifyOtaspChanged(param0: number): void;
                        notifyPreciseCallState(param0: number, param1: number, param2: number): void;
                        notifyPreciseCallStateExtended(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string): void;
                        notifyPreciseDataConnectionFailed(param0: string, param1: string, param2: string, param3: string): void;
                        notifyServiceStateForPhoneId(param0: number, param1: number, param2: globalAndroid.telephony.ServiceState): void;
                        notifySignalStrengthForPhoneId(param0: number, param1: number, param2: globalAndroid.telephony.SignalStrength): void;
                        notifySimActivationStateChangedForPhoneId(param0: number, param1: number, param2: number, param3: number): void;
                        notifySomcHookRawEventForSubscriber(param0: number, param1: number[]): void;
                        notifySubscriptionInfoChanged(): void;
                        notifyVoLteServiceStateChanged(param0: globalAndroid.telephony.VoLteServiceState): void;
                        removeOnSubscriptionsChangedListener(param0: string, param1: com.android.internal.telephony.IOnSubscriptionsChangedListener): void;
                    });
                    public constructor();
                    public listenForSubscriber(param0: number, param1: string, param2: com.android.internal.telephony.IPhoneStateListener, param3: number, param4: boolean): void;
                    public notifyPreciseCallStateExtended(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string): void;
                    public removeOnSubscriptionsChangedListener(param0: string, param1: com.android.internal.telephony.IOnSubscriptionsChangedListener): void;
                    public notifyDataConnectionFailed(param0: string, param1: string): void;
                    public notifyDataConnectionFailedForSubscriber(param0: number, param1: string, param2: string): void;
                    public notifyDisconnectCause(param0: number, param1: number): void;
                    public notifyCallStateForPhoneId(param0: number, param1: number, param2: number, param3: string, param4: number): void;
                    public notifyCarrierNetworkChange(param0: boolean): void;
                    public notifySubscriptionInfoChanged(): void;
                    public notifyDataActivity(param0: number): void;
                    public notifyDataConnection(param0: number, param1: boolean, param2: string, param3: string, param4: string, param5: globalAndroid.net.LinkProperties, param6: globalAndroid.net.NetworkCapabilities, param7: number, param8: boolean): void;
                    public notifyPreciseDataConnectionFailed(param0: string, param1: string, param2: string, param3: string): void;
                    public notifyCallState(param0: number, param1: string): void;
                    public listen(param0: string, param1: com.android.internal.telephony.IPhoneStateListener, param2: number, param3: boolean): void;
                    public notifyCallForwardingChangedForSubscriber(param0: number, param1: boolean): void;
                    public notifyPreciseCallState(param0: number, param1: number, param2: number): void;
                    public notifyCellLocation(param0: globalAndroid.os.Bundle): void;
                    public notifySomcHookRawEventForSubscriber(param0: number, param1: number[]): void;
                    public notifyDataConnectionForSubscriber(param0: number, param1: number, param2: boolean, param3: string, param4: string, param5: string, param6: globalAndroid.net.LinkProperties, param7: globalAndroid.net.NetworkCapabilities, param8: number, param9: boolean): void;
                    public notifyVoLteServiceStateChanged(param0: globalAndroid.telephony.VoLteServiceState): void;
                    public notifyCellLocationForSubscriber(param0: number, param1: globalAndroid.os.Bundle): void;
                    public notifySignalStrengthForPhoneId(param0: number, param1: number, param2: globalAndroid.telephony.SignalStrength): void;
                    public notifyServiceStateForPhoneId(param0: number, param1: number, param2: globalAndroid.telephony.ServiceState): void;
                    public notifySimActivationStateChangedForPhoneId(param0: number, param1: number, param2: number, param3: number): void;
                    public notifyDataActivityForSubscriber(param0: number, param1: number): void;
                    public notifyOtaspChanged(param0: number): void;
                    public notifyCallForwardingChanged(param0: boolean): void;
                    public addOnSubscriptionsChangedListener(param0: string, param1: com.android.internal.telephony.IOnSubscriptionsChangedListener): void;
                    public notifyCellInfo(param0: java.util.List<globalAndroid.telephony.CellInfo>): void;
                    public notifyMessageWaitingChangedForPhoneId(param0: number, param1: number, param2: boolean): void;
                    public notifyCellInfoForSubscriber(param0: number, param1: java.util.List<globalAndroid.telephony.CellInfo>): void;
                    public notifyOemHookRawEventForSubscriber(param0: number, param1: number[]): void;
                }
                export module ITelephonyRegistry {
                    export abstract class Stub implements com.android.internal.telephony.ITelephonyRegistry {
                        public static class: java.lang.Class<com.android.internal.telephony.ITelephonyRegistry.Stub>;
                        public notifyPreciseCallStateExtended(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string): void;
                        public notifyServiceStateForPhoneId(param0: number, param1: number, param2: globalAndroid.telephony.ServiceState): void;
                        public addOnSubscriptionsChangedListener(param0: string, param1: com.android.internal.telephony.IOnSubscriptionsChangedListener): void;
                        public notifyCallStateForPhoneId(param0: number, param1: number, param2: number, param3: string, param4: number): void;
                        public notifyOemHookRawEventForSubscriber(param0: number, param1: number[]): void;
                        public notifyDataActivity(param0: number): void;
                        public notifyCarrierNetworkChange(param0: boolean): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public listen(param0: string, param1: com.android.internal.telephony.IPhoneStateListener, param2: number, param3: boolean): void;
                        public notifyMessageWaitingChangedForPhoneId(param0: number, param1: number, param2: boolean): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.telephony.ITelephonyRegistry;
                        public notifyCellLocation(param0: globalAndroid.os.Bundle): void;
                        public notifyDataConnectionForSubscriber(param0: number, param1: number, param2: boolean, param3: string, param4: string, param5: string, param6: globalAndroid.net.LinkProperties, param7: globalAndroid.net.NetworkCapabilities, param8: number, param9: boolean): void;
                        public constructor();
                        public notifyCallForwardingChanged(param0: boolean): void;
                        public notifySimActivationStateChangedForPhoneId(param0: number, param1: number, param2: number, param3: number): void;
                        public removeOnSubscriptionsChangedListener(param0: string, param1: com.android.internal.telephony.IOnSubscriptionsChangedListener): void;
                        public notifyCellInfoForSubscriber(param0: number, param1: java.util.List<globalAndroid.telephony.CellInfo>): void;
                        public notifyPreciseCallState(param0: number, param1: number, param2: number): void;
                        public listenForSubscriber(param0: number, param1: string, param2: com.android.internal.telephony.IPhoneStateListener, param3: number, param4: boolean): void;
                        public notifyCallState(param0: number, param1: string): void;
                        public notifyOtaspChanged(param0: number): void;
                        public notifyCallForwardingChangedForSubscriber(param0: number, param1: boolean): void;
                        public notifyDataActivityForSubscriber(param0: number, param1: number): void;
                        public notifyDisconnectCause(param0: number, param1: number): void;
                        public notifyDataConnectionFailed(param0: string, param1: string): void;
                        public notifyDataConnectionFailedForSubscriber(param0: number, param1: string, param2: string): void;
                        public notifyCellLocationForSubscriber(param0: number, param1: globalAndroid.os.Bundle): void;
                        public notifySignalStrengthForPhoneId(param0: number, param1: number, param2: globalAndroid.telephony.SignalStrength): void;
                        public notifyCellInfo(param0: java.util.List<globalAndroid.telephony.CellInfo>): void;
                        public notifyVoLteServiceStateChanged(param0: globalAndroid.telephony.VoLteServiceState): void;
                        public notifyDataConnection(param0: number, param1: boolean, param2: string, param3: string, param4: string, param5: globalAndroid.net.LinkProperties, param6: globalAndroid.net.NetworkCapabilities, param7: number, param8: boolean): void;
                        public notifyPreciseDataConnectionFailed(param0: string, param1: string, param2: string, param3: string): void;
                        public notifySomcHookRawEventForSubscriber(param0: number, param1: number[]): void;
                        public notifySubscriptionInfoChanged(): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.telephony.ITelephonyRegistry {
                            public static class: java.lang.Class<com.android.internal.telephony.ITelephonyRegistry.Stub.Proxy>;
                            public notifyMessageWaitingChangedForPhoneId(param0: number, param1: number, param2: boolean): void;
                            public notifySimActivationStateChangedForPhoneId(param0: number, param1: number, param2: number, param3: number): void;
                            public listen(param0: string, param1: com.android.internal.telephony.IPhoneStateListener, param2: number, param3: boolean): void;
                            public notifyDisconnectCause(param0: number, param1: number): void;
                            public notifyServiceStateForPhoneId(param0: number, param1: number, param2: globalAndroid.telephony.ServiceState): void;
                            public notifyVoLteServiceStateChanged(param0: globalAndroid.telephony.VoLteServiceState): void;
                            public notifySomcHookRawEventForSubscriber(param0: number, param1: number[]): void;
                            public notifyCellLocation(param0: globalAndroid.os.Bundle): void;
                            public notifyCarrierNetworkChange(param0: boolean): void;
                            public notifyCallState(param0: number, param1: string): void;
                            public notifySignalStrengthForPhoneId(param0: number, param1: number, param2: globalAndroid.telephony.SignalStrength): void;
                            public notifyDataConnectionForSubscriber(param0: number, param1: number, param2: boolean, param3: string, param4: string, param5: string, param6: globalAndroid.net.LinkProperties, param7: globalAndroid.net.NetworkCapabilities, param8: number, param9: boolean): void;
                            public notifyOemHookRawEventForSubscriber(param0: number, param1: number[]): void;
                            public notifyPreciseDataConnectionFailed(param0: string, param1: string, param2: string, param3: string): void;
                            public notifyCallForwardingChangedForSubscriber(param0: number, param1: boolean): void;
                            public notifyDataActivity(param0: number): void;
                            public notifyCallStateForPhoneId(param0: number, param1: number, param2: number, param3: string, param4: number): void;
                            public notifyCellInfo(param0: java.util.List<globalAndroid.telephony.CellInfo>): void;
                            public notifyCellInfoForSubscriber(param0: number, param1: java.util.List<globalAndroid.telephony.CellInfo>): void;
                            public notifySubscriptionInfoChanged(): void;
                            public removeOnSubscriptionsChangedListener(param0: string, param1: com.android.internal.telephony.IOnSubscriptionsChangedListener): void;
                            public notifyDataConnectionFailed(param0: string, param1: string): void;
                            public addOnSubscriptionsChangedListener(param0: string, param1: com.android.internal.telephony.IOnSubscriptionsChangedListener): void;
                            public notifyCellLocationForSubscriber(param0: number, param1: globalAndroid.os.Bundle): void;
                            public notifyDataConnection(param0: number, param1: boolean, param2: string, param3: string, param4: string, param5: globalAndroid.net.LinkProperties, param6: globalAndroid.net.NetworkCapabilities, param7: number, param8: boolean): void;
                            public notifyDataConnectionFailedForSubscriber(param0: number, param1: string, param2: string): void;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public notifyPreciseCallState(param0: number, param1: number, param2: number): void;
                            public listenForSubscriber(param0: number, param1: string, param2: com.android.internal.telephony.IPhoneStateListener, param3: number, param4: boolean): void;
                            public notifyCallForwardingChanged(param0: boolean): void;
                            public notifyDataActivityForSubscriber(param0: number, param1: number): void;
                            public notifyPreciseCallStateExtended(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string): void;
                            public notifyOtaspChanged(param0: number): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class IWapPushManager extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.IWapPushManager>;
                    /**
                     * Constructs a new instance of the com.android.internal.telephony.IWapPushManager interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        addPackage(param0: string, param1: string, param2: string, param3: string, param4: number, param5: boolean, param6: boolean): boolean;
                        deletePackage(param0: string, param1: string, param2: string, param3: string): boolean;
                        processMessage(param0: string, param1: string, param2: globalAndroid.content.Intent): number;
                        updatePackage(param0: string, param1: string, param2: string, param3: string, param4: number, param5: boolean, param6: boolean): boolean;
                    });
                    public constructor();
                    public deletePackage(param0: string, param1: string, param2: string, param3: string): boolean;
                    public processMessage(param0: string, param1: string, param2: globalAndroid.content.Intent): number;
                    public updatePackage(param0: string, param1: string, param2: string, param3: string, param4: number, param5: boolean, param6: boolean): boolean;
                    public addPackage(param0: string, param1: string, param2: string, param3: string, param4: number, param5: boolean, param6: boolean): boolean;
                }
                export module IWapPushManager {
                    export abstract class Stub implements com.android.internal.telephony.IWapPushManager {
                        public static class: java.lang.Class<com.android.internal.telephony.IWapPushManager.Stub>;
                        public constructor();
                        public deletePackage(param0: string, param1: string, param2: string, param3: string): boolean;
                        public processMessage(param0: string, param1: string, param2: globalAndroid.content.Intent): number;
                        public addPackage(param0: string, param1: string, param2: string, param3: string, param4: number, param5: boolean, param6: boolean): boolean;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.telephony.IWapPushManager;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public updatePackage(param0: string, param1: string, param2: string, param3: string, param4: number, param5: boolean, param6: boolean): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.telephony.IWapPushManager {
                            public static class: java.lang.Class<com.android.internal.telephony.IWapPushManager.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public processMessage(param0: string, param1: string, param2: globalAndroid.content.Intent): number;
                            public deletePackage(param0: string, param1: string, param2: string, param3: string): boolean;
                            public addPackage(param0: string, param1: string, param2: string, param3: string, param4: number, param5: boolean, param6: boolean): boolean;
                            public updatePackage(param0: string, param1: string, param2: string, param3: string, param4: number, param5: boolean, param6: boolean): boolean;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class IccCardConstants extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.IccCardConstants>;
                    public static INTENT_KEY_ICC_STATE: string;
                    public static INTENT_KEY_LOCKED_REASON: string;
                    public static INTENT_VALUE_ABSENT_ON_PERM_DISABLED: string;
                    public static INTENT_VALUE_ICC_ABSENT: string;
                    public static INTENT_VALUE_ICC_CARD_IO_ERROR: string;
                    public static INTENT_VALUE_ICC_CARD_RESTRICTED: string;
                    public static INTENT_VALUE_ICC_IMSI: string;
                    public static INTENT_VALUE_ICC_INTERNAL_LOCKED: string;
                    public static INTENT_VALUE_ICC_LOADED: string;
                    public static INTENT_VALUE_ICC_LOCKED: string;
                    public static INTENT_VALUE_ICC_NOT_READY: string;
                    public static INTENT_VALUE_ICC_READY: string;
                    public static INTENT_VALUE_ICC_UNKNOWN: string;
                    public static INTENT_VALUE_LOCKED_NETWORK: string;
                    public static INTENT_VALUE_LOCKED_ON_PIN: string;
                    public static INTENT_VALUE_LOCKED_ON_PUK: string;
                    public constructor();
                }
                export module IccCardConstants {
                    export class State extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.telephony.IccCardConstants.State>;
                        public static ABSENT: com.android.internal.telephony.IccCardConstants.State;
                        public static CARD_IO_ERROR: com.android.internal.telephony.IccCardConstants.State;
                        public static CARD_RESTRICTED: com.android.internal.telephony.IccCardConstants.State;
                        public static NETWORK_LOCKED: com.android.internal.telephony.IccCardConstants.State;
                        public static NOT_READY: com.android.internal.telephony.IccCardConstants.State;
                        public static PERM_DISABLED: com.android.internal.telephony.IccCardConstants.State;
                        public static PIN_REQUIRED: com.android.internal.telephony.IccCardConstants.State;
                        public static PUK_REQUIRED: com.android.internal.telephony.IccCardConstants.State;
                        public static READY: com.android.internal.telephony.IccCardConstants.State;
                        public static UNKNOWN: com.android.internal.telephony.IccCardConstants.State;
                        public iccCardExist(): boolean;
                        public isPinLocked(): boolean;
                        public static intToState(param0: number): com.android.internal.telephony.IccCardConstants.State;
                        public static valueOf(param0: string): com.android.internal.telephony.IccCardConstants.State;
                        public static values(): com.android.internal.telephony.IccCardConstants.State[];
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class OperatorInfo extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.OperatorInfo>;
                    public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.telephony.OperatorInfo>;
                    public getOperatorAlphaShort(): string;
                    public constructor(param0: string, param1: string, param2: string, param3: string, param4: string);
                    public getState(): com.android.internal.telephony.OperatorInfo.State;
                    public getOperatorNumeric(): string;
                    public describeContents(): number;
                    public getRilRat(): string;
                    public constructor(param0: string, param1: string, param2: string, param3: com.android.internal.telephony.OperatorInfo.State, param4: com.android.internal.telephony.OperatorInfo.Rat);
                    public toString(): string;
                    public constructor(param0: string, param1: string, param2: string, param3: string);
                    public getRat(): com.android.internal.telephony.OperatorInfo.Rat;
                    public getOperatorAlphaLong(): string;
                    public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                    public constructor(param0: string, param1: string, param2: string, param3: com.android.internal.telephony.OperatorInfo.State);
                    public constructor(param0: string, param1: string, param2: string);
                }
                export module OperatorInfo {
                    export class Rat extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.telephony.OperatorInfo.Rat>;
                        public static GSM: com.android.internal.telephony.OperatorInfo.Rat;
                        public static LTE: com.android.internal.telephony.OperatorInfo.Rat;
                        public static LTE_WCDMA: com.android.internal.telephony.OperatorInfo.Rat;
                        public static TDSCDMA: com.android.internal.telephony.OperatorInfo.Rat;
                        public static UNDEFINED_OR_NO_CHANGE: com.android.internal.telephony.OperatorInfo.Rat;
                        public static WCDMA: com.android.internal.telephony.OperatorInfo.Rat;
                        public rilRat: string;
                        public static values(): com.android.internal.telephony.OperatorInfo.Rat[];
                        public static fromRatString(param0: string): com.android.internal.telephony.OperatorInfo.Rat;
                        public static valueOf(param0: string): com.android.internal.telephony.OperatorInfo.Rat;
                    }
                    export class State extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.telephony.OperatorInfo.State>;
                        public static AVAILABLE: com.android.internal.telephony.OperatorInfo.State;
                        public static CURRENT: com.android.internal.telephony.OperatorInfo.State;
                        public static FORBIDDEN: com.android.internal.telephony.OperatorInfo.State;
                        public static UNKNOWN: com.android.internal.telephony.OperatorInfo.State;
                        public static valueOf(param0: string): com.android.internal.telephony.OperatorInfo.State;
                        public static values(): com.android.internal.telephony.OperatorInfo.State[];
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class PhoneConstantConversions extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.PhoneConstantConversions>;
                    public static convertCallState(param0: number): com.android.internal.telephony.PhoneConstants.State;
                    public constructor();
                    public static convertDataState(param0: com.android.internal.telephony.PhoneConstants.DataState): number;
                    public static convertDataState(param0: number): com.android.internal.telephony.PhoneConstants.DataState;
                    public static convertCallState(param0: com.android.internal.telephony.PhoneConstants.State): number;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class PhoneConstants extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.PhoneConstants>;
                    public static ACTION_SUBSCRIPTION_PHONE_STATE_CHANGED: string;
                    public static APN_ALREADY_ACTIVE: number;
                    public static APN_ALREADY_INACTIVE: number;
                    public static APN_REQUEST_FAILED: number;
                    public static APN_REQUEST_STARTED: number;
                    public static APN_TYPES: string[];
                    public static APN_TYPE_ALL: string;
                    public static APN_TYPE_CBS: string;
                    public static APN_TYPE_DEFAULT: string;
                    public static APN_TYPE_DUN: string;
                    public static APN_TYPE_EMERGENCY: string;
                    public static APN_TYPE_FOTA: string;
                    public static APN_TYPE_HIPRI: string;
                    public static APN_TYPE_IA: string;
                    public static APN_TYPE_IMS: string;
                    public static APN_TYPE_MMS: string;
                    public static APN_TYPE_NOT_AVAILABLE: number;
                    public static APN_TYPE_SUPL: string;
                    public static APPTYPE_CSIM: number;
                    public static APPTYPE_ISIM: number;
                    public static APPTYPE_RUIM: number;
                    public static APPTYPE_SIM: number;
                    public static APPTYPE_UNKNOWN: number;
                    public static APPTYPE_USIM: number;
                    public static AUDIO_OUTPUT_DEFAULT: number;
                    public static AUDIO_OUTPUT_DISABLE_SPEAKER: number;
                    public static AUDIO_OUTPUT_ENABLE_SPEAKER: number;
                    public static AUTH_CONTEXT_EAP_AKA: number;
                    public static AUTH_CONTEXT_EAP_SIM: number;
                    public static AUTH_CONTEXT_UNDEFINED: number;
                    public static CAPABILITY_3G: number;
                    public static CELL_OFF_DUE_TO_AIRPLANE_MODE_FLAG: number;
                    public static CELL_OFF_FLAG: number;
                    public static CELL_ON_FLAG: number;
                    public static DATA_APN_KEY: string;
                    public static DATA_APN_TYPE_KEY: string;
                    public static DATA_FAILURE_CAUSE_KEY: string;
                    public static DATA_IFACE_NAME_KEY: string;
                    public static DATA_LINK_PROPERTIES_KEY: string;
                    public static DATA_NETWORK_CAPABILITIES_KEY: string;
                    public static DATA_NETWORK_ROAMING_KEY: string;
                    public static DATA_NETWORK_TYPE_KEY: string;
                    public static DEFAULT_CARD_INDEX: number;
                    public static FAILURE_REASON_KEY: string;
                    public static LTE_ON_CDMA_FALSE: number;
                    public static LTE_ON_CDMA_TRUE: number;
                    public static LTE_ON_CDMA_UNKNOWN: number;
                    public static MAX_PHONE_COUNT_DUAL_SIM: number;
                    public static MAX_PHONE_COUNT_SINGLE_SIM: number;
                    public static MAX_PHONE_COUNT_TRI_SIM: number;
                    public static NETWORK_UNAVAILABLE_KEY: string;
                    public static PHONE_IN_ECM_STATE: string;
                    public static PHONE_IN_EMERGENCY_CALL: string;
                    public static PHONE_KEY: string;
                    public static PHONE_NAME_KEY: string;
                    public static PHONE_TYPE_CDMA: number;
                    public static PHONE_TYPE_CDMA_LTE: number;
                    public static PHONE_TYPE_GSM: number;
                    public static PHONE_TYPE_IMS: number;
                    public static PHONE_TYPE_KEY: string;
                    public static PHONE_TYPE_NONE: number;
                    public static PHONE_TYPE_SIP: number;
                    public static PHONE_TYPE_THIRD_PARTY: number;
                    public static PIN_GENERAL_FAILURE: number;
                    public static PIN_PASSWORD_INCORRECT: number;
                    public static PIN_RESULT_SUCCESS: number;
                    public static PRESENTATION_ALLOWED: number;
                    public static PRESENTATION_PAYPHONE: number;
                    public static PRESENTATION_RESTRICTED: number;
                    public static PRESENTATION_UNKNOWN: number;
                    public static REASON_LINK_PROPERTIES_CHANGED: string;
                    public static RIL_CARD_MAX_APPS: number;
                    public static SIM_ACTIVATION_TYPE_DATA: number;
                    public static SIM_ACTIVATION_TYPE_VOICE: number;
                    public static SIM_ID_1: number;
                    public static SIM_ID_2: number;
                    public static SIM_ID_3: number;
                    public static SIM_ID_4: number;
                    public static SLOT_KEY: string;
                    public static STATE_CHANGE_REASON_KEY: string;
                    public static STATE_KEY: string;
                    public static SUB1: number;
                    public static SUB2: number;
                    public static SUB3: number;
                    public static SUBSCRIPTION_KEY: string;
                    public static SUB_SETTING: string;
                    public static UNSET_MTU: number;
                    public constructor();
                }
                export module PhoneConstants {
                    export class CardUnavailableReason extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.telephony.PhoneConstants.CardUnavailableReason>;
                        public static REASON_CARD_REMOVED: com.android.internal.telephony.PhoneConstants.CardUnavailableReason;
                        public static REASON_RADIO_UNAVAILABLE: com.android.internal.telephony.PhoneConstants.CardUnavailableReason;
                        public static REASON_SIM_REFRESH_RESET: com.android.internal.telephony.PhoneConstants.CardUnavailableReason;
                        public static valueOf(param0: string): com.android.internal.telephony.PhoneConstants.CardUnavailableReason;
                        public static values(): com.android.internal.telephony.PhoneConstants.CardUnavailableReason[];
                    }
                    export class DataState extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.telephony.PhoneConstants.DataState>;
                        public static CONNECTED: com.android.internal.telephony.PhoneConstants.DataState;
                        public static CONNECTING: com.android.internal.telephony.PhoneConstants.DataState;
                        public static DISCONNECTED: com.android.internal.telephony.PhoneConstants.DataState;
                        public static SUSPENDED: com.android.internal.telephony.PhoneConstants.DataState;
                        public static values(): com.android.internal.telephony.PhoneConstants.DataState[];
                        public static valueOf(param0: string): com.android.internal.telephony.PhoneConstants.DataState;
                    }
                    export class State extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.telephony.PhoneConstants.State>;
                        public static IDLE: com.android.internal.telephony.PhoneConstants.State;
                        public static OFFHOOK: com.android.internal.telephony.PhoneConstants.State;
                        public static RINGING: com.android.internal.telephony.PhoneConstants.State;
                        public static valueOf(param0: string): com.android.internal.telephony.PhoneConstants.State;
                        public static values(): com.android.internal.telephony.PhoneConstants.State[];
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class RILConstants extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.RILConstants>;
                    /**
                     * Constructs a new instance of the com.android.internal.telephony.RILConstants interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        <clinit>(): void;
                    });
                    public constructor();
                    public static RIL_REQUEST_GET_SMSC_ADDRESS: number;
                    public static RIL_REQUEST_QUERY_AVAILABLE_NETWORKS: number;
                    public static RIL_RESTRICTED_STATE_NONE: number;
                    public static RIL_RESPONSE_ACKNOWLEDGEMENT: number;
                    public static RIL_REQUEST_CDMA_SEND_SMS: number;
                    public static RIL_REQUEST_DELETE_SMS_ON_SIM: number;
                    public static NV_CONFIG_RELOAD_RESET: number;
                    public static RIL_UNSOL_CDMA_CALL_WAITING: number;
                    public static RIL_UNSOL_MODEM_RESTART: number;
                    public static RIL_UNSOL_PCO_DATA: number;
                    public static RIL_UNSOL_DATA_CALL_LIST_CHANGED: number;
                    public static RIL_REQUEST_GSM_SET_BROADCAST_CONFIG: number;
                    public static RIL_REQUEST_SMS_ACKNOWLEDGE: number;
                    public static RIL_REQUEST_ISIM_AUTHENTICATION: number;
                    public static RIL_RESTRICTED_STATE_CS_EMERGENCY: number;
                    public static RIL_UNSOL_STK_CC_ALPHA_NOTIFY: number;
                    public static RIL_REQUEST_BASEBAND_VERSION: number;
                    public static RIL_REQUEST_SEND_SMS_EXPECT_MORE: number;
                    public static NETWORK_MODE_TDSCDMA_GSM_WCDMA: number;
                    public static SETUP_DATA_AUTH_NONE: number;
                    public static RIL_REQUEST_SHUTDOWN: number;
                    public static RIL_REQUEST_CDMA_WRITE_SMS_TO_RUIM: number;
                    public static RIL_REQUEST_CDMA_SET_SUBSCRIPTION_SOURCE: number;
                    public static RIL_REQUEST_QUERY_NETWORK_SELECTION_MODE: number;
                    public static PASSWORD_INCORRECT: number;
                    public static RIL_REQUEST_ENTER_SIM_PUK2: number;
                    public static RIL_REQUEST_CDMA_DELETE_SMS_ON_RUIM: number;
                    public static SIM_SAP_CONNECT_FAILURE: number;
                    public static DIAL_MODIFIED_TO_DIAL: number;
                    public static CDMA_CELL_BROADCAST_SMS_ENABLED: number;
                    public static RIL_REQUEST_CDMA_QUERY_PREFERRED_VOICE_PRIVACY_MODE: number;
                    public static RIL_UNSOL_RINGBACK_TONE: number;
                    public static RIL_REQUEST_IMS_SEND_SMS: number;
                    public static REQUEST_RATE_LIMITED: number;
                    public static RIL_UNSOL_UICC_SUBSCRIPTION_STATUS_CHANGED: number;
                    public static DATA_PROFILE_CBS: number;
                    public static DEACTIVATE_REASON_NONE: number;
                    public static SUCCESS: number;
                    public static DIAL_MODIFIED_TO_USSD: number;
                    public static INVALID_CALL_ID: number;
                    public static RIL_REQUEST_EXIT_EMERGENCY_CALLBACK_MODE: number;
                    public static RIL_REQUEST_UDUB: number;
                    public static NO_SUCH_ENTRY: number;
                    public static SYSTEM_ERR: number;
                    public static BAND_MODE_10_800M_2: number;
                    public static RIL_UNSOL_SOMC_HOOK_RAW: number;
                    public static SIM_SAP_MSG_SIZE_TOO_SMALL: number;
                    public static INVALID_STATE: number;
                    public static RIL_REQUEST_SET_SUPP_SVC_NOTIFICATION: number;
                    public static RIL_REQUEST_GET_RADIO_CAPABILITY: number;
                    public static SIP_PHONE: number;
                    public static NETWORK_MODE_TDSCDMA_CDMA_EVDO_GSM_WCDMA: number;
                    public static NETWORK_MODE_LTE_TDSCDMA: number;
                    public static RIL_REQUEST_REPORT_STK_SERVICE_IS_RUNNING: number;
                    public static LTE_ON_CDMA_TRUE: number;
                    public static RIL_REQUEST_DIAL: number;
                    public static RIL_REQUEST_GET_IMEI: number;
                    public static RIL_UNSOL_CALL_RING: number;
                    public static RIL_REQUEST_OEM_HOOK_STRINGS: number;
                    public static SETUP_DATA_AUTH_CHAP: number;
                    public static RIL_REQUEST_GET_NEIGHBORING_CELL_IDS: number;
                    public static RIL_UNSOL_HARDWARE_CONFIG_CHANGED: number;
                    public static RIL_REQUEST_SIM_QUERY_ATR: number;
                    public static EMPTY_RECORD: number;
                    public static RIL_ERRNO_INVALID_RESPONSE: number;
                    public static RIL_REQUEST_STK_SEND_ENVELOPE_COMMAND: number;
                    public static BAND_MODE_UNSPECIFIED: number;
                    public static NETWORK_MODE_GSM_UMTS: number;
                    public static SIM_ERR: number;
                    public static BAND_MODE_IMT2000: number;
                    public static RIL_UNSOL_RESPONSE_RADIO_STATE_CHANGED: number;
                    public static CDM_TTY_FULL_MODE: number;
                    public static RIL_REQUEST_GET_IMEISV: number;
                    public static RIL_REQUEST_ENTER_NETWORK_DEPERSONALIZATION: number;
                    public static RIL_UNSOL_RESPONSE_NEW_SMS_STATUS_REPORT: number;
                    public static THIRD_PARTY_PHONE: number;
                    public static NETWORK_MODE_LTE_CDMA_EVDO: number;
                    public static BAND_MODE_8_1800M: number;
                    public static RIL_REQUEST_CDMA_SET_ROAMING_PREFERENCE: number;
                    public static RIL_REQUEST_SET_FACILITY_LOCK: number;
                    public static RIL_REQUEST_SET_TTY_MODE: number;
                    public static RIL_REQUEST_SET_PREFERRED_NETWORK_TYPE: number;
                    public static RIL_REQUEST_SET_INITIAL_ATTACH_APN: number;
                    public static LCE_NOT_AVAILABLE: number;
                    public static NETWORK_MODE_WCDMA_PREF: number;
                    public static USSD_MODIFIED_TO_DIAL: number;
                    public static RIL_UNSOL_ON_SS: number;
                    public static USSD_MODIFIED_TO_USSD: number;
                    public static ABORTED: number;
                    public static RIL_REQUEST_PULL_LCEDATA: number;
                    public static RIL_REQUEST_SET_SIM_CARD_POWER: number;
                    public static RIL_REQUEST_SET_UICC_SUBSCRIPTION: number;
                    public static RIL_REQUEST_SOMC_HOOK_RAW: number;
                    public static DATA_PROFILE_DEFAULT: number;
                    public static RIL_REQUEST_QUERY_FACILITY_LOCK: number;
                    public static NETWORK_MODE_TDSCDMA_WCDMA: number;
                    public static BAND_MODE_9_900M: number;
                    public static RIL_UNSOL_RESPONSE_BASE: number;
                    public static RIL_REQUEST_NV_READ_ITEM: number;
                    public static OP_NOT_ALLOWED_DURING_VOICE_CALL: number;
                    public static OEM_ERROR_25: number;
                    public static RIL_UNSOL_ON_USSD_REQUEST: number;
                    public static OEM_ERROR_23: number;
                    public static RIL_REQUEST_SET_NETWORK_SELECTION_AUTOMATIC: number;
                    public static RIL_UNSOL_RADIO_CAPABILITY: number;
                    public static LCE_NOT_SUPPORTED: number;
                    public static OEM_ERROR_24: number;
                    public static ILLEGAL_SIM_OR_ME: number;
                    public static GENERIC_FAILURE: number;
                    public static RIL_UNSOL_RESPONSE_CALL_STATE_CHANGED: number;
                    public static CDMA_LTE_PHONE: number;
                    public static SMS_SEND_FAIL_RETRY: number;
                    public static SS_MODIFIED_TO_SS: number;
                    public static RIL_REQUEST_CDMA_VALIDATE_AND_WRITE_AKEY: number;
                    public static RIL_REQUEST_OPERATOR: number;
                    public static RIL_REQUEST_WRITE_SMS_TO_SIM: number;
                    public static SIM_ALREADY_POWERED_ON: number;
                    public static BAND_MODE_KOREA_PCS: number;
                    public static RIL_REQUEST_GET_SIM_STATUS: number;
                    public static DEVICE_IN_USE: number;
                    public static NO_RESOURCES: number;
                    public static BAND_MODE_JTACS: number;
                    public static RIL_UNSOL_SIM_SMS_STORAGE_FULL: number;
                    public static RIL_REQUEST_DEACTIVATE_DATA_CALL: number;
                    public static RIL_REQUEST_STK_HANDLE_CALL_SETUP_REQUESTED_FROM_SIM: number;
                    public static RIL_REQUEST_HANGUP_FOREGROUND_RESUME_BACKGROUND: number;
                    public static RIL_REQUEST_QUERY_CALL_WAITING: number;
                    public static RIL_REQUEST_RADIO_POWER: number;
                    public static RIL_REQUEST_SCREEN_STATE: number;
                    public static SIM_BUSY: number;
                    public static SIM_PUK2: number;
                    public static RIL_REQUEST_STK_SEND_TERMINAL_RESPONSE: number;
                    public static RIL_UNSOL_RESPONSE_IMS_NETWORK_STATE_CHANGED: number;
                    public static MODEM_ERR: number;
                    public static RIL_UNSOL_SRVCC_STATE_NOTIFY: number;
                    public static RIL_UNSOL_RESPONSE_CDMA_NEW_SMS: number;
                    public static RIL_REQUEST_CDMA_GET_SUBSCRIPTION_SOURCE: number;
                    public static RIL_REQUEST_CDMA_SUBSCRIPTION: number;
                    public static NO_SUCH_ELEMENT: number;
                    public static NETWORK_MODE_GSM_ONLY: number;
                    public static BAND_MODE_AUS: number;
                    public static CDM_TTY_MODE_ENABLED: number;
                    public static RIL_REQUEST_GET_CURRENT_CALLS: number;
                    public static RIL_REQUEST_SET_DC_RT_INFO_RATE: number;
                    public static BAND_MODE_EURO_PAMR_400M: number;
                    public static LTE_ON_CDMA_FALSE: number;
                    public static USSD_MODIFIED_TO_SS: number;
                    public static CDMA_CELL_BROADCAST_SMS_DISABLED: number;
                    public static RIL_REQUEST_CDMA_SMS_ACKNOWLEDGE: number;
                    public static RIL_REQUEST_CONFERENCE: number;
                    public static NETWORK_MODE_LTE_ONLY: number;
                    public static LCE_STOPPED: number;
                    public static PREFERRED_NETWORK_MODE: number;
                    public static RIL_UNSOL_STK_EVENT_NOTIFY: number;
                    public static RIL_REQUEST_GET_CLIR: number;
                    public static RIL_REQUEST_GET_ALLOWED_CARRIERS: number;
                    public static RIL_UNSOL_STK_SESSION_END: number;
                    public static SETUP_DATA_TECH_CDMA: number;
                    public static GSM_PHONE: number;
                    public static RIL_UNSOL_SIGNAL_STRENGTH: number;
                    public static RIL_REQUEST_IMS_REGISTRATION_STATE: number;
                    public static RIL_REQUEST_ACKNOWLEDGE_INCOMING_GSM_SMS_WITH_PDU: number;
                    public static CDM_TTY_HCO_MODE: number;
                    public static RIL_REQUEST_GSM_GET_BROADCAST_CONFIG: number;
                    public static RIL_REQUEST_HANGUP_WAITING_OR_BACKGROUND: number;
                    public static RIL_REQUEST_SET_ALLOWED_CARRIERS: number;
                    public static NETWORK_MODE_EVDO_NO_CDMA: number;
                    public static NETWORK_MODE_WCDMA_ONLY: number;
                    public static RIL_REQUEST_QUERY_CLIP: number;
                    public static BAND_MODE_PCS: number;
                    public static RIL_REQUEST_HANGUP: number;
                    public static RIL_REQUEST_NV_RESET_CONFIG: number;
                    public static RIL_REQUEST_GET_CELL_INFO_LIST: number;
                    public static RIL_REQUEST_SIM_TRANSMIT_APDU_BASIC: number;
                    public static RIL_REQUEST_SET_CALL_FORWARD: number;
                    public static NETWORK_MODE_CDMA: number;
                    public static OEM_ERROR_9: number;
                    public static BAND_MODE_USA_2500M: number;
                    public static OEM_ERROR_7: number;
                    public static RIL_REQUEST_DTMF_STOP: number;
                    public static OEM_ERROR_8: number;
                    public static RIL_UNSOL_ENTER_EMERGENCY_CALLBACK_MODE: number;
                    public static OEM_ERROR_5: number;
                    public static OEM_ERROR_6: number;
                    public static OEM_ERROR_3: number;
                    public static OEM_ERROR_4: number;
                    public static DEACTIVATE_REASON_RADIO_OFF: number;
                    public static OEM_ERROR_1: number;
                    public static NETWORK_MODE_LTE_GSM_WCDMA: number;
                    public static OEM_ERROR_2: number;
                    public static RIL_UNSOL_SIM_REFRESH: number;
                    public static RIL_REQUEST_CDMA_QUERY_ROAMING_PREFERENCE: number;
                    public static RIL_REQUEST_DTMF: number;
                    public static RIL_REQUEST_SET_MUTE: number;
                    public static SETUP_DATA_AUTH_PAP: number;
                    public static SETUP_DATA_TECH_GSM: number;
                    public static BAND_MODE_AWS: number;
                    public static SS_MODIFIED_TO_DIAL: number;
                    public static RIL_RESTRICTED_STATE_CS_ALL: number;
                    public static RIL_UNSOL_STK_PROACTIVE_COMMAND: number;
                    public static RIL_REQUEST_CDMA_BROADCAST_ACTIVATION: number;
                    public static RIL_REQUEST_SET_NETWORK_SELECTION_MANUAL: number;
                    public static SUBSCRIPTION_NOT_AVAILABLE: number;
                    public static SS_MODIFIED_TO_USSD: number;
                    public static RIL_REQUEST_SEND_DEVICE_STATE: number;
                    public static NETWORK_MODE_LTE_CDMA_EVDO_GSM_WCDMA: number;
                    public static NETWORK_MODE_TDSCDMA_ONLY: number;
                    public static CDM_TTY_VCO_MODE: number;
                    public static RIL_REQUEST_REPORT_SMS_MEMORY_STATUS: number;
                    public static RIL_REQUEST_GET_MUTE: number;
                    public static RIL_REQUEST_SET_RADIO_CAPABILITY: number;
                    public static RIL_UNSOL_RESPONSE_NETWORK_STATE_CHANGED: number;
                    public static RIL_REQUEST_SIGNAL_STRENGTH: number;
                    public static RIL_UNSOL_OEM_HOOK_RAW: number;
                    public static RIL_REQUEST_SET_SMSC_ADDRESS: number;
                    public static RIL_REQUEST_QUERY_TTY_MODE: number;
                    public static RIL_REQUEST_VOICE_RADIO_TECH: number;
                    public static RIL_REQUEST_SET_UNSOLICITED_RESPONSE_FILTER: number;
                    public static RIL_REQUEST_QUERY_CALL_FORWARD_STATUS: number;
                    public static RIL_REQUEST_SEND_USSD: number;
                    public static RIL_REQUEST_STK_GET_PROFILE: number;
                    public static RIL_REQUEST_CDMA_BURST_DTMF: number;
                    public static RIL_REQUEST_CDMA_FLASH: number;
                    public static REQUEST_NOT_SUPPORTED: number;
                    public static RIL_REQUEST_OEM_HOOK_RAW: number;
                    public static RIL_REQUEST_SEPARATE_CONNECTION: number;
                    public static CDMA_PHONE: number;
                    public static FDN_CHECK_FAILURE: number;
                    public static SIM_FULL: number;
                    public static INVALID_SIM_STATE: number;
                    public static RIL_REQUEST_NV_WRITE_CDMA_PRL: number;
                    public static RIL_REQUEST_SIM_IO: number;
                    public static NETWORK_MODE_CDMA_NO_EVDO: number;
                    public static RIL_REQUEST_ANSWER: number;
                    public static RIL_REQUEST_CANCEL_USSD: number;
                    public static RIL_REQUEST_ALLOW_DATA: number;
                    public static RIL_REQUEST_RESET_RADIO: number;
                    public static RIL_REQUEST_STOP_LCE: number;
                    public static DEACTIVATE_REASON_PDP_RESET: number;
                    public static RIL_REQUEST_NV_WRITE_ITEM: number;
                    public static RADIO_NOT_AVAILABLE: number;
                    public static RIL_UNSOL_CDMA_SUBSCRIPTION_SOURCE_CHANGED: number;
                    public static RIL_UNSOL_RESPONSE_NEW_SMS: number;
                    public static RIL_UNSOL_LCEDATA_RECV: number;
                    public static OPERATION_NOT_ALLOWED: number;
                    public static NETWORK_MODE_TDSCDMA_GSM: number;
                    public static DATA_PROFILE_OEM_BASE: number;
                    public static NO_PHONE: number;
                    public static RIL_REQUEST_STK_SEND_ENVELOPE_WITH_STATUS: number;
                    public static RIL_REQUEST_SET_DATA_PROFILE: number;
                    public static BAND_MODE_5_450M: number;
                    public static REQUEST_CANCELLED: number;
                    public static OEM_ERROR_10: number;
                    public static OEM_ERROR_11: number;
                    public static RIL_REQUEST_DATA_REGISTRATION_STATE: number;
                    public static RIL_REQUEST_GET_HARDWARE_CONFIG: number;
                    public static MODE_NOT_SUPPORTED: number;
                    public static OEM_ERROR_18: number;
                    public static OEM_ERROR_19: number;
                    public static OEM_ERROR_16: number;
                    public static RIL_RESTRICTED_STATE_PS_ALL: number;
                    public static OEM_ERROR_17: number;
                    public static LCE_ACTIVE: number;
                    public static NETWORK_MODE_LTE_WCDMA: number;
                    public static OEM_ERROR_14: number;
                    public static DATA_PROFILE_INVALID: number;
                    public static OEM_ERROR_15: number;
                    public static NETWORK_ERR: number;
                    public static OEM_ERROR_12: number;
                    public static OEM_ERROR_13: number;
                    public static NO_MEMORY: number;
                    public static LTE_ON_CDMA_UNKNOWN: number;
                    public static OP_NOT_ALLOWED_BEFORE_REG_NW: number;
                    public static RIL_REQUEST_DTMF_START: number;
                    public static RIL_REQUEST_SIM_AUTHENTICATION: number;
                    public static RIL_REQUEST_CDMA_SET_PREFERRED_VOICE_PRIVACY_MODE: number;
                    public static RIL_REQUEST_ENTER_SIM_PIN2: number;
                    public static RIL_UNSOL_CDMA_OTA_PROVISION_STATUS: number;
                    public static SETUP_DATA_PROTOCOL_IPV6: string;
                    public static INVALID_SMS_FORMAT: number;
                    public static NV_CONFIG_FACTORY_RESET: number;
                    public static RIL_REQUEST_CHANGE_SIM_PIN2: number;
                    public static RIL_REQUEST_DEVICE_IDENTITY: number;
                    public static SETUP_DATA_AUTH_PAP_CHAP: number;
                    public static RIL_UNSOL_STK_CALL_SETUP: number;
                    public static NETWORK_REJECT: number;
                    public static OEM_ERROR_21: number;
                    public static RIL_REQUEST_ENTER_SIM_PIN: number;
                    public static NETWORK_MODE_LTE_TDSCDMA_GSM: number;
                    public static OEM_ERROR_22: number;
                    public static RIL_UNSOL_RESPONSE_SIM_STATUS_CHANGED: number;
                    public static INVALID_MODEM_STATE: number;
                    public static OEM_ERROR_20: number;
                    public static RIL_UNSOl_CDMA_PRL_CHANGED: number;
                    public static RIL_REQUEST_SEND_SMS: number;
                    public static IMS_PHONE: number;
                    public static RIL_REQUEST_STK_SET_PROFILE: number;
                    public static NETWORK_MODE_LTE_TDSCDMA_GSM_WCDMA: number;
                    public static RIL_UNSOL_CDMA_RUIM_SMS_STORAGE_FULL: number;
                    public static DIAL_MODIFIED_TO_SS: number;
                    public static RIL_REQUEST_SWITCH_WAITING_OR_HOLDING_AND_ACTIVE: number;
                    public static RIL_UNSOL_RESTRICTED_STATE_CHANGED: number;
                    public static RIL_REQUEST_CHANGE_SIM_PIN: number;
                    public static RIL_REQUEST_ENTER_SIM_PUK: number;
                    public static RIL_UNSOL_SUPP_SVC_NOTIFICATION: number;
                    public static RIL_UNSOL_NITZ_TIME_RECEIVED: number;
                    public static RIL_UNSOL_DC_RT_INFO_CHANGED: number;
                    public static BAND_MODE_USA: number;
                    public static RIL_RESTRICTED_STATE_CS_NORMAL: number;
                    public static RIL_REQUEST_SET_LOCATION_UPDATES: number;
                    public static ENCODING_ERR: number;
                    public static BAND_MODE_7_700M_2: number;
                    public static RIL_REQUEST_LAST_DATA_CALL_FAIL_CAUSE: number;
                    public static NETWORK_MODE_GLOBAL: number;
                    public static SIM_DATA_NOT_AVAILABLE: number;
                    public static SIM_SAP_CONNECT_OK_CALL_ONGOING: number;
                    public static SETUP_DATA_PROTOCOL_IP: string;
                    public static RIL_REQUEST_DATA_CALL_LIST: number;
                    public static SIM_ALREADY_POWERED_OFF: number;
                    public static RIL_REQUEST_GET_ACTIVITY_INFO: number;
                    public static DATA_PROFILE_TETHERED: number;
                    public static RIL_REQUEST_SET_UNSOL_CELL_INFO_LIST_RATE: number;
                    public static NO_NETWORK_FOUND: number;
                    public static NOT_PROVISIONED: number;
                    public static NO_SMS_TO_ACK: number;
                    public static RIL_UNSOL_CDMA_INFO_REC: number;
                    public static RIL_REQUEST_GET_PREFERRED_NETWORK_TYPE: number;
                    public static RIL_REQUEST_GET_DC_RT_INFO: number;
                    public static SIM_ABSENT: number;
                    public static INVALID_ARGUMENTS: number;
                    public static NV_CONFIG_ERASE_RESET: number;
                    public static SIM_PIN2: number;
                    public static NETWORK_MODE_LTE_TDSCDMA_WCDMA: number;
                    public static RIL_REQUEST_START_LCE: number;
                    public static SETUP_DATA_PROTOCOL_IPV4V6: string;
                    public static RIL_UNSOL_EXIT_EMERGENCY_CALLBACK_MODE: number;
                    public static DATA_PROFILE_IMS: number;
                    public static INVALID_SMSC_ADDRESS: number;
                    public static NETWORK_MODE_LTE_TDSCDMA_CDMA_EVDO_GSM_WCDMA: number;
                    public static RIL_REQUEST_CDMA_SET_BROADCAST_CONFIG: number;
                    public static RIL_UNSOL_VOICE_RADIO_TECH_CHANGED: number;
                    public static RIL_REQUEST_VOICE_REGISTRATION_STATE: number;
                    public static DATA_PROFILE_FOTA: number;
                    public static RIL_REQUEST_GSM_BROADCAST_ACTIVATION: number;
                    public static RIL_REQUEST_SIM_CLOSE_CHANNEL: number;
                    public static BAND_MODE_AUS_2: number;
                    public static BAND_MODE_EURO: number;
                    public static RIL_REQUEST_SETUP_DATA_CALL: number;
                    public static RIL_UNSOL_RESPONSE_NEW_SMS_ON_SIM: number;
                    public static RIL_REQUEST_SET_CLIR: number;
                    public static RIL_REQUEST_EXPLICIT_CALL_TRANSFER: number;
                    public static BAND_MODE_CELL_800: number;
                    public static RIL_REQUEST_SIM_OPEN_CHANNEL: number;
                    public static RIL_UNSOL_RESPONSE_NEW_BROADCAST_SMS: number;
                    public static SUBSCRIPTION_NOT_SUPPORTED: number;
                    public static INTERNAL_ERR: number;
                    public static RIL_UNSOL_RESEND_INCALL_MUTE: number;
                    public static NETWORK_NOT_READY: number;
                    public static RIL_REQUEST_CDMA_GET_BROADCAST_CONFIG: number;
                    public static RIL_REQUEST_QUERY_AVAILABLE_BAND_MODE: number;
                    public static RIL_UNSOL_RIL_CONNECTED: number;
                    public static RIL_REQUEST_CHANGE_BARRING_PASSWORD: number;
                    public static RIL_REQUEST_SIM_TRANSMIT_APDU_CHANNEL: number;
                    public static SIM_SAP_MSG_SIZE_TOO_LARGE: number;
                    public static RIL_REQUEST_SET_CALL_WAITING: number;
                    public static MISSING_RESOURCE: number;
                    public static NO_SUBSCRIPTION: number;
                    public static RIL_REQUEST_LAST_CALL_FAIL_CAUSE: number;
                    public static CDM_TTY_MODE_DISABLED: number;
                    public static RIL_UNSOL_ON_USSD: number;
                    public static RIL_REQUEST_SET_BAND_MODE: number;
                    public static BAND_MODE_JPN: number;
                    public static RIL_UNSOL_CELL_INFO_LIST: number;
                    public static RIL_REQUEST_GET_IMSI: number;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class Sms7BitEncodingTranslator extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.Sms7BitEncodingTranslator>;
                    public constructor();
                    public static translate(param0: string): string;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export abstract class SmsAddress {
                    public static class: java.lang.Class<com.android.internal.telephony.SmsAddress>;
                    public static TON_ABBREVIATED: number;
                    public static TON_ALPHANUMERIC: number;
                    public static TON_INTERNATIONAL: number;
                    public static TON_NATIONAL: number;
                    public static TON_NETWORK: number;
                    public static TON_SUBSCRIBER: number;
                    public static TON_UNKNOWN: number;
                    public address: string;
                    public origBytes: number[];
                    public ton: number;
                    public getAddressString(): string;
                    public isNetworkSpecific(): boolean;
                    public constructor();
                    public isAlphanumeric(): boolean;
                    public couldBeEmailGateway(): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class SmsApplication extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.SmsApplication>;
                    public static getDefaultRespondViaMessageApplication(param0: globalAndroid.content.Context, param1: boolean): globalAndroid.content.ComponentName;
                    public static getApplicationCollection(param0: globalAndroid.content.Context): java.util.Collection<com.android.internal.telephony.SmsApplication.SmsApplicationData>;
                    public static initSmsPackageMonitor(param0: globalAndroid.content.Context): void;
                    public static setDefaultApplication(param0: string, param1: globalAndroid.content.Context): void;
                    public static shouldWriteMessageForPackage(param0: string, param1: globalAndroid.content.Context): boolean;
                    public static getDefaultSimFullApplication(param0: globalAndroid.content.Context, param1: boolean): globalAndroid.content.ComponentName;
                    public static getDefaultSendToApplication(param0: globalAndroid.content.Context, param1: boolean): globalAndroid.content.ComponentName;
                    public static getSmsApplicationData(param0: string, param1: globalAndroid.content.Context): com.android.internal.telephony.SmsApplication.SmsApplicationData;
                    public static isDefaultSmsApplication(param0: globalAndroid.content.Context, param1: string): boolean;
                    public constructor();
                    public static getDefaultSmsApplication(param0: globalAndroid.content.Context, param1: boolean): globalAndroid.content.ComponentName;
                    public static getDefaultMmsApplication(param0: globalAndroid.content.Context, param1: boolean): globalAndroid.content.ComponentName;
                    public static getDefaultExternalTelephonyProviderChangedApplication(param0: globalAndroid.content.Context, param1: boolean): globalAndroid.content.ComponentName;
                }
                export module SmsApplication {
                    export class SmsApplicationData extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.telephony.SmsApplication.SmsApplicationData>;
                        public mPackageName: string;
                        public constructor(param0: string, param1: number);
                        public getApplicationName(param0: globalAndroid.content.Context): string;
                        public isComplete(): boolean;
                        public toString(): string;
                    }
                    export class SmsPackageMonitor extends com.android.internal.content.PackageMonitor {
                        public static class: java.lang.Class<com.android.internal.telephony.SmsApplication.SmsPackageMonitor>;
                        public constructor();
                        public constructor(param0: globalAndroid.content.Context);
                        public onPackageDisappeared(param0: string, param1: number): void;
                        public onPackageModified(param0: string): void;
                        public onPackageAppeared(param0: string, param1: number): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class SmsAuthorizationRequest extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.SmsAuthorizationRequest>;
                    public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.telephony.SmsAuthorizationRequest>;
                    public destinationAddress: string;
                    public message: string;
                    public packageName: string;
                    public constructor(param0: globalAndroid.os.Parcel);
                    public constructor(param0: com.android.internal.telephony.ISmsSecurityService, param1: globalAndroid.os.IBinder, param2: string, param3: string, param4: string);
                    public toString(): string;
                    public getToken(): globalAndroid.os.IBinder;
                    public describeContents(): number;
                    public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                    public accept(): void;
                    public reject(): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class SmsConstants extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.SmsConstants>;
                    public static ENCODING_16BIT: number;
                    public static ENCODING_7BIT: number;
                    public static ENCODING_8BIT: number;
                    public static ENCODING_KSC5601: number;
                    public static ENCODING_UNKNOWN: number;
                    public static FORMAT_3GPP: string;
                    public static FORMAT_3GPP2: string;
                    public static FORMAT_UNKNOWN: string;
                    public static MAX_USER_DATA_BYTES: number;
                    public static MAX_USER_DATA_BYTES_WITH_HEADER: number;
                    public static MAX_USER_DATA_SEPTETS: number;
                    public static MAX_USER_DATA_SEPTETS_WITH_HEADER: number;
                    public constructor();
                }
                export module SmsConstants {
                    export class MessageClass extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.telephony.SmsConstants.MessageClass>;
                        public static CLASS_0: com.android.internal.telephony.SmsConstants.MessageClass;
                        public static CLASS_1: com.android.internal.telephony.SmsConstants.MessageClass;
                        public static CLASS_2: com.android.internal.telephony.SmsConstants.MessageClass;
                        public static CLASS_3: com.android.internal.telephony.SmsConstants.MessageClass;
                        public static UNKNOWN: com.android.internal.telephony.SmsConstants.MessageClass;
                        public static valueOf(param0: string): com.android.internal.telephony.SmsConstants.MessageClass;
                        public static values(): com.android.internal.telephony.SmsConstants.MessageClass[];
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class SmsHeader extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.SmsHeader>;
                    public static ELT_ID_APPLICATION_PORT_ADDRESSING_16_BIT: number;
                    public static ELT_ID_APPLICATION_PORT_ADDRESSING_8_BIT: number;
                    public static ELT_ID_CHARACTER_SIZE_WVG_OBJECT: number;
                    public static ELT_ID_COMPRESSION_CONTROL: number;
                    public static ELT_ID_CONCATENATED_16_BIT_REFERENCE: number;
                    public static ELT_ID_CONCATENATED_8_BIT_REFERENCE: number;
                    public static ELT_ID_ENHANCED_VOICE_MAIL_INFORMATION: number;
                    public static ELT_ID_EXTENDED_OBJECT: number;
                    public static ELT_ID_EXTENDED_OBJECT_DATA_REQUEST_CMD: number;
                    public static ELT_ID_HYPERLINK_FORMAT_ELEMENT: number;
                    public static ELT_ID_LARGE_ANIMATION: number;
                    public static ELT_ID_LARGE_PICTURE: number;
                    public static ELT_ID_NATIONAL_LANGUAGE_LOCKING_SHIFT: number;
                    public static ELT_ID_NATIONAL_LANGUAGE_SINGLE_SHIFT: number;
                    public static ELT_ID_OBJECT_DISTR_INDICATOR: number;
                    public static ELT_ID_PREDEFINED_ANIMATION: number;
                    public static ELT_ID_PREDEFINED_SOUND: number;
                    public static ELT_ID_REPLY_ADDRESS_ELEMENT: number;
                    public static ELT_ID_REUSED_EXTENDED_OBJECT: number;
                    public static ELT_ID_RFC_822_EMAIL_HEADER: number;
                    public static ELT_ID_SMALL_ANIMATION: number;
                    public static ELT_ID_SMALL_PICTURE: number;
                    public static ELT_ID_SMSC_CONTROL_PARAMS: number;
                    public static ELT_ID_SPECIAL_SMS_MESSAGE_INDICATION: number;
                    public static ELT_ID_STANDARD_WVG_OBJECT: number;
                    public static ELT_ID_TEXT_FORMATTING: number;
                    public static ELT_ID_UDH_SOURCE_INDICATION: number;
                    public static ELT_ID_USER_DEFINED_SOUND: number;
                    public static ELT_ID_USER_PROMPT_INDICATOR: number;
                    public static ELT_ID_VARIABLE_PICTURE: number;
                    public static ELT_ID_WIRELESS_CTRL_MSG_PROTOCOL: number;
                    public static PORT_WAP_PUSH: number;
                    public static PORT_WAP_WSP: number;
                    public concatRef: com.android.internal.telephony.SmsHeader.ConcatRef;
                    public languageShiftTable: number;
                    public languageTable: number;
                    public miscEltList: java.util.ArrayList<com.android.internal.telephony.SmsHeader.MiscElt>;
                    public portAddrs: com.android.internal.telephony.SmsHeader.PortAddrs;
                    public specialSmsMsgList: java.util.ArrayList<com.android.internal.telephony.SmsHeader.SpecialSmsMsg>;
                    public toString(): string;
                    public constructor();
                    public static fromByteArray(param0: number[]): com.android.internal.telephony.SmsHeader;
                    public static toByteArray(param0: com.android.internal.telephony.SmsHeader): number[];
                }
                export module SmsHeader {
                    export class ConcatRef extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.telephony.SmsHeader.ConcatRef>;
                        public isEightBits: boolean;
                        public msgCount: number;
                        public refNumber: number;
                        public seqNumber: number;
                        public constructor();
                    }
                    export class MiscElt extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.telephony.SmsHeader.MiscElt>;
                        public data: number[];
                        public id: number;
                        public constructor();
                    }
                    export class PortAddrs extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.telephony.SmsHeader.PortAddrs>;
                        public areEightBits: boolean;
                        public destPort: number;
                        public origPort: number;
                        public constructor();
                    }
                    export class SpecialSmsMsg extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.telephony.SmsHeader.SpecialSmsMsg>;
                        public msgCount: number;
                        public msgIndType: number;
                        public constructor();
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export abstract class SmsMessageBase {
                    public static class: java.lang.Class<com.android.internal.telephony.SmsMessageBase>;
                    public mEmailBody: string;
                    public mEmailFrom: string;
                    public mIndexOnIcc: number;
                    public mIsEmail: boolean;
                    public mIsMwi: boolean;
                    public mMessageBody: string;
                    public mMessageRef: number;
                    public mMwiDontStore: boolean;
                    public mMwiSense: boolean;
                    public mOriginatingAddress: com.android.internal.telephony.SmsAddress;
                    public mPdu: number[];
                    public mPseudoSubject: string;
                    public mRecipientAddress: com.android.internal.telephony.SmsAddress;
                    public mScAddress: string;
                    public mScTimeMillis: number;
                    public mStatusOnIcc: number;
                    public mUserData: number[];
                    public mUserDataHeader: com.android.internal.telephony.SmsHeader;
                    public static calcUnicodeEncodingDetails(param0: string): com.android.internal.telephony.GsmAlphabet.TextEncodingDetails;
                    public static findNextUnicodePosition(param0: number, param1: number, param2: string): number;
                    public getPseudoSubject(): string;
                    public getTimestampMillis(): number;
                    public parseMessageBody(): void;
                    public getUserDataHeader(): com.android.internal.telephony.SmsHeader;
                    public isMWISetMessage(): boolean;
                    public getIndexOnIcc(): number;
                    public constructor();
                    public isCphsMwiMessage(): boolean;
                    public extractEmailAddressFromMessageBody(): void;
                    public isStatusReportMessage(): boolean;
                    public getStatus(): number;
                    public isEmail(): boolean;
                    public getProtocolIdentifier(): number;
                    public isMwiDontStore(): boolean;
                    public getOriginatingAddress(): string;
                    public getServiceCenterAddress(): string;
                    public getDisplayOriginatingAddress(): string;
                    public getUserData(): number[];
                    public isReplace(): boolean;
                    public getEmailBody(): string;
                    public isMWIClearMessage(): boolean;
                    public isReplyPathPresent(): boolean;
                    public getPdu(): number[];
                    public getRecipientAddress(): string;
                    public getDisplayMessageBody(): string;
                    public getEmailFrom(): string;
                    public getStatusOnIcc(): number;
                    public getMessageBody(): string;
                    public getMessageClass(): com.android.internal.telephony.SmsConstants.MessageClass;
                }
                export module SmsMessageBase {
                    export abstract class SubmitPduBase {
                        public static class: java.lang.Class<com.android.internal.telephony.SmsMessageBase.SubmitPduBase>;
                        public encodedMessage: number[];
                        public encodedScAddress: number[];
                        public constructor();
                        public toString(): string;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class SmsRawData extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.SmsRawData>;
                    public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.telephony.SmsRawData>;
                    public getBytes(): number[];
                    public constructor(param0: number[]);
                    public describeContents(): number;
                    public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class TelephonyIntents extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.TelephonyIntents>;
                    public static ACTION_ANY_DATA_CONNECTION_STATE_CHANGED: string;
                    public static ACTION_CARRIER_SIGNAL_PCO_VALUE: string;
                    public static ACTION_CARRIER_SIGNAL_REDIRECTED: string;
                    public static ACTION_CARRIER_SIGNAL_REQUEST_NETWORK_FAILED: string;
                    public static ACTION_CARRIER_SIGNAL_RESET: string;
                    public static ACTION_DATA_CONNECTION_FAILED: string;
                    public static ACTION_DEFAULT_DATA_SUBSCRIPTION_CHANGED: string;
                    public static ACTION_DEFAULT_SMS_SUBSCRIPTION_CHANGED: string;
                    public static ACTION_DEFAULT_SUBSCRIPTION_CHANGED: string;
                    public static ACTION_DEFAULT_VOICE_SUBSCRIPTION_CHANGED: string;
                    public static ACTION_EMERGENCY_CALLBACK_MODE_CHANGED: string;
                    public static ACTION_EMERGENCY_CALL_STATE_CHANGED: string;
                    public static ACTION_FORBIDDEN_NO_SERVICE_AUTHORIZATION: string;
                    public static ACTION_NETWORK_SET_TIME: string;
                    public static ACTION_NETWORK_SET_TIMEZONE: string;
                    public static ACTION_RADIO_TECHNOLOGY_CHANGED: string;
                    public static ACTION_REQUEST_OMADM_CONFIGURATION_UPDATE: string;
                    public static ACTION_SERVICE_STATE_CHANGED: string;
                    public static ACTION_SET_RADIO_CAPABILITY_DONE: string;
                    public static ACTION_SET_RADIO_CAPABILITY_FAILED: string;
                    public static ACTION_SHOW_NOTICE_ECM_BLOCK_OTHERS: string;
                    public static ACTION_SIGNAL_STRENGTH_CHANGED: string;
                    public static ACTION_SIM_STATE_CHANGED: string;
                    public static ACTION_SUBINFO_CONTENT_CHANGE: string;
                    public static ACTION_SUBINFO_RECORD_UPDATED: string;
                    public static EXTRA_APN_PROTO_KEY: string;
                    public static EXTRA_APN_TYPE_KEY: string;
                    public static EXTRA_DATA_SPN: string;
                    public static EXTRA_ERROR_CODE_KEY: string;
                    public static EXTRA_PCO_ID_KEY: string;
                    public static EXTRA_PCO_VALUE_KEY: string;
                    public static EXTRA_PLMN: string;
                    public static EXTRA_RADIO_ACCESS_FAMILY: string;
                    public static EXTRA_REBROADCAST_ON_UNLOCK: string;
                    public static EXTRA_REDIRECTION_URL_KEY: string;
                    public static EXTRA_SHOW_PLMN: string;
                    public static EXTRA_SHOW_SPN: string;
                    public static EXTRA_SPN: string;
                    public static SECRET_CODE_ACTION: string;
                    public static SPN_STRINGS_UPDATED_ACTION: string;
                    public constructor();
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export class TelephonyProperties extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.telephony.TelephonyProperties>;
                    /**
                     * Constructs a new instance of the com.android.internal.telephony.TelephonyProperties interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {});
                    public constructor();
                    public static PROPERTY_SMS_RECEIVE: string;
                    public static PROPERTY_SMS_SEND: string;
                    public static PROPERTY_ICC_OPERATOR_ALPHA: string;
                    public static EXTRAS_IS_CONFERENCE_URI: string;
                    public static PROPERTY_LTE_ON_CDMA_DEVICE: string;
                    public static CURRENT_ACTIVE_PHONE: string;
                    public static EXTRA_SKIP_SCHEMA_PARSING: string;
                    public static PROPERTY_OTASP_NUM_SCHEMA: string;
                    public static PROPERTY_RIL_SENDS_MULTIPLE_CALL_RING: string;
                    public static PROPERTY_SIM_STATE: string;
                    public static PROPERTY_DEFAULT_SUBSCRIPTION: string;
                    public static PROPERTY_OPERATOR_NUMERIC: string;
                    public static PROPERTY_DATA_NETWORK_TYPE: string;
                    public static PROPERTY_VIDEOCALL_AUDIO_OUTPUT: string;
                    public static PROPERTY_TEST_CSIM: string;
                    public static PROPERTY_OPERATOR_ISO_COUNTRY: string;
                    public static PROPERTY_OPERATOR_ISMANUAL: string;
                    public static PROPERTY_RESET_ON_RADIO_TECH_CHANGE: string;
                    public static PROPERTY_BASEBAND_VERSION: string;
                    public static PROPERTY_CDMA_MSG_ID: string;
                    public static PROPERTY_ICC_OPERATOR_NUMERIC: string;
                    public static PROPERTY_OPERATOR_IDP_STRING: string;
                    public static PROPERTY_OPERATOR_ALPHA: string;
                    public static PROPERTY_CALL_RING_DELAY: string;
                    public static PROPERTY_DISABLE_CALL: string;
                    public static PROPERTY_RIL_IMPL: string;
                    public static PROPERTY_LTE_ON_CDMA_PRODUCT_TYPE: string;
                    public static PROPERTY_IGNORE_NITZ: string;
                    public static PROPERTY_SIM_COUNT: string;
                    public static PROPERTY_OPERATOR_ISROAMING: string;
                    public static ADD_PARTICIPANT_KEY: string;
                    public static PROPERTY_MMS_TRANSACTION: string;
                    public static PROPERTY_MULTI_SIM_CONFIG: string;
                    public static PROPERTY_ICC_OPERATOR_ISO_COUNTRY: string;
                    public static PROPERTY_INECM_MODE: string;
                    public static PROPERTY_ECM_EXIT_TIMER: string;
                    public static PROPERTY_WAKE_LOCK_TIMEOUT: string;
                    public static EXTRA_DIAL_CONFERENCE_URI: string;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export module cdma {
                    export class SmsMessage extends com.android.internal.telephony.SmsMessageBase {
                        public static class: java.lang.Class<com.android.internal.telephony.cdma.SmsMessage>;
                        public static getSubmitPdu(param0: string, param1: com.android.internal.telephony.cdma.sms.UserData, param2: boolean): com.android.internal.telephony.cdma.SmsMessage.SubmitPdu;
                        public static createFromEfRecord(param0: number, param1: number[]): com.android.internal.telephony.cdma.SmsMessage;
                        public static getTPLayerLengthForPDU(param0: string): number;
                        public isStatusReportMessage(): boolean;
                        public createPdu(): void;
                        public getIncomingSmsFingerprint(): number[];
                        public isMWISetMessage(): boolean;
                        public getProtocolIdentifier(): number;
                        public static createFromPdu(param0: number[]): com.android.internal.telephony.cdma.SmsMessage;
                        public getNumOfVoicemails(): number;
                        public getSmsCbProgramData(): java.util.ArrayList<globalAndroid.telephony.cdma.CdmaSmsCbProgramData>;
                        public isReplyPathPresent(): boolean;
                        public static getNextMessageId(): number;
                        public processCdmaCTWdpHeader(param0: com.android.internal.telephony.cdma.SmsMessage): boolean;
                        public parseBroadcastSms(): globalAndroid.telephony.SmsCbMessage;
                        public constructor();
                        public getMessageType(): number;
                        public isMwiDontStore(): boolean;
                        public static convertDtmfToAscii(param0: number): number;
                        public static getSubmitPdu(param0: string, param1: com.android.internal.telephony.cdma.sms.UserData, param2: boolean, param3: number): com.android.internal.telephony.cdma.SmsMessage.SubmitPdu;
                        public getMessageClass(): com.android.internal.telephony.SmsConstants.MessageClass;
                        public getTeleService(): number;
                        public parseSms(): void;
                        public isReplace(): boolean;
                        public static getSubmitPdu(param0: string, param1: string, param2: number, param3: number[], param4: boolean): com.android.internal.telephony.cdma.SmsMessage.SubmitPdu;
                        public static getSubmitPdu(param0: string, param1: string, param2: string, param3: boolean, param4: com.android.internal.telephony.SmsHeader, param5: number): com.android.internal.telephony.cdma.SmsMessage.SubmitPdu;
                        public constructor(param0: com.android.internal.telephony.SmsAddress, param1: com.android.internal.telephony.cdma.sms.SmsEnvelope);
                        public isMWIClearMessage(): boolean;
                        public static calculateLength(param0: string, param1: boolean, param2: boolean): com.android.internal.telephony.GsmAlphabet.TextEncodingDetails;
                        public isCphsMwiMessage(): boolean;
                        public static getSubmitPdu(param0: string, param1: string, param2: string, param3: boolean, param4: com.android.internal.telephony.SmsHeader): com.android.internal.telephony.cdma.SmsMessage.SubmitPdu;
                        public getStatus(): number;
                    }
                    export module SmsMessage {
                        export class SubmitPdu extends com.android.internal.telephony.SmsMessageBase.SubmitPduBase {
                            public static class: java.lang.Class<com.android.internal.telephony.cdma.SmsMessage.SubmitPdu>;
                            public constructor();
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export module cdma {
                    export module sms {
                        export class BearerData extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.telephony.cdma.sms.BearerData>;
                            public static ALERT_DEFAULT: number;
                            public static ALERT_HIGH_PRIO: number;
                            public static ALERT_LOW_PRIO: number;
                            public static ALERT_MEDIUM_PRIO: number;
                            public static DISPLAY_MODE_DEFAULT: number;
                            public static DISPLAY_MODE_IMMEDIATE: number;
                            public static DISPLAY_MODE_USER: number;
                            public static ERROR_NONE: number;
                            public static ERROR_PERMANENT: number;
                            public static ERROR_TEMPORARY: number;
                            public static ERROR_UNDEFINED: number;
                            public static LANGUAGE_CHINESE: number;
                            public static LANGUAGE_ENGLISH: number;
                            public static LANGUAGE_FRENCH: number;
                            public static LANGUAGE_HEBREW: number;
                            public static LANGUAGE_JAPANESE: number;
                            public static LANGUAGE_KOREAN: number;
                            public static LANGUAGE_SPANISH: number;
                            public static LANGUAGE_UNKNOWN: number;
                            public static MESSAGE_TYPE_CANCELLATION: number;
                            public static MESSAGE_TYPE_DELIVER: number;
                            public static MESSAGE_TYPE_DELIVERY_ACK: number;
                            public static MESSAGE_TYPE_DELIVER_REPORT: number;
                            public static MESSAGE_TYPE_READ_ACK: number;
                            public static MESSAGE_TYPE_SUBMIT: number;
                            public static MESSAGE_TYPE_SUBMIT_REPORT: number;
                            public static MESSAGE_TYPE_USER_ACK: number;
                            public static PRIORITY_EMERGENCY: number;
                            public static PRIORITY_INTERACTIVE: number;
                            public static PRIORITY_NORMAL: number;
                            public static PRIORITY_URGENT: number;
                            public static PRIVACY_CONFIDENTIAL: number;
                            public static PRIVACY_NOT_RESTRICTED: number;
                            public static PRIVACY_RESTRICTED: number;
                            public static PRIVACY_SECRET: number;
                            public static RELATIVE_TIME_DAYS_LIMIT: number;
                            public static RELATIVE_TIME_HOURS_LIMIT: number;
                            public static RELATIVE_TIME_INDEFINITE: number;
                            public static RELATIVE_TIME_MINS_LIMIT: number;
                            public static RELATIVE_TIME_MOBILE_INACTIVE: number;
                            public static RELATIVE_TIME_NOW: number;
                            public static RELATIVE_TIME_RESERVED: number;
                            public static RELATIVE_TIME_WEEKS_LIMIT: number;
                            public static STATUS_ACCEPTED: number;
                            public static STATUS_BLOCKED_DESTINATION: number;
                            public static STATUS_CANCELLED: number;
                            public static STATUS_CANCEL_FAILED: number;
                            public static STATUS_DELIVERED: number;
                            public static STATUS_DEPOSITED_TO_INTERNET: number;
                            public static STATUS_DUPLICATE_MESSAGE: number;
                            public static STATUS_INVALID_DESTINATION: number;
                            public static STATUS_MESSAGE_EXPIRED: number;
                            public static STATUS_NETWORK_CONGESTION: number;
                            public static STATUS_NETWORK_ERROR: number;
                            public static STATUS_TEXT_TOO_LONG: number;
                            public static STATUS_UNDEFINED: number;
                            public static STATUS_UNKNOWN_ERROR: number;
                            public alert: number;
                            public alertIndicatorSet: boolean;
                            public callbackNumber: com.android.internal.telephony.cdma.sms.CdmaSmsAddress;
                            public cmasWarningInfo: globalAndroid.telephony.SmsCbCmasInfo;
                            public deferredDeliveryTimeAbsolute: com.android.internal.telephony.cdma.sms.BearerData.TimeStamp;
                            public deferredDeliveryTimeRelative: number;
                            public deferredDeliveryTimeRelativeSet: boolean;
                            public deliveryAckReq: boolean;
                            public depositIndex: number;
                            public displayMode: number;
                            public displayModeSet: boolean;
                            public errorClass: number;
                            public hasUserDataHeader: boolean;
                            public language: number;
                            public languageIndicatorSet: boolean;
                            public messageId: number;
                            public messageStatus: number;
                            public messageStatusSet: boolean;
                            public messageType: number;
                            public msgCenterTimeStamp: com.android.internal.telephony.cdma.sms.BearerData.TimeStamp;
                            public numberOfMessages: number;
                            public priority: number;
                            public priorityIndicatorSet: boolean;
                            public privacy: number;
                            public privacyIndicatorSet: boolean;
                            public readAckReq: boolean;
                            public reportReq: boolean;
                            public serviceCategoryProgramData: java.util.ArrayList<globalAndroid.telephony.cdma.CdmaSmsCbProgramData>;
                            public serviceCategoryProgramResults: java.util.ArrayList<globalAndroid.telephony.cdma.CdmaSmsCbProgramResults>;
                            public userAckReq: boolean;
                            public userData: com.android.internal.telephony.cdma.sms.UserData;
                            public userResponseCode: number;
                            public userResponseCodeSet: boolean;
                            public validityPeriodAbsolute: com.android.internal.telephony.cdma.sms.BearerData.TimeStamp;
                            public validityPeriodRelative: number;
                            public validityPeriodRelativeSet: boolean;
                            public constructor();
                            public static decode(param0: number[]): com.android.internal.telephony.cdma.sms.BearerData;
                            public static decode(param0: number[], param1: number): com.android.internal.telephony.cdma.sms.BearerData;
                            public getLanguage(): string;
                            public static calcTextEncodingDetails(param0: string, param1: boolean, param2: boolean): com.android.internal.telephony.GsmAlphabet.TextEncodingDetails;
                            public static encode(param0: com.android.internal.telephony.cdma.sms.BearerData): number[];
                            public toString(): string;
                        }
                        export module BearerData {
                            export class CodingException extends java.lang.Object {
                                public static class: java.lang.Class<com.android.internal.telephony.cdma.sms.BearerData.CodingException>;
                                public constructor(param0: string);
                            }
                            export class Gsm7bitCodingResult extends java.lang.Object {
                                public static class: java.lang.Class<com.android.internal.telephony.cdma.sms.BearerData.Gsm7bitCodingResult>;
                            }
                            export class TimeStamp extends globalAndroid.text.format.Time {
                                public static class: java.lang.Class<com.android.internal.telephony.cdma.sms.BearerData.TimeStamp>;
                                public toString(): string;
                                public static fromByteArray(param0: number[]): com.android.internal.telephony.cdma.sms.BearerData.TimeStamp;
                                public constructor();
                                public constructor(param0: globalAndroid.text.format.Time);
                                public constructor(param0: string);
                            }
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export module cdma {
                    export module sms {
                        export class CdmaSmsAddress extends com.android.internal.telephony.SmsAddress {
                            public static class: java.lang.Class<com.android.internal.telephony.cdma.sms.CdmaSmsAddress>;
                            public static DIGIT_MODE_4BIT_DTMF: number;
                            public static DIGIT_MODE_8BIT_CHAR: number;
                            public static NUMBERING_PLAN_ISDN_TELEPHONY: number;
                            public static NUMBERING_PLAN_UNKNOWN: number;
                            public static NUMBER_MODE_DATA_NETWORK: number;
                            public static NUMBER_MODE_NOT_DATA_NETWORK: number;
                            public static SMS_ADDRESS_MAX: number;
                            public static SMS_SUBADDRESS_MAX: number;
                            public static TON_ABBREVIATED: number;
                            public static TON_ALPHANUMERIC: number;
                            public static TON_INTERNATIONAL_OR_IP: number;
                            public static TON_NATIONAL_OR_EMAIL: number;
                            public static TON_NETWORK: number;
                            public static TON_RESERVED: number;
                            public static TON_SUBSCRIBER: number;
                            public static TON_UNKNOWN: number;
                            public digitMode: number;
                            public numberMode: number;
                            public numberOfDigits: number;
                            public numberPlan: number;
                            public constructor();
                            public toString(): string;
                            public static parse(param0: string): com.android.internal.telephony.cdma.sms.CdmaSmsAddress;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export module cdma {
                    export module sms {
                        export class CdmaSmsSubaddress extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.telephony.cdma.sms.CdmaSmsSubaddress>;
                            public odd: number;
                            public origBytes: number[];
                            public type: number;
                            public constructor();
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export module cdma {
                    export module sms {
                        export class SmsEnvelope extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.telephony.cdma.sms.SmsEnvelope>;
                            public static MESSAGE_TYPE_ACKNOWLEDGE: number;
                            public static MESSAGE_TYPE_BROADCAST: number;
                            public static MESSAGE_TYPE_POINT_TO_POINT: number;
                            public static SERVICE_CATEGORY_CMAS_CHILD_ABDUCTION_EMERGENCY: number;
                            public static SERVICE_CATEGORY_CMAS_EXTREME_THREAT: number;
                            public static SERVICE_CATEGORY_CMAS_LAST_RESERVED_VALUE: number;
                            public static SERVICE_CATEGORY_CMAS_PRESIDENTIAL_LEVEL_ALERT: number;
                            public static SERVICE_CATEGORY_CMAS_SEVERE_THREAT: number;
                            public static SERVICE_CATEGORY_CMAS_TEST_MESSAGE: number;
                            public static TELESERVICE_CT_WAP: number;
                            public static TELESERVICE_MWI: number;
                            public static TELESERVICE_NOT_SET: number;
                            public static TELESERVICE_SCPT: number;
                            public static TELESERVICE_VMN: number;
                            public static TELESERVICE_WAP: number;
                            public static TELESERVICE_WEMT: number;
                            public static TELESERVICE_WMT: number;
                            public bearerData: number[];
                            public bearerReply: number;
                            public causeCode: number;
                            public destAddress: com.android.internal.telephony.cdma.sms.CdmaSmsAddress;
                            public errorClass: number;
                            public messageType: number;
                            public origAddress: com.android.internal.telephony.cdma.sms.CdmaSmsAddress;
                            public origSubaddress: com.android.internal.telephony.cdma.sms.CdmaSmsSubaddress;
                            public replySeqNo: number;
                            public serviceCategory: number;
                            public teleService: number;
                            public constructor();
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export module cdma {
                    export module sms {
                        export class UserData extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.telephony.cdma.sms.UserData>;
                            public static ASCII_CR_INDEX: number;
                            public static ASCII_MAP: string[];
                            public static ASCII_MAP_BASE_INDEX: number;
                            public static ASCII_MAP_MAX_INDEX: number;
                            public static ASCII_NL_INDEX: number;
                            public static ENCODING_7BIT_ASCII: number;
                            public static ENCODING_GSM_7BIT_ALPHABET: number;
                            public static ENCODING_GSM_DCS: number;
                            public static ENCODING_GSM_DCS_16BIT: number;
                            public static ENCODING_GSM_DCS_7BIT: number;
                            public static ENCODING_GSM_DCS_8BIT: number;
                            public static ENCODING_IA5: number;
                            public static ENCODING_IS91_EXTENDED_PROTOCOL: number;
                            public static ENCODING_KOREAN: number;
                            public static ENCODING_LATIN: number;
                            public static ENCODING_LATIN_HEBREW: number;
                            public static ENCODING_OCTET: number;
                            public static ENCODING_SHIFT_JIS: number;
                            public static ENCODING_UNICODE_16: number;
                            public static IS91_MSG_TYPE_CLI: number;
                            public static IS91_MSG_TYPE_SHORT_MESSAGE: number;
                            public static IS91_MSG_TYPE_SHORT_MESSAGE_FULL: number;
                            public static IS91_MSG_TYPE_VOICEMAIL_STATUS: number;
                            public static PRINTABLE_ASCII_MIN_INDEX: number;
                            public static charToAscii: globalAndroid.util.SparseIntArray;
                            public msgEncoding: number;
                            public msgEncodingSet: boolean;
                            public msgType: number;
                            public numFields: number;
                            public paddingBits: number;
                            public payload: number[];
                            public payloadStr: string;
                            public userDataHeader: com.android.internal.telephony.SmsHeader;
                            public constructor();
                            public static stringToAscii(param0: string): number[];
                            public toString(): string;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export module gsm {
                    export class GsmSmsAddress extends com.android.internal.telephony.SmsAddress {
                        public static class: java.lang.Class<com.android.internal.telephony.gsm.GsmSmsAddress>;
                        public constructor(param0: number[], param1: number, param2: number);
                        public constructor();
                        public isCphsVoiceMessageIndicatorAddress(): boolean;
                        public isNetworkSpecific(): boolean;
                        public isAlphanumeric(): boolean;
                        public isCphsVoiceMessageSet(): boolean;
                        public getAddressString(): string;
                        public isCphsVoiceMessageClear(): boolean;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export module gsm {
                    export class GsmSmsCbMessage extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.telephony.gsm.GsmSmsCbMessage>;
                        public static createSmsCbMessage(param0: globalAndroid.content.Context, param1: com.android.internal.telephony.gsm.SmsCbHeader, param2: globalAndroid.telephony.SmsCbLocation, param3: number[][]): globalAndroid.telephony.SmsCbMessage;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export module gsm {
                    export class SmsBroadcastConfigInfo extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo>;
                        public setToCodeScheme(param0: number): void;
                        public constructor(param0: number, param1: number, param2: number, param3: number, param4: boolean);
                        public getToCodeScheme(): number;
                        public getFromCodeScheme(): number;
                        public isSelected(): boolean;
                        public setSelected(param0: boolean): void;
                        public setToServiceId(param0: number): void;
                        public getToServiceId(): number;
                        public setFromCodeScheme(param0: number): void;
                        public getFromServiceId(): number;
                        public toString(): string;
                        public setFromServiceId(param0: number): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export module gsm {
                    export class SmsCbConstants extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.telephony.gsm.SmsCbConstants>;
                        public static MESSAGE_ID_CMAS_ALERT_CHILD_ABDUCTION_EMERGENCY: number;
                        public static MESSAGE_ID_CMAS_ALERT_CHILD_ABDUCTION_EMERGENCY_LANGUAGE: number;
                        public static MESSAGE_ID_CMAS_ALERT_EXERCISE: number;
                        public static MESSAGE_ID_CMAS_ALERT_EXERCISE_LANGUAGE: number;
                        public static MESSAGE_ID_CMAS_ALERT_EXTREME_EXPECTED_LIKELY: number;
                        public static MESSAGE_ID_CMAS_ALERT_EXTREME_EXPECTED_LIKELY_LANGUAGE: number;
                        public static MESSAGE_ID_CMAS_ALERT_EXTREME_EXPECTED_OBSERVED: number;
                        public static MESSAGE_ID_CMAS_ALERT_EXTREME_EXPECTED_OBSERVED_LANGUAGE: number;
                        public static MESSAGE_ID_CMAS_ALERT_EXTREME_IMMEDIATE_LIKELY: number;
                        public static MESSAGE_ID_CMAS_ALERT_EXTREME_IMMEDIATE_LIKELY_LANGUAGE: number;
                        public static MESSAGE_ID_CMAS_ALERT_EXTREME_IMMEDIATE_OBSERVED: number;
                        public static MESSAGE_ID_CMAS_ALERT_EXTREME_IMMEDIATE_OBSERVED_LANGUAGE: number;
                        public static MESSAGE_ID_CMAS_ALERT_OPERATOR_DEFINED_USE: number;
                        public static MESSAGE_ID_CMAS_ALERT_OPERATOR_DEFINED_USE_LANGUAGE: number;
                        public static MESSAGE_ID_CMAS_ALERT_PRESIDENTIAL_LEVEL: number;
                        public static MESSAGE_ID_CMAS_ALERT_PRESIDENTIAL_LEVEL_LANGUAGE: number;
                        public static MESSAGE_ID_CMAS_ALERT_REQUIRED_MONTHLY_TEST: number;
                        public static MESSAGE_ID_CMAS_ALERT_REQUIRED_MONTHLY_TEST_LANGUAGE: number;
                        public static MESSAGE_ID_CMAS_ALERT_SEVERE_EXPECTED_LIKELY: number;
                        public static MESSAGE_ID_CMAS_ALERT_SEVERE_EXPECTED_LIKELY_LANGUAGE: number;
                        public static MESSAGE_ID_CMAS_ALERT_SEVERE_EXPECTED_OBSERVED: number;
                        public static MESSAGE_ID_CMAS_ALERT_SEVERE_EXPECTED_OBSERVED_LANGUAGE: number;
                        public static MESSAGE_ID_CMAS_ALERT_SEVERE_IMMEDIATE_LIKELY: number;
                        public static MESSAGE_ID_CMAS_ALERT_SEVERE_IMMEDIATE_LIKELY_LANGUAGE: number;
                        public static MESSAGE_ID_CMAS_ALERT_SEVERE_IMMEDIATE_OBSERVED: number;
                        public static MESSAGE_ID_CMAS_ALERT_SEVERE_IMMEDIATE_OBSERVED_LANGUAGE: number;
                        public static MESSAGE_ID_CMAS_FIRST_IDENTIFIER: number;
                        public static MESSAGE_ID_CMAS_LAST_IDENTIFIER: number;
                        public static MESSAGE_ID_ETWS_EARTHQUAKE_AND_TSUNAMI_WARNING: number;
                        public static MESSAGE_ID_ETWS_EARTHQUAKE_WARNING: number;
                        public static MESSAGE_ID_ETWS_OTHER_EMERGENCY_TYPE: number;
                        public static MESSAGE_ID_ETWS_TEST_MESSAGE: number;
                        public static MESSAGE_ID_ETWS_TSUNAMI_WARNING: number;
                        public static MESSAGE_ID_ETWS_TYPE: number;
                        public static MESSAGE_ID_ETWS_TYPE_MASK: number;
                        public static MESSAGE_ID_GSMA_ALLOCATED_CHANNEL_50: number;
                        public static MESSAGE_ID_GSMA_ALLOCATED_CHANNEL_60: number;
                        public static MESSAGE_ID_GSMA_ALLOCATED_CHANNEL_911: number;
                        public static MESSAGE_ID_GSMA_ALLOCATED_CHANNEL_919: number;
                        public static MESSAGE_ID_GSMA_ALLOCATED_CHANNEL_928: number;
                        public static MESSAGE_ID_PWS_FIRST_IDENTIFIER: number;
                        public static MESSAGE_ID_PWS_LAST_IDENTIFIER: number;
                        public static SERIAL_NUMBER_ETWS_ACTIVATE_POPUP: number;
                        public static SERIAL_NUMBER_ETWS_EMERGENCY_USER_ALERT: number;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export module gsm {
                    export class SmsCbHeader extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.telephony.gsm.SmsCbHeader>;
                        public constructor(param0: number[]);
                        public toString(): string;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export module gsm {
                    export class SmsMessage extends com.android.internal.telephony.SmsMessageBase {
                        public static class: java.lang.Class<com.android.internal.telephony.gsm.SmsMessage>;
                        public static createFromPdu(param0: number[]): com.android.internal.telephony.gsm.SmsMessage;
                        public static getSubmitPdu(param0: string, param1: string, param2: string, param3: boolean, param4: number): com.android.internal.telephony.gsm.SmsMessage.SubmitPdu;
                        public static getTPLayerLengthForPDU(param0: string): number;
                        public isStatusReportMessage(): boolean;
                        public isMWISetMessage(): boolean;
                        public static createFromEfRecord(param0: number, param1: number[]): com.android.internal.telephony.gsm.SmsMessage;
                        public getProtocolIdentifier(): number;
                        public isTypeZero(): boolean;
                        public static getSubmitPdu(param0: string, param1: string, param2: number, param3: number[], param4: boolean): com.android.internal.telephony.gsm.SmsMessage.SubmitPdu;
                        public static calculateLength(param0: string, param1: boolean): com.android.internal.telephony.GsmAlphabet.TextEncodingDetails;
                        public getNumOfVoicemails(): number;
                        public isReplyPathPresent(): boolean;
                        public static newFromCDS(param0: number[]): com.android.internal.telephony.gsm.SmsMessage;
                        public constructor();
                        public static getRelativeValidityPeriod(param0: number): number;
                        public isMwiDontStore(): boolean;
                        public static getSubmitPdu(param0: string, param1: string, param2: string, param3: boolean, param4: number[], param5: number, param6: number, param7: number): com.android.internal.telephony.gsm.SmsMessage.SubmitPdu;
                        public static newFromCMT(param0: number[]): com.android.internal.telephony.gsm.SmsMessage;
                        public getMessageClass(): com.android.internal.telephony.SmsConstants.MessageClass;
                        public static getSubmitPdu(param0: string, param1: string, param2: string, param3: boolean): com.android.internal.telephony.gsm.SmsMessage.SubmitPdu;
                        public isReplace(): boolean;
                        public static getSubmitPdu(param0: string, param1: string, param2: string, param3: boolean, param4: number[]): com.android.internal.telephony.gsm.SmsMessage.SubmitPdu;
                        public static getSubmitPdu(param0: string, param1: string, param2: string, param3: boolean, param4: number[], param5: number, param6: number, param7: number, param8: number): com.android.internal.telephony.gsm.SmsMessage.SubmitPdu;
                        public isMWIClearMessage(): boolean;
                        public isCphsMwiMessage(): boolean;
                        public getStatus(): number;
                    }
                    export module SmsMessage {
                        export class PduParser extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.telephony.gsm.SmsMessage.PduParser>;
                        }
                        export class SubmitPdu extends com.android.internal.telephony.SmsMessageBase.SubmitPduBase {
                            public static class: java.lang.Class<com.android.internal.telephony.gsm.SmsMessage.SubmitPdu>;
                            public constructor();
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module telephony {
                export module uicc {
                    export class IccUtils extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.telephony.uicc.IccUtils>;
                        public static parseToBnW(param0: number[], param1: number): globalAndroid.graphics.Bitmap;
                        public constructor();
                        public static parseToRGB(param0: number[], param1: number, param2: boolean): globalAndroid.graphics.Bitmap;
                        public static adnStringFieldToString(param0: number[], param1: number, param2: number): string;
                        public static gsmBcdByteToInt(param0: number): number;
                        public static hexStringToBytes(param0: string): number[];
                        public static bytesToHexString(param0: number[]): string;
                        public static bcdToString(param0: number[], param1: number, param2: number): string;
                        public static bcdPlmnToString(param0: number[], param1: number): string;
                        public static bchToString(param0: number[], param1: number, param2: number): string;
                        public static cdmaBcdToString(param0: number[], param1: number, param2: number): string;
                        public static networkNameToString(param0: number[], param1: number, param2: number): string;
                        public static cdmaBcdByteToInt(param0: number): number;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module textservice {
                export class ISpellCheckerService extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.textservice.ISpellCheckerService>;
                    /**
                     * Constructs a new instance of the com.android.internal.textservice.ISpellCheckerService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        getISpellCheckerSession(param0: string, param1: com.android.internal.textservice.ISpellCheckerSessionListener, param2: globalAndroid.os.Bundle, param3: com.android.internal.textservice.ISpellCheckerServiceCallback): void;
                    });
                    public constructor();
                    public getISpellCheckerSession(param0: string, param1: com.android.internal.textservice.ISpellCheckerSessionListener, param2: globalAndroid.os.Bundle, param3: com.android.internal.textservice.ISpellCheckerServiceCallback): void;
                }
                export module ISpellCheckerService {
                    export abstract class Stub implements com.android.internal.textservice.ISpellCheckerService {
                        public static class: java.lang.Class<com.android.internal.textservice.ISpellCheckerService.Stub>;
                        public constructor();
                        public getISpellCheckerSession(param0: string, param1: com.android.internal.textservice.ISpellCheckerSessionListener, param2: globalAndroid.os.Bundle, param3: com.android.internal.textservice.ISpellCheckerServiceCallback): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.textservice.ISpellCheckerService;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.textservice.ISpellCheckerService {
                            public static class: java.lang.Class<com.android.internal.textservice.ISpellCheckerService.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public getISpellCheckerSession(param0: string, param1: com.android.internal.textservice.ISpellCheckerSessionListener, param2: globalAndroid.os.Bundle, param3: com.android.internal.textservice.ISpellCheckerServiceCallback): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module textservice {
                export class ISpellCheckerServiceCallback extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.textservice.ISpellCheckerServiceCallback>;
                    /**
                     * Constructs a new instance of the com.android.internal.textservice.ISpellCheckerServiceCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        onSessionCreated(param0: com.android.internal.textservice.ISpellCheckerSession): void;
                    });
                    public constructor();
                    public onSessionCreated(param0: com.android.internal.textservice.ISpellCheckerSession): void;
                }
                export module ISpellCheckerServiceCallback {
                    export abstract class Stub implements com.android.internal.textservice.ISpellCheckerServiceCallback {
                        public static class: java.lang.Class<com.android.internal.textservice.ISpellCheckerServiceCallback.Stub>;
                        public constructor();
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.textservice.ISpellCheckerServiceCallback;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public onSessionCreated(param0: com.android.internal.textservice.ISpellCheckerSession): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.textservice.ISpellCheckerServiceCallback {
                            public static class: java.lang.Class<com.android.internal.textservice.ISpellCheckerServiceCallback.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public onSessionCreated(param0: com.android.internal.textservice.ISpellCheckerSession): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module textservice {
                export class ISpellCheckerSession extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.textservice.ISpellCheckerSession>;
                    /**
                     * Constructs a new instance of the com.android.internal.textservice.ISpellCheckerSession interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        onCancel(): void;
                        onClose(): void;
                        onGetSentenceSuggestionsMultiple(param0: globalAndroid.view.textservice.TextInfo[], param1: number): void;
                        onGetSuggestionsMultiple(param0: globalAndroid.view.textservice.TextInfo[], param1: number, param2: boolean): void;
                    });
                    public constructor();
                    public onClose(): void;
                    public onGetSuggestionsMultiple(param0: globalAndroid.view.textservice.TextInfo[], param1: number, param2: boolean): void;
                    public onCancel(): void;
                    public onGetSentenceSuggestionsMultiple(param0: globalAndroid.view.textservice.TextInfo[], param1: number): void;
                }
                export module ISpellCheckerSession {
                    export abstract class Stub implements com.android.internal.textservice.ISpellCheckerSession {
                        public static class: java.lang.Class<com.android.internal.textservice.ISpellCheckerSession.Stub>;
                        public constructor();
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.textservice.ISpellCheckerSession;
                        public onCancel(): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public onClose(): void;
                        public onGetSentenceSuggestionsMultiple(param0: globalAndroid.view.textservice.TextInfo[], param1: number): void;
                        public onGetSuggestionsMultiple(param0: globalAndroid.view.textservice.TextInfo[], param1: number, param2: boolean): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.textservice.ISpellCheckerSession {
                            public static class: java.lang.Class<com.android.internal.textservice.ISpellCheckerSession.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public onClose(): void;
                            public asBinder(): globalAndroid.os.IBinder;
                            public onGetSentenceSuggestionsMultiple(param0: globalAndroid.view.textservice.TextInfo[], param1: number): void;
                            public onGetSuggestionsMultiple(param0: globalAndroid.view.textservice.TextInfo[], param1: number, param2: boolean): void;
                            public onCancel(): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module textservice {
                export class ISpellCheckerSessionListener extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.textservice.ISpellCheckerSessionListener>;
                    /**
                     * Constructs a new instance of the com.android.internal.textservice.ISpellCheckerSessionListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        onGetSentenceSuggestions(param0: globalAndroid.view.textservice.SentenceSuggestionsInfo[]): void;
                        onGetSuggestions(param0: globalAndroid.view.textservice.SuggestionsInfo[]): void;
                    });
                    public constructor();
                    public onGetSuggestions(param0: globalAndroid.view.textservice.SuggestionsInfo[]): void;
                    public onGetSentenceSuggestions(param0: globalAndroid.view.textservice.SentenceSuggestionsInfo[]): void;
                }
                export module ISpellCheckerSessionListener {
                    export abstract class Stub implements com.android.internal.textservice.ISpellCheckerSessionListener {
                        public static class: java.lang.Class<com.android.internal.textservice.ISpellCheckerSessionListener.Stub>;
                        public onGetSentenceSuggestions(param0: globalAndroid.view.textservice.SentenceSuggestionsInfo[]): void;
                        public constructor();
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.textservice.ISpellCheckerSessionListener;
                        public asBinder(): globalAndroid.os.IBinder;
                        public onGetSuggestions(param0: globalAndroid.view.textservice.SuggestionsInfo[]): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.textservice.ISpellCheckerSessionListener {
                            public static class: java.lang.Class<com.android.internal.textservice.ISpellCheckerSessionListener.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public onGetSentenceSuggestions(param0: globalAndroid.view.textservice.SentenceSuggestionsInfo[]): void;
                            public asBinder(): globalAndroid.os.IBinder;
                            public onGetSuggestions(param0: globalAndroid.view.textservice.SuggestionsInfo[]): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module textservice {
                export class ITextServicesManager extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.textservice.ITextServicesManager>;
                    /**
                     * Constructs a new instance of the com.android.internal.textservice.ITextServicesManager interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        finishSpellCheckerService(param0: com.android.internal.textservice.ISpellCheckerSessionListener): void;
                        getCurrentSpellChecker(param0: string): globalAndroid.view.textservice.SpellCheckerInfo;
                        getCurrentSpellCheckerSubtype(param0: string, param1: boolean): globalAndroid.view.textservice.SpellCheckerSubtype;
                        getEnabledSpellCheckers(): globalAndroid.view.textservice.SpellCheckerInfo[];
                        getSpellCheckerService(param0: string, param1: string, param2: com.android.internal.textservice.ITextServicesSessionListener, param3: com.android.internal.textservice.ISpellCheckerSessionListener, param4: globalAndroid.os.Bundle): void;
                        isSpellCheckerEnabled(): boolean;
                        setCurrentSpellChecker(param0: string, param1: string): void;
                        setCurrentSpellCheckerSubtype(param0: string, param1: number): void;
                        setSpellCheckerEnabled(param0: boolean): void;
                    });
                    public constructor();
                    public setCurrentSpellCheckerSubtype(param0: string, param1: number): void;
                    public getEnabledSpellCheckers(): globalAndroid.view.textservice.SpellCheckerInfo[];
                    public setSpellCheckerEnabled(param0: boolean): void;
                    public setCurrentSpellChecker(param0: string, param1: string): void;
                    public getCurrentSpellCheckerSubtype(param0: string, param1: boolean): globalAndroid.view.textservice.SpellCheckerSubtype;
                    public getSpellCheckerService(param0: string, param1: string, param2: com.android.internal.textservice.ITextServicesSessionListener, param3: com.android.internal.textservice.ISpellCheckerSessionListener, param4: globalAndroid.os.Bundle): void;
                    public getCurrentSpellChecker(param0: string): globalAndroid.view.textservice.SpellCheckerInfo;
                    public isSpellCheckerEnabled(): boolean;
                    public finishSpellCheckerService(param0: com.android.internal.textservice.ISpellCheckerSessionListener): void;
                }
                export module ITextServicesManager {
                    export abstract class Stub implements com.android.internal.textservice.ITextServicesManager {
                        public static class: java.lang.Class<com.android.internal.textservice.ITextServicesManager.Stub>;
                        public constructor();
                        public getCurrentSpellCheckerSubtype(param0: string, param1: boolean): globalAndroid.view.textservice.SpellCheckerSubtype;
                        public setSpellCheckerEnabled(param0: boolean): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.textservice.ITextServicesManager;
                        public setCurrentSpellCheckerSubtype(param0: string, param1: number): void;
                        public finishSpellCheckerService(param0: com.android.internal.textservice.ISpellCheckerSessionListener): void;
                        public getSpellCheckerService(param0: string, param1: string, param2: com.android.internal.textservice.ITextServicesSessionListener, param3: com.android.internal.textservice.ISpellCheckerSessionListener, param4: globalAndroid.os.Bundle): void;
                        public getCurrentSpellChecker(param0: string): globalAndroid.view.textservice.SpellCheckerInfo;
                        public isSpellCheckerEnabled(): boolean;
                        public setCurrentSpellChecker(param0: string, param1: string): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public getEnabledSpellCheckers(): globalAndroid.view.textservice.SpellCheckerInfo[];
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.textservice.ITextServicesManager {
                            public static class: java.lang.Class<com.android.internal.textservice.ITextServicesManager.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public setCurrentSpellChecker(param0: string, param1: string): void;
                            public setCurrentSpellCheckerSubtype(param0: string, param1: number): void;
                            public finishSpellCheckerService(param0: com.android.internal.textservice.ISpellCheckerSessionListener): void;
                            public getCurrentSpellCheckerSubtype(param0: string, param1: boolean): globalAndroid.view.textservice.SpellCheckerSubtype;
                            public getCurrentSpellChecker(param0: string): globalAndroid.view.textservice.SpellCheckerInfo;
                            public getEnabledSpellCheckers(): globalAndroid.view.textservice.SpellCheckerInfo[];
                            public getSpellCheckerService(param0: string, param1: string, param2: com.android.internal.textservice.ITextServicesSessionListener, param3: com.android.internal.textservice.ISpellCheckerSessionListener, param4: globalAndroid.os.Bundle): void;
                            public isSpellCheckerEnabled(): boolean;
                            public setSpellCheckerEnabled(param0: boolean): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module textservice {
                export class ITextServicesSessionListener extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.textservice.ITextServicesSessionListener>;
                    /**
                     * Constructs a new instance of the com.android.internal.textservice.ITextServicesSessionListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        onServiceConnected(param0: com.android.internal.textservice.ISpellCheckerSession): void;
                    });
                    public constructor();
                    public onServiceConnected(param0: com.android.internal.textservice.ISpellCheckerSession): void;
                }
                export module ITextServicesSessionListener {
                    export abstract class Stub implements com.android.internal.textservice.ITextServicesSessionListener {
                        public static class: java.lang.Class<com.android.internal.textservice.ITextServicesSessionListener.Stub>;
                        public constructor();
                        public onServiceConnected(param0: com.android.internal.textservice.ISpellCheckerSession): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.textservice.ITextServicesSessionListener;
                        public asBinder(): globalAndroid.os.IBinder;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.textservice.ITextServicesSessionListener {
                            public static class: java.lang.Class<com.android.internal.textservice.ITextServicesSessionListener.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public onServiceConnected(param0: com.android.internal.textservice.ISpellCheckerSession): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module transition {
                export class EpicenterTranslateClipReveal extends globalAndroid.transition.Visibility {
                    public static class: java.lang.Class<com.android.internal.transition.EpicenterTranslateClipReveal>;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public captureStartValues(param0: globalAndroid.transition.TransitionValues): void;
                    public onAppear(param0: globalAndroid.view.ViewGroup, param1: globalAndroid.transition.TransitionValues, param2: number, param3: globalAndroid.transition.TransitionValues, param4: number): globalAndroid.animation.Animator;
                    public constructor();
                    public captureEndValues(param0: globalAndroid.transition.TransitionValues): void;
                    public onDisappear(param0: globalAndroid.view.ViewGroup, param1: globalAndroid.view.View, param2: globalAndroid.transition.TransitionValues, param3: globalAndroid.transition.TransitionValues): globalAndroid.animation.Animator;
                    public onAppear(param0: globalAndroid.view.ViewGroup, param1: globalAndroid.view.View, param2: globalAndroid.transition.TransitionValues, param3: globalAndroid.transition.TransitionValues): globalAndroid.animation.Animator;
                    public onDisappear(param0: globalAndroid.view.ViewGroup, param1: globalAndroid.transition.TransitionValues, param2: number, param3: globalAndroid.transition.TransitionValues, param4: number): globalAndroid.animation.Animator;
                }
                export module EpicenterTranslateClipReveal {
                    export class State extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.transition.EpicenterTranslateClipReveal.State>;
                        public constructor();
                        public constructor(param0: number, param1: number, param2: number);
                    }
                    export class StateEvaluator extends globalAndroid.animation.TypeEvaluator<com.android.internal.transition.EpicenterTranslateClipReveal.State> {
                        public static class: java.lang.Class<com.android.internal.transition.EpicenterTranslateClipReveal.StateEvaluator>;
                        public evaluate(param0: number, param1: com.android.internal.transition.EpicenterTranslateClipReveal.State, param2: com.android.internal.transition.EpicenterTranslateClipReveal.State): com.android.internal.transition.EpicenterTranslateClipReveal.State;
                    }
                    export class StateProperty extends globalAndroid.util.Property<globalAndroid.view.View, com.android.internal.transition.EpicenterTranslateClipReveal.State> {
                        public static class: java.lang.Class<com.android.internal.transition.EpicenterTranslateClipReveal.StateProperty>;
                        public static TARGET_X: string;
                        public static TARGET_Y: string;
                        public set(param0: any, param1: any): void;
                        public set(param0: globalAndroid.view.View, param1: com.android.internal.transition.EpicenterTranslateClipReveal.State): void;
                        public constructor(param0: java.lang.Class<any>, param1: string);
                        public get(param0: any): any;
                        public get(param0: globalAndroid.view.View): com.android.internal.transition.EpicenterTranslateClipReveal.State;
                        public constructor(param0: string);
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module transition {
                export class TransitionConstants extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.transition.TransitionConstants>;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class ArrayUtils extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.ArrayUtils>;
                    public static newUnpaddedBooleanArray(param0: number): boolean[];
                    public static add(param0: java.util.ArrayList<any>, param1: any): java.util.ArrayList<any>;
                    public static newUnpaddedLongArray(param0: number): number[];
                    public static removeString(param0: string[], param1: string): string[];
                    public static appendInt(param0: number[], param1: number): number[];
                    public static trimToSize(param0: any[], param1: number): any[];
                    public static newUnpaddedIntArray(param0: number): number[];
                    public static isEmpty(param0: number[]): boolean;
                    public static contains(param0: string[], param1: string): boolean;
                    public static containsAny(param0: any[], param1: any[]): boolean;
                    public static isEmpty(param0: boolean[]): boolean;
                    public static total(param0: number[]): number;
                    public static cloneOrNull(param0: number[]): number[];
                    public static equals(param0: number[], param1: number[], param2: number): boolean;
                    public static appendLong(param0: number[], param1: number): number[];
                    public static convertToIntArray(param0: java.util.List<java.lang.Integer>): number[];
                    public static newUnpaddedFloatArray(param0: number): number[];
                    public static cloneOrNull(param0: globalAndroid.util.ArraySet<any>): globalAndroid.util.ArraySet<any>;
                    public static contains(param0: any[], param1: any): boolean;
                    public static removeInt(param0: number[], param1: number): number[];
                    public static newUnpaddedCharArray(param0: number): string[];
                    public static appendElement(param0: java.lang.Class<any>, param1: any[], param2: any): any[];
                    public static defeatNullable(param0: string[]): string[];
                    public static newUnpaddedObjectArray(param0: number): any[];
                    public static containsAll(param0: string[], param1: string[]): boolean;
                    public static remove(param0: globalAndroid.util.ArraySet<any>, param1: any): globalAndroid.util.ArraySet<any>;
                    public static appendInt(param0: number[], param1: number, param2: boolean): number[];
                    public static contains(param0: number[], param1: number): boolean;
                    public static remove(param0: java.util.ArrayList<any>, param1: any): java.util.ArrayList<any>;
                    public static newUnpaddedArray(param0: java.lang.Class<any>, param1: number): any[];
                    public static isEmpty(param0: java.util.Collection<any>): boolean;
                    public static referenceEquals(param0: java.util.ArrayList<any>, param1: java.util.ArrayList<any>): boolean;
                    public static newUnpaddedByteArray(param0: number): number[];
                    public static indexOf(param0: any[], param1: any): number;
                    public static contains(param0: java.util.Collection, param1: any): boolean;
                    public static isEmpty(param0: any[]): boolean;
                    public static add(param0: globalAndroid.util.ArraySet<any>, param1: any): globalAndroid.util.ArraySet<any>;
                    public static removeLong(param0: number[], param1: number): number[];
                    public static size(param0: any[]): number;
                    public static containsAll(param0: any[], param1: any[]): boolean;
                    public static emptyArray(param0: java.lang.Class<any>): any[];
                    public static appendElement(param0: java.lang.Class<any>, param1: any[], param2: any, param3: boolean): any[];
                    public static removeElement(param0: java.lang.Class<any>, param1: any[], param2: any): any[];
                    public static unstableRemoveIf(param0: java.util.ArrayList<any>, param1: any /* any*/): number;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class AsyncChannel extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.AsyncChannel>;
                    public static CMD_CHANNEL_DISCONNECT: number;
                    public static CMD_CHANNEL_DISCONNECTED: number;
                    public static CMD_CHANNEL_FULLY_CONNECTED: number;
                    public static CMD_CHANNEL_FULL_CONNECTION: number;
                    public static CMD_CHANNEL_HALF_CONNECTED: number;
                    public static STATUS_BINDING_UNSUCCESSFUL: number;
                    public static STATUS_FULL_CONNECTION_REFUSED_ALREADY_CONNECTED: number;
                    public static STATUS_REMOTE_DISCONNECTION: number;
                    public static STATUS_SEND_UNSUCCESSFUL: number;
                    public static STATUS_SUCCESSFUL: number;
                    public connectSync(param0: globalAndroid.content.Context, param1: globalAndroid.os.Handler, param2: globalAndroid.os.Handler): number;
                    public sendMessage(param0: number, param1: number, param2: number): void;
                    public sendMessage(param0: number, param1: number): void;
                    public replyToMessage(param0: globalAndroid.os.Message, param1: number): void;
                    public replyToMessage(param0: globalAndroid.os.Message, param1: number, param2: number, param3: number): void;
                    public connect(param0: globalAndroid.content.Context, param1: globalAndroid.os.Handler, param2: java.lang.Class<any>): void;
                    public replyToMessage(param0: globalAndroid.os.Message, param1: globalAndroid.os.Message): void;
                    public sendMessageSynchronously(param0: number, param1: number, param2: number): globalAndroid.os.Message;
                    public constructor();
                    public sendMessageSynchronously(param0: number, param1: any): globalAndroid.os.Message;
                    public sendMessage(param0: number, param1: any): void;
                    public sendMessageSynchronously(param0: number, param1: number): globalAndroid.os.Message;
                    public fullyConnectSync(param0: globalAndroid.content.Context, param1: globalAndroid.os.Handler, param2: globalAndroid.os.Handler): number;
                    public replyToMessage(param0: globalAndroid.os.Message, param1: number, param2: number): void;
                    public disconnect(): void;
                    public sendMessageSynchronously(param0: number, param1: number, param2: number, param3: any): globalAndroid.os.Message;
                    public sendMessageSynchronously(param0: number): globalAndroid.os.Message;
                    public connect(param0: com.android.internal.util.AsyncService, param1: globalAndroid.os.Messenger): void;
                    public disconnected(): void;
                    public connect(param0: globalAndroid.content.Context, param1: globalAndroid.os.Handler, param2: globalAndroid.os.Messenger): void;
                    public replyToMessage(param0: globalAndroid.os.Message, param1: number, param2: any): void;
                    public static cmdToString(param0: number): string;
                    public replyToMessage(param0: globalAndroid.os.Message, param1: number, param2: number, param3: number, param4: any): void;
                    public sendMessage(param0: globalAndroid.os.Message): void;
                    public connect(param0: globalAndroid.content.Context, param1: globalAndroid.os.Handler, param2: string, param3: string): void;
                    public connectSrcHandlerToPackageSync(param0: globalAndroid.content.Context, param1: globalAndroid.os.Handler, param2: string, param3: string): number;
                    public sendMessage(param0: number): void;
                    public sendMessage(param0: number, param1: number, param2: number, param3: any): void;
                    public connectSync(param0: globalAndroid.content.Context, param1: globalAndroid.os.Handler, param2: globalAndroid.os.Messenger): number;
                    public connect(param0: globalAndroid.content.Context, param1: globalAndroid.os.Handler, param2: globalAndroid.os.Handler): void;
                    public connected(param0: globalAndroid.content.Context, param1: globalAndroid.os.Handler, param2: globalAndroid.os.Messenger): void;
                    public sendMessageSynchronously(param0: globalAndroid.os.Message): globalAndroid.os.Message;
                }
                export module AsyncChannel {
                    export class AsyncChannelConnection extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.util.AsyncChannel.AsyncChannelConnection>;
                        public onServiceConnected(param0: globalAndroid.content.ComponentName, param1: globalAndroid.os.IBinder): void;
                        public onServiceDisconnected(param0: globalAndroid.content.ComponentName): void;
                    }
                    export class DeathMonitor extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.util.AsyncChannel.DeathMonitor>;
                        public binderDied(): void;
                    }
                    export class SyncMessenger extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.util.AsyncChannel.SyncMessenger>;
                    }
                    export module SyncMessenger {
                        export class SyncHandler extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.util.AsyncChannel.SyncMessenger.SyncHandler>;
                            public handleMessage(param0: globalAndroid.os.Message): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export abstract class AsyncService {
                    public static class: java.lang.Class<com.android.internal.util.AsyncService>;
                    public static CMD_ASYNC_SERVICE_DESTROY: number;
                    public static CMD_ASYNC_SERVICE_ON_START_INTENT: number;
                    public static DBG: boolean;
                    public mMessenger: globalAndroid.os.Messenger;
                    public onBind(param0: globalAndroid.content.Intent): globalAndroid.os.IBinder;
                    public onCreate(): void;
                    public constructor();
                    public onStartCommand(param0: globalAndroid.content.Intent, param1: number, param2: number): number;
                    public getHandler(): globalAndroid.os.Handler;
                    public onDestroy(): void;
                    public createHandler(): com.android.internal.util.AsyncService.AsyncServiceInfo;
                }
                export module AsyncService {
                    export class AsyncServiceInfo extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.util.AsyncService.AsyncServiceInfo>;
                        public mHandler: globalAndroid.os.Handler;
                        public mRestartFlags: number;
                        public constructor();
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class BitUtils extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.BitUtils>;
                    public static uint8(param0: number): number;
                    public static bytesToLEInt(param0: number[]): number;
                    public static getUint32(param0: java.nio.ByteBuffer, param1: number): number;
                    public static maskedEquals(param0: java.util.UUID, param1: java.util.UUID, param2: java.util.UUID): boolean;
                    public static uint16(param0: number): number;
                    public static getUint16(param0: java.nio.ByteBuffer, param1: number): number;
                    public static uint32(param0: number): number;
                    public static getUint8(param0: java.nio.ByteBuffer, param1: number): number;
                    public static maskedEquals(param0: number[], param1: number[], param2: number[]): boolean;
                    public static put(param0: java.nio.ByteBuffer, param1: number, param2: number[]): void;
                    public static bytesToBEInt(param0: number[]): number;
                    public static maskedEquals(param0: number, param1: number, param2: number): boolean;
                    public static unpackBits(param0: number): number[];
                    public static packBits(param0: number[]): number;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class BitwiseInputStream extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.BitwiseInputStream>;
                    public available(): number;
                    public read(param0: number): number;
                    public constructor(param0: number[]);
                    public skip(param0: number): void;
                    public readByteArray(param0: number): number[];
                }
                export module BitwiseInputStream {
                    export class AccessException extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.util.BitwiseInputStream.AccessException>;
                        public constructor(param0: string);
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class BitwiseOutputStream extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.BitwiseOutputStream>;
                    public toByteArray(): number[];
                    public write(param0: number, param1: number): void;
                    public skip(param0: number): void;
                    public writeByteArray(param0: number, param1: number[]): void;
                    public constructor(param0: number);
                }
                export module BitwiseOutputStream {
                    export class AccessException extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.util.BitwiseOutputStream.AccessException>;
                        public constructor(param0: string);
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class CallbackRegistry<C, T, A> extends java.lang.Cloneable {
                    public static class: java.lang.Class<com.android.internal.util.CallbackRegistry<any, any, any>>;
                    public notifyCallbacks(param0: any, param1: number, param2: any): void;
                    public add(param0: any): void;
                    public isEmpty(): boolean;
                    public constructor(param0: com.android.internal.util.CallbackRegistry.NotifierCallback<any, any, any>);
                    public copyListeners(): java.util.ArrayList<any>;
                    public remove(param0: any): void;
                    public clear(): void;
                    public clone(): com.android.internal.util.CallbackRegistry<any, any, any>;
                }
                export module CallbackRegistry {
                    export abstract class NotifierCallback<C, T, A> extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.util.CallbackRegistry.NotifierCallback<any, any, any>>;
                        public constructor();
                        public onNotifyCallback(param0: C, param1: T, param2: number, param3: A): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class CharSequences extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.CharSequences>;
                    public static forAsciiBytes(param0: number[], param1: number, param2: number): string;
                    public constructor();
                    public static compareToIgnoreCase(param0: string, param1: string): number;
                    public static equals(param0: string, param1: string): boolean;
                    public static forAsciiBytes(param0: number[]): string;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class CollectionUtils extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.CollectionUtils>;
                    public static map(param0: java.util.List<any>, param1: any /* any*/): java.util.List;
                    public static filter(param0: java.util.List<any>, param1: java.lang.Class<any>): java.util.List;
                    public static size(param0: java.util.Collection<any>): number;
                    public static emptyIfNull(param0: java.util.Set): java.util.Set;
                    public static find(param0: java.util.List<any>, param1: any /* any*/): any;
                    public static any(param0: java.util.List<any>, param1: any /* any*/): boolean;
                    public static copyOf(param0: java.util.List): java.util.List;
                    public static emptyIfNull(param0: java.util.List): java.util.List;
                    public static remove(param0: java.util.List<any>, param1: any): java.util.List;
                    public static filter(param0: java.util.List<any>, param1: any /* any*/): java.util.List;
                    public static mapNotNull(param0: java.util.List<any>, param1: any /* any*/): java.util.List;
                    public static add(param0: java.util.List<any>, param1: any): java.util.List;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class ConcurrentUtils extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.ConcurrentUtils>;
                    public static newFixedThreadPool(param0: number, param1: string, param2: number): java.util.concurrent.ExecutorService;
                    public static waitForFutureNoInterrupt(param0: java.util.concurrent.Future, param1: string): any;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class DumpUtils extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.DumpUtils>;
                    public static dumpAsync(param0: globalAndroid.os.Handler, param1: com.android.internal.util.DumpUtils.Dump, param2: java.io.PrintWriter, param3: string, param4: number): void;
                    public static checkDumpPermission(param0: globalAndroid.content.Context, param1: string, param2: java.io.PrintWriter): boolean;
                    public static checkDumpAndUsageStatsPermission(param0: globalAndroid.content.Context, param1: string, param2: java.io.PrintWriter): boolean;
                    public static checkUsageStatsPermission(param0: globalAndroid.content.Context, param1: string, param2: java.io.PrintWriter): boolean;
                }
                export module DumpUtils {
                    export class Dump extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.util.DumpUtils.Dump>;
                        /**
                         * Constructs a new instance of the com.android.internal.util.DumpUtils$Dump interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            dump(param0: java.io.PrintWriter, param1: string): void;
                        });
                        public constructor();
                        public dump(param0: java.io.PrintWriter, param1: string): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class EmergencyAffordanceManager extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.EmergencyAffordanceManager>;
                    public static ENABLED: boolean;
                    public constructor(param0: globalAndroid.content.Context);
                    public performEmergencyCall(): void;
                    public needsEmergencyAffordance(): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class ExponentiallyBucketedHistogram extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.ExponentiallyBucketedHistogram>;
                    public reset(): void;
                    public log(param0: string, param1: string): void;
                    public add(param0: number): void;
                    public constructor(param0: number);
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class FastMath extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.FastMath>;
                    public constructor();
                    public static round(param0: number): number;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class FastPrintWriter extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.FastPrintWriter>;
                    public constructor(param0: java.io.OutputStream);
                    public println(param0: number): void;
                    public print(param0: string[]): void;
                    public write(param0: string, param1: number, param2: number): void;
                    public write(param0: string): void;
                    public close(): void;
                    public print(param0: number): void;
                    public println(param0: string): void;
                    public constructor(param0: globalAndroid.util.Printer);
                    public print(param0: string): void;
                    public flush(): void;
                    public setError(): void;
                    public write(param0: number): void;
                    public checkError(): boolean;
                    public println(): void;
                    public constructor(param0: java.io.OutputStream, param1: boolean, param2: number);
                    public constructor(param0: java.io.Writer, param1: boolean, param2: number);
                    public println(param0: string[]): void;
                    public append(param0: string, param1: number, param2: number): java.io.PrintWriter;
                    public constructor(param0: java.io.Writer);
                    public write(param0: string[], param1: number, param2: number): void;
                    public constructor(param0: java.io.Writer, param1: boolean);
                    public constructor(param0: globalAndroid.util.Printer, param1: number);
                    public constructor(param0: java.io.OutputStream, param1: boolean);
                    public clearError(): void;
                }
                export module FastPrintWriter {
                    export class DummyWriter extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.util.FastPrintWriter.DummyWriter>;
                        public close(): void;
                        public flush(): void;
                        public write(param0: string[], param1: number, param2: number): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class FastXmlSerializer extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.FastXmlSerializer>;
                    public getNamespace(): string;
                    public processingInstruction(param0: string): void;
                    public comment(param0: string): void;
                    public setFeature(param0: string, param1: boolean): void;
                    public endDocument(): void;
                    public getPrefix(param0: string, param1: boolean): string;
                    public setOutput(param0: java.io.Writer): void;
                    public setPrefix(param0: string, param1: string): void;
                    public ignorableWhitespace(param0: string): void;
                    public constructor();
                    public entityRef(param0: string): void;
                    public attribute(param0: string, param1: string, param2: string): org.xmlpull.v1.XmlSerializer;
                    public setProperty(param0: string, param1: any): void;
                    public startDocument(param0: string, param1: java.lang.Boolean): void;
                    public startTag(param0: string, param1: string): org.xmlpull.v1.XmlSerializer;
                    public getProperty(param0: string): any;
                    public flush(): void;
                    public setOutput(param0: java.io.OutputStream, param1: string): void;
                    public getFeature(param0: string): boolean;
                    public getName(): string;
                    public text(param0: string[], param1: number, param2: number): org.xmlpull.v1.XmlSerializer;
                    public getDepth(): number;
                    public endTag(param0: string, param1: string): org.xmlpull.v1.XmlSerializer;
                    public text(param0: string): org.xmlpull.v1.XmlSerializer;
                    public cdsect(param0: string): void;
                    public docdecl(param0: string): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class FileRotator extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.FileRotator>;
                    public rewriteActive(param0: com.android.internal.util.FileRotator.Rewriter, param1: number): void;
                    public maybeRotate(param0: number): void;
                    public deleteAll(): void;
                    public combineActive(param0: com.android.internal.util.FileRotator.Reader, param1: com.android.internal.util.FileRotator.Writer, param2: number): void;
                    public dumpAll(param0: java.io.OutputStream): void;
                    public constructor(param0: java.io.File, param1: string, param2: number, param3: number);
                    public rewriteAll(param0: com.android.internal.util.FileRotator.Rewriter): void;
                    public readMatching(param0: com.android.internal.util.FileRotator.Reader, param1: number, param2: number): void;
                }
                export module FileRotator {
                    export class FileInfo extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.util.FileRotator.FileInfo>;
                        public endMillis: number;
                        public prefix: string;
                        public startMillis: number;
                        public parse(param0: string): boolean;
                        public build(): string;
                        public constructor(param0: string);
                        public isActive(): boolean;
                    }
                    export class Reader extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.util.FileRotator.Reader>;
                        /**
                         * Constructs a new instance of the com.android.internal.util.FileRotator$Reader interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            read(param0: java.io.InputStream): void;
                        });
                        public constructor();
                        public read(param0: java.io.InputStream): void;
                    }
                    export class Rewriter implements com.android.internal.util.FileRotator.Reader, com.android.internal.util.FileRotator.Writer {
                        public static class: java.lang.Class<com.android.internal.util.FileRotator.Rewriter>;
                        /**
                         * Constructs a new instance of the com.android.internal.util.FileRotator$Rewriter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            reset(): void;
                            shouldWrite(): boolean;
                            read(param0: java.io.InputStream): void;
                            write(param0: java.io.OutputStream): void;
                        });
                        public constructor();
                        public read(param0: java.io.InputStream): void;
                        public shouldWrite(): boolean;
                        public write(param0: java.io.OutputStream): void;
                        public reset(): void;
                    }
                    export class Writer extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.util.FileRotator.Writer>;
                        /**
                         * Constructs a new instance of the com.android.internal.util.FileRotator$Writer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            write(param0: java.io.OutputStream): void;
                        });
                        public constructor();
                        public write(param0: java.io.OutputStream): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class FunctionalUtils extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.FunctionalUtils>;
                }
                export module FunctionalUtils {
                    export class ThrowingRunnable extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.util.FunctionalUtils.ThrowingRunnable>;
                        /**
                         * Constructs a new instance of the com.android.internal.util.FunctionalUtils$ThrowingRunnable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            run(): void;
                        });
                        public constructor();
                        public run(): void;
                    }
                    export class ThrowingSupplier<T> extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.util.FunctionalUtils.ThrowingSupplier<any>>;
                        /**
                         * Constructs a new instance of the com.android.internal.util.FunctionalUtils$ThrowingSupplier interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            get(): T;
                        });
                        public constructor();
                        public get(): T;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class GrowingArrayUtils extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.GrowingArrayUtils>;
                    public static append(param0: number[], param1: number, param2: number): number[];
                    public static append(param0: any[], param1: number, param2: any): any[];
                    public static append(param0: boolean[], param1: number, param2: boolean): boolean[];
                    public static growSize(param0: number): number;
                    public static insert(param0: boolean[], param1: number, param2: number, param3: boolean): boolean[];
                    public static insert(param0: number[], param1: number, param2: number, param3: number): number[];
                    public static insert(param0: any[], param1: number, param2: number, param3: any): any[];
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class HexDump extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.HexDump>;
                    public static toHexString(param0: number): string;
                    public constructor();
                    public static toHexString(param0: number[], param1: number, param2: number, param3: boolean): string;
                    public static toHexString(param0: number[]): string;
                    public static dumpHexString(param0: number[]): string;
                    public static dumpHexString(param0: number[], param1: number, param2: number): string;
                    public static hexStringToByteArray(param0: string): number[];
                    public static toHexString(param0: number[], param1: boolean): string;
                    public static toHexString(param0: number[], param1: number, param2: number): string;
                    public static toByteArray(param0: number): number[];
                    public static appendByteAsHex(param0: java.lang.StringBuilder, param1: number, param2: boolean): java.lang.StringBuilder;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class IState extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.IState>;
                    /**
                     * Constructs a new instance of the com.android.internal.util.IState interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        enter(): void;
                        exit(): void;
                        getName(): string;
                        processMessage(param0: globalAndroid.os.Message): boolean;
                    });
                    public constructor();
                    public static HANDLED: boolean;
                    public static NOT_HANDLED: boolean;
                    public enter(): void;
                    public getName(): string;
                    public exit(): void;
                    public processMessage(param0: globalAndroid.os.Message): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class ImageUtils extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.ImageUtils>;
                    public static isGrayscale(param0: number): boolean;
                    public constructor();
                    public isGrayscale(param0: globalAndroid.graphics.Bitmap): boolean;
                    public static buildScaledBitmap(param0: globalAndroid.graphics.drawable.Drawable, param1: number, param2: number): globalAndroid.graphics.Bitmap;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class IndentingPrintWriter extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.IndentingPrintWriter>;
                    public write(param0: string, param1: number, param2: number): void;
                    public constructor(param0: java.io.Writer, param1: string, param2: number);
                    public decreaseIndent(): void;
                    public increaseIndent(): void;
                    public constructor(param0: java.io.Writer, param1: string);
                    public printPair(param0: string, param1: any[]): void;
                    public printPair(param0: string, param1: any): void;
                    public write(param0: string[], param1: number, param2: number): void;
                    public printHexPair(param0: string, param1: number): void;
                    public write(param0: number): void;
                    public println(): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class IntPair extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.IntPair>;
                    public static second(param0: number): number;
                    public static of(param0: number, param1: number): number;
                    public static first(param0: number): number;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class JournaledFile extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.JournaledFile>;
                    public commit(): void;
                    public rollback(): void;
                    public constructor(param0: java.io.File, param1: java.io.File);
                    public chooseForRead(): java.io.File;
                    public chooseForWrite(): java.io.File;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class LineBreakBufferedWriter extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.LineBreakBufferedWriter>;
                    public write(param0: string, param1: number, param2: number): void;
                    public write(param0: string[], param1: number, param2: number): void;
                    public constructor(param0: java.io.Writer, param1: number, param2: number);
                    public constructor(param0: java.io.Writer, param1: number);
                    public flush(): void;
                    public write(param0: number): void;
                    public println(): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class LocalLog extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.LocalLog>;
                    public dump(param0: java.io.PrintWriter, param1: string, param2: string): boolean;
                    public w(param0: string): void;
                    public constructor(param0: string);
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class MemInfoReader extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.MemInfoReader>;
                    public getKernelUsedSizeKb(): number;
                    public getRawInfo(): number[];
                    public getTotalSize(): number;
                    public readMemInfo(): void;
                    public getSwapTotalSizeKb(): number;
                    public getFreeSize(): number;
                    public getFreeSizeKb(): number;
                    public getCachedSize(): number;
                    public getKernelUsedSize(): number;
                    public constructor();
                    public getZramTotalSizeKb(): number;
                    public getCachedSizeKb(): number;
                    public getTotalSizeKb(): number;
                    public getSwapFreeSizeKb(): number;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class MessageUtils extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.MessageUtils>;
                    public static DEFAULT_PREFIXES: string[];
                    public constructor();
                    public static findMessageNames(param0: java.lang.Class[], param1: string[]): globalAndroid.util.SparseArray<string>;
                    public static findMessageNames(param0: java.lang.Class[]): globalAndroid.util.SparseArray<string>;
                }
                export module MessageUtils {
                    export class DuplicateConstantError extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.util.MessageUtils.DuplicateConstantError>;
                        public constructor(param0: string, param1: string, param2: number);
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class MimeIconUtils extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.MimeIconUtils>;
                    public static loadMimeIcon(param0: globalAndroid.content.Context, param1: string): globalAndroid.graphics.drawable.Drawable;
                    public constructor();
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class NotificationColorUtil extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.NotificationColorUtil>;
                    public isGrayscaleIcon(param0: globalAndroid.graphics.Bitmap): boolean;
                    public static ensureTextContrastOnBlack(param0: number): number;
                    public static changeColorLightness(param0: number, param1: number): number;
                    public static isColorLight(param0: number): boolean;
                    public static getShiftedColor(param0: number, param1: number): number;
                    public static findContrastColor(param0: number, param1: number, param2: boolean, param3: number): number;
                    public static resolveAmbientColor(param0: globalAndroid.content.Context, param1: number): number;
                    public static getInstance(param0: globalAndroid.content.Context): com.android.internal.util.NotificationColorUtil;
                    public static resolvePrimaryColor(param0: globalAndroid.content.Context, param1: number): number;
                    public invertCharSequenceColors(param0: string): string;
                    public isGrayscaleIcon(param0: globalAndroid.graphics.drawable.Drawable): boolean;
                    public isGrayscaleIcon(param0: globalAndroid.content.Context, param1: any): boolean;
                    public static resolveSecondaryColor(param0: globalAndroid.content.Context, param1: number): number;
                    public static resolveActionBarColor(param0: globalAndroid.content.Context, param1: number): number;
                    public static satisfiesTextContrast(param0: number, param1: number): boolean;
                    public static ensureLargeTextContrast(param0: number, param1: number): number;
                    public static calculateLuminance(param0: number): number;
                    public static ensureTextBackgroundColor(param0: number, param1: number, param2: number): number;
                    public static findContrastColorAgainstDark(param0: number, param1: number, param2: boolean, param3: number): number;
                    public isGrayscaleIcon(param0: globalAndroid.content.Context, param1: number): boolean;
                    public static resolveColor(param0: globalAndroid.content.Context, param1: number): number;
                    public static compositeColors(param0: number, param1: number): number;
                    public static calculateContrast(param0: number, param1: number): number;
                    public static findAlphaToMeetContrast(param0: number, param1: number, param2: number): number;
                    public static resolveContrastColor(param0: globalAndroid.content.Context, param1: number, param2: number): number;
                }
                export module NotificationColorUtil {
                    export class ColorUtilsFromCompat extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.util.NotificationColorUtil.ColorUtilsFromCompat>;
                        public static RGBToLAB(param0: number, param1: number, param2: number, param3: number[]): void;
                        public static calculateLuminance(param0: number): number;
                        public static LABToXYZ(param0: number, param1: number, param2: number, param3: number[]): void;
                        public static colorToHSL(param0: number, param1: number[]): void;
                        public static HSLToColor(param0: number[]): number;
                        public static RGBToHSL(param0: number, param1: number, param2: number, param3: number[]): void;
                        public static calculateContrast(param0: number, param1: number): number;
                        public static getTempDouble3Array(): number[];
                        public static LABToColor(param0: number, param1: number, param2: number): number;
                        public static RGBToXYZ(param0: number, param1: number, param2: number, param3: number[]): void;
                        public static colorToXYZ(param0: number, param1: number[]): void;
                        public static XYZToColor(param0: number, param1: number, param2: number): number;
                        public static XYZToLAB(param0: number, param1: number, param2: number, param3: number[]): void;
                        public static colorToLAB(param0: number, param1: number[]): void;
                        public static compositeColors(param0: number, param1: number): number;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class NotificationMessagingUtil extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.NotificationMessagingUtil>;
                    public constructor(param0: globalAndroid.content.Context);
                    public isImportantMessaging(param0: globalAndroid.service.notification.StatusBarNotification, param1: number): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class ObjectUtils extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.ObjectUtils>;
                    public static firstNotNull(param0: any, param1: any): any;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class Preconditions extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.Preconditions>;
                    public static checkArgumentFinite(param0: number, param1: string): number;
                    public static checkStringNotEmpty(param0: string, param1: any): string;
                    public static checkArgumentInRange(param0: number, param1: number, param2: number, param3: string): number;
                    public static checkCollectionElementsNotNull(param0: java.util.Collection, param1: string): java.util.Collection;
                    public static checkArgument(param0: boolean, param1: any): void;
                    public static checkFlagsArgument(param0: number, param1: number): number;
                    public static checkNotNull(param0: any): any;
                    public static checkArgumentPositive(param0: number, param1: string): number;
                    public static checkNotNull(param0: any, param1: string, param2: any[]): any;
                    public static checkStringNotEmpty(param0: string): string;
                    public constructor();
                    public static checkArgumentNonnegative(param0: number, param1: string): number;
                    public static checkArgument(param0: boolean, param1: string, param2: any[]): void;
                    public static checkState(param0: boolean, param1: string): void;
                    public static checkState(param0: boolean): void;
                    public static checkArgument(param0: boolean): void;
                    public static checkNotNull(param0: any, param1: any): any;
                    public static checkArgumentNonnegative(param0: number): number;
                    public static checkCollectionNotEmpty(param0: java.util.Collection, param1: string): java.util.Collection;
                    public static checkArrayElementsInRange(param0: number[], param1: number, param2: number, param3: string): number[];
                    public static checkArrayElementsNotNull(param0: any[], param1: string): any[];
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class Predicate<T> extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.Predicate<any>>;
                    /**
                     * Constructs a new instance of the com.android.internal.util.Predicate<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        apply(param0: T): boolean;
                    });
                    public constructor();
                    public apply(param0: T): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class Predicates extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.Predicates>;
                    public static or(param0: com.android.internal.util.Predicate<any[]>): com.android.internal.util.Predicate<any>;
                    public static or(param0: java.lang.Iterable): com.android.internal.util.Predicate<any>;
                    public static and(param0: java.lang.Iterable): com.android.internal.util.Predicate<any>;
                    public static and(param0: com.android.internal.util.Predicate<any[]>): com.android.internal.util.Predicate<any>;
                    public static not(param0: com.android.internal.util.Predicate<any>): com.android.internal.util.Predicate<any>;
                }
                export module Predicates {
                    export class AndPredicate<T> extends com.android.internal.util.Predicate<any> {
                        public static class: java.lang.Class<com.android.internal.util.Predicates.AndPredicate<any>>;
                        public apply(param0: any): boolean;
                    }
                    export class NotPredicate<T> extends com.android.internal.util.Predicate<any> {
                        public static class: java.lang.Class<com.android.internal.util.Predicates.NotPredicate<any>>;
                        public apply(param0: any): boolean;
                    }
                    export class OrPredicate<T> extends com.android.internal.util.Predicate<any> {
                        public static class: java.lang.Class<com.android.internal.util.Predicates.OrPredicate<any>>;
                        public apply(param0: any): boolean;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class ProcFileReader extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.ProcFileReader>;
                    public finishLine(): void;
                    public constructor(param0: java.io.InputStream);
                    public nextInt(): number;
                    public nextOptionalLong(param0: number): number;
                    public close(): void;
                    public nextString(): string;
                    public nextLong(): number;
                    public constructor(param0: java.io.InputStream, param1: number);
                    public hasMoreData(): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class ProgressReporter extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.ProgressReporter>;
                    public startSegment(param0: number): number[];
                    public setProgress(param0: number, param1: number, param2: string): void;
                    public setProgress(param0: number, param1: string): void;
                    public finish(): void;
                    public addListener(param0: globalAndroid.os.IProgressListener): void;
                    public start(): void;
                    public setProgress(param0: number, param1: number): void;
                    public constructor(param0: number);
                    public endSegment(param0: number[]): void;
                    public setProgress(param0: number): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class Protocol extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.Protocol>;
                    public static BASE_CONNECTIVITY_MANAGER: number;
                    public static BASE_DATA_CONNECTION: number;
                    public static BASE_DATA_CONNECTION_AC: number;
                    public static BASE_DATA_CONNECTION_TRACKER: number;
                    public static BASE_DHCP: number;
                    public static BASE_ETHERNET: number;
                    public static BASE_NETWORK_AGENT: number;
                    public static BASE_NETWORK_FACTORY: number;
                    public static BASE_NETWORK_MONITOR: number;
                    public static BASE_NETWORK_STATE_TRACKER: number;
                    public static BASE_NSD_MANAGER: number;
                    public static BASE_SYSTEM_ASYNC_CHANNEL: number;
                    public static BASE_SYSTEM_RESERVED: number;
                    public static BASE_TETHERING: number;
                    public static BASE_WIFI: number;
                    public static BASE_WIFI_CONTROLLER: number;
                    public static BASE_WIFI_LOGGER: number;
                    public static BASE_WIFI_MANAGER: number;
                    public static BASE_WIFI_MONITOR: number;
                    public static BASE_WIFI_P2P_MANAGER: number;
                    public static BASE_WIFI_P2P_SERVICE: number;
                    public static BASE_WIFI_PASSPOINT_MANAGER: number;
                    public static BASE_WIFI_PASSPOINT_SERVICE: number;
                    public static BASE_WIFI_RTT_MANAGER: number;
                    public static BASE_WIFI_RTT_SERVICE: number;
                    public static BASE_WIFI_SCANNER: number;
                    public static BASE_WIFI_SCANNER_SERVICE: number;
                    public static BASE_WIFI_WATCHDOG: number;
                    public static MAX_MESSAGE: number;
                    public constructor();
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class RingBufferIndices extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.RingBufferIndices>;
                    public clear(): void;
                    public indexOf(param0: number): number;
                    public size(): number;
                    public add(): number;
                    public constructor(param0: number);
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class ScreenShapeHelper extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.ScreenShapeHelper>;
                    public constructor();
                    public static getWindowOutsetBottomPx(param0: globalAndroid.content.res.Resources): number;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class ScreenshotHelper extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.ScreenshotHelper>;
                    public constructor(param0: globalAndroid.content.Context);
                    public takeScreenshot(param0: number, param1: boolean, param2: boolean, param3: globalAndroid.os.Handler): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class SizedInputStream extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.SizedInputStream>;
                    public read(): number;
                    public read(param0: number[], param1: number, param2: number): number;
                    public close(): void;
                    public constructor(param0: java.io.InputStream, param1: number);
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class State extends com.android.internal.util.IState {
                    public static class: java.lang.Class<com.android.internal.util.State>;
                    public enter(): void;
                    public constructor();
                    public getName(): string;
                    public exit(): void;
                    public processMessage(param0: globalAndroid.os.Message): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class StateMachine extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.StateMachine>;
                    public static HANDLED: boolean;
                    public static NOT_HANDLED: boolean;
                    public constructor(param0: string, param1: globalAndroid.os.Looper);
                    public getLogRecString(param0: globalAndroid.os.Message): string;
                    public constructor(param0: string);
                    public obtainMessage(param0: number, param1: number, param2: number, param3: any): globalAndroid.os.Message;
                    public quitNow(): void;
                    public removeState(param0: com.android.internal.util.State): void;
                    public isQuit(param0: globalAndroid.os.Message): boolean;
                    public obtainMessage(param0: number): globalAndroid.os.Message;
                    public addState(param0: com.android.internal.util.State): void;
                    public transitionToHaltingState(): void;
                    public sendMessageAtFrontOfQueue(param0: number, param1: number, param2: number): void;
                    public setLogRecSize(param0: number): void;
                    public sendMessageDelayed(param0: number, param1: any, param2: number): void;
                    public copyLogRecs(): java.util.Collection<com.android.internal.util.StateMachine.LogRec>;
                    public sendMessageAtFrontOfQueue(param0: number, param1: number, param2: number, param3: any): void;
                    public onPreHandleMessage(param0: globalAndroid.os.Message): void;
                    public setDbg(param0: boolean): void;
                    public logi(param0: string): void;
                    public getLogRecMaxSize(): number;
                    public obtainMessage(param0: number, param1: any): globalAndroid.os.Message;
                    public obtainMessage(param0: number, param1: number, param2: number): globalAndroid.os.Message;
                    public transitionTo(param0: com.android.internal.util.IState): void;
                    public getLogRecCount(): number;
                    public getLogRecSize(): number;
                    public sendMessageAtFrontOfQueue(param0: globalAndroid.os.Message): void;
                    public sendMessageDelayed(param0: globalAndroid.os.Message, param1: number): void;
                    public log(param0: string): void;
                    public addState(param0: com.android.internal.util.State, param1: com.android.internal.util.State): void;
                    public sendMessageDelayed(param0: number, param1: number, param2: number): void;
                    public logd(param0: string): void;
                    public getHandler(): globalAndroid.os.Handler;
                    public sendMessage(param0: number): void;
                    public isDbg(): boolean;
                    public logw(param0: string): void;
                    public sendMessageAtFrontOfQueue(param0: number): void;
                    public sendMessage(param0: number, param1: number, param2: number): void;
                    public sendMessage(param0: number, param1: number): void;
                    public loge(param0: string, param1: java.lang.Throwable): void;
                    public sendMessageDelayed(param0: number, param1: number): void;
                    public start(): void;
                    public hasDeferredMessages(param0: number): boolean;
                    public constructor(param0: string, param1: globalAndroid.os.Handler);
                    public obtainMessage(): globalAndroid.os.Message;
                    public toString(): string;
                    public setLogOnlyTransitions(param0: boolean): void;
                    public loge(param0: string): void;
                    public getWhatToString(param0: number): string;
                    public sendMessage(param0: number, param1: any): void;
                    public onPostHandleMessage(param0: globalAndroid.os.Message): void;
                    public removeMessages(param0: number): void;
                    public recordLogRec(param0: globalAndroid.os.Message): boolean;
                    public setInitialState(param0: com.android.internal.util.State): void;
                    public onQuitting(): void;
                    public sendMessageDelayed(param0: number, param1: number, param2: number, param3: number): void;
                    public sendMessageDelayed(param0: number, param1: number, param2: number, param3: any, param4: number): void;
                    public deferMessage(param0: globalAndroid.os.Message): void;
                    public hasMessages(param0: number): boolean;
                    public removeDeferredMessages(param0: number): void;
                    public addLogRec(param0: string): void;
                    public getCurrentMessage(): globalAndroid.os.Message;
                    public logAndAddLogRec(param0: string): void;
                    public logv(param0: string): void;
                    public sendMessage(param0: globalAndroid.os.Message): void;
                    public getLogRec(param0: number): com.android.internal.util.StateMachine.LogRec;
                    public getCurrentState(): com.android.internal.util.IState;
                    public obtainMessage(param0: number, param1: number): globalAndroid.os.Message;
                    public getName(): string;
                    public haltedProcessMessage(param0: globalAndroid.os.Message): void;
                    public hasDeferredMessages(param0: number, param1: any): boolean;
                    public sendMessageAtFrontOfQueue(param0: number, param1: any): void;
                    public onHalting(): void;
                    public sendMessageAtFrontOfQueue(param0: number, param1: number): void;
                    public unhandledMessage(param0: globalAndroid.os.Message): void;
                    public sendMessage(param0: number, param1: number, param2: number, param3: any): void;
                    public dump(param0: java.io.FileDescriptor, param1: java.io.PrintWriter, param2: string[]): void;
                    public quit(): void;
                }
                export module StateMachine {
                    export class LogRec extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.util.StateMachine.LogRec>;
                        public update(param0: com.android.internal.util.StateMachine, param1: globalAndroid.os.Message, param2: string, param3: com.android.internal.util.IState, param4: com.android.internal.util.IState, param5: com.android.internal.util.IState): void;
                        public getWhat(): number;
                        public getDestState(): com.android.internal.util.IState;
                        public getOriginalState(): com.android.internal.util.IState;
                        public getState(): com.android.internal.util.IState;
                        public getTime(): number;
                        public toString(): string;
                        public getInfo(): string;
                    }
                    export class LogRecords extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.util.StateMachine.LogRecords>;
                    }
                    export class SmHandler extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.util.StateMachine.SmHandler>;
                        public handleMessage(param0: globalAndroid.os.Message): void;
                    }
                    export module SmHandler {
                        export class HaltingState extends com.android.internal.util.State {
                            public static class: java.lang.Class<com.android.internal.util.StateMachine.SmHandler.HaltingState>;
                            public enter(): void;
                            public processMessage(param0: globalAndroid.os.Message): boolean;
                            public getName(): string;
                            public exit(): void;
                        }
                        export class QuittingState extends com.android.internal.util.State {
                            public static class: java.lang.Class<com.android.internal.util.StateMachine.SmHandler.QuittingState>;
                            public enter(): void;
                            public processMessage(param0: globalAndroid.os.Message): boolean;
                            public getName(): string;
                            public exit(): void;
                        }
                        export class StateInfo extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.util.StateMachine.SmHandler.StateInfo>;
                            public toString(): string;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class ToBooleanFunction<T> extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.ToBooleanFunction<any>>;
                    /**
                     * Constructs a new instance of the com.android.internal.util.ToBooleanFunction<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        apply(param0: T): boolean;
                    });
                    public constructor();
                    public apply(param0: T): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class TokenBucket extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.TokenBucket>;
                    public available(): number;
                    public get(param0: number): number;
                    public constructor(param0: number, param1: number, param2: number);
                    public get(): boolean;
                    public reset(param0: number): void;
                    public has(): boolean;
                    public constructor(param0: number, param1: number);
                    public capacity(): number;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class TypedProperties extends java.util.HashMap<string, any> {
                    public static class: java.lang.Class<com.android.internal.util.TypedProperties>;
                    public static STRING_NOT_SET: number;
                    public static STRING_NULL: number;
                    public static STRING_SET: number;
                    public static STRING_TYPE_MISMATCH: number;
                    public getDouble(param0: string, param1: number): number;
                    public getByte(param0: string, param1: number): number;
                    public getInt(param0: string): number;
                    public getStringInfo(param0: string): number;
                    public getByte(param0: string): number;
                    public getFloat(param0: string): number;
                    public getBoolean(param0: string, param1: boolean): boolean;
                    public getString(param0: string): string;
                    public getString(param0: string, param1: string): string;
                    public getShort(param0: string): number;
                    public getLong(param0: string, param1: number): number;
                    public getBoolean(param0: string): boolean;
                    public getShort(param0: string, param1: number): number;
                    public constructor();
                    public load(param0: java.io.Reader): void;
                    public getDouble(param0: string): number;
                    public getFloat(param0: string, param1: number): number;
                    public getLong(param0: string): number;
                    public getInt(param0: string, param1: number): number;
                    public get(param0: any): any;
                }
                export module TypedProperties {
                    export class ParseException extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.util.TypedProperties.ParseException>;
                    }
                    export class TypeException extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.util.TypedProperties.TypeException>;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class UserIcons extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.UserIcons>;
                    public static convertToBitmap(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.graphics.Bitmap;
                    public constructor();
                    public static getDefaultUserIcon(param0: number, param1: boolean): globalAndroid.graphics.drawable.Drawable;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class VirtualRefBasePtr extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.VirtualRefBasePtr>;
                    public finalize(): void;
                    public get(): number;
                    public release(): void;
                    public constructor(param0: number);
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class WakeupMessage extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.WakeupMessage>;
                    public mArg1: number;
                    public mArg2: number;
                    public mCmd: number;
                    public mCmdName: string;
                    public mHandler: globalAndroid.os.Handler;
                    public mObj: any;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.os.Handler, param2: string, param3: number, param4: number, param5: number);
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.os.Handler, param2: string, param3: number, param4: number);
                    public schedule(param0: number): void;
                    public onAlarm(): void;
                    public cancel(): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.os.Handler, param2: string, param3: number);
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.os.Handler, param2: string, param3: number, param4: number, param5: number, param6: any);
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export class XmlUtils extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.util.XmlUtils>;
                    public static readThisByteArrayXml(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: string[]): number[];
                    public static writeByteArrayXml(param0: number[], param1: string, param2: org.xmlpull.v1.XmlSerializer): void;
                    public static readThisDoubleArrayXml(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: string[]): number[];
                    public static writeListXml(param0: java.util.List<any>, param1: string, param2: org.xmlpull.v1.XmlSerializer): void;
                    public static readThisLongArrayXml(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: string[]): number[];
                    public static writeStringAttribute(param0: org.xmlpull.v1.XmlSerializer, param1: string, param2: string): void;
                    public static parseUnsignedIntAttribute(param0: string): number;
                    public static writeDoubleArrayXml(param0: number[], param1: string, param2: org.xmlpull.v1.XmlSerializer): void;
                    public static convertValueToInt(param0: string, param1: number): number;
                    public static nextElement(param0: org.xmlpull.v1.XmlPullParser): void;
                    public static readListXml(param0: java.io.InputStream): java.util.ArrayList<any>;
                    public static convertValueToList(param0: string, param1: string[], param2: number): number;
                    public constructor();
                    public static readThisStringArrayXml(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: string[]): string[];
                    public static readIntAttribute(param0: org.xmlpull.v1.XmlPullParser, param1: string): number;
                    public static writeMapXml(param0: java.util.Map<any, any>, param1: java.io.OutputStream): void;
                    public static readByteArrayAttribute(param0: org.xmlpull.v1.XmlPullParser, param1: string): number[];
                    public static writeMapXml(param0: java.util.Map<any, any>, param1: string, param2: org.xmlpull.v1.XmlSerializer): void;
                    public static writeUriAttribute(param0: org.xmlpull.v1.XmlSerializer, param1: string, param2: globalAndroid.net.Uri): void;
                    public static writeIntAttribute(param0: org.xmlpull.v1.XmlSerializer, param1: string, param2: number): void;
                    public static readBooleanAttribute(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: boolean): boolean;
                    public static readThisBooleanArrayXml(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: string[]): boolean[];
                    public static writeFloatAttribute(param0: org.xmlpull.v1.XmlSerializer, param1: string, param2: number): void;
                    public static readIntAttribute(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: number): number;
                    public static writeIntArrayXml(param0: number[], param1: string, param2: org.xmlpull.v1.XmlSerializer): void;
                    public static writeListXml(param0: java.util.List<any>, param1: java.io.OutputStream): void;
                    public static writeSetXml(param0: java.util.Set, param1: string, param2: org.xmlpull.v1.XmlSerializer): void;
                    public static writeBooleanArrayXml(param0: boolean[], param1: string, param2: org.xmlpull.v1.XmlSerializer): void;
                    public static readThisListXml(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: string[]): java.util.ArrayList<any>;
                    public static writeBooleanAttribute(param0: org.xmlpull.v1.XmlSerializer, param1: string, param2: boolean): void;
                    public static writeStringArrayXml(param0: string[], param1: string, param2: org.xmlpull.v1.XmlSerializer): void;
                    public static readLongAttribute(param0: org.xmlpull.v1.XmlPullParser, param1: string): number;
                    public static readFloatAttribute(param0: org.xmlpull.v1.XmlPullParser, param1: string): number;
                    public static readUriAttribute(param0: org.xmlpull.v1.XmlPullParser, param1: string): globalAndroid.net.Uri;
                    public static nextElementWithin(param0: org.xmlpull.v1.XmlPullParser, param1: number): boolean;
                    public static readBitmapAttribute(param0: org.xmlpull.v1.XmlPullParser, param1: string): globalAndroid.graphics.Bitmap;
                    public static readSetXml(param0: java.io.InputStream): java.util.HashSet;
                    public static readStringAttribute(param0: org.xmlpull.v1.XmlPullParser, param1: string): string;
                    public static readThisMapXml(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: string[]): java.util.HashMap<string, any>;
                    public static writeMapXml(param0: java.util.Map<any, any>, param1: string, param2: org.xmlpull.v1.XmlSerializer, param3: com.android.internal.util.XmlUtils.WriteMapCallback): void;
                    public static readThisArrayMapXml(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: string[], param3: com.android.internal.util.XmlUtils.ReadMapCallback): globalAndroid.util.ArrayMap<string, any>;
                    public static writeValueXml(param0: any, param1: string, param2: org.xmlpull.v1.XmlSerializer): void;
                    public static convertValueToBoolean(param0: string, param1: boolean): boolean;
                    public static readThisSetXml(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: string[]): java.util.HashSet;
                    public static skipCurrentTag(param0: org.xmlpull.v1.XmlPullParser): void;
                    public static readBooleanAttribute(param0: org.xmlpull.v1.XmlPullParser, param1: string): boolean;
                    public static writeByteArrayAttribute(param0: org.xmlpull.v1.XmlSerializer, param1: string, param2: number[]): void;
                    public static beginDocument(param0: org.xmlpull.v1.XmlPullParser, param1: string): void;
                    public static convertValueToUnsignedInt(param0: string, param1: number): number;
                    public static writeLongArrayXml(param0: number[], param1: string, param2: org.xmlpull.v1.XmlSerializer): void;
                    public static readMapXml(param0: java.io.InputStream): java.util.HashMap<string, any>;
                    public static readLongAttribute(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: number): number;
                    public static readThisMapXml(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: string[], param3: com.android.internal.util.XmlUtils.ReadMapCallback): java.util.HashMap<string, any>;
                    public static writeLongAttribute(param0: org.xmlpull.v1.XmlSerializer, param1: string, param2: number): void;
                    public static readThisIntArrayXml(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: string[]): number[];
                    public static writeBitmapAttribute(param0: org.xmlpull.v1.XmlSerializer, param1: string, param2: globalAndroid.graphics.Bitmap): void;
                    public static readValueXml(param0: org.xmlpull.v1.XmlPullParser, param1: string[]): any;
                    public static writeMapXml(param0: java.util.Map<any, any>, param1: org.xmlpull.v1.XmlSerializer, param2: com.android.internal.util.XmlUtils.WriteMapCallback): void;
                }
                export module XmlUtils {
                    export class ReadMapCallback extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.util.XmlUtils.ReadMapCallback>;
                        /**
                         * Constructs a new instance of the com.android.internal.util.XmlUtils$ReadMapCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            readThisUnknownObjectXml(param0: org.xmlpull.v1.XmlPullParser, param1: string): any;
                        });
                        public constructor();
                        public readThisUnknownObjectXml(param0: org.xmlpull.v1.XmlPullParser, param1: string): any;
                    }
                    export class WriteMapCallback extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.util.XmlUtils.WriteMapCallback>;
                        /**
                         * Constructs a new instance of the com.android.internal.util.XmlUtils$WriteMapCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            writeUnknownObject(param0: any, param1: string, param2: org.xmlpull.v1.XmlSerializer): void;
                        });
                        public constructor();
                        public writeUnknownObject(param0: any, param1: string, param2: org.xmlpull.v1.XmlSerializer): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export module rr {
                    export class RRTaskUtils extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.util.rr.RRTaskUtils>;
                        public constructor();
                        public static killActiveTask(param0: globalAndroid.content.Context, param1: number): boolean;
                        public static dockTopTask(param0: globalAndroid.content.Context): void;
                        public static isTaskDocked(param0: globalAndroid.content.Context): boolean;
                        public static toggleLastApp(param0: globalAndroid.content.Context, param1: number): void;
                        public static getRunningActivityInfo(param0: globalAndroid.content.Context): globalAndroid.content.pm.ActivityInfo;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module util {
                export module rr {
                    export class RRUtils extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.util.rr.RRUtils>;
                        public static INTENT_REGION_SCREENSHOT: string;
                        public static INTENT_SCREENSHOT: string;
                        public static sendKeycode(param0: number): void;
                        public constructor();
                        public static takeScreenshot(param0: boolean): void;
                        public static isWifiOnly(param0: globalAndroid.content.Context): boolean;
                        public static takeScreenrecord(param0: number): void;
                        public static deviceSupportsFlashLight(param0: globalAndroid.content.Context): boolean;
                        public static isChineseLanguage(): boolean;
                        public static getBlendColorForPercent(param0: number, param1: number, param2: boolean, param3: number): number;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module utils {
                export class ActionUtils extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.utils.ActionUtils>;
                    public static ANDROIDNS: string;
                    public static ANIM: string;
                    public static BOOL: string;
                    public static CLASS_NAME_ACTION_EDIT: string;
                    public static CLASS_NAME_GALLERY_PICKER: string;
                    public static CLASS_NAME_ICON_PICKER_ACTIVITY: string;
                    public static CLASS_NAME_ICON_PICKER_GRID_ACTIVITY: string;
                    public static COLOR: string;
                    public static DIMEN: string;
                    public static DIMEN_PIXEL: string;
                    public static DRAWABLE: string;
                    public static FLOAT: string;
                    public static FORMAT_FLOAT: string;
                    public static FORMAT_NONE: string;
                    public static ID: string;
                    public static INT: string;
                    public static INTENT_ACTION_ACTION_PICKER: string;
                    public static INTENT_EXTRA_ACTION_CONFIG: string;
                    public static INTENT_EXTRA_ACTION_DEFAULT: string;
                    public static INTENT_EXTRA_ACTION_HAS_DEFAULTS: string;
                    public static INTENT_EXTRA_ACTION_STRING: string;
                    public static INTENT_EXTRA_EXCLUDE_ACTIONS: string;
                    public static INTENT_EXTRA_ICON_DATA_NAME: string;
                    public static INTENT_EXTRA_ICON_DATA_PACKAGE: string;
                    public static INTENT_EXTRA_ICON_DATA_TYPE: string;
                    public static INTENT_EXTRA_ICON_DATA_TYPE_ICON_PACK: string;
                    public static INTENT_EXTRA_ICON_PACKAGE_NAME: string;
                    public static INTENT_EXTRA_RESULT: string;
                    public static INTENT_EXTRA_URI: string;
                    public static INTENT_GALLERY_PICKER: string;
                    public static INTENT_ICON_PICKER: string;
                    public static INTENT_NAVBAR_EDIT_RESET_LAYOUT: string;
                    public static PACKAGE_ANDROID: string;
                    public static PACKAGE_SETTINGS: string;
                    public static PACKAGE_SYSTEMUI: string;
                    public static SMARTNAV_ICON_MAX_HEIGHT: number;
                    public static SMARTNAV_ICON_MAX_WIDTH: number;
                    public static STRING: string;
                    public static isLargeScreen(): boolean;
                    public static hasNavbarByDefault(param0: globalAndroid.content.Context): boolean;
                    public static deviceSupportsFlashLight(param0: globalAndroid.content.Context): boolean;
                    public static getFriendlyNameForUri(param0: globalAndroid.content.Context, param1: string): string;
                    public static convertPixelsToDp(param0: number, param1: globalAndroid.content.Context): number;
                    public static getIntent(param0: string): globalAndroid.content.Intent;
                    public static getFriendlyShortcutName(param0: globalAndroid.content.pm.PackageManager, param1: globalAndroid.content.Intent): string;
                    public static deviceSupportsLte(param0: globalAndroid.content.Context): boolean;
                    public static getBoolean(param0: globalAndroid.content.Context, param1: string, param2: string): boolean;
                    public static deviceSupportsCompass(param0: globalAndroid.content.Context): boolean;
                    public static getDrawableForAction(param0: globalAndroid.content.Context, param1: string): globalAndroid.graphics.drawable.Drawable;
                    public static isBitmapAllowedSize(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri, param2: number, param3: number): boolean;
                    public static getResourcesForPackage(param0: globalAndroid.content.Context, param1: string): globalAndroid.content.res.Resources;
                    public constructor();
                    public static getAllChildren(param0: globalAndroid.view.View): java.util.ArrayList<globalAndroid.view.View>;
                    public static convertDpToPixel(param0: number, param1: globalAndroid.content.Context): number;
                    public static deviceSupportsMobileData(param0: globalAndroid.content.Context): boolean;
                    public static deviceSupportsNfc(param0: globalAndroid.content.Context): boolean;
                    public static getValue(param0: globalAndroid.content.Context, param1: string, param2: string, param3: string): any;
                    public static dpToPx(param0: globalAndroid.content.Context, param1: number): number;
                    public static getId(param0: globalAndroid.content.Context, param1: string, param2: string): number;
                    public static getIdentifier(param0: globalAndroid.content.Context, param1: string, param2: string, param3: string): number;
                    public static getDrawable(param0: globalAndroid.content.Context, param1: string, param2: string): globalAndroid.graphics.drawable.Drawable;
                    public static deviceSupportsDoze(param0: globalAndroid.content.Context): boolean;
                    public static deviceSupportsBluetooth(): boolean;
                    public static getInt(param0: globalAndroid.content.Context, param1: string, param2: string): number;
                    public static getValue(param0: globalAndroid.content.Context, param1: string, param2: string, param3: string, param4: string): any;
                    public static isLandscape(param0: globalAndroid.content.Context): boolean;
                    public static getAllChildren(param0: globalAndroid.view.View, param1: java.lang.Class<any>): java.util.ArrayList<any>;
                    public static navigationBarCanMove(): boolean;
                    public static ConvertDpToPixelAsInt(param0: number, param1: globalAndroid.content.Context): number;
                    public static calculateInSampleSize(param0: globalAndroid.graphics.BitmapFactory.Options, param1: number, param2: number): number;
                    public static getDimenPixelSize(param0: globalAndroid.content.Context, param1: string, param2: string): number;
                    public static putValue(param0: string, param1: any, param2: string, param3: globalAndroid.os.Bundle): void;
                    public static deviceSupportsDdsSupported(param0: globalAndroid.content.Context): boolean;
                    public static getString(param0: globalAndroid.content.Context, param1: string, param2: string): string;
                    public static resolveAndUpdateButtonActions(param0: globalAndroid.content.Context, param1: com.android.internal.utils.ActionConstants.Defaults): void;
                    public static getDimen(param0: globalAndroid.content.Context, param1: string, param2: string): number;
                    public static getColor(param0: globalAndroid.content.Context, param1: string, param2: string): number;
                    public static isXLargeScreen(): boolean;
                    public static getDrawable(param0: globalAndroid.content.res.Resources, param1: string, param2: string): globalAndroid.graphics.drawable.Drawable;
                    public static getDrawableFromComponent(param0: globalAndroid.content.pm.PackageManager, param1: string): globalAndroid.graphics.drawable.Drawable;
                    public static getNavbarThemedDrawable(param0: globalAndroid.content.Context, param1: globalAndroid.content.res.Resources, param2: string): globalAndroid.graphics.drawable.Drawable;
                    public static getFriendlyActivityName(param0: globalAndroid.content.pm.PackageManager, param1: globalAndroid.content.Intent, param2: boolean): string;
                    public static isNormalScreen(): boolean;
                    public static getDrawable(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri): globalAndroid.graphics.drawable.Drawable;
                    public static pxToDp(param0: globalAndroid.content.Context, param1: number): number;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module utils {
                export module cr {
                    export abstract class UserContentObserver {
                        public static class: java.lang.Class<com.android.internal.utils.cr.UserContentObserver>;
                        public observe(): void;
                        public onChange(param0: boolean): void;
                        public update(): void;
                        public unobserve(): void;
                        public constructor(param0: globalAndroid.os.Handler);
                        public onChange(param0: boolean, param1: globalAndroid.net.Uri): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module utils {
                export module du {
                    export class DUActionUtils extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.utils.du.DUActionUtils>;
                        public static ANDROIDNS: string;
                        public static ANIM: string;
                        public static BOOL: string;
                        public static COLOR: string;
                        public static DIMEN: string;
                        public static DIMEN_PIXEL: string;
                        public static DRAWABLE: string;
                        public static DUI_ICON_MAX_HEIGHT: number;
                        public static DUI_ICON_MAX_WIDTH: number;
                        public static FLOAT: string;
                        public static FORMAT_FLOAT: string;
                        public static FORMAT_NONE: string;
                        public static ID: string;
                        public static INT: string;
                        public static PACKAGE_ANDROID: string;
                        public static PACKAGE_SYSTEMUI: string;
                        public static STRING: string;
                        public static getDrawable(param0: globalAndroid.content.Context, param1: string, param2: string): globalAndroid.graphics.drawable.Drawable;
                        public static deviceSupportsDoze(param0: globalAndroid.content.Context): boolean;
                        public static getAllChildren(param0: globalAndroid.view.View, param1: java.lang.Class<any>): java.util.ArrayList<any>;
                        public static getDrawable(param0: globalAndroid.content.res.Resources, param1: string, param2: string): globalAndroid.graphics.drawable.Drawable;
                        public static resolveAndUpdateButtonActions(param0: globalAndroid.content.Context, param1: com.android.internal.utils.du.ActionConstants.Defaults): void;
                        public static getDimenPixelSize(param0: globalAndroid.content.Context, param1: string, param2: string): number;
                        public static dpToPx(param0: globalAndroid.content.Context, param1: number): number;
                        public static getAllChildren(param0: globalAndroid.view.View): java.util.ArrayList<globalAndroid.view.View>;
                        public static getId(param0: globalAndroid.content.Context, param1: string, param2: string): number;
                        public static isBitmapAllowedSize(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri, param2: number, param3: number): boolean;
                        public static getDrawableFromComponent(param0: globalAndroid.content.pm.PackageManager, param1: string): globalAndroid.graphics.drawable.Drawable;
                        public static navigationBarCanMove(): boolean;
                        public static deviceSupportsMobileData(param0: globalAndroid.content.Context): boolean;
                        public static getString(param0: globalAndroid.content.Context, param1: string, param2: string): string;
                        public static getValue(param0: globalAndroid.content.Context, param1: string, param2: string, param3: string): any;
                        public static deviceSupportsCompass(param0: globalAndroid.content.Context): boolean;
                        public static getNavbarThemedDrawable(param0: globalAndroid.content.Context, param1: globalAndroid.content.res.Resources, param2: string): globalAndroid.graphics.drawable.Drawable;
                        public static isLandscape(param0: globalAndroid.content.Context): boolean;
                        public static convertDpToPixel(param0: number, param1: globalAndroid.content.Context): number;
                        public static getColor(param0: globalAndroid.content.Context, param1: string, param2: string): number;
                        public static getResourcesForPackage(param0: globalAndroid.content.Context, param1: string): globalAndroid.content.res.Resources;
                        public static calculateInSampleSize(param0: globalAndroid.graphics.BitmapFactory.Options, param1: number, param2: number): number;
                        public static deviceSupportsNfc(param0: globalAndroid.content.Context): boolean;
                        public static getDrawable(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri): globalAndroid.graphics.drawable.Drawable;
                        public static putValue(param0: string, param1: any, param2: string, param3: globalAndroid.os.Bundle): void;
                        public static getIdentifier(param0: globalAndroid.content.Context, param1: string, param2: string, param3: string): number;
                        public constructor();
                        public static ConvertDpToPixelAsInt(param0: number, param1: globalAndroid.content.Context): number;
                        public static getFriendlyShortcutName(param0: globalAndroid.content.pm.PackageManager, param1: globalAndroid.content.Intent): string;
                        public static isLargeScreen(): boolean;
                        public static isNormalScreen(): boolean;
                        public static deviceSupportsDdsSupported(param0: globalAndroid.content.Context): boolean;
                        public static getDrawableForAction(param0: globalAndroid.content.Context, param1: string): globalAndroid.graphics.drawable.Drawable;
                        public static getInt(param0: globalAndroid.content.Context, param1: string, param2: string): number;
                        public static pxToDp(param0: globalAndroid.content.Context, param1: number): number;
                        public static deviceSupportsLte(param0: globalAndroid.content.Context): boolean;
                        public static deviceSupportsBluetooth(): boolean;
                        public static getIntent(param0: string): globalAndroid.content.Intent;
                        public static getFriendlyActivityName(param0: globalAndroid.content.pm.PackageManager, param1: globalAndroid.content.Intent, param2: boolean): string;
                        public static hasNavbarByDefault(param0: globalAndroid.content.Context): boolean;
                        public static isXLargeScreen(): boolean;
                        public static deviceSupportsFlashLight(param0: globalAndroid.content.Context): boolean;
                        public static getDimen(param0: globalAndroid.content.Context, param1: string, param2: string): number;
                        public static getFriendlyNameForUri(param0: globalAndroid.content.Context, param1: string): string;
                        public static convertPixelsToDp(param0: number, param1: globalAndroid.content.Context): number;
                        public static getBoolean(param0: globalAndroid.content.Context, param1: string, param2: string): boolean;
                        public static getValue(param0: globalAndroid.content.Context, param1: string, param2: string, param3: string, param4: string): any;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export class ActionBarPolicy extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.view.ActionBarPolicy>;
                    public getMaxActionButtons(): number;
                    public getEmbeddedMenuWidthLimit(): number;
                    public getTabContainerHeight(): number;
                    public static get(param0: globalAndroid.content.Context): com.android.internal.view.ActionBarPolicy;
                    public hasEmbeddedTabs(): boolean;
                    public enableHomeButtonByDefault(): boolean;
                    public showsOverflowMenuButton(): boolean;
                    public getStackedTabMaxWidth(): number;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export class BaseIWindow extends globalAndroid.view.IWindow.Stub {
                    public static class: java.lang.Class<com.android.internal.view.BaseIWindow>;
                    public mSeq: number;
                    public requestAppKeyboardShortcuts(param0: com.android.internal.os.IResultReceiver, param1: number): void;
                    public dispatchWindowShown(): void;
                    public updatePointerIcon(param0: number, param1: number): void;
                    public closeSystemDialogs(param0: string): void;
                    public resized(param0: globalAndroid.graphics.Rect, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Rect, param3: globalAndroid.graphics.Rect, param4: globalAndroid.graphics.Rect, param5: globalAndroid.graphics.Rect, param6: boolean, param7: globalAndroid.util.MergedConfiguration, param8: globalAndroid.graphics.Rect, param9: boolean, param10: boolean, param11: number): void;
                    public dispatchAppVisibility(param0: boolean): void;
                    public executeCommand(param0: string, param1: string, param2: globalAndroid.os.ParcelFileDescriptor): void;
                    public windowFocusChanged(param0: boolean, param1: boolean): void;
                    public moved(param0: number, param1: number): void;
                    public dispatchWallpaperCommand(param0: string, param1: number, param2: number, param3: number, param4: globalAndroid.os.Bundle, param5: boolean): void;
                    public dispatchPointerCaptureChanged(param0: boolean): void;
                    public setSession(param0: globalAndroid.view.IWindowSession): void;
                    public dispatchDragEvent(param0: globalAndroid.view.DragEvent): void;
                    public dispatchSystemUiVisibilityChanged(param0: number, param1: number, param2: number, param3: number): void;
                    public dispatchWallpaperOffsets(param0: number, param1: number, param2: number, param3: number, param4: boolean): void;
                    public constructor();
                    public dispatchGetNewSurface(): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export abstract class BaseSurfaceHolder extends globalAndroid.view.SurfaceHolder {
                    public static class: java.lang.Class<com.android.internal.view.BaseSurfaceHolder>;
                    public mCallbacks: java.util.ArrayList<globalAndroid.view.SurfaceHolder.Callback>;
                    public mRequestedFormat: number;
                    public mSurface: globalAndroid.view.Surface;
                    public mSurfaceLock: java.util.concurrent.locks.ReentrantLock;
                    public isCreating(): boolean;
                    public ungetCallbacks(): void;
                    public lockHardwareCanvas(): globalAndroid.graphics.Canvas;
                    public lockCanvas(): globalAndroid.graphics.Canvas;
                    public getSurface(): globalAndroid.view.Surface;
                    public setFixedSize(param0: number, param1: number): void;
                    public getRequestedWidth(): number;
                    public constructor();
                    public getRequestedType(): number;
                    public setType(param0: number): void;
                    public unlockCanvasAndPost(param0: globalAndroid.graphics.Canvas): void;
                    public getRequestedHeight(): number;
                    public getSurfaceFrame(): globalAndroid.graphics.Rect;
                    public getCallbacks(): globalAndroid.view.SurfaceHolder.Callback[];
                    public onUpdateSurface(): void;
                    public removeCallback(param0: globalAndroid.view.SurfaceHolder.Callback): void;
                    public setSurfaceFrameSize(param0: number, param1: number): void;
                    public onAllowLockCanvas(): boolean;
                    public setKeepScreenOn(param0: boolean): void;
                    public lockCanvas(param0: globalAndroid.graphics.Rect): globalAndroid.graphics.Canvas;
                    public addCallback(param0: globalAndroid.view.SurfaceHolder.Callback): void;
                    public onRelayoutContainer(): void;
                    public setSizeFromLayout(): void;
                    public getRequestedFormat(): number;
                    public setFormat(param0: number): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export class FloatingActionMode extends globalAndroid.view.ActionMode {
                    public static class: java.lang.Class<com.android.internal.view.FloatingActionMode>;
                    public getTitle(): string;
                    public getMenuInflater(): globalAndroid.view.MenuInflater;
                    public getCustomView(): globalAndroid.view.View;
                    public hide(param0: number): void;
                    public getMenu(): globalAndroid.view.Menu;
                    public updateViewLocationInWindow(): void;
                    public setTitle(param0: string): void;
                    public finish(): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.view.ActionMode.Callback2, param2: globalAndroid.view.View, param3: com.android.internal.widget.FloatingToolbar);
                    public invalidateContentRect(): void;
                    public setSubtitle(param0: number): void;
                    public setTitle(param0: number): void;
                    public constructor();
                    public setSubtitle(param0: string): void;
                    public getSubtitle(): string;
                    public onWindowFocusChanged(param0: boolean): void;
                    public setCustomView(param0: globalAndroid.view.View): void;
                    public invalidate(): void;
                }
                export module FloatingActionMode {
                    export class FloatingToolbarVisibilityHelper extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.view.FloatingActionMode.FloatingToolbarVisibilityHelper>;
                        public constructor(param0: com.android.internal.widget.FloatingToolbar);
                        public updateToolbarVisibility(): void;
                        public activate(): void;
                        public setHideRequested(param0: boolean): void;
                        public setOutOfBounds(param0: boolean): void;
                        public setWindowFocused(param0: boolean): void;
                        public deactivate(): void;
                        public setMoving(param0: boolean): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export class IDragAndDropPermissions extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.view.IDragAndDropPermissions>;
                    /**
                     * Constructs a new instance of the com.android.internal.view.IDragAndDropPermissions interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        release(): void;
                        take(param0: globalAndroid.os.IBinder): void;
                        takeTransient(param0: globalAndroid.os.IBinder): void;
                    });
                    public constructor();
                    public take(param0: globalAndroid.os.IBinder): void;
                    public release(): void;
                    public takeTransient(param0: globalAndroid.os.IBinder): void;
                }
                export module IDragAndDropPermissions {
                    export abstract class Stub implements com.android.internal.view.IDragAndDropPermissions {
                        public static class: java.lang.Class<com.android.internal.view.IDragAndDropPermissions.Stub>;
                        public constructor();
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.view.IDragAndDropPermissions;
                        public takeTransient(param0: globalAndroid.os.IBinder): void;
                        public take(param0: globalAndroid.os.IBinder): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public release(): void;
                        public asBinder(): globalAndroid.os.IBinder;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.view.IDragAndDropPermissions {
                            public static class: java.lang.Class<com.android.internal.view.IDragAndDropPermissions.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public takeTransient(param0: globalAndroid.os.IBinder): void;
                            public release(): void;
                            public take(param0: globalAndroid.os.IBinder): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export abstract class IInputConnectionWrapper extends com.android.internal.view.IInputContext.Stub {
                    public static class: java.lang.Class<com.android.internal.view.IInputConnectionWrapper>;
                    public getExtractedText(param0: globalAndroid.view.inputmethod.ExtractedTextRequest, param1: number, param2: number, param3: com.android.internal.view.IInputContextCallback): void;
                    public setComposingRegion(param0: number, param1: number): void;
                    public getSelectedText(param0: number, param1: number, param2: com.android.internal.view.IInputContextCallback): void;
                    public getTextBeforeCursor(param0: number, param1: number, param2: number, param3: com.android.internal.view.IInputContextCallback): void;
                    public sendKeyEvent(param0: globalAndroid.view.KeyEvent): void;
                    public finishComposingText(): void;
                    public performEditorAction(param0: number): void;
                    public setSelection(param0: number, param1: number): void;
                    public constructor(param0: globalAndroid.os.Looper, param1: globalAndroid.view.inputmethod.InputConnection);
                    public deleteSurroundingTextInCodePoints(param0: number, param1: number): void;
                    public deleteSurroundingText(param0: number, param1: number): void;
                    public commitContent(param0: globalAndroid.view.inputmethod.InputContentInfo, param1: number, param2: globalAndroid.os.Bundle, param3: number, param4: com.android.internal.view.IInputContextCallback): void;
                    public getTextAfterCursor(param0: number, param1: number, param2: number, param3: com.android.internal.view.IInputContextCallback): void;
                    public constructor();
                    public commitCompletion(param0: globalAndroid.view.inputmethod.CompletionInfo): void;
                    public commitCorrection(param0: globalAndroid.view.inputmethod.CorrectionInfo): void;
                    public getInputConnection(): globalAndroid.view.inputmethod.InputConnection;
                    public commitText(param0: string, param1: number): void;
                    public clearMetaKeyStates(param0: number): void;
                    public onUserAction(): void;
                    public requestUpdateCursorAnchorInfo(param0: number, param1: number, param2: com.android.internal.view.IInputContextCallback): void;
                    public getCursorCapsMode(param0: number, param1: number, param2: com.android.internal.view.IInputContextCallback): void;
                    public isFinished(): boolean;
                    public performContextMenuAction(param0: number): void;
                    public endBatchEdit(): void;
                    public closeConnection(): void;
                    public beginBatchEdit(): void;
                    public isActive(): boolean;
                    public performPrivateCommand(param0: string, param1: globalAndroid.os.Bundle): void;
                    public setComposingText(param0: string, param1: number): void;
                }
                export module IInputConnectionWrapper {
                    export class MyHandler extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.view.IInputConnectionWrapper.MyHandler>;
                        public handleMessage(param0: globalAndroid.os.Message): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export class IInputContext extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.view.IInputContext>;
                    /**
                     * Constructs a new instance of the com.android.internal.view.IInputContext interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        beginBatchEdit(): void;
                        clearMetaKeyStates(param0: number): void;
                        commitCompletion(param0: globalAndroid.view.inputmethod.CompletionInfo): void;
                        commitContent(param0: globalAndroid.view.inputmethod.InputContentInfo, param1: number, param2: globalAndroid.os.Bundle, param3: number, param4: com.android.internal.view.IInputContextCallback): void;
                        commitCorrection(param0: globalAndroid.view.inputmethod.CorrectionInfo): void;
                        commitText(param0: string, param1: number): void;
                        deleteSurroundingText(param0: number, param1: number): void;
                        deleteSurroundingTextInCodePoints(param0: number, param1: number): void;
                        endBatchEdit(): void;
                        finishComposingText(): void;
                        getCursorCapsMode(param0: number, param1: number, param2: com.android.internal.view.IInputContextCallback): void;
                        getExtractedText(param0: globalAndroid.view.inputmethod.ExtractedTextRequest, param1: number, param2: number, param3: com.android.internal.view.IInputContextCallback): void;
                        getSelectedText(param0: number, param1: number, param2: com.android.internal.view.IInputContextCallback): void;
                        getTextAfterCursor(param0: number, param1: number, param2: number, param3: com.android.internal.view.IInputContextCallback): void;
                        getTextBeforeCursor(param0: number, param1: number, param2: number, param3: com.android.internal.view.IInputContextCallback): void;
                        performContextMenuAction(param0: number): void;
                        performEditorAction(param0: number): void;
                        performPrivateCommand(param0: string, param1: globalAndroid.os.Bundle): void;
                        requestUpdateCursorAnchorInfo(param0: number, param1: number, param2: com.android.internal.view.IInputContextCallback): void;
                        sendKeyEvent(param0: globalAndroid.view.KeyEvent): void;
                        setComposingRegion(param0: number, param1: number): void;
                        setComposingText(param0: string, param1: number): void;
                        setSelection(param0: number, param1: number): void;
                    });
                    public constructor();
                    public getCursorCapsMode(param0: number, param1: number, param2: com.android.internal.view.IInputContextCallback): void;
                    public performContextMenuAction(param0: number): void;
                    public getExtractedText(param0: globalAndroid.view.inputmethod.ExtractedTextRequest, param1: number, param2: number, param3: com.android.internal.view.IInputContextCallback): void;
                    public setComposingRegion(param0: number, param1: number): void;
                    public endBatchEdit(): void;
                    public getSelectedText(param0: number, param1: number, param2: com.android.internal.view.IInputContextCallback): void;
                    public getTextBeforeCursor(param0: number, param1: number, param2: number, param3: com.android.internal.view.IInputContextCallback): void;
                    public sendKeyEvent(param0: globalAndroid.view.KeyEvent): void;
                    public finishComposingText(): void;
                    public performEditorAction(param0: number): void;
                    public setSelection(param0: number, param1: number): void;
                    public deleteSurroundingTextInCodePoints(param0: number, param1: number): void;
                    public beginBatchEdit(): void;
                    public deleteSurroundingText(param0: number, param1: number): void;
                    public performPrivateCommand(param0: string, param1: globalAndroid.os.Bundle): void;
                    public commitContent(param0: globalAndroid.view.inputmethod.InputContentInfo, param1: number, param2: globalAndroid.os.Bundle, param3: number, param4: com.android.internal.view.IInputContextCallback): void;
                    public getTextAfterCursor(param0: number, param1: number, param2: number, param3: com.android.internal.view.IInputContextCallback): void;
                    public setComposingText(param0: string, param1: number): void;
                    public commitCompletion(param0: globalAndroid.view.inputmethod.CompletionInfo): void;
                    public commitCorrection(param0: globalAndroid.view.inputmethod.CorrectionInfo): void;
                    public commitText(param0: string, param1: number): void;
                    public clearMetaKeyStates(param0: number): void;
                    public requestUpdateCursorAnchorInfo(param0: number, param1: number, param2: com.android.internal.view.IInputContextCallback): void;
                }
                export module IInputContext {
                    export abstract class Stub implements com.android.internal.view.IInputContext {
                        public static class: java.lang.Class<com.android.internal.view.IInputContext.Stub>;
                        public commitContent(param0: globalAndroid.view.inputmethod.InputContentInfo, param1: number, param2: globalAndroid.os.Bundle, param3: number, param4: com.android.internal.view.IInputContextCallback): void;
                        public setComposingRegion(param0: number, param1: number): void;
                        public getCursorCapsMode(param0: number, param1: number, param2: com.android.internal.view.IInputContextCallback): void;
                        public performPrivateCommand(param0: string, param1: globalAndroid.os.Bundle): void;
                        public requestUpdateCursorAnchorInfo(param0: number, param1: number, param2: com.android.internal.view.IInputContextCallback): void;
                        public getTextAfterCursor(param0: number, param1: number, param2: number, param3: com.android.internal.view.IInputContextCallback): void;
                        public getTextBeforeCursor(param0: number, param1: number, param2: number, param3: com.android.internal.view.IInputContextCallback): void;
                        public sendKeyEvent(param0: globalAndroid.view.KeyEvent): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public performContextMenuAction(param0: number): void;
                        public asBinder(): globalAndroid.os.IBinder;
                        public commitCorrection(param0: globalAndroid.view.inputmethod.CorrectionInfo): void;
                        public constructor();
                        public performEditorAction(param0: number): void;
                        public commitText(param0: string, param1: number): void;
                        public finishComposingText(): void;
                        public endBatchEdit(): void;
                        public setSelection(param0: number, param1: number): void;
                        public clearMetaKeyStates(param0: number): void;
                        public commitCompletion(param0: globalAndroid.view.inputmethod.CompletionInfo): void;
                        public beginBatchEdit(): void;
                        public deleteSurroundingText(param0: number, param1: number): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.view.IInputContext;
                        public getExtractedText(param0: globalAndroid.view.inputmethod.ExtractedTextRequest, param1: number, param2: number, param3: com.android.internal.view.IInputContextCallback): void;
                        public setComposingText(param0: string, param1: number): void;
                        public deleteSurroundingTextInCodePoints(param0: number, param1: number): void;
                        public getSelectedText(param0: number, param1: number, param2: com.android.internal.view.IInputContextCallback): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.view.IInputContext {
                            public static class: java.lang.Class<com.android.internal.view.IInputContext.Stub.Proxy>;
                            public endBatchEdit(): void;
                            public performContextMenuAction(param0: number): void;
                            public getCursorCapsMode(param0: number, param1: number, param2: com.android.internal.view.IInputContextCallback): void;
                            public performEditorAction(param0: number): void;
                            public requestUpdateCursorAnchorInfo(param0: number, param1: number, param2: com.android.internal.view.IInputContextCallback): void;
                            public clearMetaKeyStates(param0: number): void;
                            public setSelection(param0: number, param1: number): void;
                            public commitCorrection(param0: globalAndroid.view.inputmethod.CorrectionInfo): void;
                            public deleteSurroundingText(param0: number, param1: number): void;
                            public getTextAfterCursor(param0: number, param1: number, param2: number, param3: com.android.internal.view.IInputContextCallback): void;
                            public commitCompletion(param0: globalAndroid.view.inputmethod.CompletionInfo): void;
                            public finishComposingText(): void;
                            public performPrivateCommand(param0: string, param1: globalAndroid.os.Bundle): void;
                            public setComposingRegion(param0: number, param1: number): void;
                            public setComposingText(param0: string, param1: number): void;
                            public sendKeyEvent(param0: globalAndroid.view.KeyEvent): void;
                            public getSelectedText(param0: number, param1: number, param2: com.android.internal.view.IInputContextCallback): void;
                            public commitContent(param0: globalAndroid.view.inputmethod.InputContentInfo, param1: number, param2: globalAndroid.os.Bundle, param3: number, param4: com.android.internal.view.IInputContextCallback): void;
                            public getInterfaceDescriptor(): string;
                            public getTextBeforeCursor(param0: number, param1: number, param2: number, param3: com.android.internal.view.IInputContextCallback): void;
                            public asBinder(): globalAndroid.os.IBinder;
                            public beginBatchEdit(): void;
                            public deleteSurroundingTextInCodePoints(param0: number, param1: number): void;
                            public commitText(param0: string, param1: number): void;
                            public getExtractedText(param0: globalAndroid.view.inputmethod.ExtractedTextRequest, param1: number, param2: number, param3: com.android.internal.view.IInputContextCallback): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export class IInputContextCallback extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.view.IInputContextCallback>;
                    /**
                     * Constructs a new instance of the com.android.internal.view.IInputContextCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        setCommitContentResult(param0: boolean, param1: number): void;
                        setCursorCapsMode(param0: number, param1: number): void;
                        setExtractedText(param0: globalAndroid.view.inputmethod.ExtractedText, param1: number): void;
                        setRequestUpdateCursorAnchorInfoResult(param0: boolean, param1: number): void;
                        setSelectedText(param0: string, param1: number): void;
                        setTextAfterCursor(param0: string, param1: number): void;
                        setTextBeforeCursor(param0: string, param1: number): void;
                    });
                    public constructor();
                    public setExtractedText(param0: globalAndroid.view.inputmethod.ExtractedText, param1: number): void;
                    public setRequestUpdateCursorAnchorInfoResult(param0: boolean, param1: number): void;
                    public setSelectedText(param0: string, param1: number): void;
                    public setCommitContentResult(param0: boolean, param1: number): void;
                    public setTextAfterCursor(param0: string, param1: number): void;
                    public setCursorCapsMode(param0: number, param1: number): void;
                    public setTextBeforeCursor(param0: string, param1: number): void;
                }
                export module IInputContextCallback {
                    export abstract class Stub implements com.android.internal.view.IInputContextCallback {
                        public static class: java.lang.Class<com.android.internal.view.IInputContextCallback.Stub>;
                        public setCursorCapsMode(param0: number, param1: number): void;
                        public setTextAfterCursor(param0: string, param1: number): void;
                        public constructor();
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.view.IInputContextCallback;
                        public setCommitContentResult(param0: boolean, param1: number): void;
                        public setRequestUpdateCursorAnchorInfoResult(param0: boolean, param1: number): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public setTextBeforeCursor(param0: string, param1: number): void;
                        public asBinder(): globalAndroid.os.IBinder;
                        public setSelectedText(param0: string, param1: number): void;
                        public setExtractedText(param0: globalAndroid.view.inputmethod.ExtractedText, param1: number): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.view.IInputContextCallback {
                            public static class: java.lang.Class<com.android.internal.view.IInputContextCallback.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public setTextAfterCursor(param0: string, param1: number): void;
                            public asBinder(): globalAndroid.os.IBinder;
                            public setCommitContentResult(param0: boolean, param1: number): void;
                            public setCursorCapsMode(param0: number, param1: number): void;
                            public setSelectedText(param0: string, param1: number): void;
                            public setTextBeforeCursor(param0: string, param1: number): void;
                            public setExtractedText(param0: globalAndroid.view.inputmethod.ExtractedText, param1: number): void;
                            public setRequestUpdateCursorAnchorInfoResult(param0: boolean, param1: number): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export class IInputMethod extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.view.IInputMethod>;
                    /**
                     * Constructs a new instance of the com.android.internal.view.IInputMethod interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        attachToken(param0: globalAndroid.os.IBinder): void;
                        bindInput(param0: globalAndroid.view.inputmethod.InputBinding): void;
                        changeInputMethodSubtype(param0: globalAndroid.view.inputmethod.InputMethodSubtype): void;
                        createSession(param0: globalAndroid.view.InputChannel, param1: com.android.internal.view.IInputSessionCallback): void;
                        hideSoftInput(param0: number, param1: globalAndroid.os.ResultReceiver): void;
                        revokeSession(param0: com.android.internal.view.IInputMethodSession): void;
                        setSessionEnabled(param0: com.android.internal.view.IInputMethodSession, param1: boolean): void;
                        showSoftInput(param0: number, param1: globalAndroid.os.ResultReceiver): void;
                        startInput(param0: globalAndroid.os.IBinder, param1: com.android.internal.view.IInputContext, param2: number, param3: globalAndroid.view.inputmethod.EditorInfo, param4: boolean): void;
                        unbindInput(): void;
                    });
                    public constructor();
                    public bindInput(param0: globalAndroid.view.inputmethod.InputBinding): void;
                    public showSoftInput(param0: number, param1: globalAndroid.os.ResultReceiver): void;
                    public startInput(param0: globalAndroid.os.IBinder, param1: com.android.internal.view.IInputContext, param2: number, param3: globalAndroid.view.inputmethod.EditorInfo, param4: boolean): void;
                    public hideSoftInput(param0: number, param1: globalAndroid.os.ResultReceiver): void;
                    public setSessionEnabled(param0: com.android.internal.view.IInputMethodSession, param1: boolean): void;
                    public createSession(param0: globalAndroid.view.InputChannel, param1: com.android.internal.view.IInputSessionCallback): void;
                    public attachToken(param0: globalAndroid.os.IBinder): void;
                    public changeInputMethodSubtype(param0: globalAndroid.view.inputmethod.InputMethodSubtype): void;
                    public revokeSession(param0: com.android.internal.view.IInputMethodSession): void;
                    public unbindInput(): void;
                }
                export module IInputMethod {
                    export abstract class Stub implements com.android.internal.view.IInputMethod {
                        public static class: java.lang.Class<com.android.internal.view.IInputMethod.Stub>;
                        public showSoftInput(param0: number, param1: globalAndroid.os.ResultReceiver): void;
                        public constructor();
                        public setSessionEnabled(param0: com.android.internal.view.IInputMethodSession, param1: boolean): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.view.IInputMethod;
                        public startInput(param0: globalAndroid.os.IBinder, param1: com.android.internal.view.IInputContext, param2: number, param3: globalAndroid.view.inputmethod.EditorInfo, param4: boolean): void;
                        public changeInputMethodSubtype(param0: globalAndroid.view.inputmethod.InputMethodSubtype): void;
                        public unbindInput(): void;
                        public hideSoftInput(param0: number, param1: globalAndroid.os.ResultReceiver): void;
                        public bindInput(param0: globalAndroid.view.inputmethod.InputBinding): void;
                        public attachToken(param0: globalAndroid.os.IBinder): void;
                        public createSession(param0: globalAndroid.view.InputChannel, param1: com.android.internal.view.IInputSessionCallback): void;
                        public revokeSession(param0: com.android.internal.view.IInputMethodSession): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.view.IInputMethod {
                            public static class: java.lang.Class<com.android.internal.view.IInputMethod.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public unbindInput(): void;
                            public asBinder(): globalAndroid.os.IBinder;
                            public attachToken(param0: globalAndroid.os.IBinder): void;
                            public changeInputMethodSubtype(param0: globalAndroid.view.inputmethod.InputMethodSubtype): void;
                            public createSession(param0: globalAndroid.view.InputChannel, param1: com.android.internal.view.IInputSessionCallback): void;
                            public startInput(param0: globalAndroid.os.IBinder, param1: com.android.internal.view.IInputContext, param2: number, param3: globalAndroid.view.inputmethod.EditorInfo, param4: boolean): void;
                            public revokeSession(param0: com.android.internal.view.IInputMethodSession): void;
                            public bindInput(param0: globalAndroid.view.inputmethod.InputBinding): void;
                            public showSoftInput(param0: number, param1: globalAndroid.os.ResultReceiver): void;
                            public setSessionEnabled(param0: com.android.internal.view.IInputMethodSession, param1: boolean): void;
                            public hideSoftInput(param0: number, param1: globalAndroid.os.ResultReceiver): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export class IInputMethodClient extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.view.IInputMethodClient>;
                    /**
                     * Constructs a new instance of the com.android.internal.view.IInputMethodClient interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        onBindMethod(param0: com.android.internal.view.InputBindResult): void;
                        onUnbindMethod(param0: number, param1: number): void;
                        reportFullscreenMode(param0: boolean): void;
                        setActive(param0: boolean, param1: boolean): void;
                        setUserActionNotificationSequenceNumber(param0: number): void;
                        setUsingInputMethod(param0: boolean): void;
                    });
                    public constructor();
                    public setActive(param0: boolean, param1: boolean): void;
                    public onBindMethod(param0: com.android.internal.view.InputBindResult): void;
                    public setUsingInputMethod(param0: boolean): void;
                    public reportFullscreenMode(param0: boolean): void;
                    public setUserActionNotificationSequenceNumber(param0: number): void;
                    public onUnbindMethod(param0: number, param1: number): void;
                }
                export module IInputMethodClient {
                    export abstract class Stub implements com.android.internal.view.IInputMethodClient {
                        public static class: java.lang.Class<com.android.internal.view.IInputMethodClient.Stub>;
                        public reportFullscreenMode(param0: boolean): void;
                        public constructor();
                        public setUserActionNotificationSequenceNumber(param0: number): void;
                        public setActive(param0: boolean, param1: boolean): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public onBindMethod(param0: com.android.internal.view.InputBindResult): void;
                        public setUsingInputMethod(param0: boolean): void;
                        public asBinder(): globalAndroid.os.IBinder;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.view.IInputMethodClient;
                        public onUnbindMethod(param0: number, param1: number): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.view.IInputMethodClient {
                            public static class: java.lang.Class<com.android.internal.view.IInputMethodClient.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public reportFullscreenMode(param0: boolean): void;
                            public asBinder(): globalAndroid.os.IBinder;
                            public onUnbindMethod(param0: number, param1: number): void;
                            public setActive(param0: boolean, param1: boolean): void;
                            public setUsingInputMethod(param0: boolean): void;
                            public setUserActionNotificationSequenceNumber(param0: number): void;
                            public onBindMethod(param0: com.android.internal.view.InputBindResult): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export class IInputMethodManager extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.view.IInputMethodManager>;
                    /**
                     * Constructs a new instance of the com.android.internal.view.IInputMethodManager interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        addClient(param0: com.android.internal.view.IInputMethodClient, param1: com.android.internal.view.IInputContext, param2: number, param3: number): void;
                        clearLastInputMethodWindowForTransition(param0: globalAndroid.os.IBinder): void;
                        createInputContentUriToken(param0: globalAndroid.os.IBinder, param1: globalAndroid.net.Uri, param2: string): com.android.internal.inputmethod.IInputContentUriToken;
                        finishInput(param0: com.android.internal.view.IInputMethodClient): void;
                        getCurrentInputMethodSubtype(): globalAndroid.view.inputmethod.InputMethodSubtype;
                        getEnabledInputMethodList(): java.util.List<globalAndroid.view.inputmethod.InputMethodInfo>;
                        getEnabledInputMethodSubtypeList(param0: string, param1: boolean): java.util.List<globalAndroid.view.inputmethod.InputMethodSubtype>;
                        getInputMethodList(): java.util.List<globalAndroid.view.inputmethod.InputMethodInfo>;
                        getInputMethodWindowVisibleHeight(): number;
                        getLastInputMethodSubtype(): globalAndroid.view.inputmethod.InputMethodSubtype;
                        getShortcutInputMethodsAndSubtypes(): java.util.List;
                        hideMySoftInput(param0: globalAndroid.os.IBinder, param1: number): void;
                        hideSoftInput(param0: com.android.internal.view.IInputMethodClient, param1: number, param2: globalAndroid.os.ResultReceiver): boolean;
                        notifySuggestionPicked(param0: globalAndroid.text.style.SuggestionSpan, param1: string, param2: number): boolean;
                        notifyUserAction(param0: number): void;
                        registerSuggestionSpansForNotification(param0: globalAndroid.text.style.SuggestionSpan[]): void;
                        removeClient(param0: com.android.internal.view.IInputMethodClient): void;
                        reportFullscreenMode(param0: globalAndroid.os.IBinder, param1: boolean): void;
                        setAdditionalInputMethodSubtypes(param0: string, param1: globalAndroid.view.inputmethod.InputMethodSubtype[]): void;
                        setCurrentInputMethodSubtype(param0: globalAndroid.view.inputmethod.InputMethodSubtype): boolean;
                        setImeWindowStatus(param0: globalAndroid.os.IBinder, param1: globalAndroid.os.IBinder, param2: number, param3: number): void;
                        setInputMethod(param0: globalAndroid.os.IBinder, param1: string): void;
                        setInputMethodAndSubtype(param0: globalAndroid.os.IBinder, param1: string, param2: globalAndroid.view.inputmethod.InputMethodSubtype): void;
                        setInputMethodEnabled(param0: string, param1: boolean): boolean;
                        shouldOfferSwitchingToNextInputMethod(param0: globalAndroid.os.IBinder): boolean;
                        showInputMethodAndSubtypeEnablerFromClient(param0: com.android.internal.view.IInputMethodClient, param1: string): void;
                        showInputMethodPickerFromClient(param0: com.android.internal.view.IInputMethodClient, param1: number): void;
                        showMySoftInput(param0: globalAndroid.os.IBinder, param1: number): void;
                        showSoftInput(param0: com.android.internal.view.IInputMethodClient, param1: number, param2: globalAndroid.os.ResultReceiver): boolean;
                        startInputOrWindowGainedFocus(param0: number, param1: com.android.internal.view.IInputMethodClient, param2: globalAndroid.os.IBinder, param3: number, param4: number, param5: number, param6: globalAndroid.view.inputmethod.EditorInfo, param7: com.android.internal.view.IInputContext, param8: number): com.android.internal.view.InputBindResult;
                        switchToLastInputMethod(param0: globalAndroid.os.IBinder): boolean;
                        switchToNextInputMethod(param0: globalAndroid.os.IBinder, param1: boolean): boolean;
                        updateStatusIcon(param0: globalAndroid.os.IBinder, param1: string, param2: number): void;
                    });
                    public constructor();
                    public showSoftInput(param0: com.android.internal.view.IInputMethodClient, param1: number, param2: globalAndroid.os.ResultReceiver): boolean;
                    public switchToNextInputMethod(param0: globalAndroid.os.IBinder, param1: boolean): boolean;
                    public getShortcutInputMethodsAndSubtypes(): java.util.List;
                    public hideMySoftInput(param0: globalAndroid.os.IBinder, param1: number): void;
                    public startInputOrWindowGainedFocus(param0: number, param1: com.android.internal.view.IInputMethodClient, param2: globalAndroid.os.IBinder, param3: number, param4: number, param5: number, param6: globalAndroid.view.inputmethod.EditorInfo, param7: com.android.internal.view.IInputContext, param8: number): com.android.internal.view.InputBindResult;
                    public switchToLastInputMethod(param0: globalAndroid.os.IBinder): boolean;
                    public setImeWindowStatus(param0: globalAndroid.os.IBinder, param1: globalAndroid.os.IBinder, param2: number, param3: number): void;
                    public notifyUserAction(param0: number): void;
                    public clearLastInputMethodWindowForTransition(param0: globalAndroid.os.IBinder): void;
                    public finishInput(param0: com.android.internal.view.IInputMethodClient): void;
                    public showInputMethodPickerFromClient(param0: com.android.internal.view.IInputMethodClient, param1: number): void;
                    public updateStatusIcon(param0: globalAndroid.os.IBinder, param1: string, param2: number): void;
                    public setInputMethodEnabled(param0: string, param1: boolean): boolean;
                    public addClient(param0: com.android.internal.view.IInputMethodClient, param1: com.android.internal.view.IInputContext, param2: number, param3: number): void;
                    public getCurrentInputMethodSubtype(): globalAndroid.view.inputmethod.InputMethodSubtype;
                    public notifySuggestionPicked(param0: globalAndroid.text.style.SuggestionSpan, param1: string, param2: number): boolean;
                    public setInputMethod(param0: globalAndroid.os.IBinder, param1: string): void;
                    public showInputMethodAndSubtypeEnablerFromClient(param0: com.android.internal.view.IInputMethodClient, param1: string): void;
                    public getInputMethodList(): java.util.List<globalAndroid.view.inputmethod.InputMethodInfo>;
                    public registerSuggestionSpansForNotification(param0: globalAndroid.text.style.SuggestionSpan[]): void;
                    public setCurrentInputMethodSubtype(param0: globalAndroid.view.inputmethod.InputMethodSubtype): boolean;
                    public shouldOfferSwitchingToNextInputMethod(param0: globalAndroid.os.IBinder): boolean;
                    public hideSoftInput(param0: com.android.internal.view.IInputMethodClient, param1: number, param2: globalAndroid.os.ResultReceiver): boolean;
                    public getEnabledInputMethodSubtypeList(param0: string, param1: boolean): java.util.List<globalAndroid.view.inputmethod.InputMethodSubtype>;
                    public reportFullscreenMode(param0: globalAndroid.os.IBinder, param1: boolean): void;
                    public setInputMethodAndSubtype(param0: globalAndroid.os.IBinder, param1: string, param2: globalAndroid.view.inputmethod.InputMethodSubtype): void;
                    public getEnabledInputMethodList(): java.util.List<globalAndroid.view.inputmethod.InputMethodInfo>;
                    public showMySoftInput(param0: globalAndroid.os.IBinder, param1: number): void;
                    public createInputContentUriToken(param0: globalAndroid.os.IBinder, param1: globalAndroid.net.Uri, param2: string): com.android.internal.inputmethod.IInputContentUriToken;
                    public setAdditionalInputMethodSubtypes(param0: string, param1: globalAndroid.view.inputmethod.InputMethodSubtype[]): void;
                    public getInputMethodWindowVisibleHeight(): number;
                    public removeClient(param0: com.android.internal.view.IInputMethodClient): void;
                    public getLastInputMethodSubtype(): globalAndroid.view.inputmethod.InputMethodSubtype;
                }
                export module IInputMethodManager {
                    export abstract class Stub implements com.android.internal.view.IInputMethodManager {
                        public static class: java.lang.Class<com.android.internal.view.IInputMethodManager.Stub>;
                        public hideMySoftInput(param0: globalAndroid.os.IBinder, param1: number): void;
                        public setInputMethod(param0: globalAndroid.os.IBinder, param1: string): void;
                        public registerSuggestionSpansForNotification(param0: globalAndroid.text.style.SuggestionSpan[]): void;
                        public finishInput(param0: com.android.internal.view.IInputMethodClient): void;
                        public setInputMethodAndSubtype(param0: globalAndroid.os.IBinder, param1: string, param2: globalAndroid.view.inputmethod.InputMethodSubtype): void;
                        public updateStatusIcon(param0: globalAndroid.os.IBinder, param1: string, param2: number): void;
                        public setInputMethodEnabled(param0: string, param1: boolean): boolean;
                        public addClient(param0: com.android.internal.view.IInputMethodClient, param1: com.android.internal.view.IInputContext, param2: number, param3: number): void;
                        public showInputMethodPickerFromClient(param0: com.android.internal.view.IInputMethodClient, param1: number): void;
                        public getInputMethodList(): java.util.List<globalAndroid.view.inputmethod.InputMethodInfo>;
                        public notifyUserAction(param0: number): void;
                        public showMySoftInput(param0: globalAndroid.os.IBinder, param1: number): void;
                        public notifySuggestionPicked(param0: globalAndroid.text.style.SuggestionSpan, param1: string, param2: number): boolean;
                        public setImeWindowStatus(param0: globalAndroid.os.IBinder, param1: globalAndroid.os.IBinder, param2: number, param3: number): void;
                        public startInputOrWindowGainedFocus(param0: number, param1: com.android.internal.view.IInputMethodClient, param2: globalAndroid.os.IBinder, param3: number, param4: number, param5: number, param6: globalAndroid.view.inputmethod.EditorInfo, param7: com.android.internal.view.IInputContext, param8: number): com.android.internal.view.InputBindResult;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.view.IInputMethodManager;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public getEnabledInputMethodList(): java.util.List<globalAndroid.view.inputmethod.InputMethodInfo>;
                        public switchToLastInputMethod(param0: globalAndroid.os.IBinder): boolean;
                        public shouldOfferSwitchingToNextInputMethod(param0: globalAndroid.os.IBinder): boolean;
                        public constructor();
                        public getInputMethodWindowVisibleHeight(): number;
                        public reportFullscreenMode(param0: globalAndroid.os.IBinder, param1: boolean): void;
                        public getLastInputMethodSubtype(): globalAndroid.view.inputmethod.InputMethodSubtype;
                        public hideSoftInput(param0: com.android.internal.view.IInputMethodClient, param1: number, param2: globalAndroid.os.ResultReceiver): boolean;
                        public setCurrentInputMethodSubtype(param0: globalAndroid.view.inputmethod.InputMethodSubtype): boolean;
                        public switchToNextInputMethod(param0: globalAndroid.os.IBinder, param1: boolean): boolean;
                        public setAdditionalInputMethodSubtypes(param0: string, param1: globalAndroid.view.inputmethod.InputMethodSubtype[]): void;
                        public createInputContentUriToken(param0: globalAndroid.os.IBinder, param1: globalAndroid.net.Uri, param2: string): com.android.internal.inputmethod.IInputContentUriToken;
                        public getCurrentInputMethodSubtype(): globalAndroid.view.inputmethod.InputMethodSubtype;
                        public clearLastInputMethodWindowForTransition(param0: globalAndroid.os.IBinder): void;
                        public showSoftInput(param0: com.android.internal.view.IInputMethodClient, param1: number, param2: globalAndroid.os.ResultReceiver): boolean;
                        public getShortcutInputMethodsAndSubtypes(): java.util.List;
                        public removeClient(param0: com.android.internal.view.IInputMethodClient): void;
                        public getEnabledInputMethodSubtypeList(param0: string, param1: boolean): java.util.List<globalAndroid.view.inputmethod.InputMethodSubtype>;
                        public showInputMethodAndSubtypeEnablerFromClient(param0: com.android.internal.view.IInputMethodClient, param1: string): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.view.IInputMethodManager {
                            public static class: java.lang.Class<com.android.internal.view.IInputMethodManager.Stub.Proxy>;
                            public shouldOfferSwitchingToNextInputMethod(param0: globalAndroid.os.IBinder): boolean;
                            public notifyUserAction(param0: number): void;
                            public showInputMethodPickerFromClient(param0: com.android.internal.view.IInputMethodClient, param1: number): void;
                            public showMySoftInput(param0: globalAndroid.os.IBinder, param1: number): void;
                            public switchToNextInputMethod(param0: globalAndroid.os.IBinder, param1: boolean): boolean;
                            public finishInput(param0: com.android.internal.view.IInputMethodClient): void;
                            public hideSoftInput(param0: com.android.internal.view.IInputMethodClient, param1: number, param2: globalAndroid.os.ResultReceiver): boolean;
                            public setAdditionalInputMethodSubtypes(param0: string, param1: globalAndroid.view.inputmethod.InputMethodSubtype[]): void;
                            public startInputOrWindowGainedFocus(param0: number, param1: com.android.internal.view.IInputMethodClient, param2: globalAndroid.os.IBinder, param3: number, param4: number, param5: number, param6: globalAndroid.view.inputmethod.EditorInfo, param7: com.android.internal.view.IInputContext, param8: number): com.android.internal.view.InputBindResult;
                            public addClient(param0: com.android.internal.view.IInputMethodClient, param1: com.android.internal.view.IInputContext, param2: number, param3: number): void;
                            public switchToLastInputMethod(param0: globalAndroid.os.IBinder): boolean;
                            public registerSuggestionSpansForNotification(param0: globalAndroid.text.style.SuggestionSpan[]): void;
                            public getCurrentInputMethodSubtype(): globalAndroid.view.inputmethod.InputMethodSubtype;
                            public notifySuggestionPicked(param0: globalAndroid.text.style.SuggestionSpan, param1: string, param2: number): boolean;
                            public setInputMethod(param0: globalAndroid.os.IBinder, param1: string): void;
                            public setImeWindowStatus(param0: globalAndroid.os.IBinder, param1: globalAndroid.os.IBinder, param2: number, param3: number): void;
                            public showSoftInput(param0: com.android.internal.view.IInputMethodClient, param1: number, param2: globalAndroid.os.ResultReceiver): boolean;
                            public getEnabledInputMethodList(): java.util.List<globalAndroid.view.inputmethod.InputMethodInfo>;
                            public reportFullscreenMode(param0: globalAndroid.os.IBinder, param1: boolean): void;
                            public setInputMethodEnabled(param0: string, param1: boolean): boolean;
                            public getInputMethodWindowVisibleHeight(): number;
                            public clearLastInputMethodWindowForTransition(param0: globalAndroid.os.IBinder): void;
                            public createInputContentUriToken(param0: globalAndroid.os.IBinder, param1: globalAndroid.net.Uri, param2: string): com.android.internal.inputmethod.IInputContentUriToken;
                            public updateStatusIcon(param0: globalAndroid.os.IBinder, param1: string, param2: number): void;
                            public getShortcutInputMethodsAndSubtypes(): java.util.List;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public removeClient(param0: com.android.internal.view.IInputMethodClient): void;
                            public setInputMethodAndSubtype(param0: globalAndroid.os.IBinder, param1: string, param2: globalAndroid.view.inputmethod.InputMethodSubtype): void;
                            public showInputMethodAndSubtypeEnablerFromClient(param0: com.android.internal.view.IInputMethodClient, param1: string): void;
                            public getInputMethodList(): java.util.List<globalAndroid.view.inputmethod.InputMethodInfo>;
                            public hideMySoftInput(param0: globalAndroid.os.IBinder, param1: number): void;
                            public getEnabledInputMethodSubtypeList(param0: string, param1: boolean): java.util.List<globalAndroid.view.inputmethod.InputMethodSubtype>;
                            public getLastInputMethodSubtype(): globalAndroid.view.inputmethod.InputMethodSubtype;
                            public setCurrentInputMethodSubtype(param0: globalAndroid.view.inputmethod.InputMethodSubtype): boolean;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export class IInputMethodSession extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.view.IInputMethodSession>;
                    /**
                     * Constructs a new instance of the com.android.internal.view.IInputMethodSession interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        appPrivateCommand(param0: string, param1: globalAndroid.os.Bundle): void;
                        displayCompletions(param0: globalAndroid.view.inputmethod.CompletionInfo[]): void;
                        finishInput(): void;
                        finishSession(): void;
                        toggleSoftInput(param0: number, param1: number): void;
                        updateCursor(param0: globalAndroid.graphics.Rect): void;
                        updateCursorAnchorInfo(param0: globalAndroid.view.inputmethod.CursorAnchorInfo): void;
                        updateExtractedText(param0: number, param1: globalAndroid.view.inputmethod.ExtractedText): void;
                        updateSelection(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): void;
                        viewClicked(param0: boolean): void;
                    });
                    public constructor();
                    public updateCursor(param0: globalAndroid.graphics.Rect): void;
                    public finishSession(): void;
                    public appPrivateCommand(param0: string, param1: globalAndroid.os.Bundle): void;
                    public finishInput(): void;
                    public toggleSoftInput(param0: number, param1: number): void;
                    public viewClicked(param0: boolean): void;
                    public updateExtractedText(param0: number, param1: globalAndroid.view.inputmethod.ExtractedText): void;
                    public displayCompletions(param0: globalAndroid.view.inputmethod.CompletionInfo[]): void;
                    public updateSelection(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): void;
                    public updateCursorAnchorInfo(param0: globalAndroid.view.inputmethod.CursorAnchorInfo): void;
                }
                export module IInputMethodSession {
                    export abstract class Stub implements com.android.internal.view.IInputMethodSession {
                        public static class: java.lang.Class<com.android.internal.view.IInputMethodSession.Stub>;
                        public constructor();
                        public updateCursor(param0: globalAndroid.graphics.Rect): void;
                        public updateExtractedText(param0: number, param1: globalAndroid.view.inputmethod.ExtractedText): void;
                        public viewClicked(param0: boolean): void;
                        public finishSession(): void;
                        public displayCompletions(param0: globalAndroid.view.inputmethod.CompletionInfo[]): void;
                        public toggleSoftInput(param0: number, param1: number): void;
                        public updateSelection(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.view.IInputMethodSession;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public finishInput(): void;
                        public asBinder(): globalAndroid.os.IBinder;
                        public appPrivateCommand(param0: string, param1: globalAndroid.os.Bundle): void;
                        public updateCursorAnchorInfo(param0: globalAndroid.view.inputmethod.CursorAnchorInfo): void;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.view.IInputMethodSession {
                            public static class: java.lang.Class<com.android.internal.view.IInputMethodSession.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public updateCursor(param0: globalAndroid.graphics.Rect): void;
                            public displayCompletions(param0: globalAndroid.view.inputmethod.CompletionInfo[]): void;
                            public updateCursorAnchorInfo(param0: globalAndroid.view.inputmethod.CursorAnchorInfo): void;
                            public appPrivateCommand(param0: string, param1: globalAndroid.os.Bundle): void;
                            public toggleSoftInput(param0: number, param1: number): void;
                            public updateSelection(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): void;
                            public finishSession(): void;
                            public updateExtractedText(param0: number, param1: globalAndroid.view.inputmethod.ExtractedText): void;
                            public viewClicked(param0: boolean): void;
                            public finishInput(): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export class IInputSessionCallback extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.view.IInputSessionCallback>;
                    /**
                     * Constructs a new instance of the com.android.internal.view.IInputSessionCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        sessionCreated(param0: com.android.internal.view.IInputMethodSession): void;
                    });
                    public constructor();
                    public sessionCreated(param0: com.android.internal.view.IInputMethodSession): void;
                }
                export module IInputSessionCallback {
                    export abstract class Stub implements com.android.internal.view.IInputSessionCallback {
                        public static class: java.lang.Class<com.android.internal.view.IInputSessionCallback.Stub>;
                        public constructor();
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.view.IInputSessionCallback;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public sessionCreated(param0: com.android.internal.view.IInputMethodSession): void;
                        public asBinder(): globalAndroid.os.IBinder;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.view.IInputSessionCallback {
                            public static class: java.lang.Class<com.android.internal.view.IInputSessionCallback.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public sessionCreated(param0: com.android.internal.view.IInputMethodSession): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export class InputBindResult extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.view.InputBindResult>;
                    public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.view.InputBindResult>;
                    public channel: globalAndroid.view.InputChannel;
                    public id: string;
                    public method: com.android.internal.view.IInputMethodSession;
                    public sequence: number;
                    public userActionNotificationSequenceNumber: number;
                    public toString(): string;
                    public describeContents(): number;
                    public constructor(param0: com.android.internal.view.IInputMethodSession, param1: globalAndroid.view.InputChannel, param2: string, param3: number, param4: number);
                    public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export class InputConnectionWrapper extends globalAndroid.view.inputmethod.InputConnection {
                    public static class: java.lang.Class<com.android.internal.view.InputConnectionWrapper>;
                    public commitText(param0: string, param1: number): boolean;
                    public clearMetaKeyStates(param0: number): boolean;
                    public requestCursorUpdates(param0: number): boolean;
                    public getCursorCapsMode(param0: number): number;
                    public commitCompletion(param0: globalAndroid.view.inputmethod.CompletionInfo): boolean;
                    public getTextAfterCursor(param0: number, param1: number): string;
                    public performPrivateCommand(param0: string, param1: globalAndroid.os.Bundle): boolean;
                    public commitContent(param0: globalAndroid.view.inputmethod.InputContentInfo, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    public toString(): string;
                    public endBatchEdit(): boolean;
                    public getSelectedText(param0: number): string;
                    public commitCorrection(param0: globalAndroid.view.inputmethod.CorrectionInfo): boolean;
                    public beginBatchEdit(): boolean;
                    public setSelection(param0: number, param1: number): boolean;
                    public getTextBeforeCursor(param0: number, param1: number): string;
                    public performEditorAction(param0: number): boolean;
                    public sendKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
                    public deleteSurroundingText(param0: number, param1: number): boolean;
                    public deleteSurroundingTextInCodePoints(param0: number, param1: number): boolean;
                    public closeConnection(): void;
                    public reportFullscreenMode(param0: boolean): boolean;
                    public getExtractedText(param0: globalAndroid.view.inputmethod.ExtractedTextRequest, param1: number): globalAndroid.view.inputmethod.ExtractedText;
                    public setComposingRegion(param0: number, param1: number): boolean;
                    public finishComposingText(): boolean;
                    public getHandler(): globalAndroid.os.Handler;
                    public performContextMenuAction(param0: number): boolean;
                    public setComposingText(param0: string, param1: number): boolean;
                    public constructor(param0: java.lang.ref.WeakReference<globalAndroid.inputmethodservice.AbstractInputMethodService>, param1: com.android.internal.view.IInputContext, param2: number);
                }
                export module InputConnectionWrapper {
                    export class InputContextCallback extends com.android.internal.view.IInputContextCallback.Stub {
                        public static class: java.lang.Class<com.android.internal.view.InputConnectionWrapper.InputContextCallback>;
                        public mCommitContentResult: boolean;
                        public mCursorCapsMode: number;
                        public mExtractedText: globalAndroid.view.inputmethod.ExtractedText;
                        public mHaveValue: boolean;
                        public mRequestUpdateCursorAnchorInfoResult: boolean;
                        public mSelectedText: string;
                        public mSeq: number;
                        public mTextAfterCursor: string;
                        public mTextBeforeCursor: string;
                        public setCursorCapsMode(param0: number, param1: number): void;
                        public setTextAfterCursor(param0: string, param1: number): void;
                        public setCommitContentResult(param0: boolean, param1: number): void;
                        public setRequestUpdateCursorAnchorInfoResult(param0: boolean, param1: number): void;
                        public setTextBeforeCursor(param0: string, param1: number): void;
                        public setSelectedText(param0: string, param1: number): void;
                        public setExtractedText(param0: globalAndroid.view.inputmethod.ExtractedText, param1: number): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export class InputMethodClient extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.view.InputMethodClient>;
                    public static START_INPUT_REASON_ACTIVATED_BY_IMMS: number;
                    public static START_INPUT_REASON_APP_CALLED_RESTART_INPUT_API: number;
                    public static START_INPUT_REASON_BOUND_TO_IMMS: number;
                    public static START_INPUT_REASON_CHECK_FOCUS: number;
                    public static START_INPUT_REASON_DEACTIVATED_BY_IMMS: number;
                    public static START_INPUT_REASON_SESSION_CREATED_BY_IME: number;
                    public static START_INPUT_REASON_UNBOUND_FROM_IMMS: number;
                    public static START_INPUT_REASON_UNSPECIFIED: number;
                    public static START_INPUT_REASON_WINDOW_FOCUS_GAIN: number;
                    public static START_INPUT_REASON_WINDOW_FOCUS_GAIN_REPORT_ONLY: number;
                    public static UNBIND_REASON_DISCONNECT_IME: number;
                    public static UNBIND_REASON_NO_IME: number;
                    public static UNBIND_REASON_SWITCH_CLIENT: number;
                    public static UNBIND_REASON_SWITCH_IME: number;
                    public static UNBIND_REASON_SWITCH_IME_FAILED: number;
                    public static UNBIND_REASON_SWITCH_USER: number;
                    public static UNBIND_REASON_UNSPECIFIED: number;
                    public constructor();
                    public static getStartInputReason(param0: number): string;
                    public static getUnbindReason(param0: number): string;
                    public static softInputModeToString(param0: number): string;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export class OneShotPreDrawListener implements globalAndroid.view.ViewTreeObserver.OnPreDrawListener, globalAndroid.view.View.OnAttachStateChangeListener {
                    public static class: java.lang.Class<com.android.internal.view.OneShotPreDrawListener>;
                    public onViewDetachedFromWindow(param0: globalAndroid.view.View): void;
                    public onPreDraw(): boolean;
                    public static add(param0: globalAndroid.view.View, param1: boolean, param2: java.lang.Runnable): com.android.internal.view.OneShotPreDrawListener;
                    public removeListener(): void;
                    public onViewAttachedToWindow(param0: globalAndroid.view.View): void;
                    public static add(param0: globalAndroid.view.View, param1: java.lang.Runnable): com.android.internal.view.OneShotPreDrawListener;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export class RootViewSurfaceTaker extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.view.RootViewSurfaceTaker>;
                    /**
                     * Constructs a new instance of the com.android.internal.view.RootViewSurfaceTaker interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        onRootViewScrollYChanged(param0: number): void;
                        setSurfaceFormat(param0: number): void;
                        setSurfaceKeepScreenOn(param0: boolean): void;
                        setSurfaceType(param0: number): void;
                        willYouTakeTheInputQueue(): globalAndroid.view.InputQueue.Callback;
                        willYouTakeTheSurface(): globalAndroid.view.SurfaceHolder.Callback2;
                    });
                    public constructor();
                    public willYouTakeTheSurface(): globalAndroid.view.SurfaceHolder.Callback2;
                    public setSurfaceKeepScreenOn(param0: boolean): void;
                    public willYouTakeTheInputQueue(): globalAndroid.view.InputQueue.Callback;
                    public onRootViewScrollYChanged(param0: number): void;
                    public setSurfaceType(param0: number): void;
                    public setSurfaceFormat(param0: number): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export class RotationPolicy extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.view.RotationPolicy>;
                    public static setRotationLock(param0: globalAndroid.content.Context, param1: boolean): void;
                    public static unregisterRotationPolicyListener(param0: globalAndroid.content.Context, param1: com.android.internal.view.RotationPolicy.RotationPolicyListener): void;
                    public static getRotationLockOrientation(param0: globalAndroid.content.Context): number;
                    public static isRotationSupported(param0: globalAndroid.content.Context): boolean;
                    public static isRotationLockToggleVisible(param0: globalAndroid.content.Context): boolean;
                    public static registerRotationPolicyListener(param0: globalAndroid.content.Context, param1: com.android.internal.view.RotationPolicy.RotationPolicyListener, param2: number): void;
                    public static setRotationLockForAccessibility(param0: globalAndroid.content.Context, param1: boolean): void;
                    public static registerRotationPolicyListener(param0: globalAndroid.content.Context, param1: com.android.internal.view.RotationPolicy.RotationPolicyListener): void;
                    public static isRotationLocked(param0: globalAndroid.content.Context): boolean;
                }
                export module RotationPolicy {
                    export abstract class RotationPolicyListener {
                        public static class: java.lang.Class<com.android.internal.view.RotationPolicy.RotationPolicyListener>;
                        public onChange(): void;
                        public constructor();
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export class StandaloneActionMode extends globalAndroid.view.ActionMode implements com.android.internal.view.menu.MenuBuilder.Callback {
                    public static class: java.lang.Class<com.android.internal.view.StandaloneActionMode>;
                    public getTitle(): string;
                    public getMenuInflater(): globalAndroid.view.MenuInflater;
                    public getCustomView(): globalAndroid.view.View;
                    public getMenu(): globalAndroid.view.Menu;
                    public setTitle(param0: string): void;
                    public onMenuModeChange(param0: com.android.internal.view.menu.MenuBuilder): void;
                    public finish(): void;
                    public setSubtitle(param0: number): void;
                    public setTitle(param0: number): void;
                    public constructor(param0: globalAndroid.content.Context, param1: com.android.internal.widget.ActionBarContextView, param2: globalAndroid.view.ActionMode.Callback, param3: boolean);
                    public constructor();
                    public isTitleOptional(): boolean;
                    public setSubtitle(param0: string): void;
                    public getSubtitle(): string;
                    public setCustomView(param0: globalAndroid.view.View): void;
                    public onCloseMenu(param0: com.android.internal.view.menu.MenuBuilder, param1: boolean): void;
                    public isUiFocusable(): boolean;
                    public onCloseSubMenu(param0: com.android.internal.view.menu.SubMenuBuilder): void;
                    public onSubMenuSelected(param0: com.android.internal.view.menu.SubMenuBuilder): boolean;
                    public onMenuItemSelected(param0: com.android.internal.view.menu.MenuBuilder, param1: globalAndroid.view.MenuItem): boolean;
                    public setTitleOptionalHint(param0: boolean): void;
                    public invalidate(): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export class SurfaceCallbackHelper extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.view.SurfaceCallbackHelper>;
                    public constructor(param0: java.lang.Runnable);
                    public dispatchSurfaceRedrawNeededAsync(param0: globalAndroid.view.SurfaceHolder, param1: globalAndroid.view.SurfaceHolder.Callback[]): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export class SurfaceFlingerVsyncChoreographer extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.view.SurfaceFlingerVsyncChoreographer>;
                    public scheduleAtSfVsync(param0: globalAndroid.os.Handler, param1: globalAndroid.os.Message): void;
                    public constructor(param0: globalAndroid.os.Handler, param1: globalAndroid.view.Display, param2: globalAndroid.view.Choreographer);
                    public scheduleAtSfVsync(param0: java.lang.Runnable): void;
                    public getSurfaceFlingerOffsetMs(): number;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export class TooltipPopup extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.view.TooltipPopup>;
                    public constructor(param0: globalAndroid.content.Context);
                    public getContentView(): globalAndroid.view.View;
                    public isShowing(): boolean;
                    public hide(): void;
                    public show(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean, param4: string): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export class WindowManagerPolicyThread extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.view.WindowManagerPolicyThread>;
                    public constructor();
                    public static set(param0: java.lang.Thread, param1: globalAndroid.os.Looper): void;
                    public static getLooper(): globalAndroid.os.Looper;
                    public static getThread(): java.lang.Thread;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export module animation {
                    export class FallbackLUTInterpolator extends com.android.internal.view.animation.NativeInterpolatorFactory {
                        public static class: java.lang.Class<com.android.internal.view.animation.FallbackLUTInterpolator>;
                        public createNativeInterpolator(): number;
                        public static createNativeInterpolator(param0: globalAndroid.animation.TimeInterpolator, param1: number): number;
                        public constructor(param0: globalAndroid.animation.TimeInterpolator, param1: number);
                        public getInterpolation(param0: number): number;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export module animation {
                    export class HasNativeInterpolator extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.view.animation.HasNativeInterpolator>;
                        /**
                         * Constructs a new instance of the com.android.internal.view.animation.HasNativeInterpolator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {});
                        public constructor();
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export module animation {
                    export class NativeInterpolatorFactory extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.view.animation.NativeInterpolatorFactory>;
                        /**
                         * Constructs a new instance of the com.android.internal.view.animation.NativeInterpolatorFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            createNativeInterpolator(): number;
                        });
                        public constructor();
                        public createNativeInterpolator(): number;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export module animation {
                    export class NativeInterpolatorFactoryHelper extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.view.animation.NativeInterpolatorFactoryHelper>;
                        public static createPathInterpolator(param0: number[], param1: number[]): number;
                        public static createLutInterpolator(param0: number[]): number;
                        public static createAccelerateInterpolator(param0: number): number;
                        public static createCycleInterpolator(param0: number): number;
                        public static createAccelerateDecelerateInterpolator(): number;
                        public static createAnticipateInterpolator(param0: number): number;
                        public static createDecelerateInterpolator(param0: number): number;
                        public static createLinearInterpolator(): number;
                        public static createBounceInterpolator(): number;
                        public static createOvershootInterpolator(param0: number): number;
                        public static createAnticipateOvershootInterpolator(param0: number): number;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export module menu {
                    export class ActionMenu extends globalAndroid.view.Menu {
                        public static class: java.lang.Class<com.android.internal.view.menu.ActionMenu>;
                        public constructor(param0: globalAndroid.content.Context);
                        public addIntentOptions(param0: number, param1: number, param2: number, param3: globalAndroid.content.ComponentName, param4: globalAndroid.content.Intent[], param5: globalAndroid.content.Intent, param6: number, param7: globalAndroid.view.MenuItem[]): number;
                        public close(): void;
                        public isShortcutKey(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                        public add(param0: number): globalAndroid.view.MenuItem;
                        public performIdentifierAction(param0: number, param1: number): boolean;
                        public setGroupVisible(param0: number, param1: boolean): void;
                        public removeItem(param0: number): void;
                        public add(param0: string): globalAndroid.view.MenuItem;
                        public add(param0: number, param1: number, param2: number, param3: number): globalAndroid.view.MenuItem;
                        public size(): number;
                        public getItem(param0: number): globalAndroid.view.MenuItem;
                        public hasVisibleItems(): boolean;
                        public performShortcut(param0: number, param1: globalAndroid.view.KeyEvent, param2: number): boolean;
                        public setQwertyMode(param0: boolean): void;
                        public addSubMenu(param0: number, param1: number, param2: number, param3: string): globalAndroid.view.SubMenu;
                        public findItem(param0: number): globalAndroid.view.MenuItem;
                        public getContext(): globalAndroid.content.Context;
                        public addSubMenu(param0: string): globalAndroid.view.SubMenu;
                        public addSubMenu(param0: number, param1: number, param2: number, param3: number): globalAndroid.view.SubMenu;
                        public addSubMenu(param0: number): globalAndroid.view.SubMenu;
                        public add(param0: number, param1: number, param2: number, param3: string): globalAndroid.view.MenuItem;
                        public clear(): void;
                        public setGroupCheckable(param0: number, param1: boolean, param2: boolean): void;
                        public removeGroup(param0: number): void;
                        public setGroupEnabled(param0: number, param1: boolean): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export module menu {
                    export class ActionMenuItem extends globalAndroid.view.MenuItem {
                        public static class: java.lang.Class<com.android.internal.view.menu.ActionMenuItem>;
                        public getIcon(): globalAndroid.graphics.drawable.Drawable;
                        public setTitleCondensed(param0: string): globalAndroid.view.MenuItem;
                        public getGroupId(): number;
                        public getIconTintMode(): globalAndroid.graphics.PorterDuff.Mode;
                        public setShortcut(param0: string, param1: string): globalAndroid.view.MenuItem;
                        public setNumericShortcut(param0: string): globalAndroid.view.MenuItem;
                        public getIntent(): globalAndroid.content.Intent;
                        public setIcon(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.view.MenuItem;
                        public getContentDescription(): string;
                        public setContentDescription(param0: string): globalAndroid.view.MenuItem;
                        public getIconTintList(): globalAndroid.content.res.ColorStateList;
                        public setShowAsActionFlags(param0: number): globalAndroid.view.MenuItem;
                        public constructor(param0: globalAndroid.content.Context, param1: number, param2: number, param3: number, param4: number, param5: string);
                        public setAlphabeticShortcut(param0: string, param1: number): globalAndroid.view.MenuItem;
                        public invoke(): boolean;
                        public setExclusiveCheckable(param0: boolean): com.android.internal.view.menu.ActionMenuItem;
                        public isEnabled(): boolean;
                        public collapseActionView(): boolean;
                        public setIcon(param0: number): globalAndroid.view.MenuItem;
                        public getNumericModifiers(): number;
                        public setOnActionExpandListener(param0: globalAndroid.view.MenuItem.OnActionExpandListener): globalAndroid.view.MenuItem;
                        public getAlphabeticShortcut(): string;
                        public setIntent(param0: globalAndroid.content.Intent): globalAndroid.view.MenuItem;
                        public getTooltipText(): string;
                        public setAlphabeticShortcut(param0: string): globalAndroid.view.MenuItem;
                        public setOnMenuItemClickListener(param0: globalAndroid.view.MenuItem.OnMenuItemClickListener): globalAndroid.view.MenuItem;
                        public hasSubMenu(): boolean;
                        public setCheckable(param0: boolean): globalAndroid.view.MenuItem;
                        public getMenuInfo(): globalAndroid.view.ContextMenu.ContextMenuInfo;
                        public getSubMenu(): globalAndroid.view.SubMenu;
                        public getNumericShortcut(): string;
                        public setTitle(param0: number): globalAndroid.view.MenuItem;
                        public isCheckable(): boolean;
                        public setVisible(param0: boolean): globalAndroid.view.MenuItem;
                        public getItemId(): number;
                        public setShortcut(param0: string, param1: string, param2: number, param3: number): globalAndroid.view.MenuItem;
                        public setTitle(param0: string): globalAndroid.view.MenuItem;
                        public getActionView(): globalAndroid.view.View;
                        public setActionView(param0: globalAndroid.view.View): globalAndroid.view.MenuItem;
                        public isChecked(): boolean;
                        public isVisible(): boolean;
                        public setShowAsAction(param0: number): void;
                        public setChecked(param0: boolean): globalAndroid.view.MenuItem;
                        public setIconTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): globalAndroid.view.MenuItem;
                        public getOrder(): number;
                        public setEnabled(param0: boolean): globalAndroid.view.MenuItem;
                        public requiresOverflow(): boolean;
                        public setIconTintList(param0: globalAndroid.content.res.ColorStateList): globalAndroid.view.MenuItem;
                        public setTooltipText(param0: string): globalAndroid.view.MenuItem;
                        public isActionViewExpanded(): boolean;
                        public setNumericShortcut(param0: string, param1: number): globalAndroid.view.MenuItem;
                        public expandActionView(): boolean;
                        public getActionProvider(): globalAndroid.view.ActionProvider;
                        public getTitleCondensed(): string;
                        public getTitle(): string;
                        public setActionView(param0: number): globalAndroid.view.MenuItem;
                        public getAlphabeticModifiers(): number;
                        public setActionProvider(param0: globalAndroid.view.ActionProvider): globalAndroid.view.MenuItem;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export module menu {
                    export class ActionMenuItemView extends globalAndroid.widget.TextView implements com.android.internal.view.menu.MenuView.ItemView, globalAndroid.view.View.OnClickListener, globalAndroid.widget.ActionMenuView.ActionMenuChildView {
                        public static class: java.lang.Class<com.android.internal.view.menu.ActionMenuItemView>;
                        public constructor(param0: globalAndroid.content.Context);
                        public needsDividerBefore(): boolean;
                        public sendAccessibilityEvent(param0: number): void;
                        public dispatchHoverEvent(param0: globalAndroid.view.MotionEvent): boolean;
                        public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                        public showsIcon(): boolean;
                        public getItemData(): com.android.internal.view.menu.MenuItemImpl;
                        public setExpandedFormat(param0: boolean): void;
                        public prefersCondensedTitle(): boolean;
                        public needsDividerAfter(): boolean;
                        public setPopupCallback(param0: com.android.internal.view.menu.ActionMenuItemView.PopupCallback): void;
                        public hasText(): boolean;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                        public onMeasure(param0: number, param1: number): void;
                        public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                        public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
                        public setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
                        public setChecked(param0: boolean): void;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                        public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                        public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
                        public dispatchPopulateAccessibilityEventInternal(param0: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                        public setEnabled(param0: boolean): void;
                        public onPopulateAccessibilityEventInternal(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                        public initialize(param0: com.android.internal.view.menu.MenuItemImpl, param1: number): void;
                        public setTitle(param0: string): void;
                        public setItemInvoker(param0: com.android.internal.view.menu.MenuBuilder.ItemInvoker): void;
                        public setShortcut(param0: boolean, param1: string): void;
                        public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                        public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                        public onPreDraw(): boolean;
                        public setCheckable(param0: boolean): void;
                        public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
                        public setPadding(param0: number, param1: number, param2: number, param3: number): void;
                        public onClick(param0: globalAndroid.view.View): void;
                    }
                    export module ActionMenuItemView {
                        export class ActionMenuItemForwardingListener extends globalAndroid.widget.ForwardingListener {
                            public static class: java.lang.Class<com.android.internal.view.menu.ActionMenuItemView.ActionMenuItemForwardingListener>;
                            public onViewDetachedFromWindow(param0: globalAndroid.view.View): void;
                            public constructor(param0: globalAndroid.view.View);
                            public getPopup(): com.android.internal.view.menu.ShowableListMenu;
                            public constructor(param0: com.android.internal.view.menu.ActionMenuItemView);
                            public onForwardingStarted(): boolean;
                            public onViewAttachedToWindow(param0: globalAndroid.view.View): void;
                            public onTouch(param0: globalAndroid.view.View, param1: globalAndroid.view.MotionEvent): boolean;
                        }
                        export abstract class PopupCallback {
                            public static class: java.lang.Class<com.android.internal.view.menu.ActionMenuItemView.PopupCallback>;
                            public constructor();
                            public getPopup(): com.android.internal.view.menu.ShowableListMenu;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export module menu {
                    export abstract class BaseMenuPresenter extends com.android.internal.view.menu.MenuPresenter {
                        public static class: java.lang.Class<com.android.internal.view.menu.BaseMenuPresenter>;
                        public mContext: globalAndroid.content.Context;
                        public mInflater: globalAndroid.view.LayoutInflater;
                        public mMenu: com.android.internal.view.menu.MenuBuilder;
                        public mMenuView: com.android.internal.view.menu.MenuView;
                        public mSystemContext: globalAndroid.content.Context;
                        public mSystemInflater: globalAndroid.view.LayoutInflater;
                        public getCallback(): com.android.internal.view.menu.MenuPresenter.Callback;
                        public constructor(param0: globalAndroid.content.Context, param1: number, param2: number);
                        public flagActionItems(): boolean;
                        public initForMenu(param0: globalAndroid.content.Context, param1: com.android.internal.view.menu.MenuBuilder): void;
                        public getItemView(param0: com.android.internal.view.menu.MenuItemImpl, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
                        public addItemView(param0: globalAndroid.view.View, param1: number): void;
                        public onCloseMenu(param0: com.android.internal.view.menu.MenuBuilder, param1: boolean): void;
                        public getId(): number;
                        public setId(param0: number): void;
                        public shouldIncludeItem(param0: number, param1: com.android.internal.view.menu.MenuItemImpl): boolean;
                        public onSubMenuSelected(param0: com.android.internal.view.menu.SubMenuBuilder): boolean;
                        public bindItemView(param0: com.android.internal.view.menu.MenuItemImpl, param1: com.android.internal.view.menu.MenuView.ItemView): void;
                        public setCallback(param0: com.android.internal.view.menu.MenuPresenter.Callback): void;
                        public expandItemActionView(param0: com.android.internal.view.menu.MenuBuilder, param1: com.android.internal.view.menu.MenuItemImpl): boolean;
                        public updateMenuView(param0: boolean): void;
                        public filterLeftoverView(param0: globalAndroid.view.ViewGroup, param1: number): boolean;
                        public onSaveInstanceState(): globalAndroid.os.Parcelable;
                        public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
                        public getMenuView(param0: globalAndroid.view.ViewGroup): com.android.internal.view.menu.MenuView;
                        public collapseItemActionView(param0: com.android.internal.view.menu.MenuBuilder, param1: com.android.internal.view.menu.MenuItemImpl): boolean;
                        public createItemView(param0: globalAndroid.view.ViewGroup): com.android.internal.view.menu.MenuView.ItemView;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export module menu {
                    export class CascadingMenuPopup extends com.android.internal.view.menu.MenuPopup implements com.android.internal.view.menu.MenuPresenter, globalAndroid.view.View.OnKeyListener, globalAndroid.widget.PopupWindow.OnDismissListener {
                        public static class: java.lang.Class<com.android.internal.view.menu.CascadingMenuPopup>;
                        public flagActionItems(): boolean;
                        public dismiss(): void;
                        public initForMenu(param0: globalAndroid.content.Context, param1: com.android.internal.view.menu.MenuBuilder): void;
                        public onCloseMenu(param0: com.android.internal.view.menu.MenuBuilder, param1: boolean): void;
                        public setForceShowIcon(param0: boolean): void;
                        public addMenu(param0: com.android.internal.view.menu.MenuBuilder): void;
                        public setCallback(param0: com.android.internal.view.menu.MenuPresenter.Callback): void;
                        public expandItemActionView(param0: com.android.internal.view.menu.MenuBuilder, param1: com.android.internal.view.menu.MenuItemImpl): boolean;
                        public updateMenuView(param0: boolean): void;
                        public setGravity(param0: number): void;
                        public collapseItemActionView(param0: com.android.internal.view.menu.MenuBuilder, param1: com.android.internal.view.menu.MenuItemImpl): boolean;
                        public setShowTitle(param0: boolean): void;
                        public constructor();
                        public getListView(): globalAndroid.widget.ListView;
                        public setAnchorView(param0: globalAndroid.view.View): void;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.view.View, param2: number, param3: number, param4: boolean);
                        public setOnDismissListener(param0: globalAndroid.widget.PopupWindow.OnDismissListener): void;
                        public getId(): number;
                        public onDismiss(): void;
                        public onSubMenuSelected(param0: com.android.internal.view.menu.SubMenuBuilder): boolean;
                        public setVerticalOffset(param0: number): void;
                        public onKey(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                        public show(): void;
                        public onItemClick(param0: globalAndroid.widget.AdapterView<any>, param1: globalAndroid.view.View, param2: number, param3: number): void;
                        public onSaveInstanceState(): globalAndroid.os.Parcelable;
                        public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
                        public setHorizontalOffset(param0: number): void;
                        public getMenuView(param0: globalAndroid.view.ViewGroup): com.android.internal.view.menu.MenuView;
                        public isShowing(): boolean;
                    }
                    export module CascadingMenuPopup {
                        export class CascadingMenuInfo extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.view.menu.CascadingMenuPopup.CascadingMenuInfo>;
                            public menu: com.android.internal.view.menu.MenuBuilder;
                            public position: number;
                            public window: globalAndroid.widget.MenuPopupWindow;
                            public getListView(): globalAndroid.widget.ListView;
                            public constructor(param0: globalAndroid.widget.MenuPopupWindow, param1: com.android.internal.view.menu.MenuBuilder, param2: number);
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export module menu {
                    export class ContextMenuBuilder extends com.android.internal.view.menu.MenuBuilder implements globalAndroid.view.ContextMenu {
                        public static class: java.lang.Class<com.android.internal.view.menu.ContextMenuBuilder>;
                        public constructor(param0: globalAndroid.content.Context);
                        public addIntentOptions(param0: number, param1: number, param2: number, param3: globalAndroid.content.ComponentName, param4: globalAndroid.content.Intent[], param5: globalAndroid.content.Intent, param6: number, param7: globalAndroid.view.MenuItem[]): number;
                        public close(): void;
                        public isShortcutKey(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                        public add(param0: number): globalAndroid.view.MenuItem;
                        public performIdentifierAction(param0: number, param1: number): boolean;
                        public close(param0: boolean): void;
                        public setGroupVisible(param0: number, param1: boolean): void;
                        public removeItem(param0: number): void;
                        public setHeaderTitle(param0: string): globalAndroid.view.ContextMenu;
                        public add(param0: string): globalAndroid.view.MenuItem;
                        public setHeaderIcon(param0: number): globalAndroid.view.ContextMenu;
                        public clearHeader(): void;
                        public add(param0: number, param1: number, param2: number, param3: number): globalAndroid.view.MenuItem;
                        public setHeaderTitle(param0: number): globalAndroid.view.ContextMenu;
                        public size(): number;
                        public getItem(param0: number): globalAndroid.view.MenuItem;
                        public hasVisibleItems(): boolean;
                        public performShortcut(param0: number, param1: globalAndroid.view.KeyEvent, param2: number): boolean;
                        public setQwertyMode(param0: boolean): void;
                        public setHeaderIcon(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.view.ContextMenu;
                        public addSubMenu(param0: number, param1: number, param2: number, param3: string): globalAndroid.view.SubMenu;
                        public findItem(param0: number): globalAndroid.view.MenuItem;
                        public addSubMenu(param0: string): globalAndroid.view.SubMenu;
                        public showDialog(param0: globalAndroid.view.View, param1: globalAndroid.os.IBinder): com.android.internal.view.menu.MenuDialogHelper;
                        public addSubMenu(param0: number, param1: number, param2: number, param3: number): globalAndroid.view.SubMenu;
                        public showPopup(param0: globalAndroid.content.Context, param1: globalAndroid.view.View, param2: number, param3: number): com.android.internal.view.menu.MenuPopupHelper;
                        public addSubMenu(param0: number): globalAndroid.view.SubMenu;
                        public add(param0: number, param1: number, param2: number, param3: string): globalAndroid.view.MenuItem;
                        public clear(): void;
                        public setGroupCheckable(param0: number, param1: boolean, param2: boolean): void;
                        public removeGroup(param0: number): void;
                        public setHeaderView(param0: globalAndroid.view.View): globalAndroid.view.ContextMenu;
                        public setGroupEnabled(param0: number, param1: boolean): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export module menu {
                    export class ExpandedMenuView extends globalAndroid.widget.ListView implements com.android.internal.view.menu.MenuBuilder.ItemInvoker, com.android.internal.view.menu.MenuView, globalAndroid.widget.AdapterView.OnItemClickListener {
                        public static class: java.lang.Class<com.android.internal.view.menu.ExpandedMenuView>;
                        public isLayoutRequested(): boolean;
                        public canResolveLayoutDirection(): boolean;
                        public constructor(param0: globalAndroid.content.Context);
                        public sendAccessibilityEvent(param0: number): void;
                        public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                        public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                        public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                        public clearChildFocus(param0: globalAndroid.view.View): void;
                        public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                        public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                        public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                        public isTextAlignmentResolved(): boolean;
                        public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                        public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                        public getTextDirection(): number;
                        public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                        public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                        public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                        public removeView(param0: globalAndroid.view.View): void;
                        public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                        public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                        public setRemoteViewsAdapter(param0: globalAndroid.content.Intent): void;
                        public setRemoteViewsAdapter(param0: globalAndroid.content.Intent, param1: boolean): void;
                        public onFilterComplete(param0: number): void;
                        public beforeTextChanged(param0: string, param1: number, param2: number, param3: number): void;
                        public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                        public canResolveTextDirection(): boolean;
                        public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                        public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                        public requestDisallowInterceptTouchEvent(param0: boolean): void;
                        public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                        public isLayoutDirectionResolved(): boolean;
                        public getWindowAnimations(): number;
                        public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                        public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                        public onItemClick(param0: globalAndroid.widget.AdapterView<any>, param1: globalAndroid.view.View, param2: number, param3: number): void;
                        public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                        public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                        public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                        public requestLayout(): void;
                        public onGlobalLayout(): void;
                        public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                        public initialize(param0: com.android.internal.view.menu.MenuBuilder): void;
                        public bringChildToFront(param0: globalAndroid.view.View): void;
                        public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                        public addView(param0: globalAndroid.view.View, param1: number): void;
                        public deferNotifyDataSetChanged(): void;
                        public onTouchModeChanged(param0: boolean): void;
                        public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                        public isTextDirectionResolved(): boolean;
                        public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                        public onRemoteAdapterDisconnected(): void;
                        public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                        public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                        public onStopNestedScroll(param0: globalAndroid.view.View): void;
                        public requestTransparentRegion(param0: globalAndroid.view.View): void;
                        public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                        public addView(param0: globalAndroid.view.View): void;
                        public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                        public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                        public invokeItem(param0: com.android.internal.view.menu.MenuItemImpl): boolean;
                        public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                        public requestFitSystemWindows(): void;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                        public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                        public getParentForAccessibility(): globalAndroid.view.ViewParent;
                        public onRemoteAdapterConnected(): boolean;
                        public onDetachedFromWindow(): void;
                        public focusableViewAvailable(param0: globalAndroid.view.View): void;
                        public focusSearch(param0: number): globalAndroid.view.View;
                        public onTextChanged(param0: string, param1: number, param2: number, param3: number): void;
                        public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                        public afterTextChanged(param0: globalAndroid.text.Editable): void;
                        public getTextAlignment(): number;
                        public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                        public onItemClick(param0: globalAndroid.widget.AdapterView<any>, param1: globalAndroid.view.View, param2: number, param3: number): void;
                        public canResolveTextAlignment(): boolean;
                        public getLayoutDirection(): number;
                        public getParent(): globalAndroid.view.ViewParent;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export module menu {
                    export class IconMenuItemView extends globalAndroid.widget.TextView implements com.android.internal.view.menu.MenuView.ItemView {
                        public static class: java.lang.Class<com.android.internal.view.menu.IconMenuItemView>;
                        public constructor(param0: globalAndroid.content.Context);
                        public setVisibility(param0: number): void;
                        public sendAccessibilityEvent(param0: number): void;
                        public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                        public showsIcon(): boolean;
                        public performClick(): boolean;
                        public getItemData(): com.android.internal.view.menu.MenuItemImpl;
                        public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
                        public drawableStateChanged(): void;
                        public prefersCondensedTitle(): boolean;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                        public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                        public setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
                        public setChecked(param0: boolean): void;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                        public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                        public onTextChanged(param0: string, param1: number, param2: number, param3: number): void;
                        public setItemData(param0: com.android.internal.view.menu.MenuItemImpl): void;
                        public setEnabled(param0: boolean): void;
                        public initialize(param0: com.android.internal.view.menu.MenuItemImpl, param1: number): void;
                        public setTitle(param0: string): void;
                        public setItemInvoker(param0: com.android.internal.view.menu.MenuBuilder.ItemInvoker): void;
                        public setShortcut(param0: boolean, param1: string): void;
                        public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                        public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                        public onPreDraw(): boolean;
                        public setCheckable(param0: boolean): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export module menu {
                    export class IconMenuPresenter extends com.android.internal.view.menu.BaseMenuPresenter {
                        public static class: java.lang.Class<com.android.internal.view.menu.IconMenuPresenter>;
                        public constructor(param0: globalAndroid.content.Context, param1: number, param2: number);
                        public constructor(param0: globalAndroid.content.Context);
                        public flagActionItems(): boolean;
                        public initForMenu(param0: globalAndroid.content.Context, param1: com.android.internal.view.menu.MenuBuilder): void;
                        public restoreHierarchyState(param0: globalAndroid.os.Bundle): void;
                        public addItemView(param0: globalAndroid.view.View, param1: number): void;
                        public getNumActualItemsShown(): number;
                        public onCloseMenu(param0: com.android.internal.view.menu.MenuBuilder, param1: boolean): void;
                        public shouldIncludeItem(param0: number, param1: com.android.internal.view.menu.MenuItemImpl): boolean;
                        public getId(): number;
                        public onSubMenuSelected(param0: com.android.internal.view.menu.SubMenuBuilder): boolean;
                        public saveHierarchyState(param0: globalAndroid.os.Bundle): void;
                        public bindItemView(param0: com.android.internal.view.menu.MenuItemImpl, param1: com.android.internal.view.menu.MenuView.ItemView): void;
                        public setCallback(param0: com.android.internal.view.menu.MenuPresenter.Callback): void;
                        public expandItemActionView(param0: com.android.internal.view.menu.MenuBuilder, param1: com.android.internal.view.menu.MenuItemImpl): boolean;
                        public updateMenuView(param0: boolean): void;
                        public filterLeftoverView(param0: globalAndroid.view.ViewGroup, param1: number): boolean;
                        public onSaveInstanceState(): globalAndroid.os.Parcelable;
                        public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
                        public getMenuView(param0: globalAndroid.view.ViewGroup): com.android.internal.view.menu.MenuView;
                        public collapseItemActionView(param0: com.android.internal.view.menu.MenuBuilder, param1: com.android.internal.view.menu.MenuItemImpl): boolean;
                    }
                    export module IconMenuPresenter {
                        export class SubMenuPresenterCallback extends com.android.internal.view.menu.MenuPresenter.Callback {
                            public static class: java.lang.Class<com.android.internal.view.menu.IconMenuPresenter.SubMenuPresenterCallback>;
                            public onCloseMenu(param0: com.android.internal.view.menu.MenuBuilder, param1: boolean): void;
                            public onOpenSubMenu(param0: com.android.internal.view.menu.MenuBuilder): boolean;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export module menu {
                    export class IconMenuView extends globalAndroid.view.ViewGroup implements com.android.internal.view.menu.MenuBuilder.ItemInvoker, com.android.internal.view.menu.MenuView {
                        public static class: java.lang.Class<com.android.internal.view.menu.IconMenuView>;
                        public isLayoutRequested(): boolean;
                        public canResolveLayoutDirection(): boolean;
                        public constructor(param0: globalAndroid.content.Context);
                        public sendAccessibilityEvent(param0: number): void;
                        public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                        public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                        public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                        public getLayout(): number[];
                        public clearChildFocus(param0: globalAndroid.view.View): void;
                        public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                        public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
                        public generateLayoutParams(param0: globalAndroid.util.AttributeSet): globalAndroid.view.ViewGroup.LayoutParams;
                        public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                        public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                        public isTextAlignmentResolved(): boolean;
                        public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                        public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                        public dispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
                        public onMeasure(param0: number, param1: number): void;
                        public getTextDirection(): number;
                        public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                        public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                        public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                        public removeView(param0: globalAndroid.view.View): void;
                        public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                        public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                        public generateLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): globalAndroid.view.ViewGroup.LayoutParams;
                        public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                        public canResolveTextDirection(): boolean;
                        public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                        public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                        public requestDisallowInterceptTouchEvent(param0: boolean): void;
                        public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                        public isLayoutDirectionResolved(): boolean;
                        public getWindowAnimations(): number;
                        public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                        public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                        public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                        public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                        public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                        public requestLayout(): void;
                        public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                        public initialize(param0: com.android.internal.view.menu.MenuBuilder): void;
                        public bringChildToFront(param0: globalAndroid.view.View): void;
                        public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                        public addView(param0: globalAndroid.view.View, param1: number): void;
                        public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                        public isTextDirectionResolved(): boolean;
                        public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                        public onAttachedToWindow(): void;
                        public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                        public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                        public onStopNestedScroll(param0: globalAndroid.view.View): void;
                        public requestTransparentRegion(param0: globalAndroid.view.View): void;
                        public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                        public addView(param0: globalAndroid.view.View): void;
                        public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                        public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                        public invokeItem(param0: com.android.internal.view.menu.MenuItemImpl): boolean;
                        public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                        public requestFitSystemWindows(): void;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                        public checkLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): boolean;
                        public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                        public getLayoutNumRows(): number;
                        public getParentForAccessibility(): globalAndroid.view.ViewParent;
                        public onDetachedFromWindow(): void;
                        public focusableViewAvailable(param0: globalAndroid.view.View): void;
                        public focusSearch(param0: number): globalAndroid.view.View;
                        public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                        public getTextAlignment(): number;
                        public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                        public run(): void;
                        public onDraw(param0: globalAndroid.graphics.Canvas): void;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                        public onSaveInstanceState(): globalAndroid.os.Parcelable;
                        public onWindowFocusChanged(param0: boolean): void;
                        public generateLayoutParams(param0: globalAndroid.util.AttributeSet): com.android.internal.view.menu.IconMenuView.LayoutParams;
                        public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
                        public canResolveTextAlignment(): boolean;
                        public getLayoutDirection(): number;
                        public getParent(): globalAndroid.view.ViewParent;
                    }
                    export module IconMenuView {
                        export class LayoutParams extends globalAndroid.view.ViewGroup.MarginLayoutParams {
                            public static class: java.lang.Class<com.android.internal.view.menu.IconMenuView.LayoutParams>;
                            public constructor(param0: globalAndroid.view.ViewGroup.MarginLayoutParams);
                            public constructor(param0: number, param1: number);
                            public constructor(param0: globalAndroid.view.ViewGroup.LayoutParams);
                            public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                        }
                        export class SavedState extends globalAndroid.view.View.BaseSavedState {
                            public static class: java.lang.Class<com.android.internal.view.menu.IconMenuView.SavedState>;
                            public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.view.menu.IconMenuView.SavedState>;
                            public constructor(param0: globalAndroid.os.Parcelable, param1: number);
                            public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                            public constructor(param0: globalAndroid.os.Parcel);
                            public constructor(param0: globalAndroid.os.Parcel, param1: java.lang.ClassLoader);
                            public constructor(param0: globalAndroid.os.Parcelable);
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export module menu {
                    export class ListMenuItemView extends globalAndroid.widget.LinearLayout implements com.android.internal.view.menu.MenuView.ItemView {
                        public static class: java.lang.Class<com.android.internal.view.menu.ListMenuItemView>;
                        public isLayoutRequested(): boolean;
                        public canResolveLayoutDirection(): boolean;
                        public constructor(param0: globalAndroid.content.Context);
                        public sendAccessibilityEvent(param0: number): void;
                        public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                        public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                        public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                        public showsIcon(): boolean;
                        public onFinishInflate(): void;
                        public clearChildFocus(param0: globalAndroid.view.View): void;
                        public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                        public getItemData(): com.android.internal.view.menu.MenuItemImpl;
                        public prefersCondensedTitle(): boolean;
                        public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                        public setForceShowIcon(param0: boolean): void;
                        public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                        public isTextAlignmentResolved(): boolean;
                        public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                        public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                        public onMeasure(param0: number, param1: number): void;
                        public getTextDirection(): number;
                        public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                        public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                        public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                        public removeView(param0: globalAndroid.view.View): void;
                        public setChecked(param0: boolean): void;
                        public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                        public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                        public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                        public canResolveTextDirection(): boolean;
                        public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                        public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                        public requestDisallowInterceptTouchEvent(param0: boolean): void;
                        public setTitle(param0: string): void;
                        public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                        public isLayoutDirectionResolved(): boolean;
                        public setShortcut(param0: boolean, param1: string): void;
                        public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                        public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                        public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                        public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                        public setCheckable(param0: boolean): void;
                        public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                        public requestLayout(): void;
                        public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                        public bringChildToFront(param0: globalAndroid.view.View): void;
                        public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                        public addView(param0: globalAndroid.view.View, param1: number): void;
                        public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                        public isTextDirectionResolved(): boolean;
                        public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                        public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                        public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                        public onStopNestedScroll(param0: globalAndroid.view.View): void;
                        public requestTransparentRegion(param0: globalAndroid.view.View): void;
                        public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                        public addView(param0: globalAndroid.view.View): void;
                        public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                        public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                        public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                        public setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
                        public requestFitSystemWindows(): void;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                        public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                        public getParentForAccessibility(): globalAndroid.view.ViewParent;
                        public focusableViewAvailable(param0: globalAndroid.view.View): void;
                        public setEnabled(param0: boolean): void;
                        public focusSearch(param0: number): globalAndroid.view.View;
                        public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                        public initialize(param0: com.android.internal.view.menu.MenuItemImpl, param1: number): void;
                        public getTextAlignment(): number;
                        public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                        public onInitializeAccessibilityNodeInfoInternal(param0: globalAndroid.view.accessibility.AccessibilityNodeInfo): void;
                        public canResolveTextAlignment(): boolean;
                        public getLayoutDirection(): number;
                        public getParent(): globalAndroid.view.ViewParent;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export module menu {
                    export class ListMenuPresenter implements com.android.internal.view.menu.MenuPresenter, globalAndroid.widget.AdapterView.OnItemClickListener {
                        public static class: java.lang.Class<com.android.internal.view.menu.ListMenuPresenter>;
                        public static VIEWS_TAG: string;
                        public flagActionItems(): boolean;
                        public initForMenu(param0: globalAndroid.content.Context, param1: com.android.internal.view.menu.MenuBuilder): void;
                        public restoreHierarchyState(param0: globalAndroid.os.Bundle): void;
                        public onCloseMenu(param0: com.android.internal.view.menu.MenuBuilder, param1: boolean): void;
                        public getAdapter(): globalAndroid.widget.ListAdapter;
                        public getId(): number;
                        public setId(param0: number): void;
                        public onSubMenuSelected(param0: com.android.internal.view.menu.SubMenuBuilder): boolean;
                        public saveHierarchyState(param0: globalAndroid.os.Bundle): void;
                        public setCallback(param0: com.android.internal.view.menu.MenuPresenter.Callback): void;
                        public setItemIndexOffset(param0: number): void;
                        public expandItemActionView(param0: com.android.internal.view.menu.MenuBuilder, param1: com.android.internal.view.menu.MenuItemImpl): boolean;
                        public onItemClick(param0: globalAndroid.widget.AdapterView<any>, param1: globalAndroid.view.View, param2: number, param3: number): void;
                        public updateMenuView(param0: boolean): void;
                        public onSaveInstanceState(): globalAndroid.os.Parcelable;
                        public constructor(param0: globalAndroid.content.Context, param1: number);
                        public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
                        public constructor(param0: number, param1: number);
                        public getMenuView(param0: globalAndroid.view.ViewGroup): com.android.internal.view.menu.MenuView;
                        public collapseItemActionView(param0: com.android.internal.view.menu.MenuBuilder, param1: com.android.internal.view.menu.MenuItemImpl): boolean;
                    }
                    export module ListMenuPresenter {
                        export class MenuAdapter extends globalAndroid.widget.BaseAdapter {
                            public static class: java.lang.Class<com.android.internal.view.menu.ListMenuPresenter.MenuAdapter>;
                            public constructor();
                            public notifyDataSetChanged(): void;
                            public getItemId(param0: number): number;
                            public getView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
                            public areAllItemsEnabled(): boolean;
                            public getCount(): number;
                            public getItem(param0: number): com.android.internal.view.menu.MenuItemImpl;
                            public getDropDownView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
                            public isEnabled(param0: number): boolean;
                            public constructor(param0: com.android.internal.view.menu.ListMenuPresenter);
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export module menu {
                    export class MenuAdapter extends globalAndroid.widget.BaseAdapter {
                        public static class: java.lang.Class<com.android.internal.view.menu.MenuAdapter>;
                        public isEnabled(param0: number): boolean;
                        public areAllItemsEnabled(): boolean;
                        public constructor();
                        public getItem(param0: number): com.android.internal.view.menu.MenuItemImpl;
                        public getCount(): number;
                        public constructor(param0: com.android.internal.view.menu.MenuBuilder, param1: globalAndroid.view.LayoutInflater, param2: boolean);
                        public getForceShowIcon(): boolean;
                        public notifyDataSetChanged(): void;
                        public setForceShowIcon(param0: boolean): void;
                        public getItemId(param0: number): number;
                        public getView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
                        public getAdapterMenu(): com.android.internal.view.menu.MenuBuilder;
                        public getDropDownView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export module menu {
                    export class MenuBuilder extends globalAndroid.view.Menu {
                        public static class: java.lang.Class<com.android.internal.view.menu.MenuBuilder>;
                        public constructor(param0: globalAndroid.content.Context);
                        public clearAll(): void;
                        public getRootMenu(): com.android.internal.view.menu.MenuBuilder;
                        public addIntentOptions(param0: number, param1: number, param2: number, param3: globalAndroid.content.ComponentName, param4: globalAndroid.content.Intent[], param5: globalAndroid.content.Intent, param6: number, param7: globalAndroid.view.MenuItem[]): number;
                        public changeMenuMode(): void;
                        public saveActionViewStates(param0: globalAndroid.os.Bundle): void;
                        public setHeaderTitleInt(param0: number): com.android.internal.view.menu.MenuBuilder;
                        public close(): void;
                        public getVisibleItems(): java.util.ArrayList<com.android.internal.view.menu.MenuItemImpl>;
                        public performIdentifierAction(param0: number, param1: number): boolean;
                        public setGroupVisible(param0: number, param1: boolean): void;
                        public findGroupIndex(param0: number): number;
                        public savePresenterStates(param0: globalAndroid.os.Bundle): void;
                        public removeItem(param0: number): void;
                        public clearHeader(): void;
                        public setDefaultShowAsAction(param0: number): com.android.internal.view.menu.MenuBuilder;
                        public size(): number;
                        public getHeaderTitle(): string;
                        public hasVisibleItems(): boolean;
                        public performShortcut(param0: number, param1: globalAndroid.view.KeyEvent, param2: number): boolean;
                        public setQwertyMode(param0: boolean): void;
                        public startDispatchingItemsChanged(): void;
                        public getContext(): globalAndroid.content.Context;
                        public addSubMenu(param0: string): globalAndroid.view.SubMenu;
                        public getHeaderIcon(): globalAndroid.graphics.drawable.Drawable;
                        public restorePresenterStates(param0: globalAndroid.os.Bundle): void;
                        public setHeaderTitleInt(param0: string): com.android.internal.view.menu.MenuBuilder;
                        public setHeaderIconInt(param0: globalAndroid.graphics.drawable.Drawable): com.android.internal.view.menu.MenuBuilder;
                        public getHeaderView(): globalAndroid.view.View;
                        public addSubMenu(param0: number, param1: number, param2: number, param3: number): globalAndroid.view.SubMenu;
                        public addSubMenu(param0: number): globalAndroid.view.SubMenu;
                        public setHeaderIconInt(param0: number): com.android.internal.view.menu.MenuBuilder;
                        public removeItemAt(param0: number): void;
                        public clear(): void;
                        public expandItemActionView(param0: com.android.internal.view.menu.MenuItemImpl): boolean;
                        public restoreActionViewStates(param0: globalAndroid.os.Bundle): void;
                        public onItemsChanged(param0: boolean): void;
                        public performItemAction(param0: globalAndroid.view.MenuItem, param1: number): boolean;
                        public addMenuPresenter(param0: com.android.internal.view.menu.MenuPresenter): void;
                        public stopDispatchingItemsChanged(): void;
                        public collapseItemActionView(param0: com.android.internal.view.menu.MenuItemImpl): boolean;
                        public removeMenuPresenter(param0: com.android.internal.view.menu.MenuPresenter): void;
                        public isShortcutKey(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                        public add(param0: number): globalAndroid.view.MenuItem;
                        public setShortcutsVisible(param0: boolean): void;
                        public close(param0: boolean): void;
                        public setHeaderViewInt(param0: globalAndroid.view.View): com.android.internal.view.menu.MenuBuilder;
                        public add(param0: string): globalAndroid.view.MenuItem;
                        public getNonActionItems(): java.util.ArrayList<com.android.internal.view.menu.MenuItemImpl>;
                        public addMenuPresenter(param0: com.android.internal.view.menu.MenuPresenter, param1: globalAndroid.content.Context): void;
                        public add(param0: number, param1: number, param2: number, param3: number): globalAndroid.view.MenuItem;
                        public getExpandedItem(): com.android.internal.view.menu.MenuItemImpl;
                        public getActionViewStatesKey(): string;
                        public getActionItems(): java.util.ArrayList<com.android.internal.view.menu.MenuItemImpl>;
                        public getItem(param0: number): globalAndroid.view.MenuItem;
                        public setCallback(param0: com.android.internal.view.menu.MenuBuilder.Callback): void;
                        public addSubMenu(param0: number, param1: number, param2: number, param3: string): globalAndroid.view.SubMenu;
                        public findItem(param0: number): globalAndroid.view.MenuItem;
                        public findItemIndex(param0: number): number;
                        public flagActionItems(): void;
                        public setCurrentMenuInfo(param0: globalAndroid.view.ContextMenu.ContextMenuInfo): void;
                        public performItemAction(param0: globalAndroid.view.MenuItem, param1: com.android.internal.view.menu.MenuPresenter, param2: number): boolean;
                        public isShortcutsVisible(): boolean;
                        public findGroupIndex(param0: number, param1: number): number;
                        public add(param0: number, param1: number, param2: number, param3: string): globalAndroid.view.MenuItem;
                        public setGroupCheckable(param0: number, param1: boolean, param2: boolean): void;
                        public removeGroup(param0: number): void;
                        public setGroupEnabled(param0: number, param1: boolean): void;
                    }
                    export module MenuBuilder {
                        export class Callback extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.view.menu.MenuBuilder.Callback>;
                            /**
                             * Constructs a new instance of the com.android.internal.view.menu.MenuBuilder$Callback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                             */
                            public constructor(implementation: {
                                onMenuItemSelected(param0: com.android.internal.view.menu.MenuBuilder, param1: globalAndroid.view.MenuItem): boolean;
                                onMenuModeChange(param0: com.android.internal.view.menu.MenuBuilder): void;
                            });
                            public constructor();
                            public onMenuModeChange(param0: com.android.internal.view.menu.MenuBuilder): void;
                            public onMenuItemSelected(param0: com.android.internal.view.menu.MenuBuilder, param1: globalAndroid.view.MenuItem): boolean;
                        }
                        export class ItemInvoker extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.view.menu.MenuBuilder.ItemInvoker>;
                            /**
                             * Constructs a new instance of the com.android.internal.view.menu.MenuBuilder$ItemInvoker interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                             */
                            public constructor(implementation: {
                                invokeItem(param0: com.android.internal.view.menu.MenuItemImpl): boolean;
                            });
                            public constructor();
                            public invokeItem(param0: com.android.internal.view.menu.MenuItemImpl): boolean;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export module menu {
                    export class MenuDialogHelper implements com.android.internal.view.menu.MenuHelper, com.android.internal.view.menu.MenuPresenter.Callback {
                        public static class: java.lang.Class<com.android.internal.view.menu.MenuDialogHelper>;
                        public onDismiss(param0: globalAndroid.content.DialogInterface): void;
                        public dismiss(): void;
                        public onClick(param0: globalAndroid.content.DialogInterface, param1: number): void;
                        public onOpenSubMenu(param0: com.android.internal.view.menu.MenuBuilder): boolean;
                        public show(param0: globalAndroid.os.IBinder): void;
                        public onCloseMenu(param0: com.android.internal.view.menu.MenuBuilder, param1: boolean): void;
                        public setPresenterCallback(param0: com.android.internal.view.menu.MenuPresenter.Callback): void;
                        public onKey(param0: globalAndroid.content.DialogInterface, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                        public constructor(param0: com.android.internal.view.menu.MenuBuilder);
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export module menu {
                    export class MenuHelper extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.view.menu.MenuHelper>;
                        /**
                         * Constructs a new instance of the com.android.internal.view.menu.MenuHelper interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            dismiss(): void;
                            setPresenterCallback(param0: com.android.internal.view.menu.MenuPresenter.Callback): void;
                        });
                        public constructor();
                        public dismiss(): void;
                        public setPresenterCallback(param0: com.android.internal.view.menu.MenuPresenter.Callback): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export module menu {
                    export class MenuItemImpl extends globalAndroid.view.MenuItem {
                        public static class: java.lang.Class<com.android.internal.view.menu.MenuItemImpl>;
                        public getIcon(): globalAndroid.graphics.drawable.Drawable;
                        public requiresActionButton(): boolean;
                        public setTitleCondensed(param0: string): globalAndroid.view.MenuItem;
                        public getGroupId(): number;
                        public getIconTintMode(): globalAndroid.graphics.PorterDuff.Mode;
                        public setShortcut(param0: string, param1: string): globalAndroid.view.MenuItem;
                        public setNumericShortcut(param0: string): globalAndroid.view.MenuItem;
                        public getIntent(): globalAndroid.content.Intent;
                        public setIcon(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.view.MenuItem;
                        public getOrdering(): number;
                        public setCallback(param0: java.lang.Runnable): globalAndroid.view.MenuItem;
                        public getContentDescription(): string;
                        public setContentDescription(param0: string): globalAndroid.view.MenuItem;
                        public getIconTintList(): globalAndroid.content.res.ColorStateList;
                        public isExclusiveCheckable(): boolean;
                        public setShowAsActionFlags(param0: number): globalAndroid.view.MenuItem;
                        public setActionViewExpanded(param0: boolean): void;
                        public setAlphabeticShortcut(param0: string, param1: number): globalAndroid.view.MenuItem;
                        public invoke(): boolean;
                        public isEnabled(): boolean;
                        public collapseActionView(): boolean;
                        public setIcon(param0: number): globalAndroid.view.MenuItem;
                        public hasCollapsibleActionView(): boolean;
                        public toString(): string;
                        public getNumericModifiers(): number;
                        public setOnActionExpandListener(param0: globalAndroid.view.MenuItem.OnActionExpandListener): globalAndroid.view.MenuItem;
                        public getAlphabeticShortcut(): string;
                        public setIntent(param0: globalAndroid.content.Intent): globalAndroid.view.MenuItem;
                        public getTooltipText(): string;
                        public setAlphabeticShortcut(param0: string): globalAndroid.view.MenuItem;
                        public shouldShowIcon(): boolean;
                        public setOnMenuItemClickListener(param0: globalAndroid.view.MenuItem.OnMenuItemClickListener): globalAndroid.view.MenuItem;
                        public hasSubMenu(): boolean;
                        public setCheckable(param0: boolean): globalAndroid.view.MenuItem;
                        public showsTextAsAction(): boolean;
                        public getMenuInfo(): globalAndroid.view.ContextMenu.ContextMenuInfo;
                        public getSubMenu(): globalAndroid.view.SubMenu;
                        public getNumericShortcut(): string;
                        public actionFormatChanged(): void;
                        public setTitle(param0: number): globalAndroid.view.MenuItem;
                        public isCheckable(): boolean;
                        public setVisible(param0: boolean): globalAndroid.view.MenuItem;
                        public getItemId(): number;
                        public setExclusiveCheckable(param0: boolean): void;
                        public setShortcut(param0: string, param1: string, param2: number, param3: number): globalAndroid.view.MenuItem;
                        public setTitle(param0: string): globalAndroid.view.MenuItem;
                        public getActionView(): globalAndroid.view.View;
                        public setActionView(param0: globalAndroid.view.View): globalAndroid.view.MenuItem;
                        public isChecked(): boolean;
                        public requestsActionButton(): boolean;
                        public isVisible(): boolean;
                        public setIsActionButton(param0: boolean): void;
                        public setShowAsAction(param0: number): void;
                        public setChecked(param0: boolean): globalAndroid.view.MenuItem;
                        public setIconTintMode(param0: globalAndroid.graphics.PorterDuff.Mode): globalAndroid.view.MenuItem;
                        public getOrder(): number;
                        public setEnabled(param0: boolean): globalAndroid.view.MenuItem;
                        public requiresOverflow(): boolean;
                        public setIconTintList(param0: globalAndroid.content.res.ColorStateList): globalAndroid.view.MenuItem;
                        public setTooltipText(param0: string): globalAndroid.view.MenuItem;
                        public isActionViewExpanded(): boolean;
                        public setNumericShortcut(param0: string, param1: number): globalAndroid.view.MenuItem;
                        public isActionButton(): boolean;
                        public expandActionView(): boolean;
                        public getActionProvider(): globalAndroid.view.ActionProvider;
                        public getTitleCondensed(): string;
                        public getTitle(): string;
                        public setActionView(param0: number): globalAndroid.view.MenuItem;
                        public getAlphabeticModifiers(): number;
                        public setActionProvider(param0: globalAndroid.view.ActionProvider): globalAndroid.view.MenuItem;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export module menu {
                    export abstract class MenuPopup implements com.android.internal.view.menu.ShowableListMenu, com.android.internal.view.menu.MenuPresenter, globalAndroid.widget.AdapterView.OnItemClickListener {
                        public static class: java.lang.Class<com.android.internal.view.menu.MenuPopup>;
                        public flagActionItems(): boolean;
                        public initForMenu(param0: globalAndroid.content.Context, param1: com.android.internal.view.menu.MenuBuilder): void;
                        public dismiss(): void;
                        public static shouldPreserveIconSpacing(param0: com.android.internal.view.menu.MenuBuilder): boolean;
                        public onCloseMenu(param0: com.android.internal.view.menu.MenuBuilder, param1: boolean): void;
                        public setForceShowIcon(param0: boolean): void;
                        public addMenu(param0: com.android.internal.view.menu.MenuBuilder): void;
                        public setCallback(param0: com.android.internal.view.menu.MenuPresenter.Callback): void;
                        public expandItemActionView(param0: com.android.internal.view.menu.MenuBuilder, param1: com.android.internal.view.menu.MenuItemImpl): boolean;
                        public updateMenuView(param0: boolean): void;
                        public static toMenuAdapter(param0: globalAndroid.widget.ListAdapter): com.android.internal.view.menu.MenuAdapter;
                        public collapseItemActionView(param0: com.android.internal.view.menu.MenuBuilder, param1: com.android.internal.view.menu.MenuItemImpl): boolean;
                        public setGravity(param0: number): void;
                        public setShowTitle(param0: boolean): void;
                        public constructor();
                        public getListView(): globalAndroid.widget.ListView;
                        public setAnchorView(param0: globalAndroid.view.View): void;
                        public setEpicenterBounds(param0: globalAndroid.graphics.Rect): void;
                        public setOnDismissListener(param0: globalAndroid.widget.PopupWindow.OnDismissListener): void;
                        public static measureIndividualMenuWidth(param0: globalAndroid.widget.ListAdapter, param1: globalAndroid.view.ViewGroup, param2: globalAndroid.content.Context, param3: number): number;
                        public getEpicenterBounds(): globalAndroid.graphics.Rect;
                        public getId(): number;
                        public onSubMenuSelected(param0: com.android.internal.view.menu.SubMenuBuilder): boolean;
                        public setVerticalOffset(param0: number): void;
                        public onItemClick(param0: globalAndroid.widget.AdapterView<any>, param1: globalAndroid.view.View, param2: number, param3: number): void;
                        public show(): void;
                        public onSaveInstanceState(): globalAndroid.os.Parcelable;
                        public setHorizontalOffset(param0: number): void;
                        public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
                        public getMenuView(param0: globalAndroid.view.ViewGroup): com.android.internal.view.menu.MenuView;
                        public isShowing(): boolean;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export module menu {
                    export class MenuPopupHelper extends com.android.internal.view.menu.MenuHelper {
                        public static class: java.lang.Class<com.android.internal.view.menu.MenuPopupHelper>;
                        public tryShow(param0: number, param1: number): boolean;
                        public setAnchorView(param0: globalAndroid.view.View): void;
                        public tryShow(): boolean;
                        public dismiss(): void;
                        public setOnDismissListener(param0: globalAndroid.widget.PopupWindow.OnDismissListener): void;
                        public show(param0: number, param1: number): void;
                        public setPresenterCallback(param0: com.android.internal.view.menu.MenuPresenter.Callback): void;
                        public constructor(param0: globalAndroid.content.Context, param1: com.android.internal.view.menu.MenuBuilder);
                        public constructor(param0: globalAndroid.content.Context, param1: com.android.internal.view.menu.MenuBuilder, param2: globalAndroid.view.View);
                        public onDismiss(): void;
                        public getPopup(): com.android.internal.view.menu.MenuPopup;
                        public setForceShowIcon(param0: boolean): void;
                        public show(): void;
                        public constructor(param0: globalAndroid.content.Context, param1: com.android.internal.view.menu.MenuBuilder, param2: globalAndroid.view.View, param3: boolean, param4: number);
                        public constructor(param0: globalAndroid.content.Context, param1: com.android.internal.view.menu.MenuBuilder, param2: globalAndroid.view.View, param3: boolean, param4: number, param5: number);
                        public getGravity(): number;
                        public setGravity(param0: number): void;
                        public isShowing(): boolean;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export module menu {
                    export class MenuPresenter extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.view.menu.MenuPresenter>;
                        /**
                         * Constructs a new instance of the com.android.internal.view.menu.MenuPresenter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            collapseItemActionView(param0: com.android.internal.view.menu.MenuBuilder, param1: com.android.internal.view.menu.MenuItemImpl): boolean;
                            expandItemActionView(param0: com.android.internal.view.menu.MenuBuilder, param1: com.android.internal.view.menu.MenuItemImpl): boolean;
                            flagActionItems(): boolean;
                            getId(): number;
                            getMenuView(param0: globalAndroid.view.ViewGroup): com.android.internal.view.menu.MenuView;
                            initForMenu(param0: globalAndroid.content.Context, param1: com.android.internal.view.menu.MenuBuilder): void;
                            onCloseMenu(param0: com.android.internal.view.menu.MenuBuilder, param1: boolean): void;
                            onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
                            onSaveInstanceState(): globalAndroid.os.Parcelable;
                            onSubMenuSelected(param0: com.android.internal.view.menu.SubMenuBuilder): boolean;
                            setCallback(param0: com.android.internal.view.menu.MenuPresenter.Callback): void;
                            updateMenuView(param0: boolean): void;
                        });
                        public constructor();
                        public onSubMenuSelected(param0: com.android.internal.view.menu.SubMenuBuilder): boolean;
                        public flagActionItems(): boolean;
                        public initForMenu(param0: globalAndroid.content.Context, param1: com.android.internal.view.menu.MenuBuilder): void;
                        public setCallback(param0: com.android.internal.view.menu.MenuPresenter.Callback): void;
                        public expandItemActionView(param0: com.android.internal.view.menu.MenuBuilder, param1: com.android.internal.view.menu.MenuItemImpl): boolean;
                        public updateMenuView(param0: boolean): void;
                        public onCloseMenu(param0: com.android.internal.view.menu.MenuBuilder, param1: boolean): void;
                        public onSaveInstanceState(): globalAndroid.os.Parcelable;
                        public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
                        public getMenuView(param0: globalAndroid.view.ViewGroup): com.android.internal.view.menu.MenuView;
                        public collapseItemActionView(param0: com.android.internal.view.menu.MenuBuilder, param1: com.android.internal.view.menu.MenuItemImpl): boolean;
                        public getId(): number;
                    }
                    export module MenuPresenter {
                        export class Callback extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.view.menu.MenuPresenter.Callback>;
                            /**
                             * Constructs a new instance of the com.android.internal.view.menu.MenuPresenter$Callback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                             */
                            public constructor(implementation: {
                                onCloseMenu(param0: com.android.internal.view.menu.MenuBuilder, param1: boolean): void;
                                onOpenSubMenu(param0: com.android.internal.view.menu.MenuBuilder): boolean;
                            });
                            public constructor();
                            public onCloseMenu(param0: com.android.internal.view.menu.MenuBuilder, param1: boolean): void;
                            public onOpenSubMenu(param0: com.android.internal.view.menu.MenuBuilder): boolean;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export module menu {
                    export class MenuView extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.view.menu.MenuView>;
                        /**
                         * Constructs a new instance of the com.android.internal.view.menu.MenuView interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            getWindowAnimations(): number;
                            initialize(param0: com.android.internal.view.menu.MenuBuilder): void;
                        });
                        public constructor();
                        public getWindowAnimations(): number;
                        public initialize(param0: com.android.internal.view.menu.MenuBuilder): void;
                    }
                    export module MenuView {
                        export class ItemView extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.view.menu.MenuView.ItemView>;
                            /**
                             * Constructs a new instance of the com.android.internal.view.menu.MenuView$ItemView interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                             */
                            public constructor(implementation: {
                                getItemData(): com.android.internal.view.menu.MenuItemImpl;
                                initialize(param0: com.android.internal.view.menu.MenuItemImpl, param1: number): void;
                                prefersCondensedTitle(): boolean;
                                setCheckable(param0: boolean): void;
                                setChecked(param0: boolean): void;
                                setEnabled(param0: boolean): void;
                                setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
                                setShortcut(param0: boolean, param1: string): void;
                                setTitle(param0: string): void;
                                showsIcon(): boolean;
                            });
                            public constructor();
                            public setTitle(param0: string): void;
                            public prefersCondensedTitle(): boolean;
                            public getItemData(): com.android.internal.view.menu.MenuItemImpl;
                            public setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
                            public setCheckable(param0: boolean): void;
                            public setChecked(param0: boolean): void;
                            public setEnabled(param0: boolean): void;
                            public initialize(param0: com.android.internal.view.menu.MenuItemImpl, param1: number): void;
                            public setShortcut(param0: boolean, param1: string): void;
                            public showsIcon(): boolean;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export module menu {
                    export class ShowableListMenu extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.view.menu.ShowableListMenu>;
                        /**
                         * Constructs a new instance of the com.android.internal.view.menu.ShowableListMenu interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            dismiss(): void;
                            getListView(): globalAndroid.widget.ListView;
                            isShowing(): boolean;
                            show(): void;
                        });
                        public constructor();
                        public getListView(): globalAndroid.widget.ListView;
                        public dismiss(): void;
                        public show(): void;
                        public isShowing(): boolean;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export module menu {
                    export class StandardMenuPopup extends com.android.internal.view.menu.MenuPopup implements globalAndroid.widget.PopupWindow.OnDismissListener, globalAndroid.widget.AdapterView.OnItemClickListener, com.android.internal.view.menu.MenuPresenter, globalAndroid.view.View.OnKeyListener {
                        public static class: java.lang.Class<com.android.internal.view.menu.StandardMenuPopup>;
                        public flagActionItems(): boolean;
                        public dismiss(): void;
                        public initForMenu(param0: globalAndroid.content.Context, param1: com.android.internal.view.menu.MenuBuilder): void;
                        public onCloseMenu(param0: com.android.internal.view.menu.MenuBuilder, param1: boolean): void;
                        public constructor(param0: globalAndroid.content.Context, param1: com.android.internal.view.menu.MenuBuilder, param2: globalAndroid.view.View, param3: number, param4: number, param5: boolean);
                        public setForceShowIcon(param0: boolean): void;
                        public addMenu(param0: com.android.internal.view.menu.MenuBuilder): void;
                        public setCallback(param0: com.android.internal.view.menu.MenuPresenter.Callback): void;
                        public expandItemActionView(param0: com.android.internal.view.menu.MenuBuilder, param1: com.android.internal.view.menu.MenuItemImpl): boolean;
                        public updateMenuView(param0: boolean): void;
                        public setGravity(param0: number): void;
                        public collapseItemActionView(param0: com.android.internal.view.menu.MenuBuilder, param1: com.android.internal.view.menu.MenuItemImpl): boolean;
                        public setShowTitle(param0: boolean): void;
                        public constructor();
                        public getListView(): globalAndroid.widget.ListView;
                        public setAnchorView(param0: globalAndroid.view.View): void;
                        public setOnDismissListener(param0: globalAndroid.widget.PopupWindow.OnDismissListener): void;
                        public getId(): number;
                        public onDismiss(): void;
                        public onSubMenuSelected(param0: com.android.internal.view.menu.SubMenuBuilder): boolean;
                        public setVerticalOffset(param0: number): void;
                        public onKey(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                        public show(): void;
                        public onItemClick(param0: globalAndroid.widget.AdapterView<any>, param1: globalAndroid.view.View, param2: number, param3: number): void;
                        public onSaveInstanceState(): globalAndroid.os.Parcelable;
                        public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
                        public setHorizontalOffset(param0: number): void;
                        public getMenuView(param0: globalAndroid.view.ViewGroup): com.android.internal.view.menu.MenuView;
                        public isShowing(): boolean;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module view {
                export module menu {
                    export class SubMenuBuilder extends com.android.internal.view.menu.MenuBuilder implements globalAndroid.view.SubMenu {
                        public static class: java.lang.Class<com.android.internal.view.menu.SubMenuBuilder>;
                        public constructor(param0: globalAndroid.content.Context);
                        public getRootMenu(): com.android.internal.view.menu.MenuBuilder;
                        public collapseItemActionView(param0: com.android.internal.view.menu.MenuItemImpl): boolean;
                        public addIntentOptions(param0: number, param1: number, param2: number, param3: globalAndroid.content.ComponentName, param4: globalAndroid.content.Intent[], param5: globalAndroid.content.Intent, param6: number, param7: globalAndroid.view.MenuItem[]): number;
                        public close(): void;
                        public isShortcutKey(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                        public add(param0: number): globalAndroid.view.MenuItem;
                        public setShortcutsVisible(param0: boolean): void;
                        public performIdentifierAction(param0: number, param1: number): boolean;
                        public close(param0: boolean): void;
                        public setGroupVisible(param0: number, param1: boolean): void;
                        public removeItem(param0: number): void;
                        public setHeaderIcon(param0: number): globalAndroid.view.SubMenu;
                        public setIcon(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.view.SubMenu;
                        public setHeaderTitle(param0: string): globalAndroid.view.SubMenu;
                        public add(param0: string): globalAndroid.view.MenuItem;
                        public clearHeader(): void;
                        public setIcon(param0: number): globalAndroid.view.SubMenu;
                        public add(param0: number, param1: number, param2: number, param3: number): globalAndroid.view.MenuItem;
                        public getActionViewStatesKey(): string;
                        public size(): number;
                        public getItem(param0: number): globalAndroid.view.MenuItem;
                        public hasVisibleItems(): boolean;
                        public performShortcut(param0: number, param1: globalAndroid.view.KeyEvent, param2: number): boolean;
                        public setCallback(param0: com.android.internal.view.menu.MenuBuilder.Callback): void;
                        public setQwertyMode(param0: boolean): void;
                        public constructor(param0: globalAndroid.content.Context, param1: com.android.internal.view.menu.MenuBuilder, param2: com.android.internal.view.menu.MenuItemImpl);
                        public setHeaderTitle(param0: number): globalAndroid.view.SubMenu;
                        public addSubMenu(param0: number, param1: number, param2: number, param3: string): globalAndroid.view.SubMenu;
                        public findItem(param0: number): globalAndroid.view.MenuItem;
                        public addSubMenu(param0: string): globalAndroid.view.SubMenu;
                        public getItem(): globalAndroid.view.MenuItem;
                        public setHeaderView(param0: globalAndroid.view.View): globalAndroid.view.SubMenu;
                        public setHeaderIcon(param0: globalAndroid.graphics.drawable.Drawable): globalAndroid.view.SubMenu;
                        public isShortcutsVisible(): boolean;
                        public addSubMenu(param0: number, param1: number, param2: number, param3: number): globalAndroid.view.SubMenu;
                        public addSubMenu(param0: number): globalAndroid.view.SubMenu;
                        public getParentMenu(): globalAndroid.view.Menu;
                        public add(param0: number, param1: number, param2: number, param3: string): globalAndroid.view.MenuItem;
                        public isQwertyMode(): boolean;
                        public clear(): void;
                        public setGroupCheckable(param0: number, param1: boolean, param2: boolean): void;
                        public removeGroup(param0: number): void;
                        public expandItemActionView(param0: com.android.internal.view.menu.MenuItemImpl): boolean;
                        public setGroupEnabled(param0: number, param1: boolean): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export abstract class AbsActionBarView extends globalAndroid.view.ViewGroup {
                    public static class: java.lang.Class<com.android.internal.widget.AbsActionBarView>;
                    public mActionMenuPresenter: globalAndroid.widget.ActionMenuPresenter;
                    public mContentHeight: number;
                    public mMenuView: globalAndroid.widget.ActionMenuView;
                    public mPopupContext: globalAndroid.content.Context;
                    public mSplitActionBar: boolean;
                    public mSplitView: globalAndroid.view.ViewGroup;
                    public mSplitWhenNarrow: boolean;
                    public mVisAnimListener: com.android.internal.widget.AbsActionBarView.VisibilityAnimListener;
                    public mVisibilityAnim: globalAndroid.animation.Animator;
                    public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                    public focusSearch(param0: number): globalAndroid.view.View;
                    public focusableViewAvailable(param0: globalAndroid.view.View): void;
                    public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                    public isLayoutRequested(): boolean;
                    public isTextDirectionResolved(): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public isLayoutDirectionResolved(): boolean;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public addView(param0: globalAndroid.view.View): void;
                    public hideOverflowMenu(): boolean;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public canShowOverflowMenu(): boolean;
                    public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                    public positionChild(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: boolean): number;
                    public clearChildFocus(param0: globalAndroid.view.View): void;
                    public isOverflowMenuShowPending(): boolean;
                    public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                    public getLayoutDirection(): number;
                    public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                    public bringChildToFront(param0: globalAndroid.view.View): void;
                    public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public setupAnimatorToVisibility(param0: number, param1: number): globalAndroid.animation.Animator;
                    public animateToVisibility(param0: number): void;
                    public setContentHeight(param0: number): void;
                    public setVisibility(param0: number): void;
                    public requestTransparentRegion(param0: globalAndroid.view.View): void;
                    public setSplitWhenNarrow(param0: boolean): void;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                    public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public getTextDirection(): number;
                    public requestFitSystemWindows(): void;
                    public isOverflowMenuShowing(): boolean;
                    public showOverflowMenu(): boolean;
                    public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public getParent(): globalAndroid.view.ViewParent;
                    public isTextAlignmentResolved(): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                    public canResolveTextAlignment(): boolean;
                    public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                    public canResolveTextDirection(): boolean;
                    public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                    public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                    public requestDisallowInterceptTouchEvent(param0: boolean): void;
                    public onHoverEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public addView(param0: globalAndroid.view.View, param1: number): void;
                    public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public measureChildView(param0: globalAndroid.view.View, param1: number, param2: number, param3: number): number;
                    public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                    public setSplitToolbar(param0: boolean): void;
                    public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public setSplitView(param0: globalAndroid.view.ViewGroup): void;
                    public requestLayout(): void;
                    public getAnimatedVisibility(): number;
                    public getParentForAccessibility(): globalAndroid.view.ViewParent;
                    public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                    public isOverflowReserved(): boolean;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public canResolveLayoutDirection(): boolean;
                    public dismissPopupMenus(): void;
                    public getTextAlignment(): number;
                    public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public getContentHeight(): number;
                    public postShowOverflowMenu(): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public removeView(param0: globalAndroid.view.View): void;
                    public constructor(param0: globalAndroid.content.Context);
                    public onStopNestedScroll(param0: globalAndroid.view.View): void;
                    public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    public static next(param0: number, param1: number, param2: boolean): number;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                    public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                }
                export module AbsActionBarView {
                    export class VisibilityAnimListener extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.AbsActionBarView.VisibilityAnimListener>;
                        public onAnimationEnd(param0: globalAndroid.animation.Animator): void;
                        public withFinalVisibility(param0: number): com.android.internal.widget.AbsActionBarView.VisibilityAnimListener;
                        public constructor(param0: com.android.internal.widget.AbsActionBarView);
                        public onAnimationRepeat(param0: globalAndroid.animation.Animator): void;
                        public onAnimationCancel(param0: globalAndroid.animation.Animator): void;
                        public onAnimationStart(param0: globalAndroid.animation.Animator): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class AccountItemView extends globalAndroid.widget.LinearLayout {
                    public static class: java.lang.Class<com.android.internal.widget.AccountItemView>;
                    public setAccountIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                    public focusSearch(param0: number): globalAndroid.view.View;
                    public focusableViewAvailable(param0: globalAndroid.view.View): void;
                    public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                    public isLayoutRequested(): boolean;
                    public isTextDirectionResolved(): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public isLayoutDirectionResolved(): boolean;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public addView(param0: globalAndroid.view.View): void;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public setAccountIcon(param0: number): void;
                    public setViewItem(param0: com.android.internal.widget.AccountViewAdapter.AccountElements): void;
                    public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                    public clearChildFocus(param0: globalAndroid.view.View): void;
                    public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                    public getLayoutDirection(): number;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                    public bringChildToFront(param0: globalAndroid.view.View): void;
                    public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public setAccountNumber(param0: string): void;
                    public requestTransparentRegion(param0: globalAndroid.view.View): void;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                    public getTextDirection(): number;
                    public requestFitSystemWindows(): void;
                    public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public getParent(): globalAndroid.view.ViewParent;
                    public isTextAlignmentResolved(): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                    public canResolveTextAlignment(): boolean;
                    public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                    public setAccountName(param0: string): void;
                    public canResolveTextDirection(): boolean;
                    public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                    public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                    public requestDisallowInterceptTouchEvent(param0: boolean): void;
                    public addView(param0: globalAndroid.view.View, param1: number): void;
                    public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                    public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public requestLayout(): void;
                    public getParentForAccessibility(): globalAndroid.view.ViewParent;
                    public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public canResolveLayoutDirection(): boolean;
                    public getTextAlignment(): number;
                    public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public removeView(param0: globalAndroid.view.View): void;
                    public constructor(param0: globalAndroid.content.Context);
                    public onStopNestedScroll(param0: globalAndroid.view.View): void;
                    public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                    public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class AccountViewAdapter extends globalAndroid.widget.BaseAdapter {
                    public static class: java.lang.Class<com.android.internal.widget.AccountViewAdapter>;
                    public getItem(param0: number): any;
                    public getCount(): number;
                    public areAllItemsEnabled(): boolean;
                    public constructor();
                    public constructor(param0: globalAndroid.content.Context, param1: java.util.List<com.android.internal.widget.AccountViewAdapter.AccountElements>);
                    public getDropDownView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
                    public isEnabled(param0: number): boolean;
                    public updateData(param0: java.util.List<com.android.internal.widget.AccountViewAdapter.AccountElements>): void;
                    public getItemId(param0: number): number;
                    public getView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
                }
                export module AccountViewAdapter {
                    export class AccountElements extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.AccountViewAdapter.AccountElements>;
                        public getNumber(): string;
                        public getIcon(): number;
                        public getDrawable(): globalAndroid.graphics.drawable.Drawable;
                        public constructor(param0: globalAndroid.graphics.drawable.Drawable, param1: string, param2: string);
                        public constructor(param0: number, param1: string, param2: string);
                        public getName(): string;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class ActionBarContainer extends globalAndroid.widget.FrameLayout {
                    public static class: java.lang.Class<com.android.internal.widget.ActionBarContainer>;
                    public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                    public focusSearch(param0: number): globalAndroid.view.View;
                    public focusableViewAvailable(param0: globalAndroid.view.View): void;
                    public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                    public verifyDrawable(param0: globalAndroid.graphics.drawable.Drawable): boolean;
                    public isLayoutRequested(): boolean;
                    public setSplitBackground(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public jumpDrawablesToCurrentState(): void;
                    public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public isTextDirectionResolved(): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public isLayoutDirectionResolved(): boolean;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public addView(param0: globalAndroid.view.View): void;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                    public clearChildFocus(param0: globalAndroid.view.View): void;
                    public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                    public getLayoutDirection(): number;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                    public bringChildToFront(param0: globalAndroid.view.View): void;
                    public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public setVisibility(param0: number): void;
                    public requestTransparentRegion(param0: globalAndroid.view.View): void;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public setPrimaryBackground(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                    public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public getTextDirection(): number;
                    public drawableStateChanged(): void;
                    public requestFitSystemWindows(): void;
                    public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public getParent(): globalAndroid.view.ViewParent;
                    public isTextAlignmentResolved(): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                    public canResolveTextAlignment(): boolean;
                    public getTabContainer(): globalAndroid.view.View;
                    public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                    public setStackedBackground(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public canResolveTextDirection(): boolean;
                    public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                    public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                    public requestDisallowInterceptTouchEvent(param0: boolean): void;
                    public onHoverEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public addView(param0: globalAndroid.view.View, param1: number): void;
                    public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                    public onFinishInflate(): void;
                    public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public requestLayout(): void;
                    public getParentForAccessibility(): globalAndroid.view.ViewParent;
                    public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                    public onMeasure(param0: number, param1: number): void;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public canResolveLayoutDirection(): boolean;
                    public getTextAlignment(): number;
                    public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public setTransitioning(param0: boolean): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public removeView(param0: globalAndroid.view.View): void;
                    public setTabContainer(param0: com.android.internal.widget.ScrollingTabContainerView): void;
                    public constructor(param0: globalAndroid.content.Context);
                    public onStopNestedScroll(param0: globalAndroid.view.View): void;
                    public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    public onResolveDrawables(param0: number): void;
                    public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                    public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                }
                export module ActionBarContainer {
                    export class ActionBarBackgroundDrawable extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.ActionBarContainer.ActionBarBackgroundDrawable>;
                        public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
                        public draw(param0: globalAndroid.graphics.Canvas): void;
                        public getOpacity(): number;
                        public getOutline(param0: any): void;
                        public setAlpha(param0: number): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class ActionBarContextView extends com.android.internal.widget.AbsActionBarView {
                    public static class: java.lang.Class<com.android.internal.widget.ActionBarContextView>;
                    public getTitle(): string;
                    public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                    public focusSearch(param0: number): globalAndroid.view.View;
                    public focusableViewAvailable(param0: globalAndroid.view.View): void;
                    public setTitle(param0: string): void;
                    public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                    public isLayoutRequested(): boolean;
                    public generateLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): globalAndroid.view.ViewGroup.LayoutParams;
                    public isTextDirectionResolved(): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public isLayoutDirectionResolved(): boolean;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                    public isTitleOptional(): boolean;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public addView(param0: globalAndroid.view.View): void;
                    public hideOverflowMenu(): boolean;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                    public clearChildFocus(param0: globalAndroid.view.View): void;
                    public initForMode(param0: globalAndroid.view.ActionMode): void;
                    public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                    public getLayoutDirection(): number;
                    public killMode(): void;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                    public bringChildToFront(param0: globalAndroid.view.View): void;
                    public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public setContentHeight(param0: number): void;
                    public requestTransparentRegion(param0: globalAndroid.view.View): void;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                    public getTextDirection(): number;
                    public requestFitSystemWindows(): void;
                    public isOverflowMenuShowing(): boolean;
                    public showOverflowMenu(): boolean;
                    public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public closeMode(): void;
                    public getParent(): globalAndroid.view.ViewParent;
                    public isTextAlignmentResolved(): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                    public canResolveTextAlignment(): boolean;
                    public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                    public canResolveTextDirection(): boolean;
                    public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                    public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                    public requestDisallowInterceptTouchEvent(param0: boolean): void;
                    public generateDefaultLayoutParams(): globalAndroid.view.ViewGroup.LayoutParams;
                    public addView(param0: globalAndroid.view.View, param1: number): void;
                    public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                    public setSplitToolbar(param0: boolean): void;
                    public setCustomView(param0: globalAndroid.view.View): void;
                    public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public requestLayout(): void;
                    public getParentForAccessibility(): globalAndroid.view.ViewParent;
                    public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                    public onDetachedFromWindow(): void;
                    public onMeasure(param0: number, param1: number): void;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public canResolveLayoutDirection(): boolean;
                    public getTextAlignment(): number;
                    public onInitializeAccessibilityEventInternal(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public generateLayoutParams(param0: globalAndroid.util.AttributeSet): globalAndroid.view.ViewGroup.LayoutParams;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public removeView(param0: globalAndroid.view.View): void;
                    public constructor(param0: globalAndroid.content.Context);
                    public onStopNestedScroll(param0: globalAndroid.view.View): void;
                    public shouldDelayChildPressedState(): boolean;
                    public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    public setSubtitle(param0: string): void;
                    public getSubtitle(): string;
                    public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                    public setTitleOptional(param0: boolean): void;
                    public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class ActionBarOverlayLayout extends globalAndroid.view.ViewGroup implements com.android.internal.widget.DecorContentParent {
                    public static class: java.lang.Class<com.android.internal.widget.ActionBarOverlayLayout>;
                    public static ACTION_BAR_HIDE_OFFSET: globalAndroid.util.Property<com.android.internal.widget.ActionBarOverlayLayout, java.lang.Integer>;
                    public getTitle(): string;
                    public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                    public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                    public isTextDirectionResolved(): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public addView(param0: globalAndroid.view.View): void;
                    public hideOverflowMenu(): boolean;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public canShowOverflowMenu(): boolean;
                    public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public setActionBarVisibilityCallback(param0: com.android.internal.widget.ActionBarOverlayLayout.ActionBarVisibilityCallback): void;
                    public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public clearChildFocus(param0: globalAndroid.view.View): void;
                    public onWindowSystemUiVisibilityChanged(param0: number): void;
                    public getLayoutDirection(): number;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                    public setMenuPrepared(): void;
                    public setHasNonEmbeddedTabs(param0: boolean): void;
                    public onWindowVisibilityChanged(param0: number): void;
                    public requestTransparentRegion(param0: globalAndroid.view.View): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public isOverflowMenuShowing(): boolean;
                    public setWindowCallback(param0: globalAndroid.view.Window.Callback): void;
                    public onApplyWindowInsets(param0: globalAndroid.view.WindowInsets): globalAndroid.view.WindowInsets;
                    public getParent(): globalAndroid.view.ViewParent;
                    public isTextAlignmentResolved(): boolean;
                    public generateLayoutParams(param0: globalAndroid.util.AttributeSet): com.android.internal.widget.ActionBarOverlayLayout.LayoutParams;
                    public canResolveTextAlignment(): boolean;
                    public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                    public setShowingForActionMode(param0: boolean): void;
                    public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                    public restoreToolbarHierarchyState(param0: globalAndroid.util.SparseArray<globalAndroid.os.Parcelable>): void;
                    public generateDefaultLayoutParams(): globalAndroid.view.ViewGroup.LayoutParams;
                    public saveToolbarHierarchyState(param0: globalAndroid.util.SparseArray<globalAndroid.os.Parcelable>): void;
                    public setMenu(param0: globalAndroid.view.Menu, param1: com.android.internal.view.menu.MenuPresenter.Callback): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public requestLayout(): void;
                    public onDetachedFromWindow(): void;
                    public onMeasure(param0: number, param1: number): void;
                    public dismissPopups(): void;
                    public getTextAlignment(): number;
                    public generateLayoutParams(param0: globalAndroid.util.AttributeSet): globalAndroid.view.ViewGroup.LayoutParams;
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public constructor(param0: globalAndroid.content.Context);
                    public setWindowTitle(param0: string): void;
                    public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                    public setLogo(param0: number): void;
                    public focusSearch(param0: number): globalAndroid.view.View;
                    public focusableViewAvailable(param0: globalAndroid.view.View): void;
                    public isLayoutRequested(): boolean;
                    public setUiOptions(param0: number): void;
                    public generateLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): globalAndroid.view.ViewGroup.LayoutParams;
                    public generateDefaultLayoutParams(): com.android.internal.widget.ActionBarOverlayLayout.LayoutParams;
                    public isHideOnContentScrollEnabled(): boolean;
                    public isLayoutDirectionResolved(): boolean;
                    public setOverlayMode(param0: boolean): void;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                    public getActionBarHideOffset(): number;
                    public checkLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): boolean;
                    public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                    public isOverflowMenuShowPending(): boolean;
                    public setHideOnContentScrollEnabled(param0: boolean): void;
                    public initFeature(param0: number): void;
                    public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                    public hasLogo(): boolean;
                    public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                    public bringChildToFront(param0: globalAndroid.view.View): void;
                    public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public setIcon(param0: number): void;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                    public setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public getTextDirection(): number;
                    public requestFitSystemWindows(): void;
                    public showOverflowMenu(): boolean;
                    public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public isInOverlayMode(): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                    public canResolveTextDirection(): boolean;
                    public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                    public requestDisallowInterceptTouchEvent(param0: boolean): void;
                    public setActionBarHideOffset(param0: number): void;
                    public addView(param0: globalAndroid.view.View, param1: number): void;
                    public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                    public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                    public getParentForAccessibility(): globalAndroid.view.ViewParent;
                    public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public canResolveLayoutDirection(): boolean;
                    public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public removeView(param0: globalAndroid.view.View): void;
                    public onStopNestedScroll(param0: globalAndroid.view.View): void;
                    public shouldDelayChildPressedState(): boolean;
                    public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    public draw(param0: globalAndroid.graphics.Canvas): void;
                    public hasIcon(): boolean;
                    public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                }
                export module ActionBarOverlayLayout {
                    export class ActionBarVisibilityCallback extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.ActionBarOverlayLayout.ActionBarVisibilityCallback>;
                        /**
                         * Constructs a new instance of the com.android.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            enableContentAnimations(param0: boolean): void;
                            hideForSystem(): void;
                            onContentScrollStarted(): void;
                            onContentScrollStopped(): void;
                            onWindowVisibilityChanged(param0: number): void;
                            showForSystem(): void;
                        });
                        public constructor();
                        public onContentScrollStarted(): void;
                        public hideForSystem(): void;
                        public onContentScrollStopped(): void;
                        public enableContentAnimations(param0: boolean): void;
                        public onWindowVisibilityChanged(param0: number): void;
                        public showForSystem(): void;
                    }
                    export class LayoutParams extends globalAndroid.view.ViewGroup.MarginLayoutParams {
                        public static class: java.lang.Class<com.android.internal.widget.ActionBarOverlayLayout.LayoutParams>;
                        public constructor(param0: globalAndroid.view.ViewGroup.LayoutParams);
                        public constructor(param0: globalAndroid.view.ViewGroup.MarginLayoutParams);
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                        public constructor(param0: number, param1: number);
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class ActionBarView extends com.android.internal.widget.AbsActionBarView implements com.android.internal.widget.DecorToolbar {
                    public static class: java.lang.Class<com.android.internal.widget.ActionBarView>;
                    public static DISPLAY_DEFAULT: number;
                    public getTitle(): string;
                    public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                    public setNavigationIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                    public isTextDirectionResolved(): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public addView(param0: globalAndroid.view.View): void;
                    public hideOverflowMenu(): boolean;
                    public setCollapsible(param0: boolean): void;
                    public saveHierarchyState(param0: globalAndroid.util.SparseArray<globalAndroid.os.Parcelable>): void;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public canShowOverflowMenu(): boolean;
                    public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public clearChildFocus(param0: globalAndroid.view.View): void;
                    public getViewGroup(): globalAndroid.view.ViewGroup;
                    public setDropdownParams(param0: globalAndroid.widget.SpinnerAdapter, param1: globalAndroid.widget.AdapterView.OnItemSelectedListener): void;
                    public getHeight(): number;
                    public getLayoutDirection(): number;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                    public setDisplayOptions(param0: number): void;
                    public setMenuPrepared(): void;
                    public setupAnimatorToVisibility(param0: number, param1: number): globalAndroid.animation.Animator;
                    public requestTransparentRegion(param0: globalAndroid.view.View): void;
                    public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
                    public setSplitWhenNarrow(param0: boolean): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public onSaveInstanceState(): globalAndroid.os.Parcelable;
                    public isOverflowMenuShowing(): boolean;
                    public setDropdownSelectedPosition(param0: number): void;
                    public setWindowCallback(param0: globalAndroid.view.Window.Callback): void;
                    public getParent(): globalAndroid.view.ViewParent;
                    public isTextAlignmentResolved(): boolean;
                    public canResolveTextAlignment(): boolean;
                    public setBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                    public setNavigationContentDescription(param0: number): void;
                    public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                    public generateDefaultLayoutParams(): globalAndroid.view.ViewGroup.LayoutParams;
                    public setMenuCallbacks(param0: com.android.internal.view.menu.MenuPresenter.Callback, param1: com.android.internal.view.menu.MenuBuilder.Callback): void;
                    public setSplitToolbar(param0: boolean): void;
                    public setDefaultNavigationIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public setMenu(param0: globalAndroid.view.Menu, param1: com.android.internal.view.menu.MenuPresenter.Callback): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public setSplitView(param0: globalAndroid.view.ViewGroup): void;
                    public requestLayout(): void;
                    public onDetachedFromWindow(): void;
                    public setNavigationIcon(param0: number): void;
                    public onMeasure(param0: number, param1: number): void;
                    public setNavigationMode(param0: number): void;
                    public getTextAlignment(): number;
                    public generateLayoutParams(param0: globalAndroid.util.AttributeSet): globalAndroid.view.ViewGroup.LayoutParams;
                    public initIndeterminateProgress(): void;
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public setEmbeddedTabView(param0: com.android.internal.widget.ScrollingTabContainerView): void;
                    public constructor(param0: globalAndroid.content.Context);
                    public setNavigationContentDescription(param0: string): void;
                    public hasEmbeddedTabs(): boolean;
                    public getSubtitle(): string;
                    public setHomeButtonEnabled(param0: boolean): void;
                    public setWindowTitle(param0: string): void;
                    public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                    public setLogo(param0: number): void;
                    public focusSearch(param0: number): globalAndroid.view.View;
                    public focusableViewAvailable(param0: globalAndroid.view.View): void;
                    public getNavigationMode(): number;
                    public setTitle(param0: string): void;
                    public isLayoutRequested(): boolean;
                    public generateLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): globalAndroid.view.ViewGroup.LayoutParams;
                    public setDefaultNavigationContentDescription(param0: number): void;
                    public isLayoutDirectionResolved(): boolean;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                    public getContext(): globalAndroid.content.Context;
                    public getVisibility(): number;
                    public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                    public isOverflowMenuShowPending(): boolean;
                    public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                    public hasLogo(): boolean;
                    public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
                    public getDropdownItemCount(): number;
                    public isTitleTruncated(): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                    public bringChildToFront(param0: globalAndroid.view.View): void;
                    public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public setIcon(param0: number): void;
                    public animateToVisibility(param0: number): void;
                    public setVisibility(param0: number): void;
                    public initProgress(): void;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                    public setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public getTextDirection(): number;
                    public hasExpandedActionView(): boolean;
                    public requestFitSystemWindows(): void;
                    public showOverflowMenu(): boolean;
                    public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public restoreHierarchyState(param0: globalAndroid.util.SparseArray<globalAndroid.os.Parcelable>): void;
                    public getCustomView(): globalAndroid.view.View;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                    public canResolveTextDirection(): boolean;
                    public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                    public requestDisallowInterceptTouchEvent(param0: boolean): void;
                    public getDropdownSelectedPosition(): number;
                    public addView(param0: globalAndroid.view.View, param1: number): void;
                    public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                    public isSplit(): boolean;
                    public onFinishInflate(): void;
                    public setCustomView(param0: globalAndroid.view.View): void;
                    public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                    public getParentForAccessibility(): globalAndroid.view.ViewParent;
                    public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public canResolveLayoutDirection(): boolean;
                    public getMenu(): globalAndroid.view.Menu;
                    public dismissPopupMenus(): void;
                    public collapseActionView(): void;
                    public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public setLogo(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                    public canSplit(): boolean;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public removeView(param0: globalAndroid.view.View): void;
                    public onStopNestedScroll(param0: globalAndroid.view.View): void;
                    public setContextView(param0: com.android.internal.widget.ActionBarContextView): void;
                    public shouldDelayChildPressedState(): boolean;
                    public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    public setSubtitle(param0: string): void;
                    public getDisplayOptions(): number;
                    public hasIcon(): boolean;
                    public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                }
                export module ActionBarView {
                    export class ExpandedActionViewMenuPresenter extends com.android.internal.view.menu.MenuPresenter {
                        public static class: java.lang.Class<com.android.internal.widget.ActionBarView.ExpandedActionViewMenuPresenter>;
                        public onSubMenuSelected(param0: com.android.internal.view.menu.SubMenuBuilder): boolean;
                        public flagActionItems(): boolean;
                        public initForMenu(param0: globalAndroid.content.Context, param1: com.android.internal.view.menu.MenuBuilder): void;
                        public setCallback(param0: com.android.internal.view.menu.MenuPresenter.Callback): void;
                        public expandItemActionView(param0: com.android.internal.view.menu.MenuBuilder, param1: com.android.internal.view.menu.MenuItemImpl): boolean;
                        public updateMenuView(param0: boolean): void;
                        public onCloseMenu(param0: com.android.internal.view.menu.MenuBuilder, param1: boolean): void;
                        public onSaveInstanceState(): globalAndroid.os.Parcelable;
                        public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
                        public getMenuView(param0: globalAndroid.view.ViewGroup): com.android.internal.view.menu.MenuView;
                        public collapseItemActionView(param0: com.android.internal.view.menu.MenuBuilder, param1: com.android.internal.view.menu.MenuItemImpl): boolean;
                        public getId(): number;
                    }
                    export class HomeView extends globalAndroid.widget.FrameLayout {
                        public static class: java.lang.Class<com.android.internal.widget.ActionBarView.HomeView>;
                        public isLayoutRequested(): boolean;
                        public canResolveLayoutDirection(): boolean;
                        public constructor(param0: globalAndroid.content.Context);
                        public sendAccessibilityEvent(param0: number): void;
                        public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                        public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                        public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                        public onFinishInflate(): void;
                        public clearChildFocus(param0: globalAndroid.view.View): void;
                        public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                        public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
                        public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                        public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                        public isTextAlignmentResolved(): boolean;
                        public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                        public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                        public onMeasure(param0: number, param1: number): void;
                        public getTextDirection(): number;
                        public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                        public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                        public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                        public removeView(param0: globalAndroid.view.View): void;
                        public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                        public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                        public dispatchPopulateAccessibilityEventInternal(param0: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                        public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                        public setDefaultUpIndicator(param0: globalAndroid.graphics.drawable.Drawable): void;
                        public onPopulateAccessibilityEventInternal(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                        public canResolveTextDirection(): boolean;
                        public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                        public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                        public requestDisallowInterceptTouchEvent(param0: boolean): void;
                        public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                        public isLayoutDirectionResolved(): boolean;
                        public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                        public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                        public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                        public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                        public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                        public requestLayout(): void;
                        public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                        public bringChildToFront(param0: globalAndroid.view.View): void;
                        public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                        public addView(param0: globalAndroid.view.View, param1: number): void;
                        public setShowIcon(param0: boolean): void;
                        public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                        public isTextDirectionResolved(): boolean;
                        public setUpIndicator(param0: globalAndroid.graphics.drawable.Drawable): void;
                        public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                        public dispatchHoverEvent(param0: globalAndroid.view.MotionEvent): boolean;
                        public getUpWidth(): number;
                        public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                        public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                        public onStopNestedScroll(param0: globalAndroid.view.View): void;
                        public requestTransparentRegion(param0: globalAndroid.view.View): void;
                        public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                        public addView(param0: globalAndroid.view.View): void;
                        public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                        public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                        public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                        public setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
                        public getStartOffset(): number;
                        public requestFitSystemWindows(): void;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                        public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
                        public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                        public getParentForAccessibility(): globalAndroid.view.ViewParent;
                        public focusableViewAvailable(param0: globalAndroid.view.View): void;
                        public focusSearch(param0: number): globalAndroid.view.View;
                        public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                        public setUpIndicator(param0: number): void;
                        public getTextAlignment(): number;
                        public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                        public setShowUp(param0: boolean): void;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                        public canResolveTextAlignment(): boolean;
                        public getLayoutDirection(): number;
                        public getParent(): globalAndroid.view.ViewParent;
                    }
                    export class SavedState extends globalAndroid.view.View.BaseSavedState {
                        public static class: java.lang.Class<com.android.internal.widget.ActionBarView.SavedState>;
                        public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.widget.ActionBarView.SavedState>;
                        public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class AdapterHelper extends com.android.internal.widget.OpReorderer.Callback {
                    public static class: java.lang.Class<com.android.internal.widget.AdapterHelper>;
                    public obtainUpdateOp(param0: number, param1: number, param2: number, param3: any): com.android.internal.widget.AdapterHelper.UpdateOp;
                    public applyPendingUpdatesToPosition(param0: number): number;
                    public recycleUpdateOp(param0: com.android.internal.widget.AdapterHelper.UpdateOp): void;
                }
                export module AdapterHelper {
                    export class Callback extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.AdapterHelper.Callback>;
                        /**
                         * Constructs a new instance of the com.android.internal.widget.AdapterHelper$Callback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            findViewHolder(param0: number): com.android.internal.widget.RecyclerView.ViewHolder;
                            markViewHoldersUpdated(param0: number, param1: number, param2: any): void;
                            offsetPositionsForAdd(param0: number, param1: number): void;
                            offsetPositionsForMove(param0: number, param1: number): void;
                            offsetPositionsForRemovingInvisible(param0: number, param1: number): void;
                            offsetPositionsForRemovingLaidOutOrNewView(param0: number, param1: number): void;
                            onDispatchFirstPass(param0: com.android.internal.widget.AdapterHelper.UpdateOp): void;
                            onDispatchSecondPass(param0: com.android.internal.widget.AdapterHelper.UpdateOp): void;
                        });
                        public constructor();
                        public offsetPositionsForAdd(param0: number, param1: number): void;
                        public offsetPositionsForRemovingLaidOutOrNewView(param0: number, param1: number): void;
                        public onDispatchSecondPass(param0: com.android.internal.widget.AdapterHelper.UpdateOp): void;
                        public offsetPositionsForMove(param0: number, param1: number): void;
                        public onDispatchFirstPass(param0: com.android.internal.widget.AdapterHelper.UpdateOp): void;
                        public findViewHolder(param0: number): com.android.internal.widget.RecyclerView.ViewHolder;
                        public markViewHoldersUpdated(param0: number, param1: number, param2: any): void;
                        public offsetPositionsForRemovingInvisible(param0: number, param1: number): void;
                    }
                    export class UpdateOp extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.AdapterHelper.UpdateOp>;
                        public equals(param0: any): boolean;
                        public hashCode(): number;
                        public toString(): string;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class AlertDialogLayout extends globalAndroid.widget.LinearLayout {
                    public static class: java.lang.Class<com.android.internal.widget.AlertDialogLayout>;
                    public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                    public focusSearch(param0: number): globalAndroid.view.View;
                    public focusableViewAvailable(param0: globalAndroid.view.View): void;
                    public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                    public isLayoutRequested(): boolean;
                    public isTextDirectionResolved(): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public isLayoutDirectionResolved(): boolean;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public addView(param0: globalAndroid.view.View): void;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                    public clearChildFocus(param0: globalAndroid.view.View): void;
                    public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                    public getLayoutDirection(): number;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                    public bringChildToFront(param0: globalAndroid.view.View): void;
                    public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public requestTransparentRegion(param0: globalAndroid.view.View): void;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                    public getTextDirection(): number;
                    public requestFitSystemWindows(): void;
                    public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public getParent(): globalAndroid.view.ViewParent;
                    public isTextAlignmentResolved(): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                    public canResolveTextAlignment(): boolean;
                    public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                    public canResolveTextDirection(): boolean;
                    public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                    public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                    public requestDisallowInterceptTouchEvent(param0: boolean): void;
                    public addView(param0: globalAndroid.view.View, param1: number): void;
                    public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                    public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public requestLayout(): void;
                    public getParentForAccessibility(): globalAndroid.view.ViewParent;
                    public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                    public onMeasure(param0: number, param1: number): void;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public canResolveLayoutDirection(): boolean;
                    public getTextAlignment(): number;
                    public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public removeView(param0: globalAndroid.view.View): void;
                    public constructor(param0: globalAndroid.content.Context);
                    public onStopNestedScroll(param0: globalAndroid.view.View): void;
                    public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                    public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export abstract class AutoScrollHelper extends globalAndroid.view.View.OnTouchListener {
                    public static class: java.lang.Class<com.android.internal.widget.AutoScrollHelper>;
                    public static EDGE_TYPE_INSIDE: number;
                    public static EDGE_TYPE_INSIDE_EXTEND: number;
                    public static EDGE_TYPE_OUTSIDE: number;
                    public static NO_MAX: number;
                    public static NO_MIN: number;
                    public static RELATIVE_UNSPECIFIED: number;
                    public setMaximumVelocity(param0: number, param1: number): com.android.internal.widget.AutoScrollHelper;
                    public setRampUpDuration(param0: number): com.android.internal.widget.AutoScrollHelper;
                    public setRampDownDuration(param0: number): com.android.internal.widget.AutoScrollHelper;
                    public isExclusive(): boolean;
                    public onTouch(param0: globalAndroid.view.View, param1: globalAndroid.view.MotionEvent): boolean;
                    public setMinimumVelocity(param0: number, param1: number): com.android.internal.widget.AutoScrollHelper;
                    public scrollTargetBy(param0: number, param1: number): void;
                    public setRelativeVelocity(param0: number, param1: number): com.android.internal.widget.AutoScrollHelper;
                    public setRelativeEdges(param0: number, param1: number): com.android.internal.widget.AutoScrollHelper;
                    public setExclusive(param0: boolean): com.android.internal.widget.AutoScrollHelper;
                    public canTargetScrollHorizontally(param0: number): boolean;
                    public canTargetScrollVertically(param0: number): boolean;
                    public constructor(param0: globalAndroid.view.View);
                    public setEnabled(param0: boolean): com.android.internal.widget.AutoScrollHelper;
                    public isEnabled(): boolean;
                    public setMaximumEdges(param0: number, param1: number): com.android.internal.widget.AutoScrollHelper;
                    public setEdgeType(param0: number): com.android.internal.widget.AutoScrollHelper;
                    public setActivationDelay(param0: number): com.android.internal.widget.AutoScrollHelper;
                }
                export module AutoScrollHelper {
                    export class AbsListViewAutoScroller extends com.android.internal.widget.AutoScrollHelper {
                        public static class: java.lang.Class<com.android.internal.widget.AutoScrollHelper.AbsListViewAutoScroller>;
                        public scrollTargetBy(param0: number, param1: number): void;
                        public constructor(param0: globalAndroid.view.View);
                        public constructor(param0: globalAndroid.widget.AbsListView);
                        public canTargetScrollHorizontally(param0: number): boolean;
                        public canTargetScrollVertically(param0: number): boolean;
                        public onTouch(param0: globalAndroid.view.View, param1: globalAndroid.view.MotionEvent): boolean;
                    }
                    export class ClampedScroller extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.AutoScrollHelper.ClampedScroller>;
                        public getDeltaY(): number;
                        public getVerticalDirection(): number;
                        public constructor();
                        public setTargetVelocity(param0: number, param1: number): void;
                        public start(): void;
                        public getDeltaX(): number;
                        public setRampUpDuration(param0: number): void;
                        public setRampDownDuration(param0: number): void;
                        public computeScrollDelta(): void;
                        public requestStop(): void;
                        public getHorizontalDirection(): number;
                        public isFinished(): boolean;
                    }
                    export class ScrollAnimationRunnable extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.AutoScrollHelper.ScrollAnimationRunnable>;
                        public run(): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class BackgroundFallback extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.widget.BackgroundFallback>;
                    public constructor();
                    public draw(param0: globalAndroid.view.ViewGroup, param1: globalAndroid.view.ViewGroup, param2: globalAndroid.graphics.Canvas, param3: globalAndroid.view.View): void;
                    public hasFallback(): boolean;
                    public setDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class ButtonBarLayout extends globalAndroid.widget.LinearLayout {
                    public static class: java.lang.Class<com.android.internal.widget.ButtonBarLayout>;
                    public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                    public focusSearch(param0: number): globalAndroid.view.View;
                    public focusableViewAvailable(param0: globalAndroid.view.View): void;
                    public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                    public isLayoutRequested(): boolean;
                    public isTextDirectionResolved(): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public isLayoutDirectionResolved(): boolean;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public addView(param0: globalAndroid.view.View): void;
                    public getMinimumHeight(): number;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                    public clearChildFocus(param0: globalAndroid.view.View): void;
                    public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                    public getLayoutDirection(): number;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                    public bringChildToFront(param0: globalAndroid.view.View): void;
                    public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public requestTransparentRegion(param0: globalAndroid.view.View): void;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                    public getTextDirection(): number;
                    public requestFitSystemWindows(): void;
                    public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public getParent(): globalAndroid.view.ViewParent;
                    public isTextAlignmentResolved(): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                    public canResolveTextAlignment(): boolean;
                    public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                    public canResolveTextDirection(): boolean;
                    public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                    public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                    public requestDisallowInterceptTouchEvent(param0: boolean): void;
                    public setAllowStacking(param0: boolean): void;
                    public addView(param0: globalAndroid.view.View, param1: number): void;
                    public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                    public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public requestLayout(): void;
                    public getParentForAccessibility(): globalAndroid.view.ViewParent;
                    public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                    public onMeasure(param0: number, param1: number): void;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public canResolveLayoutDirection(): boolean;
                    public getTextAlignment(): number;
                    public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public removeView(param0: globalAndroid.view.View): void;
                    public constructor(param0: globalAndroid.content.Context);
                    public onStopNestedScroll(param0: globalAndroid.view.View): void;
                    public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                    public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class CachingIconView extends globalAndroid.widget.ImageView {
                    public static class: java.lang.Class<com.android.internal.widget.CachingIconView>;
                    public setImageIcon(param0: any): void;
                    public setImageDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public setForceHidden(param0: boolean): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public setImageURIAsync(param0: globalAndroid.net.Uri): java.lang.Runnable;
                    public constructor(param0: globalAndroid.content.Context);
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public setImageResourceAsync(param0: number): java.lang.Runnable;
                    public setImageURI(param0: globalAndroid.net.Uri): void;
                    public setImageBitmap(param0: globalAndroid.graphics.Bitmap): void;
                    public setVisibility(param0: number): void;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public setImageIconAsync(param0: any): java.lang.Runnable;
                    public setImageResource(param0: number): void;
                    public sendAccessibilityEvent(param0: number): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class ChildHelper extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.widget.ChildHelper>;
                    public toString(): string;
                }
                export module ChildHelper {
                    export class Bucket extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.ChildHelper.Bucket>;
                        public toString(): string;
                    }
                    export class Callback extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.ChildHelper.Callback>;
                        /**
                         * Constructs a new instance of the com.android.internal.widget.ChildHelper$Callback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            addView(param0: globalAndroid.view.View, param1: number): void;
                            attachViewToParent(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                            detachViewFromParent(param0: number): void;
                            getChildAt(param0: number): globalAndroid.view.View;
                            getChildCount(): number;
                            getChildViewHolder(param0: globalAndroid.view.View): com.android.internal.widget.RecyclerView.ViewHolder;
                            indexOfChild(param0: globalAndroid.view.View): number;
                            onEnteredHiddenState(param0: globalAndroid.view.View): void;
                            onLeftHiddenState(param0: globalAndroid.view.View): void;
                            removeAllViews(): void;
                            removeViewAt(param0: number): void;
                        });
                        public constructor();
                        public onLeftHiddenState(param0: globalAndroid.view.View): void;
                        public removeAllViews(): void;
                        public attachViewToParent(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                        public getChildCount(): number;
                        public getChildViewHolder(param0: globalAndroid.view.View): com.android.internal.widget.RecyclerView.ViewHolder;
                        public removeViewAt(param0: number): void;
                        public detachViewFromParent(param0: number): void;
                        public indexOfChild(param0: globalAndroid.view.View): number;
                        public addView(param0: globalAndroid.view.View, param1: number): void;
                        public getChildAt(param0: number): globalAndroid.view.View;
                        public onEnteredHiddenState(param0: globalAndroid.view.View): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class DecorCaptionView extends globalAndroid.view.ViewGroup implements globalAndroid.view.View.OnTouchListener, globalAndroid.view.GestureDetector.OnGestureListener {
                    public static class: java.lang.Class<com.android.internal.widget.DecorCaptionView>;
                    public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                    public focusSearch(param0: number): globalAndroid.view.View;
                    public focusableViewAvailable(param0: globalAndroid.view.View): void;
                    public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                    public onTouch(param0: globalAndroid.view.View, param1: globalAndroid.view.MotionEvent): boolean;
                    public isLayoutRequested(): boolean;
                    public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public generateLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): globalAndroid.view.ViewGroup.LayoutParams;
                    public isTextDirectionResolved(): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public onScroll(param0: globalAndroid.view.MotionEvent, param1: globalAndroid.view.MotionEvent, param2: number, param3: number): boolean;
                    public isLayoutDirectionResolved(): boolean;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public addView(param0: globalAndroid.view.View): void;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public checkLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): boolean;
                    public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                    public clearChildFocus(param0: globalAndroid.view.View): void;
                    public removeContentView(): void;
                    public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                    public getLayoutDirection(): number;
                    public setPhoneWindow(param0: com.android.internal.policy.PhoneWindow, param1: boolean): void;
                    public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                    public onLongPress(param0: globalAndroid.view.MotionEvent): void;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                    public bringChildToFront(param0: globalAndroid.view.View): void;
                    public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public requestTransparentRegion(param0: globalAndroid.view.View): void;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                    public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public getTextDirection(): number;
                    public requestFitSystemWindows(): void;
                    public onFling(param0: globalAndroid.view.MotionEvent, param1: globalAndroid.view.MotionEvent, param2: number, param3: number): boolean;
                    public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public getParent(): globalAndroid.view.ViewParent;
                    public isTextAlignmentResolved(): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                    public isCaptionShowing(): boolean;
                    public canResolveTextAlignment(): boolean;
                    public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                    public getCaption(): globalAndroid.view.View;
                    public canResolveTextDirection(): boolean;
                    public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                    public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                    public requestDisallowInterceptTouchEvent(param0: boolean): void;
                    public getCaptionHeight(): number;
                    public generateDefaultLayoutParams(): globalAndroid.view.ViewGroup.LayoutParams;
                    public addView(param0: globalAndroid.view.View, param1: number): void;
                    public buildTouchDispatchChildList(): java.util.ArrayList<globalAndroid.view.View>;
                    public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                    public onFinishInflate(): void;
                    public onShowPress(param0: globalAndroid.view.MotionEvent): void;
                    public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public requestLayout(): void;
                    public getParentForAccessibility(): globalAndroid.view.ViewParent;
                    public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                    public onMeasure(param0: number, param1: number): void;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public canResolveLayoutDirection(): boolean;
                    public getTextAlignment(): number;
                    public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public generateLayoutParams(param0: globalAndroid.util.AttributeSet): globalAndroid.view.ViewGroup.LayoutParams;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public removeView(param0: globalAndroid.view.View): void;
                    public onSingleTapUp(param0: globalAndroid.view.MotionEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context);
                    public onStopNestedScroll(param0: globalAndroid.view.View): void;
                    public onDown(param0: globalAndroid.view.MotionEvent): boolean;
                    public shouldDelayChildPressedState(): boolean;
                    public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                    public onConfigurationChanged(param0: boolean): void;
                    public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class DecorContentParent extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.widget.DecorContentParent>;
                    /**
                     * Constructs a new instance of the com.android.internal.widget.DecorContentParent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        canShowOverflowMenu(): boolean;
                        dismissPopups(): void;
                        getTitle(): string;
                        hasIcon(): boolean;
                        hasLogo(): boolean;
                        hideOverflowMenu(): boolean;
                        initFeature(param0: number): void;
                        isOverflowMenuShowPending(): boolean;
                        isOverflowMenuShowing(): boolean;
                        restoreToolbarHierarchyState(param0: globalAndroid.util.SparseArray<globalAndroid.os.Parcelable>): void;
                        saveToolbarHierarchyState(param0: globalAndroid.util.SparseArray<globalAndroid.os.Parcelable>): void;
                        setIcon(param0: number): void;
                        setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
                        setLogo(param0: number): void;
                        setMenu(param0: globalAndroid.view.Menu, param1: com.android.internal.view.menu.MenuPresenter.Callback): void;
                        setMenuPrepared(): void;
                        setUiOptions(param0: number): void;
                        setWindowCallback(param0: globalAndroid.view.Window.Callback): void;
                        setWindowTitle(param0: string): void;
                        showOverflowMenu(): boolean;
                    });
                    public constructor();
                    public getTitle(): string;
                    public isOverflowMenuShowPending(): boolean;
                    public setLogo(param0: number): void;
                    public dismissPopups(): void;
                    public initFeature(param0: number): void;
                    public hasLogo(): boolean;
                    public setMenuPrepared(): void;
                    public setUiOptions(param0: number): void;
                    public restoreToolbarHierarchyState(param0: globalAndroid.util.SparseArray<globalAndroid.os.Parcelable>): void;
                    public setIcon(param0: number): void;
                    public hasIcon(): boolean;
                    public hideOverflowMenu(): boolean;
                    public setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public saveToolbarHierarchyState(param0: globalAndroid.util.SparseArray<globalAndroid.os.Parcelable>): void;
                    public setMenu(param0: globalAndroid.view.Menu, param1: com.android.internal.view.menu.MenuPresenter.Callback): void;
                    public setWindowTitle(param0: string): void;
                    public canShowOverflowMenu(): boolean;
                    public isOverflowMenuShowing(): boolean;
                    public showOverflowMenu(): boolean;
                    public setWindowCallback(param0: globalAndroid.view.Window.Callback): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class DecorToolbar extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.widget.DecorToolbar>;
                    /**
                     * Constructs a new instance of the com.android.internal.widget.DecorToolbar interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        animateToVisibility(param0: number): void;
                        canShowOverflowMenu(): boolean;
                        canSplit(): boolean;
                        collapseActionView(): void;
                        dismissPopupMenus(): void;
                        getContext(): globalAndroid.content.Context;
                        getCustomView(): globalAndroid.view.View;
                        getDisplayOptions(): number;
                        getDropdownItemCount(): number;
                        getDropdownSelectedPosition(): number;
                        getHeight(): number;
                        getMenu(): globalAndroid.view.Menu;
                        getNavigationMode(): number;
                        getSubtitle(): string;
                        getTitle(): string;
                        getViewGroup(): globalAndroid.view.ViewGroup;
                        getVisibility(): number;
                        hasEmbeddedTabs(): boolean;
                        hasExpandedActionView(): boolean;
                        hasIcon(): boolean;
                        hasLogo(): boolean;
                        hideOverflowMenu(): boolean;
                        initIndeterminateProgress(): void;
                        initProgress(): void;
                        isOverflowMenuShowPending(): boolean;
                        isOverflowMenuShowing(): boolean;
                        isSplit(): boolean;
                        isTitleTruncated(): boolean;
                        restoreHierarchyState(param0: globalAndroid.util.SparseArray<globalAndroid.os.Parcelable>): void;
                        saveHierarchyState(param0: globalAndroid.util.SparseArray<globalAndroid.os.Parcelable>): void;
                        setBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
                        setCollapsible(param0: boolean): void;
                        setCustomView(param0: globalAndroid.view.View): void;
                        setDefaultNavigationContentDescription(param0: number): void;
                        setDefaultNavigationIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
                        setDisplayOptions(param0: number): void;
                        setDropdownParams(param0: globalAndroid.widget.SpinnerAdapter, param1: globalAndroid.widget.AdapterView.OnItemSelectedListener): void;
                        setDropdownSelectedPosition(param0: number): void;
                        setEmbeddedTabView(param0: com.android.internal.widget.ScrollingTabContainerView): void;
                        setHomeButtonEnabled(param0: boolean): void;
                        setIcon(param0: number): void;
                        setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
                        setLogo(param0: number): void;
                        setLogo(param0: globalAndroid.graphics.drawable.Drawable): void;
                        setMenu(param0: globalAndroid.view.Menu, param1: com.android.internal.view.menu.MenuPresenter.Callback): void;
                        setMenuCallbacks(param0: com.android.internal.view.menu.MenuPresenter.Callback, param1: com.android.internal.view.menu.MenuBuilder.Callback): void;
                        setMenuPrepared(): void;
                        setNavigationContentDescription(param0: number): void;
                        setNavigationContentDescription(param0: string): void;
                        setNavigationIcon(param0: number): void;
                        setNavigationIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
                        setNavigationMode(param0: number): void;
                        setSplitToolbar(param0: boolean): void;
                        setSplitView(param0: globalAndroid.view.ViewGroup): void;
                        setSplitWhenNarrow(param0: boolean): void;
                        setSubtitle(param0: string): void;
                        setTitle(param0: string): void;
                        setVisibility(param0: number): void;
                        setWindowCallback(param0: globalAndroid.view.Window.Callback): void;
                        setWindowTitle(param0: string): void;
                        setupAnimatorToVisibility(param0: number, param1: number): globalAndroid.animation.Animator;
                        showOverflowMenu(): boolean;
                    });
                    public constructor();
                    public getTitle(): string;
                    public setLogo(param0: number): void;
                    public setNavigationIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public getNavigationMode(): number;
                    public setTitle(param0: string): void;
                    public setDefaultNavigationContentDescription(param0: number): void;
                    public getContext(): globalAndroid.content.Context;
                    public getVisibility(): number;
                    public hideOverflowMenu(): boolean;
                    public saveHierarchyState(param0: globalAndroid.util.SparseArray<globalAndroid.os.Parcelable>): void;
                    public setCollapsible(param0: boolean): void;
                    public canShowOverflowMenu(): boolean;
                    public getViewGroup(): globalAndroid.view.ViewGroup;
                    public isOverflowMenuShowPending(): boolean;
                    public setDropdownParams(param0: globalAndroid.widget.SpinnerAdapter, param1: globalAndroid.widget.AdapterView.OnItemSelectedListener): void;
                    public getHeight(): number;
                    public hasLogo(): boolean;
                    public getDropdownItemCount(): number;
                    public setDisplayOptions(param0: number): void;
                    public setMenuPrepared(): void;
                    public isTitleTruncated(): boolean;
                    public setIcon(param0: number): void;
                    public setupAnimatorToVisibility(param0: number, param1: number): globalAndroid.animation.Animator;
                    public animateToVisibility(param0: number): void;
                    public setVisibility(param0: number): void;
                    public initProgress(): void;
                    public setSplitWhenNarrow(param0: boolean): void;
                    public setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public hasExpandedActionView(): boolean;
                    public isOverflowMenuShowing(): boolean;
                    public showOverflowMenu(): boolean;
                    public setDropdownSelectedPosition(param0: number): void;
                    public setWindowCallback(param0: globalAndroid.view.Window.Callback): void;
                    public restoreHierarchyState(param0: globalAndroid.util.SparseArray<globalAndroid.os.Parcelable>): void;
                    public getCustomView(): globalAndroid.view.View;
                    public setBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public setNavigationContentDescription(param0: number): void;
                    public getDropdownSelectedPosition(): number;
                    public setMenuCallbacks(param0: com.android.internal.view.menu.MenuPresenter.Callback, param1: com.android.internal.view.menu.MenuBuilder.Callback): void;
                    public setSplitToolbar(param0: boolean): void;
                    public isSplit(): boolean;
                    public setCustomView(param0: globalAndroid.view.View): void;
                    public setDefaultNavigationIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public setMenu(param0: globalAndroid.view.Menu, param1: com.android.internal.view.menu.MenuPresenter.Callback): void;
                    public setSplitView(param0: globalAndroid.view.ViewGroup): void;
                    public setNavigationIcon(param0: number): void;
                    public dismissPopupMenus(): void;
                    public getMenu(): globalAndroid.view.Menu;
                    public collapseActionView(): void;
                    public setNavigationMode(param0: number): void;
                    public initIndeterminateProgress(): void;
                    public setLogo(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public canSplit(): boolean;
                    public setEmbeddedTabView(param0: com.android.internal.widget.ScrollingTabContainerView): void;
                    public setNavigationContentDescription(param0: string): void;
                    public hasEmbeddedTabs(): boolean;
                    public setSubtitle(param0: string): void;
                    public getDisplayOptions(): number;
                    public getSubtitle(): string;
                    public hasIcon(): boolean;
                    public setHomeButtonEnabled(param0: boolean): void;
                    public setWindowTitle(param0: string): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class DefaultItemAnimator extends com.android.internal.widget.SimpleItemAnimator {
                    public static class: java.lang.Class<com.android.internal.widget.DefaultItemAnimator>;
                    public animateMove(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: number, param2: number, param3: number, param4: number): boolean;
                    public endAnimations(): void;
                    public animateChange(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: com.android.internal.widget.RecyclerView.ViewHolder, param2: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo, param3: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo): boolean;
                    public endAnimation(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                    public animateAdd(param0: com.android.internal.widget.RecyclerView.ViewHolder): boolean;
                    public runPendingAnimations(): void;
                    public canReuseUpdatedViewHolder(param0: com.android.internal.widget.RecyclerView.ViewHolder): boolean;
                    public canReuseUpdatedViewHolder(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: java.util.List<any>): boolean;
                    public animateRemove(param0: com.android.internal.widget.RecyclerView.ViewHolder): boolean;
                    public constructor();
                    public isRunning(): boolean;
                    public isRunning(param0: com.android.internal.widget.RecyclerView.ItemAnimator.ItemAnimatorFinishedListener): boolean;
                    public animateChange(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: com.android.internal.widget.RecyclerView.ViewHolder, param2: number, param3: number, param4: number, param5: number): boolean;
                }
                export module DefaultItemAnimator {
                    export class ChangeInfo extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.DefaultItemAnimator.ChangeInfo>;
                        public fromX: number;
                        public fromY: number;
                        public newHolder: com.android.internal.widget.RecyclerView.ViewHolder;
                        public oldHolder: com.android.internal.widget.RecyclerView.ViewHolder;
                        public toX: number;
                        public toY: number;
                        public toString(): string;
                    }
                    export class MoveInfo extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.DefaultItemAnimator.MoveInfo>;
                        public fromX: number;
                        public fromY: number;
                        public holder: com.android.internal.widget.RecyclerView.ViewHolder;
                        public toX: number;
                        public toY: number;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class DialogTitle extends globalAndroid.widget.TextView {
                    public static class: java.lang.Class<com.android.internal.widget.DialogTitle>;
                    public constructor(param0: globalAndroid.content.Context);
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public onMeasure(param0: number, param1: number): void;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public onPreDraw(): boolean;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class DialogViewAnimator extends globalAndroid.widget.ViewAnimator {
                    public static class: java.lang.Class<com.android.internal.widget.DialogViewAnimator>;
                    public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                    public focusSearch(param0: number): globalAndroid.view.View;
                    public focusableViewAvailable(param0: globalAndroid.view.View): void;
                    public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                    public isLayoutRequested(): boolean;
                    public isTextDirectionResolved(): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public isLayoutDirectionResolved(): boolean;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public addView(param0: globalAndroid.view.View): void;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                    public clearChildFocus(param0: globalAndroid.view.View): void;
                    public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                    public getLayoutDirection(): number;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                    public bringChildToFront(param0: globalAndroid.view.View): void;
                    public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public requestTransparentRegion(param0: globalAndroid.view.View): void;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                    public getTextDirection(): number;
                    public requestFitSystemWindows(): void;
                    public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public getParent(): globalAndroid.view.ViewParent;
                    public isTextAlignmentResolved(): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                    public canResolveTextAlignment(): boolean;
                    public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                    public canResolveTextDirection(): boolean;
                    public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                    public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                    public requestDisallowInterceptTouchEvent(param0: boolean): void;
                    public addView(param0: globalAndroid.view.View, param1: number): void;
                    public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                    public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public requestLayout(): void;
                    public getParentForAccessibility(): globalAndroid.view.ViewParent;
                    public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                    public onMeasure(param0: number, param1: number): void;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public canResolveLayoutDirection(): boolean;
                    public getTextAlignment(): number;
                    public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public removeView(param0: globalAndroid.view.View): void;
                    public constructor(param0: globalAndroid.content.Context);
                    public onStopNestedScroll(param0: globalAndroid.view.View): void;
                    public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                    public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class DrawableHolder extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.widget.DrawableHolder>;
                    public static EASE_OUT_INTERPOLATOR: globalAndroid.view.animation.DecelerateInterpolator;
                    public getAlpha(): number;
                    public getScaleY(): number;
                    public onAnimationCancel(param0: globalAndroid.animation.Animator): void;
                    public setY(param0: number): void;
                    public getHeight(): number;
                    public getX(): number;
                    public onAnimationEnd(param0: globalAndroid.animation.Animator): void;
                    public setScaleX(param0: number): void;
                    public getWidth(): number;
                    public setX(param0: number): void;
                    public startAnimations(param0: globalAndroid.animation.ValueAnimator.AnimatorUpdateListener): void;
                    public getY(): number;
                    public removeAnimationFor(param0: string): void;
                    public setAlpha(param0: number): void;
                    public getDrawable(): globalAndroid.graphics.drawable.BitmapDrawable;
                    public getScaleX(): number;
                    public constructor(param0: globalAndroid.graphics.drawable.BitmapDrawable);
                    public clearAnimations(): void;
                    public draw(param0: globalAndroid.graphics.Canvas): void;
                    public setScaleY(param0: number): void;
                    public onAnimationStart(param0: globalAndroid.animation.Animator): void;
                    public constructor(param0: globalAndroid.graphics.drawable.BitmapDrawable, param1: number, param2: number);
                    public onAnimationRepeat(param0: globalAndroid.animation.Animator): void;
                    public addAnimTo(param0: number, param1: number, param2: string, param3: number, param4: boolean): globalAndroid.animation.ObjectAnimator;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class EditableInputConnection extends globalAndroid.view.inputmethod.BaseInputConnection {
                    public static class: java.lang.Class<com.android.internal.widget.EditableInputConnection>;
                    public constructor(param0: globalAndroid.widget.TextView);
                    public commitText(param0: string, param1: number): boolean;
                    public clearMetaKeyStates(param0: number): boolean;
                    public requestCursorUpdates(param0: number): boolean;
                    public getCursorCapsMode(param0: number): number;
                    public commitCompletion(param0: globalAndroid.view.inputmethod.CompletionInfo): boolean;
                    public getTextAfterCursor(param0: number, param1: number): string;
                    public performPrivateCommand(param0: string, param1: globalAndroid.os.Bundle): boolean;
                    public commitContent(param0: globalAndroid.view.inputmethod.InputContentInfo, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    public endBatchEdit(): boolean;
                    public getSelectedText(param0: number): string;
                    public commitCorrection(param0: globalAndroid.view.inputmethod.CorrectionInfo): boolean;
                    public beginBatchEdit(): boolean;
                    public setSelection(param0: number, param1: number): boolean;
                    public getTextBeforeCursor(param0: number, param1: number): string;
                    public performEditorAction(param0: number): boolean;
                    public sendKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
                    public deleteSurroundingText(param0: number, param1: number): boolean;
                    public deleteSurroundingTextInCodePoints(param0: number, param1: number): boolean;
                    public closeConnection(): void;
                    public reportFullscreenMode(param0: boolean): boolean;
                    public getEditable(): globalAndroid.text.Editable;
                    public constructor(param0: globalAndroid.view.View, param1: boolean);
                    public getExtractedText(param0: globalAndroid.view.inputmethod.ExtractedTextRequest, param1: number): globalAndroid.view.inputmethod.ExtractedText;
                    public setComposingRegion(param0: number, param1: number): boolean;
                    public finishComposingText(): boolean;
                    public getHandler(): globalAndroid.os.Handler;
                    public performContextMenuAction(param0: number): boolean;
                    public setComposingText(param0: string, param1: number): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export abstract class ExploreByTouchHelper extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.widget.ExploreByTouchHelper>;
                    public static HOST_ID: number;
                    public static INVALID_ID: number;
                    public onPopulateEventForVirtualView(param0: number, param1: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public getFocusedVirtualView(): number;
                    public onPopulateEventForHost(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public sendEventForVirtualView(param0: number, param1: number): boolean;
                    public onPopulateNodeForVirtualView(param0: number, param1: globalAndroid.view.accessibility.AccessibilityNodeInfo): void;
                    public invalidateVirtualView(param0: number, param1: number): void;
                    public getAccessibilityNodeProvider(param0: globalAndroid.view.View): globalAndroid.view.accessibility.AccessibilityNodeProvider;
                    public getVisibleVirtualViews(param0: globalAndroid.util.IntArray): void;
                    public getVirtualViewAt(param0: number, param1: number): number;
                    public invalidateVirtualView(param0: number): void;
                    public constructor();
                    public onPopulateNodeForHost(param0: globalAndroid.view.accessibility.AccessibilityNodeInfo): void;
                    public constructor(param0: globalAndroid.view.View);
                    public onPerformActionForVirtualView(param0: number, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    public dispatchHoverEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public invalidateRoot(): void;
                }
                export module ExploreByTouchHelper {
                    export class ExploreByTouchNodeProvider extends globalAndroid.view.accessibility.AccessibilityNodeProvider {
                        public static class: java.lang.Class<com.android.internal.widget.ExploreByTouchHelper.ExploreByTouchNodeProvider>;
                        public createAccessibilityNodeInfo(param0: number): globalAndroid.view.accessibility.AccessibilityNodeInfo;
                        public performAction(param0: number, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class FloatingToolbar extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.widget.FloatingToolbar>;
                    public static FLOATING_TOOLBAR_TAG: string;
                    public setMenu(param0: globalAndroid.view.Menu): com.android.internal.widget.FloatingToolbar;
                    public isShowing(): boolean;
                    public isHidden(): boolean;
                    public setSuggestedWidth(param0: number): com.android.internal.widget.FloatingToolbar;
                    public hide(): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.view.Window);
                    public updateLayout(): com.android.internal.widget.FloatingToolbar;
                    public dismiss(): void;
                    public setContentRect(param0: globalAndroid.graphics.Rect): com.android.internal.widget.FloatingToolbar;
                    public setOnMenuItemClickListener(param0: globalAndroid.view.MenuItem.OnMenuItemClickListener): com.android.internal.widget.FloatingToolbar;
                    public show(): com.android.internal.widget.FloatingToolbar;
                }
                export module FloatingToolbar {
                    export class FloatingToolbarPopup extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.FloatingToolbar.FloatingToolbarPopup>;
                        public layoutMenuItems(param0: java.util.List<globalAndroid.view.MenuItem>, param1: globalAndroid.view.MenuItem.OnMenuItemClickListener, param2: number): void;
                        public dismiss(): void;
                        public isHidden(): boolean;
                        public updateCoordinates(param0: globalAndroid.graphics.Rect): void;
                        public layoutMainPanelItems(param0: java.util.List<globalAndroid.view.MenuItem>, param1: number): java.util.List<globalAndroid.view.MenuItem>;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.view.View);
                        public show(param0: globalAndroid.graphics.Rect): void;
                        public hide(): void;
                        public isShowing(): boolean;
                    }
                    export module FloatingToolbarPopup {
                        export class LogAccelerateInterpolator extends globalAndroid.view.animation.Interpolator {
                            public static class: java.lang.Class<com.android.internal.widget.FloatingToolbar.FloatingToolbarPopup.LogAccelerateInterpolator>;
                            public getInterpolation(param0: number): number;
                        }
                        export class OverflowPanel extends globalAndroid.widget.ListView {
                            public static class: java.lang.Class<com.android.internal.widget.FloatingToolbar.FloatingToolbarPopup.OverflowPanel>;
                            public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                            public getParent(): globalAndroid.view.ViewParent;
                            public getParentForAccessibility(): globalAndroid.view.ViewParent;
                            public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                            public getTextDirection(): number;
                            public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                            public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                            public onStopNestedScroll(param0: globalAndroid.view.View): void;
                            public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                            public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                            public deferNotifyDataSetChanged(): void;
                            public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                            public isLayoutRequested(): boolean;
                            public isTextDirectionResolved(): boolean;
                            public requestLayout(): void;
                            public onMeasure(param0: number, param1: number): void;
                            public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                            public isLayoutDirectionResolved(): boolean;
                            public setRemoteViewsAdapter(param0: globalAndroid.content.Intent): void;
                            public canResolveTextDirection(): boolean;
                            public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                            public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                            public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                            public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                            public canResolveLayoutDirection(): boolean;
                            public onFilterComplete(param0: number): void;
                            public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                            public onGlobalLayout(): void;
                            public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                            public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                            public focusableViewAvailable(param0: globalAndroid.view.View): void;
                            public addView(param0: globalAndroid.view.View): void;
                            public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                            public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                            public isTextAlignmentResolved(): boolean;
                            public requestDisallowInterceptTouchEvent(param0: boolean): void;
                            public setRemoteViewsAdapter(param0: globalAndroid.content.Intent, param1: boolean): void;
                            public awakenScrollBars(param0: number, param1: boolean): boolean;
                            public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                            public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                            public awakenScrollBars(): boolean;
                            public requestTransparentRegion(param0: globalAndroid.view.View): void;
                            public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                            public requestFitSystemWindows(): void;
                            public onRemoteAdapterConnected(): boolean;
                            public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                            public dispatchTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
                            public bringChildToFront(param0: globalAndroid.view.View): void;
                            public onTextChanged(param0: string, param1: number, param2: number, param3: number): void;
                            public canResolveTextAlignment(): boolean;
                            public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                            public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                            public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                            public getTextAlignment(): number;
                            public afterTextChanged(param0: globalAndroid.text.Editable): void;
                            public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                            public awakenScrollBars(param0: number): boolean;
                            public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                            public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                            public onRemoteAdapterDisconnected(): void;
                            public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                            public clearChildFocus(param0: globalAndroid.view.View): void;
                            public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                            public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                            public addView(param0: globalAndroid.view.View, param1: number): void;
                            public getLayoutDirection(): number;
                            public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                            public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                            public beforeTextChanged(param0: string, param1: number, param2: number, param3: number): void;
                            public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                            public removeView(param0: globalAndroid.view.View): void;
                            public sendAccessibilityEvent(param0: number): void;
                            public focusSearch(param0: number): globalAndroid.view.View;
                            public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                            public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                            public onTouchModeChanged(param0: boolean): void;
                        }
                        export class OverflowPanelViewHelper extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.widget.FloatingToolbar.FloatingToolbarPopup.OverflowPanelViewHelper>;
                            public calculateWidth(param0: globalAndroid.view.MenuItem): number;
                            public getView(param0: globalAndroid.view.MenuItem, param1: number, param2: globalAndroid.view.View): globalAndroid.view.View;
                            public constructor(param0: globalAndroid.content.Context);
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class GapWorker extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.widget.GapWorker>;
                    public run(): void;
                    public add(param0: com.android.internal.widget.RecyclerView): void;
                    public remove(param0: com.android.internal.widget.RecyclerView): void;
                }
                export module GapWorker {
                    export class LayoutPrefetchRegistryImpl extends com.android.internal.widget.RecyclerView.LayoutManager.LayoutPrefetchRegistry {
                        public static class: java.lang.Class<com.android.internal.widget.GapWorker.LayoutPrefetchRegistryImpl>;
                        public addPosition(param0: number, param1: number): void;
                    }
                    export class Task extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.GapWorker.Task>;
                        public distanceToItem: number;
                        public immediate: boolean;
                        public position: number;
                        public view: com.android.internal.widget.RecyclerView;
                        public viewVelocity: number;
                        public clear(): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class ICheckCredentialProgressCallback extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.widget.ICheckCredentialProgressCallback>;
                    /**
                     * Constructs a new instance of the com.android.internal.widget.ICheckCredentialProgressCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        onCredentialVerified(): void;
                    });
                    public constructor();
                    public onCredentialVerified(): void;
                }
                export module ICheckCredentialProgressCallback {
                    export abstract class Stub implements com.android.internal.widget.ICheckCredentialProgressCallback {
                        public static class: java.lang.Class<com.android.internal.widget.ICheckCredentialProgressCallback.Stub>;
                        public constructor();
                        public onCredentialVerified(): void;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.widget.ICheckCredentialProgressCallback;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.widget.ICheckCredentialProgressCallback {
                            public static class: java.lang.Class<com.android.internal.widget.ICheckCredentialProgressCallback.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public onCredentialVerified(): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class ILockSettings extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.widget.ILockSettings>;
                    /**
                     * Constructs a new instance of the com.android.internal.widget.ILockSettings interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        addEscrowToken(param0: number[], param1: number): number;
                        checkCredential(param0: string, param1: number, param2: number, param3: com.android.internal.widget.ICheckCredentialProgressCallback): com.android.internal.widget.VerifyCredentialResponse;
                        checkRecoveryPassword(param0: number[], param1: number): boolean;
                        checkVoldPassword(param0: number): boolean;
                        getBoolean(param0: string, param1: boolean, param2: number): boolean;
                        getLong(param0: string, param1: number, param2: number): number;
                        getPassword(): string;
                        getSeparateProfileChallengeEnabled(param0: number): boolean;
                        getString(param0: string, param1: string, param2: number): string;
                        getStrongAuthForUser(param0: number): number;
                        havePassword(param0: number): boolean;
                        havePattern(param0: number): boolean;
                        isEscrowTokenActive(param0: number, param1: number): boolean;
                        registerStrongAuthTracker(param0: globalAndroid.app.trust.IStrongAuthTracker): void;
                        removeEscrowToken(param0: number, param1: number): boolean;
                        requireStrongAuth(param0: number, param1: number): void;
                        resetKeyStore(param0: number): void;
                        sanitizePassword(): void;
                        setBoolean(param0: string, param1: boolean, param2: number): void;
                        setLockCredential(param0: string, param1: number, param2: string, param3: number): void;
                        setLockCredentialWithToken(param0: string, param1: number, param2: number, param3: number[], param4: number): boolean;
                        setLong(param0: string, param1: number, param2: number): void;
                        setRecoveryPassword(param0: number[], param1: number): void;
                        setSeparateProfileChallengeEnabled(param0: number, param1: boolean, param2: string): void;
                        setString(param0: string, param1: string, param2: number): void;
                        systemReady(): void;
                        unlockUserWithToken(param0: number, param1: number[], param2: number): void;
                        unregisterStrongAuthTracker(param0: globalAndroid.app.trust.IStrongAuthTracker): void;
                        userPresent(param0: number): void;
                        verifyCredential(param0: string, param1: number, param2: number, param3: number): com.android.internal.widget.VerifyCredentialResponse;
                        verifyTiedProfileChallenge(param0: string, param1: number, param2: number, param3: number): com.android.internal.widget.VerifyCredentialResponse;
                    });
                    public constructor();
                    public addEscrowToken(param0: number[], param1: number): number;
                    public setSeparateProfileChallengeEnabled(param0: number, param1: boolean, param2: string): void;
                    public setLong(param0: string, param1: number, param2: number): void;
                    public checkVoldPassword(param0: number): boolean;
                    public setBoolean(param0: string, param1: boolean, param2: number): void;
                    public sanitizePassword(): void;
                    public userPresent(param0: number): void;
                    public unlockUserWithToken(param0: number, param1: number[], param2: number): void;
                    public resetKeyStore(param0: number): void;
                    public getLong(param0: string, param1: number, param2: number): number;
                    public removeEscrowToken(param0: number, param1: number): boolean;
                    public verifyCredential(param0: string, param1: number, param2: number, param3: number): com.android.internal.widget.VerifyCredentialResponse;
                    public havePassword(param0: number): boolean;
                    public systemReady(): void;
                    public checkCredential(param0: string, param1: number, param2: number, param3: com.android.internal.widget.ICheckCredentialProgressCallback): com.android.internal.widget.VerifyCredentialResponse;
                    public isEscrowTokenActive(param0: number, param1: number): boolean;
                    public unregisterStrongAuthTracker(param0: globalAndroid.app.trust.IStrongAuthTracker): void;
                    public verifyTiedProfileChallenge(param0: string, param1: number, param2: number, param3: number): com.android.internal.widget.VerifyCredentialResponse;
                    public setLockCredential(param0: string, param1: number, param2: string, param3: number): void;
                    public setRecoveryPassword(param0: number[], param1: number): void;
                    public checkRecoveryPassword(param0: number[], param1: number): boolean;
                    public getPassword(): string;
                    public registerStrongAuthTracker(param0: globalAndroid.app.trust.IStrongAuthTracker): void;
                    public getString(param0: string, param1: string, param2: number): string;
                    public havePattern(param0: number): boolean;
                    public getSeparateProfileChallengeEnabled(param0: number): boolean;
                    public requireStrongAuth(param0: number, param1: number): void;
                    public setLockCredentialWithToken(param0: string, param1: number, param2: number, param3: number[], param4: number): boolean;
                    public getBoolean(param0: string, param1: boolean, param2: number): boolean;
                    public getStrongAuthForUser(param0: number): number;
                    public setString(param0: string, param1: string, param2: number): void;
                }
                export module ILockSettings {
                    export abstract class Stub implements com.android.internal.widget.ILockSettings {
                        public static class: java.lang.Class<com.android.internal.widget.ILockSettings.Stub>;
                        public havePassword(param0: number): boolean;
                        public setLockCredential(param0: string, param1: number, param2: string, param3: number): void;
                        public isEscrowTokenActive(param0: number, param1: number): boolean;
                        public getBoolean(param0: string, param1: boolean, param2: number): boolean;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.widget.ILockSettings;
                        public getPassword(): string;
                        public registerStrongAuthTracker(param0: globalAndroid.app.trust.IStrongAuthTracker): void;
                        public setLockCredentialWithToken(param0: string, param1: number, param2: number, param3: number[], param4: number): boolean;
                        public unlockUserWithToken(param0: number, param1: number[], param2: number): void;
                        public getLong(param0: string, param1: number, param2: number): number;
                        public requireStrongAuth(param0: number, param1: number): void;
                        public userPresent(param0: number): void;
                        public checkVoldPassword(param0: number): boolean;
                        public removeEscrowToken(param0: number, param1: number): boolean;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public checkCredential(param0: string, param1: number, param2: number, param3: com.android.internal.widget.ICheckCredentialProgressCallback): com.android.internal.widget.VerifyCredentialResponse;
                        public asBinder(): globalAndroid.os.IBinder;
                        public setLong(param0: string, param1: number, param2: number): void;
                        public verifyCredential(param0: string, param1: number, param2: number, param3: number): com.android.internal.widget.VerifyCredentialResponse;
                        public verifyTiedProfileChallenge(param0: string, param1: number, param2: number, param3: number): com.android.internal.widget.VerifyCredentialResponse;
                        public checkRecoveryPassword(param0: number[], param1: number): boolean;
                        public setString(param0: string, param1: string, param2: number): void;
                        public constructor();
                        public sanitizePassword(): void;
                        public setBoolean(param0: string, param1: boolean, param2: number): void;
                        public getStrongAuthForUser(param0: number): number;
                        public getSeparateProfileChallengeEnabled(param0: number): boolean;
                        public setRecoveryPassword(param0: number[], param1: number): void;
                        public unregisterStrongAuthTracker(param0: globalAndroid.app.trust.IStrongAuthTracker): void;
                        public havePattern(param0: number): boolean;
                        public resetKeyStore(param0: number): void;
                        public setSeparateProfileChallengeEnabled(param0: number, param1: boolean, param2: string): void;
                        public systemReady(): void;
                        public getString(param0: string, param1: string, param2: number): string;
                        public addEscrowToken(param0: number[], param1: number): number;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.widget.ILockSettings {
                            public static class: java.lang.Class<com.android.internal.widget.ILockSettings.Stub.Proxy>;
                            public verifyCredential(param0: string, param1: number, param2: number, param3: number): com.android.internal.widget.VerifyCredentialResponse;
                            public setRecoveryPassword(param0: number[], param1: number): void;
                            public getSeparateProfileChallengeEnabled(param0: number): boolean;
                            public havePassword(param0: number): boolean;
                            public unregisterStrongAuthTracker(param0: globalAndroid.app.trust.IStrongAuthTracker): void;
                            public checkVoldPassword(param0: number): boolean;
                            public registerStrongAuthTracker(param0: globalAndroid.app.trust.IStrongAuthTracker): void;
                            public systemReady(): void;
                            public resetKeyStore(param0: number): void;
                            public verifyTiedProfileChallenge(param0: string, param1: number, param2: number, param3: number): com.android.internal.widget.VerifyCredentialResponse;
                            public removeEscrowToken(param0: number, param1: number): boolean;
                            public checkRecoveryPassword(param0: number[], param1: number): boolean;
                            public getStrongAuthForUser(param0: number): number;
                            public addEscrowToken(param0: number[], param1: number): number;
                            public requireStrongAuth(param0: number, param1: number): void;
                            public getString(param0: string, param1: string, param2: number): string;
                            public userPresent(param0: number): void;
                            public isEscrowTokenActive(param0: number, param1: number): boolean;
                            public sanitizePassword(): void;
                            public setSeparateProfileChallengeEnabled(param0: number, param1: boolean, param2: string): void;
                            public getPassword(): string;
                            public getLong(param0: string, param1: number, param2: number): number;
                            public setBoolean(param0: string, param1: boolean, param2: number): void;
                            public setString(param0: string, param1: string, param2: number): void;
                            public getInterfaceDescriptor(): string;
                            public havePattern(param0: number): boolean;
                            public asBinder(): globalAndroid.os.IBinder;
                            public setLockCredentialWithToken(param0: string, param1: number, param2: number, param3: number[], param4: number): boolean;
                            public checkCredential(param0: string, param1: number, param2: number, param3: com.android.internal.widget.ICheckCredentialProgressCallback): com.android.internal.widget.VerifyCredentialResponse;
                            public getBoolean(param0: string, param1: boolean, param2: number): boolean;
                            public setLong(param0: string, param1: number, param2: number): void;
                            public setLockCredential(param0: string, param1: number, param2: string, param3: number): void;
                            public unlockUserWithToken(param0: number, param1: number[], param2: number): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class IRemoteViewsAdapterConnection extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.widget.IRemoteViewsAdapterConnection>;
                    /**
                     * Constructs a new instance of the com.android.internal.widget.IRemoteViewsAdapterConnection interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        onServiceConnected(param0: globalAndroid.os.IBinder): void;
                        onServiceDisconnected(): void;
                    });
                    public constructor();
                    public onServiceConnected(param0: globalAndroid.os.IBinder): void;
                    public onServiceDisconnected(): void;
                }
                export module IRemoteViewsAdapterConnection {
                    export abstract class Stub implements com.android.internal.widget.IRemoteViewsAdapterConnection {
                        public static class: java.lang.Class<com.android.internal.widget.IRemoteViewsAdapterConnection.Stub>;
                        public constructor();
                        public onServiceConnected(param0: globalAndroid.os.IBinder): void;
                        public onServiceDisconnected(): void;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.widget.IRemoteViewsAdapterConnection;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.widget.IRemoteViewsAdapterConnection {
                            public static class: java.lang.Class<com.android.internal.widget.IRemoteViewsAdapterConnection.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public onServiceDisconnected(): void;
                            public asBinder(): globalAndroid.os.IBinder;
                            public onServiceConnected(param0: globalAndroid.os.IBinder): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class IRemoteViewsFactory extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.widget.IRemoteViewsFactory>;
                    /**
                     * Constructs a new instance of the com.android.internal.widget.IRemoteViewsFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        getCount(): number;
                        getItemId(param0: number): number;
                        getLoadingView(): globalAndroid.widget.RemoteViews;
                        getViewAt(param0: number): globalAndroid.widget.RemoteViews;
                        getViewTypeCount(): number;
                        hasStableIds(): boolean;
                        isCreated(): boolean;
                        onDataSetChanged(): void;
                        onDataSetChangedAsync(): void;
                        onDestroy(param0: globalAndroid.content.Intent): void;
                    });
                    public constructor();
                    public getLoadingView(): globalAndroid.widget.RemoteViews;
                    public hasStableIds(): boolean;
                    public getViewAt(param0: number): globalAndroid.widget.RemoteViews;
                    public getCount(): number;
                    public getViewTypeCount(): number;
                    public onDestroy(param0: globalAndroid.content.Intent): void;
                    public isCreated(): boolean;
                    public onDataSetChanged(): void;
                    public onDataSetChangedAsync(): void;
                    public getItemId(param0: number): number;
                }
                export module IRemoteViewsFactory {
                    export abstract class Stub implements com.android.internal.widget.IRemoteViewsFactory {
                        public static class: java.lang.Class<com.android.internal.widget.IRemoteViewsFactory.Stub>;
                        public constructor();
                        public onDataSetChangedAsync(): void;
                        public getCount(): number;
                        public hasStableIds(): boolean;
                        public onDataSetChanged(): void;
                        public getViewTypeCount(): number;
                        public getViewAt(param0: number): globalAndroid.widget.RemoteViews;
                        public onDestroy(param0: globalAndroid.content.Intent): void;
                        public getLoadingView(): globalAndroid.widget.RemoteViews;
                        public getItemId(param0: number): number;
                        public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                        public isCreated(): boolean;
                        public asBinder(): globalAndroid.os.IBinder;
                        public static asInterface(param0: globalAndroid.os.IBinder): com.android.internal.widget.IRemoteViewsFactory;
                    }
                    export module Stub {
                        export class Proxy extends com.android.internal.widget.IRemoteViewsFactory {
                            public static class: java.lang.Class<com.android.internal.widget.IRemoteViewsFactory.Stub.Proxy>;
                            public getInterfaceDescriptor(): string;
                            public asBinder(): globalAndroid.os.IBinder;
                            public getItemId(param0: number): number;
                            public isCreated(): boolean;
                            public getLoadingView(): globalAndroid.widget.RemoteViews;
                            public getViewTypeCount(): number;
                            public onDataSetChanged(): void;
                            public onDestroy(param0: globalAndroid.content.Intent): void;
                            public getCount(): number;
                            public hasStableIds(): boolean;
                            public onDataSetChangedAsync(): void;
                            public getViewAt(param0: number): globalAndroid.widget.RemoteViews;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class ImageFloatingTextView extends globalAndroid.widget.TextView {
                    public static class: java.lang.Class<com.android.internal.widget.ImageFloatingTextView>;
                    public onMeasure(param0: number, param1: number): void;
                    public onRtlPropertiesChanged(param0: number): void;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public onPreDraw(): boolean;
                    public makeSingleLayout(param0: number, param1: globalAndroid.text.BoringLayout.Metrics, param2: number, param3: globalAndroid.text.Layout.Alignment, param4: boolean, param5: globalAndroid.text.TextUtils.TruncateAt, param6: boolean): globalAndroid.text.Layout;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public getLayoutHeight(): number;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context);
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public setHasImage(param0: boolean): void;
                    public setNumIndentLines(param0: number): boolean;
                    public sendAccessibilityEvent(param0: number): void;
                    public requestLayout(): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class LinearLayoutManager extends com.android.internal.widget.RecyclerView.LayoutManager implements com.android.internal.widget.helper.ItemTouchHelper.ViewDropHandler, com.android.internal.widget.RecyclerView.SmoothScroller.ScrollVectorProvider {
                    public static class: java.lang.Class<com.android.internal.widget.LinearLayoutManager>;
                    public static HORIZONTAL: number;
                    public static INVALID_OFFSET: number;
                    public static VERTICAL: number;
                    public smoothScrollToPosition(param0: com.android.internal.widget.RecyclerView, param1: com.android.internal.widget.RecyclerView.State, param2: number): void;
                    public onLayoutCompleted(param0: com.android.internal.widget.RecyclerView.State): void;
                    public findLastCompletelyVisibleItemPosition(): number;
                    public setInitialPrefetchItemCount(param0: number): void;
                    public generateDefaultLayoutParams(): com.android.internal.widget.RecyclerView.LayoutParams;
                    public supportsPredictiveItemAnimations(): boolean;
                    public computeVerticalScrollOffset(param0: com.android.internal.widget.RecyclerView.State): number;
                    public scrollToPositionWithOffset(param0: number, param1: number): void;
                    public setReverseLayout(param0: boolean): void;
                    public scrollToPosition(param0: number): void;
                    public setRecycleChildrenOnDetach(param0: boolean): void;
                    public setSmoothScrollbarEnabled(param0: boolean): void;
                    public getStackFromEnd(): boolean;
                    public computeVerticalScrollExtent(param0: com.android.internal.widget.RecyclerView.State): number;
                    public constructor();
                    public getRecycleChildrenOnDetach(): boolean;
                    public onLayoutChildren(param0: com.android.internal.widget.RecyclerView.Recycler, param1: com.android.internal.widget.RecyclerView.State): void;
                    public computeVerticalScrollRange(param0: com.android.internal.widget.RecyclerView.State): number;
                    public getOrientation(): number;
                    public prepareForDrop(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number, param3: number): void;
                    public canScrollVertically(): boolean;
                    public setOrientation(param0: number): void;
                    public isSmoothScrollbarEnabled(): boolean;
                    public findFirstVisibleItemPosition(): number;
                    public canScrollHorizontally(): boolean;
                    public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public onSaveInstanceState(): globalAndroid.os.Parcelable;
                    public collectAdjacentPrefetchPositions(param0: number, param1: number, param2: com.android.internal.widget.RecyclerView.State, param3: com.android.internal.widget.RecyclerView.LayoutManager.LayoutPrefetchRegistry): void;
                    public scrollHorizontallyBy(param0: number, param1: com.android.internal.widget.RecyclerView.Recycler, param2: com.android.internal.widget.RecyclerView.State): number;
                    public assertNotInLayoutOrScroll(param0: string): void;
                    public computeHorizontalScrollExtent(param0: com.android.internal.widget.RecyclerView.State): number;
                    public getReverseLayout(): boolean;
                    public onDetachedFromWindow(param0: com.android.internal.widget.RecyclerView, param1: com.android.internal.widget.RecyclerView.Recycler): void;
                    public computeHorizontalScrollRange(param0: com.android.internal.widget.RecyclerView.State): number;
                    public computeScrollVectorForPosition(param0: number): globalAndroid.graphics.PointF;
                    public findLastVisibleItemPosition(): number;
                    public collectInitialPrefetchPositions(param0: number, param1: com.android.internal.widget.RecyclerView.LayoutManager.LayoutPrefetchRegistry): void;
                    public findViewByPosition(param0: number): globalAndroid.view.View;
                    public findFirstCompletelyVisibleItemPosition(): number;
                    public computeHorizontalScrollOffset(param0: com.android.internal.widget.RecyclerView.State): number;
                    public onDetachedFromWindow(param0: com.android.internal.widget.RecyclerView): void;
                    public getExtraLayoutSpace(param0: com.android.internal.widget.RecyclerView.State): number;
                    public setStackFromEnd(param0: boolean): void;
                    public constructor(param0: globalAndroid.content.Context, param1: number, param2: boolean);
                    public isLayoutRTL(): boolean;
                    public onFocusSearchFailed(param0: globalAndroid.view.View, param1: number, param2: com.android.internal.widget.RecyclerView.Recycler, param3: com.android.internal.widget.RecyclerView.State): globalAndroid.view.View;
                    public constructor(param0: globalAndroid.content.Context);
                    public scrollVerticallyBy(param0: number, param1: com.android.internal.widget.RecyclerView.Recycler, param2: com.android.internal.widget.RecyclerView.State): number;
                    public onInitializeAccessibilityEvent(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public onInitializeAccessibilityEvent(param0: com.android.internal.widget.RecyclerView.Recycler, param1: com.android.internal.widget.RecyclerView.State, param2: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public getInitialItemPrefetchCount(): number;
                }
                export module LinearLayoutManager {
                    export class AnchorInfo extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.LinearLayoutManager.AnchorInfo>;
                        public assignFromViewAndKeepVisibleRect(param0: globalAndroid.view.View): void;
                        public assignFromView(param0: globalAndroid.view.View): void;
                        public toString(): string;
                    }
                    export class LayoutChunkResult extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.LinearLayoutManager.LayoutChunkResult>;
                        public mConsumed: number;
                        public mFinished: boolean;
                        public mFocusable: boolean;
                        public mIgnoreConsumed: boolean;
                        public constructor();
                    }
                    export class LayoutState extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.LinearLayoutManager.LayoutState>;
                        public nextViewInLimitedList(param0: globalAndroid.view.View): globalAndroid.view.View;
                        public assignPositionFromScrapList(): void;
                        public assignPositionFromScrapList(param0: globalAndroid.view.View): void;
                    }
                    export class SavedState extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.LinearLayoutManager.SavedState>;
                        public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.widget.LinearLayoutManager.SavedState>;
                        public constructor();
                        public describeContents(): number;
                        public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                        public constructor(param0: com.android.internal.widget.LinearLayoutManager.SavedState);
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class LinearLayoutWithDefaultTouchRecepient extends globalAndroid.widget.LinearLayout {
                    public static class: java.lang.Class<com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient>;
                    public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                    public focusSearch(param0: number): globalAndroid.view.View;
                    public focusableViewAvailable(param0: globalAndroid.view.View): void;
                    public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                    public isLayoutRequested(): boolean;
                    public isTextDirectionResolved(): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public isLayoutDirectionResolved(): boolean;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public addView(param0: globalAndroid.view.View): void;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                    public clearChildFocus(param0: globalAndroid.view.View): void;
                    public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                    public getLayoutDirection(): number;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                    public dispatchTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                    public bringChildToFront(param0: globalAndroid.view.View): void;
                    public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public requestTransparentRegion(param0: globalAndroid.view.View): void;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                    public getTextDirection(): number;
                    public requestFitSystemWindows(): void;
                    public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public getParent(): globalAndroid.view.ViewParent;
                    public isTextAlignmentResolved(): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                    public canResolveTextAlignment(): boolean;
                    public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                    public canResolveTextDirection(): boolean;
                    public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                    public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                    public requestDisallowInterceptTouchEvent(param0: boolean): void;
                    public addView(param0: globalAndroid.view.View, param1: number): void;
                    public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                    public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public requestLayout(): void;
                    public getParentForAccessibility(): globalAndroid.view.ViewParent;
                    public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public canResolveLayoutDirection(): boolean;
                    public getTextAlignment(): number;
                    public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public removeView(param0: globalAndroid.view.View): void;
                    public constructor(param0: globalAndroid.content.Context);
                    public onStopNestedScroll(param0: globalAndroid.view.View): void;
                    public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                    public setDefaultTouchRecepient(param0: globalAndroid.view.View): void;
                    public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class LinearSmoothScroller extends com.android.internal.widget.RecyclerView.SmoothScroller {
                    public static class: java.lang.Class<com.android.internal.widget.LinearSmoothScroller>;
                    public static SNAP_TO_ANY: number;
                    public static SNAP_TO_END: number;
                    public static SNAP_TO_START: number;
                    public mDecelerateInterpolator: globalAndroid.view.animation.DecelerateInterpolator;
                    public mInterimTargetDx: number;
                    public mInterimTargetDy: number;
                    public mLinearInterpolator: globalAndroid.view.animation.LinearInterpolator;
                    public mTargetVector: globalAndroid.graphics.PointF;
                    public getHorizontalSnapPreference(): number;
                    public onTargetFound(param0: globalAndroid.view.View, param1: com.android.internal.widget.RecyclerView.State, param2: com.android.internal.widget.RecyclerView.SmoothScroller.Action): void;
                    public updateActionForInterimTarget(param0: com.android.internal.widget.RecyclerView.SmoothScroller.Action): void;
                    public calculateTimeForScrolling(param0: number): number;
                    public calculateDxToMakeVisible(param0: globalAndroid.view.View, param1: number): number;
                    public calculateSpeedPerPixel(param0: globalAndroid.util.DisplayMetrics): number;
                    public onSeekTargetStep(param0: number, param1: number, param2: com.android.internal.widget.RecyclerView.State, param3: com.android.internal.widget.RecyclerView.SmoothScroller.Action): void;
                    public constructor(param0: globalAndroid.content.Context);
                    public onStart(): void;
                    public calculateDyToMakeVisible(param0: globalAndroid.view.View, param1: number): number;
                    public computeScrollVectorForPosition(param0: number): globalAndroid.graphics.PointF;
                    public constructor();
                    public onStop(): void;
                    public calculateDtToFit(param0: number, param1: number, param2: number, param3: number, param4: number): number;
                    public calculateTimeForDeceleration(param0: number): number;
                    public getVerticalSnapPreference(): number;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class LockPatternChecker extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.widget.LockPatternChecker>;
                    public static checkPattern(param0: com.android.internal.widget.LockPatternUtils, param1: java.util.List<com.android.internal.widget.LockPatternView.Cell>, param2: number, param3: com.android.internal.widget.LockPatternChecker.OnCheckCallback): globalAndroid.os.AsyncTask<any, any, any>;
                    public static checkPassword(param0: com.android.internal.widget.LockPatternUtils, param1: string, param2: number, param3: com.android.internal.widget.LockPatternChecker.OnCheckCallback): globalAndroid.os.AsyncTask<any, any, any>;
                    public constructor();
                    public static verifyTiedProfileChallenge(param0: com.android.internal.widget.LockPatternUtils, param1: string, param2: boolean, param3: number, param4: number, param5: com.android.internal.widget.LockPatternChecker.OnVerifyCallback): globalAndroid.os.AsyncTask<any, any, any>;
                    public static verifyPattern(param0: com.android.internal.widget.LockPatternUtils, param1: java.util.List<com.android.internal.widget.LockPatternView.Cell>, param2: number, param3: number, param4: com.android.internal.widget.LockPatternChecker.OnVerifyCallback): globalAndroid.os.AsyncTask<any, any, any>;
                    public static verifyPassword(param0: com.android.internal.widget.LockPatternUtils, param1: string, param2: number, param3: number, param4: com.android.internal.widget.LockPatternChecker.OnVerifyCallback): globalAndroid.os.AsyncTask<any, any, any>;
                }
                export module LockPatternChecker {
                    export class OnCheckCallback extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.LockPatternChecker.OnCheckCallback>;
                        /**
                         * Constructs a new instance of the com.android.internal.widget.LockPatternChecker$OnCheckCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            onCancelled(): void;
                            onChecked(param0: boolean, param1: number): void;
                            onEarlyMatched(): void;
                        });
                        public constructor();
                        public onEarlyMatched(): void;
                        public onCancelled(): void;
                        public onChecked(param0: boolean, param1: number): void;
                    }
                    export class OnVerifyCallback extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.LockPatternChecker.OnVerifyCallback>;
                        /**
                         * Constructs a new instance of the com.android.internal.widget.LockPatternChecker$OnVerifyCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            onVerified(param0: number[], param1: number): void;
                        });
                        public constructor();
                        public onVerified(param0: number[], param1: number): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class LockPatternUtils extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.widget.LockPatternUtils>;
                    public static BIOMETRIC_WEAK_EVER_CHOSEN_KEY: string;
                    public static CREDENTIAL_TYPE_NONE: number;
                    public static CREDENTIAL_TYPE_PASSWORD: number;
                    public static CREDENTIAL_TYPE_PATTERN: number;
                    public static DISABLE_LOCKSCREEN_KEY: string;
                    public static FAILED_ATTEMPTS_BEFORE_RESET: number;
                    public static FAILED_ATTEMPTS_BEFORE_WIPE_GRACE: number;
                    public static FAILED_ATTEMPT_COUNTDOWN_INTERVAL_MS: number;
                    public static LEGACY_LOCK_PATTERN_ENABLED: string;
                    public static LOCKOUT_ATTEMPT_DEADLINE: string;
                    public static LOCKOUT_ATTEMPT_TIMEOUT_MS: string;
                    public static LOCKOUT_PERMANENT_KEY: string;
                    public static LOCKSCREEN_BIOMETRIC_WEAK_FALLBACK: string;
                    public static LOCKSCREEN_OPTIONS: string;
                    public static LOCKSCREEN_POWER_BUTTON_INSTANTLY_LOCKS: string;
                    public static LOCKSCREEN_WIDGETS_ENABLED: string;
                    public static LOCK_PASSWORD_SALT_KEY: string;
                    public static MIN_LOCK_PASSWORD_SIZE: number;
                    public static MIN_LOCK_PATTERN_SIZE: number;
                    public static MIN_PATTERN_REGISTER_FAIL: number;
                    public static PASSWORD_HISTORY_KEY: string;
                    public static PASSWORD_TYPE_ALTERNATE_KEY: string;
                    public static PASSWORD_TYPE_KEY: string;
                    public static PATTERN_EVER_CHOSEN_KEY: string;
                    public static PROFILE_KEY_NAME_DECRYPT: string;
                    public static PROFILE_KEY_NAME_ENCRYPT: string;
                    public static SYNTHETIC_PASSWORD_ENABLED_KEY: string;
                    public static SYNTHETIC_PASSWORD_HANDLE_KEY: string;
                    public static SYNTHETIC_PASSWORD_KEY_PREFIX: string;
                    public addEscrowToken(param0: number[], param1: number): number;
                    public setDeviceOwnerInfo(param0: string): void;
                    public getKeyguardStoredPasswordQuality(param0: number): number;
                    public getCurrentFailedPasswordAttempts(param0: number): number;
                    public getPowerButtonInstantlyLocks(param0: number): boolean;
                    public getRequestedPasswordMinimumNumeric(param0: number): number;
                    public isTrustUsuallyManaged(param0: number): boolean;
                    public static patternToString(param0: java.util.List<com.android.internal.widget.LockPatternView.Cell>): string;
                    public reportSuccessfulRecoveryPasswordAttempt(param0: number): void;
                    public userPresent(param0: number): void;
                    public setVisiblePasswordEnabled(param0: boolean, param1: number): void;
                    public getRequestedPasswordMinimumUpperCase(param0: number): number;
                    public checkRecoveryPassword(param0: string, param1: number): boolean;
                    public isLegacyLockPatternEnabled(param0: number): boolean;
                    public setOwnerInfo(param0: string, param1: number): void;
                    public static patternStringToBaseZero(param0: string): string;
                    public verifyPassword(param0: string, param1: number, param2: number): number[];
                    public isPasswordSimple(param0: string): boolean;
                    public saveRecoveryPassword(param0: string, param1: number): boolean;
                    public enableSyntheticPassword(): void;
                    public removeEscrowToken(param0: number, param1: number): boolean;
                    public saveLockPattern(param0: java.util.List<com.android.internal.widget.LockPatternView.Cell>, param1: number): void;
                    public verifyTiedProfileChallenge(param0: string, param1: boolean, param2: number, param3: number): number[];
                    public checkPassword(param0: string, param1: number, param2: com.android.internal.widget.LockPatternUtils.CheckCredentialProgressCallback): boolean;
                    public getSomcDevicePolicyManager(): com.sonymobile.enterprise.admin.SomcDevicePolicyManager;
                    public reportPasswordLockout(param0: number, param1: number): void;
                    public isCredentialRequiredToDecrypt(param0: boolean): boolean;
                    public passwordToHash(param0: string, param1: number): number[];
                    public getEnabledTrustAgents(param0: number): java.util.List<globalAndroid.content.ComponentName>;
                    public getRequestedSimplePasswordRestricted(param0: number): boolean;
                    public setCredentialRequiredToDecrypt(param0: boolean): void;
                    public saveLockPattern(param0: java.util.List<com.android.internal.widget.LockPatternView.Cell>, param1: string, param2: number): void;
                    public setLegacyLockPatternEnabled(param0: number): void;
                    public getRequestedPasswordMinimumNonLetter(param0: number): number;
                    public requireStrongAuth(param0: number, param1: number): void;
                    public setLockCredentialWithToken(param0: string, param1: number, param2: number, param3: number[], param4: number): boolean;
                    public isLockScreenDisabled(param0: number): boolean;
                    public saveLockPassword(param0: string, param1: string, param2: number, param3: number): void;
                    public getStrongAuthForUser(param0: number): number;
                    public isVisiblePatternEnabled(param0: number): boolean;
                    public getLockoutAttemptDeadline(param0: number): number;
                    public reportSuccessfulPasswordAttempt(param0: number): void;
                    public isLockPatternEnabled(param0: number): boolean;
                    public setSeparateProfileChallengeEnabled(param0: number, param1: boolean, param2: string): void;
                    public checkVoldPassword(param0: number): boolean;
                    public setEnabledTrustAgents(param0: java.util.Collection<globalAndroid.content.ComponentName>, param1: number): void;
                    public setOwnerInfoEnabled(param0: boolean, param1: number): void;
                    public isLockPasswordEnabled(param0: number): boolean;
                    public isSyntheticPasswordEnabled(): boolean;
                    public sanitizePassword(): void;
                    public getDeviceOwnerInfo(): string;
                    public getDevicePolicyManager(): globalAndroid.app.admin.DevicePolicyManager;
                    public unlockUserWithToken(param0: number, param1: number[], param2: number): void;
                    public setPowerButtonInstantlyLocks(param0: boolean, param1: number): void;
                    public clearLock(param0: string, param1: number): void;
                    public isTrustAllowedForUser(param0: number): boolean;
                    public setLockoutAttemptDeadline(param0: number, param1: number): number;
                    public static patternToHash(param0: java.util.List<com.android.internal.widget.LockPatternView.Cell>): number[];
                    public getLockSettings(): com.android.internal.widget.ILockSettings;
                    public resetKeyStore(param0: number): void;
                    public isSeparateProfileChallengeEnabled(param0: number): boolean;
                    public isTactileFeedbackEnabled(): boolean;
                    public setVisiblePatternEnabled(param0: boolean, param1: number): void;
                    public getRequestedPasswordQuality(param0: number): number;
                    public registerStrongAuthTracker(param0: com.android.internal.widget.LockPatternUtils.StrongAuthTracker): void;
                    public getRequestedPasswordMinimumSymbols(param0: number): number;
                    public checkPattern(param0: java.util.List<com.android.internal.widget.LockPatternView.Cell>, param1: number): boolean;
                    public isFingerprintAllowedForUser(param0: number): boolean;
                    public getMaximumFailedPasswordsForWipe(param0: number): number;
                    public isPatternEverChosen(param0: number): boolean;
                    public getOwnerInfo(param0: number): string;
                    public isSecure(param0: number): boolean;
                    public checkPassword(param0: string, param1: number): boolean;
                    public setTrustUsuallyManaged(param0: boolean, param1: number): void;
                    public isEscrowTokenActive(param0: number, param1: number): boolean;
                    public static isDeviceEncryptionEnabled(): boolean;
                    public getActivePasswordQuality(param0: number): number;
                    public checkPasswordHistory(param0: string, param1: number): boolean;
                    public isOwnerInfoEnabled(param0: number): boolean;
                    public unregisterStrongAuthTracker(param0: com.android.internal.widget.LockPatternUtils.StrongAuthTracker): void;
                    public constructor(param0: globalAndroid.content.Context);
                    public isDeviceOwnerInfoEnabled(): boolean;
                    public getRequestedMinimumPasswordLength(param0: number): number;
                    public getRequestedPasswordMinimumLowerCase(param0: number): number;
                    public static isFileEncryptionEnabled(): boolean;
                    public setLockScreenDisabled(param0: boolean, param1: number): void;
                    public clearEncryptionPassword(): void;
                    public checkPattern(param0: java.util.List<com.android.internal.widget.LockPatternView.Cell>, param1: number, param2: com.android.internal.widget.LockPatternUtils.CheckCredentialProgressCallback): boolean;
                    public isSeparateProfileChallengeAllowed(param0: number): boolean;
                    public reportFailedPasswordAttempt(param0: number): void;
                    public verifyPattern(param0: java.util.List<com.android.internal.widget.LockPatternView.Cell>, param1: number, param2: number): number[];
                    public isSeparateProfileChallengeAllowedToUnify(param0: number): boolean;
                    public requireCredentialEntry(param0: number): void;
                    public getRequestedPasswordMinimumLetters(param0: number): number;
                    public static stringToPattern(param0: string): java.util.List<com.android.internal.widget.LockPatternView.Cell>;
                }
                export module LockPatternUtils {
                    export class CheckCredentialProgressCallback extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.LockPatternUtils.CheckCredentialProgressCallback>;
                        /**
                         * Constructs a new instance of the com.android.internal.widget.LockPatternUtils$CheckCredentialProgressCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            onEarlyMatched(): void;
                        });
                        public constructor();
                        public onEarlyMatched(): void;
                    }
                    export class RequestThrottledException extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.LockPatternUtils.RequestThrottledException>;
                        public constructor(param0: number);
                        public getTimeoutMs(): number;
                    }
                    export class StrongAuthTracker extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.LockPatternUtils.StrongAuthTracker>;
                        public static SOME_AUTH_REQUIRED_AFTER_USER_REQUEST: number;
                        public static STRONG_AUTH_NOT_REQUIRED: number;
                        public static STRONG_AUTH_REQUIRED_AFTER_BOOT: number;
                        public static STRONG_AUTH_REQUIRED_AFTER_DPM_LOCK_NOW: number;
                        public static STRONG_AUTH_REQUIRED_AFTER_LOCKOUT: number;
                        public static STRONG_AUTH_REQUIRED_AFTER_TIMEOUT: number;
                        public static STRONG_AUTH_REQUIRED_AFTER_USER_STOPPED: number;
                        public mStub: globalAndroid.app.trust.IStrongAuthTracker.Stub;
                        public onStrongAuthRequiredChanged(param0: number): void;
                        public constructor(param0: globalAndroid.content.Context);
                        public getStrongAuthForUser(param0: number): number;
                        public static getDefaultFlags(param0: globalAndroid.content.Context): number;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.os.Looper);
                        public isFingerprintAllowedForUser(param0: number): boolean;
                        public isTrustAllowedForUser(param0: number): boolean;
                        public handleStrongAuthRequiredChanged(param0: number, param1: number): void;
                    }
                    export module StrongAuthTracker {
                        export class H extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.widget.LockPatternUtils.StrongAuthTracker.H>;
                            public handleMessage(param0: globalAndroid.os.Message): void;
                            public constructor(param0: com.android.internal.widget.LockPatternUtils.StrongAuthTracker, param1: globalAndroid.os.Looper);
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class LockPatternView extends globalAndroid.view.View {
                    public static class: java.lang.Class<com.android.internal.widget.LockPatternView>;
                    public static DEBUG_A11Y: boolean;
                    public static VIRTUAL_BASE_VIEW_ID: number;
                    public getCellStates(): com.android.internal.widget.LockPatternView.CellState[][];
                    public setTactileFeedbackEnabled(param0: boolean): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public onHoverEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public setOnPatternListener(param0: com.android.internal.widget.LockPatternView.OnPatternListener): void;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public isTactileFeedbackEnabled(): boolean;
                    public sendAccessibilityEvent(param0: number): void;
                    public enableInput(): void;
                    public clearPattern(): void;
                    public onMeasure(param0: number, param1: number): void;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public onDraw(param0: globalAndroid.graphics.Canvas): void;
                    public setInStealthMode(param0: boolean): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public onSizeChanged(param0: number, param1: number, param2: number, param3: number): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context);
                    public setDisplayMode(param0: com.android.internal.widget.LockPatternView.DisplayMode): void;
                    public isInStealthMode(): boolean;
                    public setPattern(param0: com.android.internal.widget.LockPatternView.DisplayMode, param1: java.util.List<com.android.internal.widget.LockPatternView.Cell>): void;
                    public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
                    public startCellStateAnimation(param0: com.android.internal.widget.LockPatternView.CellState, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: number, param9: globalAndroid.view.animation.Interpolator, param10: java.lang.Runnable): void;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public onSaveInstanceState(): globalAndroid.os.Parcelable;
                    public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public updateColors(param0: number, param1: number, param2: number): void;
                    public dispatchHoverEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public disableInput(): void;
                }
                export module LockPatternView {
                    export class Cell extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.LockPatternView.Cell>;
                        public static of(param0: number, param1: number): com.android.internal.widget.LockPatternView.Cell;
                        public getRow(): number;
                        public getColumn(): number;
                        public toString(): string;
                    }
                    export class CellState extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.LockPatternView.CellState>;
                        public lineAnimator: globalAndroid.animation.ValueAnimator;
                        public lineEndX: number;
                        public lineEndY: number;
                        public constructor();
                    }
                    export class DisplayMode extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.LockPatternView.DisplayMode>;
                        public static Animate: com.android.internal.widget.LockPatternView.DisplayMode;
                        public static Correct: com.android.internal.widget.LockPatternView.DisplayMode;
                        public static Wrong: com.android.internal.widget.LockPatternView.DisplayMode;
                        public static valueOf(param0: string): com.android.internal.widget.LockPatternView.DisplayMode;
                        public static values(): com.android.internal.widget.LockPatternView.DisplayMode[];
                    }
                    export class OnPatternListener extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.LockPatternView.OnPatternListener>;
                        /**
                         * Constructs a new instance of the com.android.internal.widget.LockPatternView$OnPatternListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            onPatternCellAdded(param0: java.util.List<com.android.internal.widget.LockPatternView.Cell>): void;
                            onPatternCleared(): void;
                            onPatternDetected(param0: java.util.List<com.android.internal.widget.LockPatternView.Cell>): void;
                            onPatternStart(): void;
                        });
                        public constructor();
                        public onPatternDetected(param0: java.util.List<com.android.internal.widget.LockPatternView.Cell>): void;
                        public onPatternStart(): void;
                        public onPatternCellAdded(param0: java.util.List<com.android.internal.widget.LockPatternView.Cell>): void;
                        public onPatternCleared(): void;
                    }
                    export class PatternExploreByTouchHelper extends com.android.internal.widget.ExploreByTouchHelper {
                        public static class: java.lang.Class<com.android.internal.widget.LockPatternView.PatternExploreByTouchHelper>;
                        public constructor(param0: com.android.internal.widget.LockPatternView, param1: globalAndroid.view.View);
                        public getVirtualViewAt(param0: number, param1: number): number;
                        public constructor();
                        public onPopulateEventForVirtualView(param0: number, param1: globalAndroid.view.accessibility.AccessibilityEvent): void;
                        public constructor(param0: globalAndroid.view.View);
                        public getVisibleVirtualViews(param0: globalAndroid.util.IntArray): void;
                        public onPerformActionForVirtualView(param0: number, param1: number, param2: globalAndroid.os.Bundle): boolean;
                        public onPopulateNodeForVirtualView(param0: number, param1: globalAndroid.view.accessibility.AccessibilityNodeInfo): void;
                        public onPopulateAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    }
                    export module PatternExploreByTouchHelper {
                        export class VirtualViewContainer extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.widget.LockPatternView.PatternExploreByTouchHelper.VirtualViewContainer>;
                            public constructor(param0: com.android.internal.widget.LockPatternView.PatternExploreByTouchHelper, param1: string);
                        }
                    }
                    export class SavedState extends globalAndroid.view.View.BaseSavedState {
                        public static class: java.lang.Class<com.android.internal.widget.LockPatternView.SavedState>;
                        public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.widget.LockPatternView.SavedState>;
                        public isTactileFeedbackEnabled(): boolean;
                        public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                        public getDisplayMode(): number;
                        public getSerializedPattern(): string;
                        public isInputEnabled(): boolean;
                        public isInStealthMode(): boolean;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class LockScreenWidgetCallback extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.widget.LockScreenWidgetCallback>;
                    /**
                     * Constructs a new instance of the com.android.internal.widget.LockScreenWidgetCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        isVisible(param0: globalAndroid.view.View): boolean;
                        requestHide(param0: globalAndroid.view.View): void;
                        requestShow(param0: globalAndroid.view.View): void;
                        userActivity(param0: globalAndroid.view.View): void;
                    });
                    public constructor();
                    public requestShow(param0: globalAndroid.view.View): void;
                    public requestHide(param0: globalAndroid.view.View): void;
                    public isVisible(param0: globalAndroid.view.View): boolean;
                    public userActivity(param0: globalAndroid.view.View): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class LockScreenWidgetInterface extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.widget.LockScreenWidgetInterface>;
                    /**
                     * Constructs a new instance of the com.android.internal.widget.LockScreenWidgetInterface interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        providesClock(): boolean;
                        setCallback(param0: com.android.internal.widget.LockScreenWidgetCallback): void;
                    });
                    public constructor();
                    public setCallback(param0: com.android.internal.widget.LockScreenWidgetCallback): void;
                    public providesClock(): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class MediaNotificationView extends globalAndroid.widget.FrameLayout {
                    public static class: java.lang.Class<com.android.internal.widget.MediaNotificationView>;
                    public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                    public focusSearch(param0: number): globalAndroid.view.View;
                    public focusableViewAvailable(param0: globalAndroid.view.View): void;
                    public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                    public isLayoutRequested(): boolean;
                    public isTextDirectionResolved(): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public isLayoutDirectionResolved(): boolean;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public addView(param0: globalAndroid.view.View): void;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                    public clearChildFocus(param0: globalAndroid.view.View): void;
                    public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                    public getLayoutDirection(): number;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                    public bringChildToFront(param0: globalAndroid.view.View): void;
                    public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public requestTransparentRegion(param0: globalAndroid.view.View): void;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                    public getTextDirection(): number;
                    public requestFitSystemWindows(): void;
                    public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public getParent(): globalAndroid.view.ViewParent;
                    public isTextAlignmentResolved(): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                    public canResolveTextAlignment(): boolean;
                    public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                    public canResolveTextDirection(): boolean;
                    public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                    public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                    public requestDisallowInterceptTouchEvent(param0: boolean): void;
                    public addView(param0: globalAndroid.view.View, param1: number): void;
                    public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                    public onFinishInflate(): void;
                    public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public requestLayout(): void;
                    public getParentForAccessibility(): globalAndroid.view.ViewParent;
                    public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                    public onMeasure(param0: number, param1: number): void;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public canResolveLayoutDirection(): boolean;
                    public getTextAlignment(): number;
                    public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public removeView(param0: globalAndroid.view.View): void;
                    public constructor(param0: globalAndroid.content.Context);
                    public onStopNestedScroll(param0: globalAndroid.view.View): void;
                    public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                    public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class MessagingLinearLayout extends globalAndroid.view.ViewGroup {
                    public static class: java.lang.Class<com.android.internal.widget.MessagingLinearLayout>;
                    public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                    public focusSearch(param0: number): globalAndroid.view.View;
                    public focusableViewAvailable(param0: globalAndroid.view.View): void;
                    public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                    public isLayoutRequested(): boolean;
                    public generateLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): globalAndroid.view.ViewGroup.LayoutParams;
                    public isTextDirectionResolved(): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public isLayoutDirectionResolved(): boolean;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public getContractedChildId(): number;
                    public addView(param0: globalAndroid.view.View): void;
                    public drawChild(param0: globalAndroid.graphics.Canvas, param1: globalAndroid.view.View, param2: number): boolean;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                    public clearChildFocus(param0: globalAndroid.view.View): void;
                    public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                    public getLayoutDirection(): number;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                    public bringChildToFront(param0: globalAndroid.view.View): void;
                    public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public requestTransparentRegion(param0: globalAndroid.view.View): void;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                    public getTextDirection(): number;
                    public requestFitSystemWindows(): void;
                    public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public getParent(): globalAndroid.view.ViewParent;
                    public isTextAlignmentResolved(): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                    public canResolveTextAlignment(): boolean;
                    public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                    public generateLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): com.android.internal.widget.MessagingLinearLayout.LayoutParams;
                    public canResolveTextDirection(): boolean;
                    public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                    public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                    public requestDisallowInterceptTouchEvent(param0: boolean): void;
                    public generateDefaultLayoutParams(): globalAndroid.view.ViewGroup.LayoutParams;
                    public addView(param0: globalAndroid.view.View, param1: number): void;
                    public setNumIndentLines(param0: number): void;
                    public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                    public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public requestLayout(): void;
                    public getParentForAccessibility(): globalAndroid.view.ViewParent;
                    public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                    public generateLayoutParams(param0: globalAndroid.util.AttributeSet): com.android.internal.widget.MessagingLinearLayout.LayoutParams;
                    public onMeasure(param0: number, param1: number): void;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public canResolveLayoutDirection(): boolean;
                    public getTextAlignment(): number;
                    public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public generateLayoutParams(param0: globalAndroid.util.AttributeSet): globalAndroid.view.ViewGroup.LayoutParams;
                    public generateDefaultLayoutParams(): com.android.internal.widget.MessagingLinearLayout.LayoutParams;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public removeView(param0: globalAndroid.view.View): void;
                    public setContractedChildId(param0: number): void;
                    public constructor(param0: globalAndroid.content.Context);
                    public onStopNestedScroll(param0: globalAndroid.view.View): void;
                    public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                    public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                }
                export module MessagingLinearLayout {
                    export class LayoutParams extends globalAndroid.view.ViewGroup.MarginLayoutParams {
                        public static class: java.lang.Class<com.android.internal.widget.MessagingLinearLayout.LayoutParams>;
                        public constructor(param0: globalAndroid.view.ViewGroup.LayoutParams);
                        public constructor(param0: globalAndroid.view.ViewGroup.MarginLayoutParams);
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                        public constructor(param0: number, param1: number);
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class NestedScrollingChild extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.widget.NestedScrollingChild>;
                    /**
                     * Constructs a new instance of the com.android.internal.widget.NestedScrollingChild interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        dispatchNestedFling(param0: number, param1: number, param2: boolean): boolean;
                        dispatchNestedPreFling(param0: number, param1: number): boolean;
                        dispatchNestedPreScroll(param0: number, param1: number, param2: number[], param3: number[]): boolean;
                        dispatchNestedScroll(param0: number, param1: number, param2: number, param3: number, param4: number[]): boolean;
                        hasNestedScrollingParent(): boolean;
                        isNestedScrollingEnabled(): boolean;
                        setNestedScrollingEnabled(param0: boolean): void;
                        startNestedScroll(param0: number): boolean;
                        stopNestedScroll(): void;
                    });
                    public constructor();
                    public dispatchNestedScroll(param0: number, param1: number, param2: number, param3: number, param4: number[]): boolean;
                    public dispatchNestedFling(param0: number, param1: number, param2: boolean): boolean;
                    public isNestedScrollingEnabled(): boolean;
                    public dispatchNestedPreScroll(param0: number, param1: number, param2: number[], param3: number[]): boolean;
                    public stopNestedScroll(): void;
                    public dispatchNestedPreFling(param0: number, param1: number): boolean;
                    public setNestedScrollingEnabled(param0: boolean): void;
                    public startNestedScroll(param0: number): boolean;
                    public hasNestedScrollingParent(): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class NotificationActionListLayout extends globalAndroid.widget.LinearLayout {
                    public static class: java.lang.Class<com.android.internal.widget.NotificationActionListLayout>;
                    public static MEASURE_ORDER_COMPARATOR: java.util.Comparator<globalAndroid.util.Pair<java.lang.Integer, globalAndroid.widget.TextView>>;
                    public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                    public focusSearch(param0: number): globalAndroid.view.View;
                    public focusableViewAvailable(param0: globalAndroid.view.View): void;
                    public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                    public isLayoutRequested(): boolean;
                    public onViewRemoved(param0: globalAndroid.view.View): void;
                    public isTextDirectionResolved(): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public isLayoutDirectionResolved(): boolean;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public addView(param0: globalAndroid.view.View): void;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                    public clearChildFocus(param0: globalAndroid.view.View): void;
                    public setEmphasizedMode(param0: boolean): void;
                    public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                    public getLayoutDirection(): number;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                    public bringChildToFront(param0: globalAndroid.view.View): void;
                    public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public requestTransparentRegion(param0: globalAndroid.view.View): void;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                    public getTextDirection(): number;
                    public requestFitSystemWindows(): void;
                    public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public getParent(): globalAndroid.view.ViewParent;
                    public isTextAlignmentResolved(): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                    public canResolveTextAlignment(): boolean;
                    public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                    public canResolveTextDirection(): boolean;
                    public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                    public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                    public requestDisallowInterceptTouchEvent(param0: boolean): void;
                    public addView(param0: globalAndroid.view.View, param1: number): void;
                    public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                    public onFinishInflate(): void;
                    public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public requestLayout(): void;
                    public getParentForAccessibility(): globalAndroid.view.ViewParent;
                    public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                    public onMeasure(param0: number, param1: number): void;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public onViewAdded(param0: globalAndroid.view.View): void;
                    public canResolveLayoutDirection(): boolean;
                    public getTextAlignment(): number;
                    public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public removeView(param0: globalAndroid.view.View): void;
                    public constructor(param0: globalAndroid.content.Context);
                    public onStopNestedScroll(param0: globalAndroid.view.View): void;
                    public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                    public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class NotificationExpandButton extends globalAndroid.widget.ImageView {
                    public static class: java.lang.Class<com.android.internal.widget.NotificationExpandButton>;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public setLabeledBy(param0: globalAndroid.view.View): void;
                    public getBoundsOnScreen(param0: globalAndroid.graphics.Rect, param1: boolean): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context);
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public getBoundsOnScreen(param0: globalAndroid.graphics.Rect): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public onInitializeAccessibilityNodeInfo(param0: globalAndroid.view.accessibility.AccessibilityNodeInfo): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class NumericTextView extends globalAndroid.widget.TextView {
                    public static class: java.lang.Class<com.android.internal.widget.NumericTextView>;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public onPreDraw(): boolean;
                    public setOnDigitEnteredListener(param0: com.android.internal.widget.NumericTextView.OnValueChangedListener): void;
                    public setRange(param0: number, param1: number): void;
                    public getOnDigitEnteredListener(): com.android.internal.widget.NumericTextView.OnValueChangedListener;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public setShowLeadingZeroes(param0: boolean): void;
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public getRangeMaximum(): number;
                    public constructor(param0: globalAndroid.content.Context);
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public getValue(): number;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public setValue(param0: number): void;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public getRangeMinimum(): number;
                    public onFocusChanged(param0: boolean, param1: number, param2: globalAndroid.graphics.Rect): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public getShowLeadingZeroes(): boolean;
                }
                export module NumericTextView {
                    export class OnValueChangedListener extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.NumericTextView.OnValueChangedListener>;
                        /**
                         * Constructs a new instance of the com.android.internal.widget.NumericTextView$OnValueChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            onValueChanged(param0: com.android.internal.widget.NumericTextView, param1: number, param2: boolean, param3: boolean): void;
                        });
                        public constructor();
                        public onValueChanged(param0: com.android.internal.widget.NumericTextView, param1: number, param2: boolean, param3: boolean): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class OpReorderer extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.widget.OpReorderer>;
                }
                export module OpReorderer {
                    export class Callback extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.OpReorderer.Callback>;
                        /**
                         * Constructs a new instance of the com.android.internal.widget.OpReorderer$Callback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            obtainUpdateOp(param0: number, param1: number, param2: number, param3: any): com.android.internal.widget.AdapterHelper.UpdateOp;
                            recycleUpdateOp(param0: com.android.internal.widget.AdapterHelper.UpdateOp): void;
                        });
                        public constructor();
                        public obtainUpdateOp(param0: number, param1: number, param2: number, param3: any): com.android.internal.widget.AdapterHelper.UpdateOp;
                        public recycleUpdateOp(param0: com.android.internal.widget.AdapterHelper.UpdateOp): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export abstract class OrientationHelper {
                    public static class: java.lang.Class<com.android.internal.widget.OrientationHelper>;
                    public static HORIZONTAL: number;
                    public static VERTICAL: number;
                    public mLayoutManager: com.android.internal.widget.RecyclerView.LayoutManager;
                    public getTotalSpace(): number;
                    public getDecoratedMeasurementInOther(param0: globalAndroid.view.View): number;
                    public getEnd(): number;
                    public static createOrientationHelper(param0: com.android.internal.widget.RecyclerView.LayoutManager, param1: number): com.android.internal.widget.OrientationHelper;
                    public getTotalSpaceChange(): number;
                    public getTransformedStartWithDecoration(param0: globalAndroid.view.View): number;
                    public getDecoratedEnd(param0: globalAndroid.view.View): number;
                    public getEndAfterPadding(): number;
                    public getDecoratedMeasurement(param0: globalAndroid.view.View): number;
                    public getEndPadding(): number;
                    public offsetChild(param0: globalAndroid.view.View, param1: number): void;
                    public getStartAfterPadding(): number;
                    public static createHorizontalHelper(param0: com.android.internal.widget.RecyclerView.LayoutManager): com.android.internal.widget.OrientationHelper;
                    public offsetChildren(param0: number): void;
                    public static createVerticalHelper(param0: com.android.internal.widget.RecyclerView.LayoutManager): com.android.internal.widget.OrientationHelper;
                    public getTransformedEndWithDecoration(param0: globalAndroid.view.View): number;
                    public getMode(): number;
                    public onLayoutComplete(): void;
                    public getModeInOther(): number;
                    public getDecoratedStart(param0: globalAndroid.view.View): number;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export abstract class PagerAdapter {
                    public static class: java.lang.Class<com.android.internal.widget.PagerAdapter>;
                    public static POSITION_NONE: number;
                    public static POSITION_UNCHANGED: number;
                    public registerDataSetObserver(param0: globalAndroid.database.DataSetObserver): void;
                    public startUpdate(param0: globalAndroid.view.ViewGroup): void;
                    public destroyItem(param0: globalAndroid.view.View, param1: number, param2: any): void;
                    public getCount(): number;
                    public setPrimaryItem(param0: globalAndroid.view.ViewGroup, param1: number, param2: any): void;
                    public destroyItem(param0: globalAndroid.view.ViewGroup, param1: number, param2: any): void;
                    public getPageTitle(param0: number): string;
                    public getPageWidth(param0: number): number;
                    public isViewFromObject(param0: globalAndroid.view.View, param1: any): boolean;
                    public finishUpdate(param0: globalAndroid.view.ViewGroup): void;
                    public notifyDataSetChanged(): void;
                    public getItemPosition(param0: any): number;
                    public restoreState(param0: globalAndroid.os.Parcelable, param1: java.lang.ClassLoader): void;
                    public setPrimaryItem(param0: globalAndroid.view.View, param1: number, param2: any): void;
                    public instantiateItem(param0: globalAndroid.view.ViewGroup, param1: number): any;
                    public constructor();
                    public finishUpdate(param0: globalAndroid.view.View): void;
                    public startUpdate(param0: globalAndroid.view.View): void;
                    public unregisterDataSetObserver(param0: globalAndroid.database.DataSetObserver): void;
                    public saveState(): globalAndroid.os.Parcelable;
                    public instantiateItem(param0: globalAndroid.view.View, param1: number): any;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class PointerLocationView extends globalAndroid.view.View implements globalAndroid.view.WindowManagerPolicy.PointerEventListener {
                    public static class: java.lang.Class<com.android.internal.widget.PointerLocationView>;
                    public onDetachedFromWindow(): void;
                    public onTrackballEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public onMeasure(param0: number, param1: number): void;
                    public onDraw(param0: globalAndroid.graphics.Canvas): void;
                    public onPointerEvent(param0: globalAndroid.view.MotionEvent): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public onAttachedToWindow(): void;
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context);
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public setPrintCoords(param0: boolean): void;
                    public onInputDeviceRemoved(param0: number): void;
                    public onInputDeviceAdded(param0: number): void;
                    public onGenericMotionEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public sendAccessibilityEvent(param0: number): void;
                    public onInputDeviceChanged(param0: number): void;
                }
                export module PointerLocationView {
                    export class FasterStringBuilder extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.PointerLocationView.FasterStringBuilder>;
                        public append(param0: number): com.android.internal.widget.PointerLocationView.FasterStringBuilder;
                        public constructor();
                        public clear(): com.android.internal.widget.PointerLocationView.FasterStringBuilder;
                        public append(param0: string): com.android.internal.widget.PointerLocationView.FasterStringBuilder;
                        public append(param0: number, param1: number): com.android.internal.widget.PointerLocationView.FasterStringBuilder;
                        public toString(): string;
                    }
                    export class PointerState extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.PointerLocationView.PointerState>;
                        public constructor();
                        public clearTrace(): void;
                        public addTrace(param0: number, param1: number, param2: boolean): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class PreferenceImageView extends globalAndroid.widget.ImageView {
                    public static class: java.lang.Class<com.android.internal.widget.PreferenceImageView>;
                    public constructor(param0: globalAndroid.content.Context);
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public onMeasure(param0: number, param1: number): void;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class RecyclerView extends globalAndroid.view.ViewGroup implements com.android.internal.widget.ScrollingView, com.android.internal.widget.NestedScrollingChild {
                    public static class: java.lang.Class<com.android.internal.widget.RecyclerView>;
                    public static HORIZONTAL: number;
                    public static INVALID_TYPE: number;
                    public static NO_ID: number;
                    public static NO_POSITION: number;
                    public static SCROLL_STATE_DRAGGING: number;
                    public static SCROLL_STATE_IDLE: number;
                    public static SCROLL_STATE_SETTLING: number;
                    public static TOUCH_SLOP_DEFAULT: number;
                    public static TOUCH_SLOP_PAGING: number;
                    public static VERTICAL: number;
                    public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                    public setOnFlingListener(param0: com.android.internal.widget.RecyclerView.OnFlingListener): void;
                    public getChildDrawingOrder(param0: number, param1: number): number;
                    public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                    public setAdapter(param0: com.android.internal.widget.RecyclerView.Adapter<any>): void;
                    public scrollToPosition(param0: number): void;
                    public isTextDirectionResolved(): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public addOnScrollListener(param0: com.android.internal.widget.RecyclerView.OnScrollListener): void;
                    public getDecoratedBoundsWithMargins(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                    public stopNestedScroll(): void;
                    public getChildPosition(param0: globalAndroid.view.View): number;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public addView(param0: globalAndroid.view.View): void;
                    public computeHorizontalScrollExtent(): number;
                    public setViewCacheExtension(param0: com.android.internal.widget.RecyclerView.ViewCacheExtension): void;
                    public drawChild(param0: globalAndroid.graphics.Canvas, param1: globalAndroid.view.View, param2: number): boolean;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public getMinFlingVelocity(): number;
                    public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public clearChildFocus(param0: globalAndroid.view.View): void;
                    public getLayoutManager(): com.android.internal.widget.RecyclerView.LayoutManager;
                    public getChildItemId(param0: globalAndroid.view.View): number;
                    public offsetChildrenHorizontal(param0: number): void;
                    public isComputingLayout(): boolean;
                    public getLayoutDirection(): number;
                    public getChildViewHolder(param0: globalAndroid.view.View): com.android.internal.widget.RecyclerView.ViewHolder;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                    public offsetChildrenVertical(param0: number): void;
                    public dispatchNestedFling(param0: number, param1: number, param2: boolean): boolean;
                    public findViewHolderForPosition(param0: number): com.android.internal.widget.RecyclerView.ViewHolder;
                    public getPreserveFocusAfterLayout(): boolean;
                    public requestTransparentRegion(param0: globalAndroid.view.View): void;
                    public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
                    public setScrollingTouchSlop(param0: number): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public onSaveInstanceState(): globalAndroid.os.Parcelable;
                    public addItemDecoration(param0: com.android.internal.widget.RecyclerView.ItemDecoration): void;
                    public scrollTo(param0: number, param1: number): void;
                    public dispatchRestoreInstanceState(param0: globalAndroid.util.SparseArray<globalAndroid.os.Parcelable>): void;
                    public findContainingItemView(param0: globalAndroid.view.View): globalAndroid.view.View;
                    public getChildLayoutPosition(param0: globalAndroid.view.View): number;
                    public getParent(): globalAndroid.view.ViewParent;
                    public isTextAlignmentResolved(): boolean;
                    public invalidateItemDecorations(): void;
                    public isAnimating(): boolean;
                    public setRecycledViewPool(param0: com.android.internal.widget.RecyclerView.RecycledViewPool): void;
                    public canResolveTextAlignment(): boolean;
                    public addItemDecoration(param0: com.android.internal.widget.RecyclerView.ItemDecoration, param1: number): void;
                    public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                    public setChildDrawingOrderCallback(param0: com.android.internal.widget.RecyclerView.ChildDrawingOrderCallback): void;
                    public setOnScrollListener(param0: com.android.internal.widget.RecyclerView.OnScrollListener): void;
                    public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                    public getOnFlingListener(): com.android.internal.widget.RecyclerView.OnFlingListener;
                    public removeDetachedView(param0: globalAndroid.view.View, param1: boolean): void;
                    public generateDefaultLayoutParams(): globalAndroid.view.ViewGroup.LayoutParams;
                    public findViewHolderForLayoutPosition(param0: number): com.android.internal.widget.RecyclerView.ViewHolder;
                    public setNestedScrollingEnabled(param0: boolean): void;
                    public addOnChildAttachStateChangeListener(param0: com.android.internal.widget.RecyclerView.OnChildAttachStateChangeListener): void;
                    public getChildAdapterPosition(param0: globalAndroid.view.View): number;
                    public findChildViewUnder(param0: number, param1: number): globalAndroid.view.View;
                    public stopScroll(): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public requestLayout(): void;
                    public hasPendingAdapterUpdates(): boolean;
                    public getClipToPadding(): boolean;
                    public onDetachedFromWindow(): void;
                    public getCompatAccessibilityDelegate(): com.android.internal.widget.RecyclerViewAccessibilityDelegate;
                    public onMeasure(param0: number, param1: number): void;
                    public computeVerticalScrollRange(): number;
                    public getTextAlignment(): number;
                    public generateLayoutParams(param0: globalAndroid.util.AttributeSet): globalAndroid.view.ViewGroup.LayoutParams;
                    public onScrolled(param0: number, param1: number): void;
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public onChildAttachedToWindow(param0: globalAndroid.view.View): void;
                    public smoothScrollToPosition(param0: number): void;
                    public constructor(param0: globalAndroid.content.Context);
                    public isNestedScrollingEnabled(): boolean;
                    public onGenericMotionEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public onRequestFocusInDescendants(param0: number, param1: globalAndroid.graphics.Rect): boolean;
                    public dispatchNestedPreFling(param0: number, param1: number): boolean;
                    public addOnItemTouchListener(param0: com.android.internal.widget.RecyclerView.OnItemTouchListener): void;
                    public computeHorizontalScrollOffset(): number;
                    public setHasFixedSize(param0: boolean): void;
                    public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                    public findViewHolderForItemId(param0: number): com.android.internal.widget.RecyclerView.ViewHolder;
                    public focusSearch(param0: number): globalAndroid.view.View;
                    public getScrollState(): number;
                    public focusableViewAvailable(param0: globalAndroid.view.View): void;
                    public setRecyclerListener(param0: com.android.internal.widget.RecyclerView.RecyclerListener): void;
                    public dispatchNestedPreScroll(param0: number, param1: number, param2: number[], param3: number[]): boolean;
                    public computeHorizontalScrollRange(): number;
                    public isLayoutRequested(): boolean;
                    public onAttachedToWindow(): void;
                    public setAccessibilityDelegateCompat(param0: com.android.internal.widget.RecyclerViewAccessibilityDelegate): void;
                    public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public removeOnItemTouchListener(param0: com.android.internal.widget.RecyclerView.OnItemTouchListener): void;
                    public generateLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): globalAndroid.view.ViewGroup.LayoutParams;
                    public isLayoutDirectionResolved(): boolean;
                    public computeVerticalScrollExtent(): number;
                    public setItemViewCacheSize(param0: number): void;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                    public setItemAnimator(param0: com.android.internal.widget.RecyclerView.ItemAnimator): void;
                    public checkLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): boolean;
                    public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                    public onDraw(param0: globalAndroid.graphics.Canvas): void;
                    public onScrollStateChanged(param0: number): void;
                    public setLayoutManager(param0: com.android.internal.widget.RecyclerView.LayoutManager): void;
                    public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                    public computeVerticalScrollOffset(): number;
                    public findViewHolderForAdapterPosition(param0: number): com.android.internal.widget.RecyclerView.ViewHolder;
                    public removeItemDecoration(param0: com.android.internal.widget.RecyclerView.ItemDecoration): void;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                    public dispatchSaveInstanceState(param0: globalAndroid.util.SparseArray<globalAndroid.os.Parcelable>): void;
                    public dispatchNestedScroll(param0: number, param1: number, param2: number, param3: number, param4: number[]): boolean;
                    public bringChildToFront(param0: globalAndroid.view.View): void;
                    public onChildDetachedFromWindow(param0: globalAndroid.view.View): void;
                    public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public setLayoutFrozen(param0: boolean): void;
                    public clearOnChildAttachStateChangeListeners(): void;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                    public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public getTextDirection(): number;
                    public swapAdapter(param0: com.android.internal.widget.RecyclerView.Adapter<any>, param1: boolean): void;
                    public requestFitSystemWindows(): void;
                    public getRecycledViewPool(): com.android.internal.widget.RecyclerView.RecycledViewPool;
                    public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public isAttachedToWindow(): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                    public scrollBy(param0: number, param1: number): void;
                    public getBaseline(): number;
                    public clearOnScrollListeners(): void;
                    public canResolveTextDirection(): boolean;
                    public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                    public requestDisallowInterceptTouchEvent(param0: boolean): void;
                    public setClipToPadding(param0: boolean): void;
                    public removeOnScrollListener(param0: com.android.internal.widget.RecyclerView.OnScrollListener): void;
                    public addView(param0: globalAndroid.view.View, param1: number): void;
                    public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public addFocusables(param0: java.util.ArrayList<globalAndroid.view.View>, param1: number, param2: number): void;
                    public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                    public fling(param0: number, param1: number): boolean;
                    public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                    public getParentForAccessibility(): globalAndroid.view.ViewParent;
                    public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public canResolveLayoutDirection(): boolean;
                    public hasFixedSize(): boolean;
                    public isLayoutFrozen(): boolean;
                    public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                    public getItemAnimator(): com.android.internal.widget.RecyclerView.ItemAnimator;
                    public onSizeChanged(param0: number, param1: number, param2: number, param3: number): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public removeView(param0: globalAndroid.view.View): void;
                    public getMaxFlingVelocity(): number;
                    public onStopNestedScroll(param0: globalAndroid.view.View): void;
                    public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    public findContainingViewHolder(param0: globalAndroid.view.View): com.android.internal.widget.RecyclerView.ViewHolder;
                    public smoothScrollBy(param0: number, param1: number): void;
                    public draw(param0: globalAndroid.graphics.Canvas): void;
                    public getAdapter(): com.android.internal.widget.RecyclerView.Adapter<any>;
                    public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
                    public smoothScrollBy(param0: number, param1: number, param2: globalAndroid.view.animation.Interpolator): void;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                    public setPreserveFocusAfterLayout(param0: boolean): void;
                    public startNestedScroll(param0: number): boolean;
                    public addFocusables(param0: java.util.ArrayList<globalAndroid.view.View>, param1: number): void;
                    public hasNestedScrollingParent(): boolean;
                    public removeOnChildAttachStateChangeListener(param0: com.android.internal.widget.RecyclerView.OnChildAttachStateChangeListener): void;
                }
                export module RecyclerView {
                    export abstract class Adapter<VH> extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.RecyclerView.Adapter<any>>;
                        public notifyItemMoved(param0: number, param1: number): void;
                        public notifyItemRangeChanged(param0: number, param1: number, param2: any): void;
                        public onAttachedToRecyclerView(param0: com.android.internal.widget.RecyclerView): void;
                        public onViewRecycled(param0: VH): void;
                        public setHasStableIds(param0: boolean): void;
                        public hasStableIds(): boolean;
                        public onBindViewHolder(param0: VH, param1: number, param2: java.util.List<any>): void;
                        public onBindViewHolder(param0: VH, param1: number): void;
                        public getItemId(param0: number): number;
                        public notifyItemChanged(param0: number): void;
                        public notifyItemInserted(param0: number): void;
                        public onViewAttachedToWindow(param0: VH): void;
                        public onDetachedFromRecyclerView(param0: com.android.internal.widget.RecyclerView): void;
                        public constructor();
                        public hasObservers(): boolean;
                        public getItemViewType(param0: number): number;
                        public notifyItemRangeChanged(param0: number, param1: number): void;
                        public registerAdapterDataObserver(param0: com.android.internal.widget.RecyclerView.AdapterDataObserver): void;
                        public onFailedToRecycleView(param0: VH): boolean;
                        public notifyItemRangeRemoved(param0: number, param1: number): void;
                        public notifyItemChanged(param0: number, param1: any): void;
                        public onViewDetachedFromWindow(param0: VH): void;
                        public onCreateViewHolder(param0: globalAndroid.view.ViewGroup, param1: number): VH;
                        public notifyDataSetChanged(): void;
                        public notifyItemRangeInserted(param0: number, param1: number): void;
                        public getItemCount(): number;
                        public notifyItemRemoved(param0: number): void;
                        public bindViewHolder(param0: VH, param1: number): void;
                        public createViewHolder(param0: globalAndroid.view.ViewGroup, param1: number): VH;
                        public unregisterAdapterDataObserver(param0: com.android.internal.widget.RecyclerView.AdapterDataObserver): void;
                    }
                    export class AdapterDataObservable extends globalAndroid.database.Observable<com.android.internal.widget.RecyclerView.AdapterDataObserver> {
                        public static class: java.lang.Class<com.android.internal.widget.RecyclerView.AdapterDataObservable>;
                        public notifyItemMoved(param0: number, param1: number): void;
                        public hasObservers(): boolean;
                        public notifyItemRangeChanged(param0: number, param1: number, param2: any): void;
                        public notifyItemRangeInserted(param0: number, param1: number): void;
                        public notifyItemRangeChanged(param0: number, param1: number): void;
                        public notifyChanged(): void;
                        public notifyItemRangeRemoved(param0: number, param1: number): void;
                    }
                    export abstract class AdapterDataObserver {
                        public static class: java.lang.Class<com.android.internal.widget.RecyclerView.AdapterDataObserver>;
                        public constructor();
                        public onChanged(): void;
                        public onItemRangeMoved(param0: number, param1: number, param2: number): void;
                        public onItemRangeChanged(param0: number, param1: number): void;
                        public onItemRangeChanged(param0: number, param1: number, param2: any): void;
                        public onItemRangeInserted(param0: number, param1: number): void;
                        public onItemRangeRemoved(param0: number, param1: number): void;
                    }
                    export class ChildDrawingOrderCallback extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.RecyclerView.ChildDrawingOrderCallback>;
                        /**
                         * Constructs a new instance of the com.android.internal.widget.RecyclerView$ChildDrawingOrderCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            onGetChildDrawingOrder(param0: number, param1: number): number;
                        });
                        public constructor();
                        public onGetChildDrawingOrder(param0: number, param1: number): number;
                    }
                    export abstract class ItemAnimator {
                        public static class: java.lang.Class<com.android.internal.widget.RecyclerView.ItemAnimator>;
                        public static FLAG_APPEARED_IN_PRE_LAYOUT: number;
                        public static FLAG_CHANGED: number;
                        public static FLAG_INVALIDATED: number;
                        public static FLAG_MOVED: number;
                        public static FLAG_REMOVED: number;
                        public setMoveDuration(param0: number): void;
                        public animateAppearance(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo, param2: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo): boolean;
                        public obtainHolderInfo(): com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo;
                        public endAnimations(): void;
                        public getMoveDuration(): number;
                        public isRunning(): boolean;
                        public dispatchAnimationFinished(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                        public runPendingAnimations(): void;
                        public onAnimationStarted(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                        public getAddDuration(): number;
                        public animateChange(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: com.android.internal.widget.RecyclerView.ViewHolder, param2: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo, param3: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo): boolean;
                        public setAddDuration(param0: number): void;
                        public setChangeDuration(param0: number): void;
                        public recordPreLayoutInformation(param0: com.android.internal.widget.RecyclerView.State, param1: com.android.internal.widget.RecyclerView.ViewHolder, param2: number, param3: java.util.List<any>): com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo;
                        public recordPostLayoutInformation(param0: com.android.internal.widget.RecyclerView.State, param1: com.android.internal.widget.RecyclerView.ViewHolder): com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo;
                        public dispatchAnimationStarted(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                        public dispatchAnimationsFinished(): void;
                        public getChangeDuration(): number;
                        public onAnimationFinished(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                        public constructor();
                        public endAnimation(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                        public animateDisappearance(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo, param2: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo): boolean;
                        public canReuseUpdatedViewHolder(param0: com.android.internal.widget.RecyclerView.ViewHolder): boolean;
                        public setRemoveDuration(param0: number): void;
                        public isRunning(param0: com.android.internal.widget.RecyclerView.ItemAnimator.ItemAnimatorFinishedListener): boolean;
                        public animatePersistence(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo, param2: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo): boolean;
                        public canReuseUpdatedViewHolder(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: java.util.List<any>): boolean;
                        public getRemoveDuration(): number;
                    }
                    export module ItemAnimator {
                        export class ItemAnimatorFinishedListener extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.widget.RecyclerView.ItemAnimator.ItemAnimatorFinishedListener>;
                            /**
                             * Constructs a new instance of the com.android.internal.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                             */
                            public constructor(implementation: {
                                onAnimationsFinished(): void;
                            });
                            public constructor();
                            public onAnimationsFinished(): void;
                        }
                        export class ItemAnimatorListener extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.widget.RecyclerView.ItemAnimator.ItemAnimatorListener>;
                            /**
                             * Constructs a new instance of the com.android.internal.widget.RecyclerView$ItemAnimator$ItemAnimatorListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                             */
                            public constructor(implementation: {
                                onAnimationFinished(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                            });
                            public constructor();
                            public onAnimationFinished(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                        }
                        export class ItemHolderInfo extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo>;
                            public bottom: number;
                            public changeFlags: number;
                            public left: number;
                            public right: number;
                            public top: number;
                            public constructor();
                            public setFrom(param0: com.android.internal.widget.RecyclerView.ViewHolder): com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo;
                            public setFrom(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: number): com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo;
                        }
                    }
                    export class ItemAnimatorRestoreListener extends com.android.internal.widget.RecyclerView.ItemAnimator.ItemAnimatorListener {
                        public static class: java.lang.Class<com.android.internal.widget.RecyclerView.ItemAnimatorRestoreListener>;
                        public onAnimationFinished(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                    }
                    export abstract class ItemDecoration {
                        public static class: java.lang.Class<com.android.internal.widget.RecyclerView.ItemDecoration>;
                        public getItemOffsets(param0: globalAndroid.graphics.Rect, param1: number, param2: com.android.internal.widget.RecyclerView): void;
                        public constructor();
                        public onDrawOver(param0: globalAndroid.graphics.Canvas, param1: com.android.internal.widget.RecyclerView): void;
                        public onDraw(param0: globalAndroid.graphics.Canvas, param1: com.android.internal.widget.RecyclerView): void;
                        public onDraw(param0: globalAndroid.graphics.Canvas, param1: com.android.internal.widget.RecyclerView, param2: com.android.internal.widget.RecyclerView.State): void;
                        public onDrawOver(param0: globalAndroid.graphics.Canvas, param1: com.android.internal.widget.RecyclerView, param2: com.android.internal.widget.RecyclerView.State): void;
                        public getItemOffsets(param0: globalAndroid.graphics.Rect, param1: globalAndroid.view.View, param2: com.android.internal.widget.RecyclerView, param3: com.android.internal.widget.RecyclerView.State): void;
                    }
                    export abstract class LayoutManager {
                        public static class: java.lang.Class<com.android.internal.widget.RecyclerView.LayoutManager>;
                        public onLayoutCompleted(param0: com.android.internal.widget.RecyclerView.State): void;
                        public generateDefaultLayoutParams(): com.android.internal.widget.RecyclerView.LayoutParams;
                        public onDetachedFromWindow(param0: com.android.internal.widget.RecyclerView): void;
                        public attachView(param0: globalAndroid.view.View): void;
                        public getPaddingBottom(): number;
                        public measureChildWithMargins(param0: globalAndroid.view.View, param1: number, param2: number): void;
                        public performAccessibilityAction(param0: com.android.internal.widget.RecyclerView.Recycler, param1: com.android.internal.widget.RecyclerView.State, param2: number, param3: globalAndroid.os.Bundle): boolean;
                        public onAdapterChanged(param0: com.android.internal.widget.RecyclerView.Adapter<any>, param1: com.android.internal.widget.RecyclerView.Adapter<any>): void;
                        public getTopDecorationHeight(param0: globalAndroid.view.View): number;
                        public stopIgnoringView(param0: globalAndroid.view.View): void;
                        public measureChild(param0: globalAndroid.view.View, param1: number, param2: number): void;
                        public getDecoratedBoundsWithMargins(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                        public constructor();
                        public getTransformedBoundingBox(param0: globalAndroid.view.View, param1: boolean, param2: globalAndroid.graphics.Rect): void;
                        public removeDetachedView(param0: globalAndroid.view.View): void;
                        public isAutoMeasureEnabled(): boolean;
                        public onAddFocusables(param0: com.android.internal.widget.RecyclerView, param1: java.util.ArrayList<globalAndroid.view.View>, param2: number, param3: number): boolean;
                        public static getProperties(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number): com.android.internal.widget.RecyclerView.LayoutManager.Properties;
                        public isSmoothScrolling(): boolean;
                        public getDecoratedMeasuredHeight(param0: globalAndroid.view.View): number;
                        public requestLayout(): void;
                        public addView(param0: globalAndroid.view.View, param1: number): void;
                        public onInitializeAccessibilityNodeInfoForItem(param0: com.android.internal.widget.RecyclerView.Recycler, param1: com.android.internal.widget.RecyclerView.State, param2: globalAndroid.view.View, param3: globalAndroid.view.accessibility.AccessibilityNodeInfo): void;
                        public static getChildMeasureSpec(param0: number, param1: number, param2: number, param3: boolean): number;
                        public getRightDecorationWidth(param0: globalAndroid.view.View): number;
                        public onMeasure(param0: com.android.internal.widget.RecyclerView.Recycler, param1: com.android.internal.widget.RecyclerView.State, param2: number, param3: number): void;
                        public findContainingItemView(param0: globalAndroid.view.View): globalAndroid.view.View;
                        public onItemsMoved(param0: com.android.internal.widget.RecyclerView, param1: number, param2: number, param3: number): void;
                        public getPaddingTop(): number;
                        public getRowCountForAccessibility(param0: com.android.internal.widget.RecyclerView.Recycler, param1: com.android.internal.widget.RecyclerView.State): number;
                        public getMinimumWidth(): number;
                        public removeViewAt(param0: number): void;
                        public getPaddingLeft(): number;
                        public startSmoothScroll(param0: com.android.internal.widget.RecyclerView.SmoothScroller): void;
                        public onLayoutChildren(param0: com.android.internal.widget.RecyclerView.Recycler, param1: com.android.internal.widget.RecyclerView.State): void;
                        public setMeasuredDimension(param0: number, param1: number): void;
                        public isFocused(): boolean;
                        public computeVerticalScrollRange(param0: com.android.internal.widget.RecyclerView.State): number;
                        public isMeasurementCacheEnabled(): boolean;
                        public addView(param0: globalAndroid.view.View): void;
                        public getDecoratedRight(param0: globalAndroid.view.View): number;
                        public assertInLayoutOrScroll(param0: string): void;
                        public ignoreView(param0: globalAndroid.view.View): void;
                        public canScrollVertically(): boolean;
                        public getChildCount(): number;
                        public detachView(param0: globalAndroid.view.View): void;
                        public onDetachedFromWindow(param0: com.android.internal.widget.RecyclerView, param1: com.android.internal.widget.RecyclerView.Recycler): void;
                        public generateLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): com.android.internal.widget.RecyclerView.LayoutParams;
                        public getWidthMode(): number;
                        public getHeight(): number;
                        public onFocusSearchFailed(param0: globalAndroid.view.View, param1: number, param2: com.android.internal.widget.RecyclerView.Recycler, param3: com.android.internal.widget.RecyclerView.State): globalAndroid.view.View;
                        public supportsPredictiveItemAnimations(): boolean;
                        public getChildAt(param0: number): globalAndroid.view.View;
                        public addDisappearingView(param0: globalAndroid.view.View): void;
                        public removeAllViews(): void;
                        public onScrollStateChanged(param0: number): void;
                        public getColumnCountForAccessibility(param0: com.android.internal.widget.RecyclerView.Recycler, param1: com.android.internal.widget.RecyclerView.State): number;
                        public generateLayoutParams(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet): com.android.internal.widget.RecyclerView.LayoutParams;
                        public getDecoratedTop(param0: globalAndroid.view.View): number;
                        public removeAndRecycleAllViews(param0: com.android.internal.widget.RecyclerView.Recycler): void;
                        public onItemsUpdated(param0: com.android.internal.widget.RecyclerView, param1: number, param2: number): void;
                        public getItemCount(): number;
                        public layoutDecorated(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                        public onSaveInstanceState(): globalAndroid.os.Parcelable;
                        public getLayoutDirection(): number;
                        public detachAndScrapAttachedViews(param0: com.android.internal.widget.RecyclerView.Recycler): void;
                        public attachView(param0: globalAndroid.view.View, param1: number): void;
                        public onItemsRemoved(param0: com.android.internal.widget.RecyclerView, param1: number, param2: number): void;
                        public setMeasurementCacheEnabled(param0: boolean): void;
                        public removeAndRecycleView(param0: globalAndroid.view.View, param1: com.android.internal.widget.RecyclerView.Recycler): void;
                        public getDecoratedMeasuredWidth(param0: globalAndroid.view.View): number;
                        public performAccessibilityActionForItem(param0: com.android.internal.widget.RecyclerView.Recycler, param1: com.android.internal.widget.RecyclerView.State, param2: globalAndroid.view.View, param3: number, param4: globalAndroid.os.Bundle): boolean;
                        public postOnAnimation(param0: java.lang.Runnable): void;
                        public smoothScrollToPosition(param0: com.android.internal.widget.RecyclerView, param1: com.android.internal.widget.RecyclerView.State, param2: number): void;
                        public getBaseline(): number;
                        public onInitializeAccessibilityNodeInfo(param0: com.android.internal.widget.RecyclerView.Recycler, param1: com.android.internal.widget.RecyclerView.State, param2: globalAndroid.view.accessibility.AccessibilityNodeInfo): void;
                        public computeHorizontalScrollOffset(param0: com.android.internal.widget.RecyclerView.State): number;
                        public setAutoMeasureEnabled(param0: boolean): void;
                        public setMeasuredDimension(param0: globalAndroid.graphics.Rect, param1: number, param2: number): void;
                        public onItemsAdded(param0: com.android.internal.widget.RecyclerView, param1: number, param2: number): void;
                        public removeView(param0: globalAndroid.view.View): void;
                        public getPaddingRight(): number;
                        public attachView(param0: globalAndroid.view.View, param1: number, param2: com.android.internal.widget.RecyclerView.LayoutParams): void;
                        public getDecoratedBottom(param0: globalAndroid.view.View): number;
                        public isItemPrefetchEnabled(): boolean;
                        public removeCallbacks(param0: java.lang.Runnable): boolean;
                        public collectInitialPrefetchPositions(param0: number, param1: com.android.internal.widget.RecyclerView.LayoutManager.LayoutPrefetchRegistry): void;
                        public onItemsUpdated(param0: com.android.internal.widget.RecyclerView, param1: number, param2: number, param3: any): void;
                        public offsetChildrenHorizontal(param0: number): void;
                        public scrollHorizontallyBy(param0: number, param1: com.android.internal.widget.RecyclerView.Recycler, param2: com.android.internal.widget.RecyclerView.State): number;
                        public scrollVerticallyBy(param0: number, param1: com.android.internal.widget.RecyclerView.Recycler, param2: com.android.internal.widget.RecyclerView.State): number;
                        public isLayoutHierarchical(param0: com.android.internal.widget.RecyclerView.Recycler, param1: com.android.internal.widget.RecyclerView.State): boolean;
                        public computeVerticalScrollExtent(param0: com.android.internal.widget.RecyclerView.State): number;
                        public getItemViewType(param0: globalAndroid.view.View): number;
                        public addDisappearingView(param0: globalAndroid.view.View, param1: number): void;
                        public findViewByPosition(param0: number): globalAndroid.view.View;
                        public getPaddingEnd(): number;
                        public checkLayoutParams(param0: com.android.internal.widget.RecyclerView.LayoutParams): boolean;
                        public onRequestChildFocus(param0: com.android.internal.widget.RecyclerView, param1: globalAndroid.view.View, param2: globalAndroid.view.View): boolean;
                        public getSelectionModeForAccessibility(param0: com.android.internal.widget.RecyclerView.Recycler, param1: com.android.internal.widget.RecyclerView.State): number;
                        public getClipToPadding(): boolean;
                        public getDecoratedLeft(param0: globalAndroid.view.View): number;
                        public getFocusedChild(): globalAndroid.view.View;
                        public static getChildMeasureSpec(param0: number, param1: number, param2: number, param3: number, param4: boolean): number;
                        public endAnimation(param0: globalAndroid.view.View): void;
                        public requestChildRectangleOnScreen(param0: com.android.internal.widget.RecyclerView, param1: globalAndroid.view.View, param2: globalAndroid.graphics.Rect, param3: boolean): boolean;
                        public getPosition(param0: globalAndroid.view.View): number;
                        public collectAdjacentPrefetchPositions(param0: number, param1: number, param2: com.android.internal.widget.RecyclerView.State, param3: com.android.internal.widget.RecyclerView.LayoutManager.LayoutPrefetchRegistry): void;
                        public isAttachedToWindow(): boolean;
                        public onAttachedToWindow(param0: com.android.internal.widget.RecyclerView): void;
                        public setItemPrefetchEnabled(param0: boolean): void;
                        public calculateItemDecorationsForChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                        public offsetChildrenVertical(param0: number): void;
                        public onInterceptFocusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                        public getHeightMode(): number;
                        public moveView(param0: number, param1: number): void;
                        public scrollToPosition(param0: number): void;
                        public assertNotInLayoutOrScroll(param0: string): void;
                        public onInitializeAccessibilityEvent(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                        public removeAndRecycleViewAt(param0: number, param1: com.android.internal.widget.RecyclerView.Recycler): void;
                        public requestSimpleAnimationsInNextLayout(): void;
                        public detachAndScrapViewAt(param0: number, param1: com.android.internal.widget.RecyclerView.Recycler): void;
                        public detachAndScrapView(param0: globalAndroid.view.View, param1: com.android.internal.widget.RecyclerView.Recycler): void;
                        public computeVerticalScrollOffset(param0: com.android.internal.widget.RecyclerView.State): number;
                        public getBottomDecorationHeight(param0: globalAndroid.view.View): number;
                        public onItemsChanged(param0: com.android.internal.widget.RecyclerView): void;
                        public getLeftDecorationWidth(param0: globalAndroid.view.View): number;
                        public hasFocus(): boolean;
                        public getMinimumHeight(): number;
                        public onInitializeAccessibilityEvent(param0: com.android.internal.widget.RecyclerView.Recycler, param1: com.android.internal.widget.RecyclerView.State, param2: globalAndroid.view.accessibility.AccessibilityEvent): void;
                        public computeHorizontalScrollRange(param0: com.android.internal.widget.RecyclerView.State): number;
                        public canScrollHorizontally(): boolean;
                        public detachViewAt(param0: number): void;
                        public computeHorizontalScrollExtent(param0: com.android.internal.widget.RecyclerView.State): number;
                        public static chooseSize(param0: number, param1: number, param2: number): number;
                        public getWidth(): number;
                        public getPaddingStart(): number;
                        public layoutDecoratedWithMargins(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                        public onRequestChildFocus(param0: com.android.internal.widget.RecyclerView, param1: com.android.internal.widget.RecyclerView.State, param2: globalAndroid.view.View, param3: globalAndroid.view.View): boolean;
                        public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
                    }
                    export module LayoutManager {
                        export class LayoutPrefetchRegistry extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.widget.RecyclerView.LayoutManager.LayoutPrefetchRegistry>;
                            /**
                             * Constructs a new instance of the com.android.internal.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                             */
                            public constructor(implementation: {
                                addPosition(param0: number, param1: number): void;
                            });
                            public constructor();
                            public addPosition(param0: number, param1: number): void;
                        }
                        export class Properties extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.widget.RecyclerView.LayoutManager.Properties>;
                            public orientation: number;
                            public reverseLayout: boolean;
                            public spanCount: number;
                            public stackFromEnd: boolean;
                            public constructor();
                        }
                    }
                    export class LayoutParams extends globalAndroid.view.ViewGroup.MarginLayoutParams {
                        public static class: java.lang.Class<com.android.internal.widget.RecyclerView.LayoutParams>;
                        public isItemChanged(): boolean;
                        public constructor(param0: globalAndroid.view.ViewGroup.LayoutParams);
                        public isItemRemoved(): boolean;
                        public getViewPosition(): number;
                        public getViewAdapterPosition(): number;
                        public constructor(param0: globalAndroid.view.ViewGroup.MarginLayoutParams);
                        public isViewInvalid(): boolean;
                        public constructor(param0: com.android.internal.widget.RecyclerView.LayoutParams);
                        public getViewLayoutPosition(): number;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                        public viewNeedsUpdate(): boolean;
                        public constructor(param0: number, param1: number);
                    }
                    export class OnChildAttachStateChangeListener extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.RecyclerView.OnChildAttachStateChangeListener>;
                        /**
                         * Constructs a new instance of the com.android.internal.widget.RecyclerView$OnChildAttachStateChangeListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            onChildViewAttachedToWindow(param0: globalAndroid.view.View): void;
                            onChildViewDetachedFromWindow(param0: globalAndroid.view.View): void;
                        });
                        public constructor();
                        public onChildViewDetachedFromWindow(param0: globalAndroid.view.View): void;
                        public onChildViewAttachedToWindow(param0: globalAndroid.view.View): void;
                    }
                    export abstract class OnFlingListener {
                        public static class: java.lang.Class<com.android.internal.widget.RecyclerView.OnFlingListener>;
                        public constructor();
                        public onFling(param0: number, param1: number): boolean;
                    }
                    export class OnItemTouchListener extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.RecyclerView.OnItemTouchListener>;
                        /**
                         * Constructs a new instance of the com.android.internal.widget.RecyclerView$OnItemTouchListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            onInterceptTouchEvent(param0: com.android.internal.widget.RecyclerView, param1: globalAndroid.view.MotionEvent): boolean;
                            onRequestDisallowInterceptTouchEvent(param0: boolean): void;
                            onTouchEvent(param0: com.android.internal.widget.RecyclerView, param1: globalAndroid.view.MotionEvent): void;
                        });
                        public constructor();
                        public onInterceptTouchEvent(param0: com.android.internal.widget.RecyclerView, param1: globalAndroid.view.MotionEvent): boolean;
                        public onTouchEvent(param0: com.android.internal.widget.RecyclerView, param1: globalAndroid.view.MotionEvent): void;
                        public onRequestDisallowInterceptTouchEvent(param0: boolean): void;
                    }
                    export abstract class OnScrollListener {
                        public static class: java.lang.Class<com.android.internal.widget.RecyclerView.OnScrollListener>;
                        public constructor();
                        public onScrollStateChanged(param0: com.android.internal.widget.RecyclerView, param1: number): void;
                        public onScrolled(param0: com.android.internal.widget.RecyclerView, param1: number, param2: number): void;
                    }
                    export class RecycledViewPool extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.RecyclerView.RecycledViewPool>;
                        public getRecycledViewCount(param0: number): number;
                        public constructor();
                        public clear(): void;
                        public getRecycledView(param0: number): com.android.internal.widget.RecyclerView.ViewHolder;
                        public setMaxRecycledViews(param0: number, param1: number): void;
                        public putRecycledView(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                    }
                    export module RecycledViewPool {
                        export class ScrapData extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.widget.RecyclerView.RecycledViewPool.ScrapData>;
                        }
                    }
                    export class Recycler extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.RecyclerView.Recycler>;
                        public bindViewToPosition(param0: globalAndroid.view.View, param1: number): void;
                        public constructor(param0: com.android.internal.widget.RecyclerView);
                        public getViewForPosition(param0: number): globalAndroid.view.View;
                        public setViewCacheSize(param0: number): void;
                        public clear(): void;
                        public recycleView(param0: globalAndroid.view.View): void;
                        public getScrapList(): java.util.List<com.android.internal.widget.RecyclerView.ViewHolder>;
                        public convertPreLayoutPositionToPostLayout(param0: number): number;
                    }
                    export class RecyclerListener extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.RecyclerView.RecyclerListener>;
                        /**
                         * Constructs a new instance of the com.android.internal.widget.RecyclerView$RecyclerListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            onViewRecycled(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                        });
                        public constructor();
                        public onViewRecycled(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                    }
                    export class RecyclerViewDataObserver extends com.android.internal.widget.RecyclerView.AdapterDataObserver {
                        public static class: java.lang.Class<com.android.internal.widget.RecyclerView.RecyclerViewDataObserver>;
                        public onChanged(): void;
                        public onItemRangeMoved(param0: number, param1: number, param2: number): void;
                        public onItemRangeChanged(param0: number, param1: number): void;
                        public onItemRangeChanged(param0: number, param1: number, param2: any): void;
                        public onItemRangeInserted(param0: number, param1: number): void;
                        public onItemRangeRemoved(param0: number, param1: number): void;
                    }
                    export class SavedState extends globalAndroid.view.AbsSavedState {
                        public static class: java.lang.Class<com.android.internal.widget.RecyclerView.SavedState>;
                        public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.widget.RecyclerView.SavedState>;
                        public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                    }
                    export class SimpleOnItemTouchListener extends com.android.internal.widget.RecyclerView.OnItemTouchListener {
                        public static class: java.lang.Class<com.android.internal.widget.RecyclerView.SimpleOnItemTouchListener>;
                        public constructor();
                        public onInterceptTouchEvent(param0: com.android.internal.widget.RecyclerView, param1: globalAndroid.view.MotionEvent): boolean;
                        public onTouchEvent(param0: com.android.internal.widget.RecyclerView, param1: globalAndroid.view.MotionEvent): void;
                        public onRequestDisallowInterceptTouchEvent(param0: boolean): void;
                    }
                    export abstract class SmoothScroller {
                        public static class: java.lang.Class<com.android.internal.widget.RecyclerView.SmoothScroller>;
                        public constructor();
                        public getChildCount(): number;
                        public onChildAttachedToWindow(param0: globalAndroid.view.View): void;
                        public isRunning(): boolean;
                        public stop(): void;
                        public onStop(): void;
                        public setTargetPosition(param0: number): void;
                        public instantScrollToPosition(param0: number): void;
                        public getChildPosition(param0: globalAndroid.view.View): number;
                        public isPendingInitialRun(): boolean;
                        public onTargetFound(param0: globalAndroid.view.View, param1: com.android.internal.widget.RecyclerView.State, param2: com.android.internal.widget.RecyclerView.SmoothScroller.Action): void;
                        public findViewByPosition(param0: number): globalAndroid.view.View;
                        public onSeekTargetStep(param0: number, param1: number, param2: com.android.internal.widget.RecyclerView.State, param3: com.android.internal.widget.RecyclerView.SmoothScroller.Action): void;
                        public getTargetPosition(): number;
                        public getLayoutManager(): com.android.internal.widget.RecyclerView.LayoutManager;
                        public normalize(param0: globalAndroid.graphics.PointF): void;
                        public onStart(): void;
                    }
                    export module SmoothScroller {
                        export class Action extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.widget.RecyclerView.SmoothScroller.Action>;
                            public static UNDEFINED_DURATION: number;
                            public update(param0: number, param1: number, param2: number, param3: globalAndroid.view.animation.Interpolator): void;
                            public constructor(param0: number, param1: number);
                            public setDuration(param0: number): void;
                            public setDy(param0: number): void;
                            public getInterpolator(): globalAndroid.view.animation.Interpolator;
                            public getDx(): number;
                            public setInterpolator(param0: globalAndroid.view.animation.Interpolator): void;
                            public constructor(param0: number, param1: number, param2: number);
                            public setDx(param0: number): void;
                            public constructor(param0: number, param1: number, param2: number, param3: globalAndroid.view.animation.Interpolator);
                            public getDy(): number;
                            public getDuration(): number;
                            public jumpTo(param0: number): void;
                        }
                        export class ScrollVectorProvider extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.widget.RecyclerView.SmoothScroller.ScrollVectorProvider>;
                            /**
                             * Constructs a new instance of the com.android.internal.widget.RecyclerView$SmoothScroller$ScrollVectorProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                             */
                            public constructor(implementation: {
                                computeScrollVectorForPosition(param0: number): globalAndroid.graphics.PointF;
                            });
                            public constructor();
                            public computeScrollVectorForPosition(param0: number): globalAndroid.graphics.PointF;
                        }
                    }
                    export class State extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.RecyclerView.State>;
                        public constructor();
                        public put(param0: number, param1: any): void;
                        public isMeasuring(): boolean;
                        public toString(): string;
                        public getTargetScrollPosition(): number;
                        public hasTargetScrollPosition(): boolean;
                        public willRunPredictiveAnimations(): boolean;
                        public getItemCount(): number;
                        public willRunSimpleAnimations(): boolean;
                        public didStructureChange(): boolean;
                        public get(param0: number): any;
                        public isPreLayout(): boolean;
                        public remove(param0: number): void;
                    }
                    export abstract class ViewCacheExtension {
                        public static class: java.lang.Class<com.android.internal.widget.RecyclerView.ViewCacheExtension>;
                        public getViewForPositionAndType(param0: com.android.internal.widget.RecyclerView.Recycler, param1: number, param2: number): globalAndroid.view.View;
                        public constructor();
                    }
                    export class ViewFlinger extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.RecyclerView.ViewFlinger>;
                        public smoothScrollBy(param0: number, param1: number, param2: number, param3: globalAndroid.view.animation.Interpolator): void;
                        public smoothScrollBy(param0: number, param1: number, param2: number): void;
                        public run(): void;
                        public smoothScrollBy(param0: number, param1: number, param2: number, param3: number): void;
                        public smoothScrollBy(param0: number, param1: number): void;
                        public fling(param0: number, param1: number): void;
                        public stop(): void;
                        public smoothScrollBy(param0: number, param1: number, param2: globalAndroid.view.animation.Interpolator): void;
                    }
                    export abstract class ViewHolder {
                        public static class: java.lang.Class<com.android.internal.widget.RecyclerView.ViewHolder>;
                        public itemView: globalAndroid.view.View;
                        public isRecyclable(): boolean;
                        public getAdapterPosition(): number;
                        public getItemViewType(): number;
                        public setIsRecyclable(param0: boolean): void;
                        public getPosition(): number;
                        public constructor(param0: globalAndroid.view.View);
                        public getLayoutPosition(): number;
                        public getOldPosition(): number;
                        public toString(): string;
                        public getItemId(): number;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class RecyclerViewAccessibilityDelegate extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.widget.RecyclerViewAccessibilityDelegate>;
                    public onInitializeAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public getItemDelegate(): any;
                    public constructor();
                    public constructor(param0: com.android.internal.widget.RecyclerView);
                    public onInitializeAccessibilityNodeInfo(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityNodeInfo): void;
                    public performAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class ResolverDrawerLayout extends globalAndroid.view.ViewGroup {
                    public static class: java.lang.Class<com.android.internal.widget.ResolverDrawerLayout>;
                    public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                    public focusSearch(param0: number): globalAndroid.view.View;
                    public focusableViewAvailable(param0: globalAndroid.view.View): void;
                    public isCollapsed(): boolean;
                    public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                    public isLayoutRequested(): boolean;
                    public onAttachedToWindow(): void;
                    public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public generateLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): globalAndroid.view.ViewGroup.LayoutParams;
                    public isTextDirectionResolved(): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public isLayoutDirectionResolved(): boolean;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                    public getAccessibilityClassName(): string;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public addView(param0: globalAndroid.view.View): void;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                    public clearChildFocus(param0: globalAndroid.view.View): void;
                    public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                    public getLayoutDirection(): number;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                    public bringChildToFront(param0: globalAndroid.view.View): void;
                    public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public isSmallCollapsed(): boolean;
                    public requestTransparentRegion(param0: globalAndroid.view.View): void;
                    public computeScroll(): void;
                    public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                    public onSaveInstanceState(): globalAndroid.os.Parcelable;
                    public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public getTextDirection(): number;
                    public requestFitSystemWindows(): void;
                    public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public getParent(): globalAndroid.view.ViewParent;
                    public isTextAlignmentResolved(): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                    public canResolveTextAlignment(): boolean;
                    public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                    public setSmallCollapsed(param0: boolean): void;
                    public canResolveTextDirection(): boolean;
                    public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                    public setOnDismissedListener(param0: com.android.internal.widget.ResolverDrawerLayout.OnDismissedListener): void;
                    public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                    public requestDisallowInterceptTouchEvent(param0: boolean): void;
                    public generateDefaultLayoutParams(): globalAndroid.view.ViewGroup.LayoutParams;
                    public addView(param0: globalAndroid.view.View, param1: number): void;
                    public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                    public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public requestLayout(): void;
                    public getParentForAccessibility(): globalAndroid.view.ViewParent;
                    public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                    public onDetachedFromWindow(): void;
                    public onMeasure(param0: number, param1: number): void;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public canResolveLayoutDirection(): boolean;
                    public getTextAlignment(): number;
                    public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public generateLayoutParams(param0: globalAndroid.util.AttributeSet): globalAndroid.view.ViewGroup.LayoutParams;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public setCollapsibleHeightReserved(param0: number): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public removeView(param0: globalAndroid.view.View): void;
                    public constructor(param0: globalAndroid.content.Context);
                    public onDrawForeground(param0: globalAndroid.graphics.Canvas): void;
                    public onStopNestedScroll(param0: globalAndroid.view.View): void;
                    public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    public performAccessibilityActionInternal(param0: number, param1: globalAndroid.os.Bundle): boolean;
                    public setDismissLocked(param0: boolean): void;
                    public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                    public setCollapsed(param0: boolean): void;
                    public onInitializeAccessibilityNodeInfoInternal(param0: globalAndroid.view.accessibility.AccessibilityNodeInfo): void;
                    public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                }
                export module ResolverDrawerLayout {
                    export class LayoutParams extends globalAndroid.view.ViewGroup.MarginLayoutParams {
                        public static class: java.lang.Class<com.android.internal.widget.ResolverDrawerLayout.LayoutParams>;
                        public alwaysShow: boolean;
                        public hasNestedScrollIndicator: boolean;
                        public ignoreOffset: boolean;
                        public constructor(param0: globalAndroid.view.ViewGroup.LayoutParams);
                        public constructor(param0: globalAndroid.view.ViewGroup.MarginLayoutParams);
                        public constructor(param0: com.android.internal.widget.ResolverDrawerLayout.LayoutParams);
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                        public constructor(param0: number, param1: number);
                    }
                    export class OnDismissedListener extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.ResolverDrawerLayout.OnDismissedListener>;
                        /**
                         * Constructs a new instance of the com.android.internal.widget.ResolverDrawerLayout$OnDismissedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            onDismissed(): void;
                        });
                        public constructor();
                        public onDismissed(): void;
                    }
                    export class RunOnDismissedListener extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.ResolverDrawerLayout.RunOnDismissedListener>;
                        public run(): void;
                    }
                    export class SavedState extends globalAndroid.view.View.BaseSavedState {
                        public static class: java.lang.Class<com.android.internal.widget.ResolverDrawerLayout.SavedState>;
                        public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.widget.ResolverDrawerLayout.SavedState>;
                        public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class ScrollBarUtils extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.widget.ScrollBarUtils>;
                    public constructor();
                    public static getThumbLength(param0: number, param1: number, param2: number, param3: number): number;
                    public static getThumbOffset(param0: number, param1: number, param2: number, param3: number, param4: number): number;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class ScrollbarHelper extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.widget.ScrollbarHelper>;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class ScrollingTabContainerView extends globalAndroid.widget.HorizontalScrollView implements globalAndroid.widget.AdapterView.OnItemClickListener {
                    public static class: java.lang.Class<com.android.internal.widget.ScrollingTabContainerView>;
                    public mVisAnimListener: com.android.internal.widget.ScrollingTabContainerView.VisibilityAnimListener;
                    public mVisibilityAnim: globalAndroid.animation.Animator;
                    public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                    public focusSearch(param0: number): globalAndroid.view.View;
                    public focusableViewAvailable(param0: globalAndroid.view.View): void;
                    public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                    public isLayoutRequested(): boolean;
                    public onAttachedToWindow(): void;
                    public isTextDirectionResolved(): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public isLayoutDirectionResolved(): boolean;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public addView(param0: globalAndroid.view.View): void;
                    public setTabSelected(param0: number): void;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                    public clearChildFocus(param0: globalAndroid.view.View): void;
                    public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                    public getLayoutDirection(): number;
                    public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                    public setAllowCollapse(param0: boolean): void;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                    public bringChildToFront(param0: globalAndroid.view.View): void;
                    public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public animateToVisibility(param0: number): void;
                    public setContentHeight(param0: number): void;
                    public requestTransparentRegion(param0: globalAndroid.view.View): void;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                    public getTextDirection(): number;
                    public requestFitSystemWindows(): void;
                    public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public getParent(): globalAndroid.view.ViewParent;
                    public isTextAlignmentResolved(): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                    public addTab(param0: globalAndroid.app.ActionBar.Tab, param1: number, param2: boolean): void;
                    public canResolveTextAlignment(): boolean;
                    public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                    public canResolveTextDirection(): boolean;
                    public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                    public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                    public requestDisallowInterceptTouchEvent(param0: boolean): void;
                    public addView(param0: globalAndroid.view.View, param1: number): void;
                    public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                    public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public requestLayout(): void;
                    public getParentForAccessibility(): globalAndroid.view.ViewParent;
                    public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                    public onDetachedFromWindow(): void;
                    public onMeasure(param0: number, param1: number): void;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public canResolveLayoutDirection(): boolean;
                    public addTab(param0: globalAndroid.app.ActionBar.Tab, param1: boolean): void;
                    public getTextAlignment(): number;
                    public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public animateToTab(param0: number): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public removeView(param0: globalAndroid.view.View): void;
                    public removeTabAt(param0: number): void;
                    public constructor(param0: globalAndroid.content.Context);
                    public onStopNestedScroll(param0: globalAndroid.view.View): void;
                    public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    public updateTab(param0: number): void;
                    public onItemClick(param0: globalAndroid.widget.AdapterView<any>, param1: globalAndroid.view.View, param2: number, param3: number): void;
                    public removeAllTabs(): void;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                    public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                }
                export module ScrollingTabContainerView {
                    export class TabAdapter extends globalAndroid.widget.BaseAdapter {
                        public static class: java.lang.Class<com.android.internal.widget.ScrollingTabContainerView.TabAdapter>;
                        public isEnabled(param0: number): boolean;
                        public areAllItemsEnabled(): boolean;
                        public constructor();
                        public constructor(param0: com.android.internal.widget.ScrollingTabContainerView, param1: globalAndroid.content.Context);
                        public setDropDownViewContext(param0: globalAndroid.content.Context): void;
                        public getItemId(param0: number): number;
                        public getView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
                        public getCount(): number;
                        public getItem(param0: number): any;
                        public getDropDownView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
                    }
                    export class TabClickListener extends globalAndroid.view.View.OnClickListener {
                        public static class: java.lang.Class<com.android.internal.widget.ScrollingTabContainerView.TabClickListener>;
                        public onClick(param0: globalAndroid.view.View): void;
                    }
                    export class TabView extends globalAndroid.widget.LinearLayout {
                        public static class: java.lang.Class<com.android.internal.widget.ScrollingTabContainerView.TabView>;
                        public constructor(param0: com.android.internal.widget.ScrollingTabContainerView, param1: globalAndroid.content.Context, param2: globalAndroid.app.ActionBar.Tab, param3: boolean);
                        public isLayoutRequested(): boolean;
                        public canResolveLayoutDirection(): boolean;
                        public constructor(param0: globalAndroid.content.Context);
                        public sendAccessibilityEvent(param0: number): void;
                        public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                        public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                        public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                        public getTab(): globalAndroid.app.ActionBar.Tab;
                        public clearChildFocus(param0: globalAndroid.view.View): void;
                        public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                        public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                        public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                        public isTextAlignmentResolved(): boolean;
                        public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                        public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                        public onMeasure(param0: number, param1: number): void;
                        public getTextDirection(): number;
                        public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                        public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                        public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                        public removeView(param0: globalAndroid.view.View): void;
                        public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                        public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                        public getAccessibilityClassName(): string;
                        public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                        public canResolveTextDirection(): boolean;
                        public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                        public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                        public requestDisallowInterceptTouchEvent(param0: boolean): void;
                        public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                        public isLayoutDirectionResolved(): boolean;
                        public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                        public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                        public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                        public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                        public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                        public requestLayout(): void;
                        public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                        public bringChildToFront(param0: globalAndroid.view.View): void;
                        public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                        public addView(param0: globalAndroid.view.View, param1: number): void;
                        public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                        public isTextDirectionResolved(): boolean;
                        public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                        public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                        public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                        public onStopNestedScroll(param0: globalAndroid.view.View): void;
                        public requestTransparentRegion(param0: globalAndroid.view.View): void;
                        public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                        public addView(param0: globalAndroid.view.View): void;
                        public setSelected(param0: boolean): void;
                        public update(): void;
                        public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                        public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                        public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                        public requestFitSystemWindows(): void;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                        public bindTab(param0: globalAndroid.app.ActionBar.Tab): void;
                        public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                        public getParentForAccessibility(): globalAndroid.view.ViewParent;
                        public focusableViewAvailable(param0: globalAndroid.view.View): void;
                        public focusSearch(param0: number): globalAndroid.view.View;
                        public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                        public getTextAlignment(): number;
                        public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                        public canResolveTextAlignment(): boolean;
                        public getLayoutDirection(): number;
                        public getParent(): globalAndroid.view.ViewParent;
                    }
                    export class VisibilityAnimListener extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.ScrollingTabContainerView.VisibilityAnimListener>;
                        public constructor(param0: com.android.internal.widget.ScrollingTabContainerView);
                        public onAnimationEnd(param0: globalAndroid.animation.Animator): void;
                        public onAnimationRepeat(param0: globalAndroid.animation.Animator): void;
                        public onAnimationCancel(param0: globalAndroid.animation.Animator): void;
                        public onAnimationStart(param0: globalAndroid.animation.Animator): void;
                        public withFinalVisibility(param0: number): com.android.internal.widget.ScrollingTabContainerView.VisibilityAnimListener;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class ScrollingView extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.widget.ScrollingView>;
                    /**
                     * Constructs a new instance of the com.android.internal.widget.ScrollingView interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        computeHorizontalScrollExtent(): number;
                        computeHorizontalScrollOffset(): number;
                        computeHorizontalScrollRange(): number;
                        computeVerticalScrollExtent(): number;
                        computeVerticalScrollOffset(): number;
                        computeVerticalScrollRange(): number;
                    });
                    public constructor();
                    public computeVerticalScrollRange(): number;
                    public computeVerticalScrollExtent(): number;
                    public computeHorizontalScrollRange(): number;
                    public computeHorizontalScrollExtent(): number;
                    public computeHorizontalScrollOffset(): number;
                    public computeVerticalScrollOffset(): number;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export abstract class SimpleItemAnimator extends com.android.internal.widget.RecyclerView.ItemAnimator {
                    public static class: java.lang.Class<com.android.internal.widget.SimpleItemAnimator>;
                    public animateAdd(param0: com.android.internal.widget.RecyclerView.ViewHolder): boolean;
                    public animatePersistence(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo, param2: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo): boolean;
                    public onChangeFinished(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: boolean): void;
                    public dispatchMoveStarting(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                    public dispatchRemoveFinished(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                    public canReuseUpdatedViewHolder(param0: com.android.internal.widget.RecyclerView.ViewHolder): boolean;
                    public onMoveStarting(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                    public dispatchChangeStarting(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: boolean): void;
                    public dispatchRemoveStarting(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                    public animateDisappearance(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo, param2: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo): boolean;
                    public animateRemove(param0: com.android.internal.widget.RecyclerView.ViewHolder): boolean;
                    public constructor();
                    public onAddStarting(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                    public onRemoveStarting(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                    public dispatchAddStarting(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                    public setSupportsChangeAnimations(param0: boolean): void;
                    public animateAppearance(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo, param2: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo): boolean;
                    public animateMove(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: number, param2: number, param3: number, param4: number): boolean;
                    public onMoveFinished(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                    public animateChange(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: com.android.internal.widget.RecyclerView.ViewHolder, param2: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo, param3: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo): boolean;
                    public onAddFinished(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                    public dispatchAddFinished(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                    public onRemoveFinished(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                    public dispatchChangeFinished(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: boolean): void;
                    public dispatchMoveFinished(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                    public canReuseUpdatedViewHolder(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: java.util.List<any>): boolean;
                    public getSupportsChangeAnimations(): boolean;
                    public animateChange(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: com.android.internal.widget.RecyclerView.ViewHolder, param2: number, param3: number, param4: number, param5: number): boolean;
                    public onChangeStarting(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: boolean): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class SlidingTab extends globalAndroid.view.ViewGroup {
                    public static class: java.lang.Class<com.android.internal.widget.SlidingTab>;
                    public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                    public focusSearch(param0: number): globalAndroid.view.View;
                    public focusableViewAvailable(param0: globalAndroid.view.View): void;
                    public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                    public isLayoutRequested(): boolean;
                    public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public onVisibilityChanged(param0: globalAndroid.view.View, param1: number): void;
                    public isTextDirectionResolved(): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public setHoldAfterTrigger(param0: boolean, param1: boolean): void;
                    public isLayoutDirectionResolved(): boolean;
                    public setLeftTabResources(param0: number, param1: number, param2: number, param3: number): void;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public addView(param0: globalAndroid.view.View): void;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                    public clearChildFocus(param0: globalAndroid.view.View): void;
                    public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                    public getLayoutDirection(): number;
                    public reset(param0: boolean): void;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                    public bringChildToFront(param0: globalAndroid.view.View): void;
                    public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public setVisibility(param0: number): void;
                    public requestTransparentRegion(param0: globalAndroid.view.View): void;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                    public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public getTextDirection(): number;
                    public requestFitSystemWindows(): void;
                    public setOnTriggerListener(param0: com.android.internal.widget.SlidingTab.OnTriggerListener): void;
                    public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public getParent(): globalAndroid.view.ViewParent;
                    public isTextAlignmentResolved(): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                    public canResolveTextAlignment(): boolean;
                    public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                    public canResolveTextDirection(): boolean;
                    public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                    public setRightHintText(param0: number): void;
                    public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                    public requestDisallowInterceptTouchEvent(param0: boolean): void;
                    public addView(param0: globalAndroid.view.View, param1: number): void;
                    public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                    public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public requestLayout(): void;
                    public getParentForAccessibility(): globalAndroid.view.ViewParent;
                    public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                    public setLeftHintText(param0: number): void;
                    public onMeasure(param0: number, param1: number): void;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public canResolveLayoutDirection(): boolean;
                    public getTextAlignment(): number;
                    public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public removeView(param0: globalAndroid.view.View): void;
                    public constructor(param0: globalAndroid.content.Context);
                    public setRightTabResources(param0: number, param1: number, param2: number, param3: number): void;
                    public onStopNestedScroll(param0: globalAndroid.view.View): void;
                    public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                    public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                }
                export module SlidingTab {
                    export class OnTriggerListener extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.SlidingTab.OnTriggerListener>;
                        /**
                         * Constructs a new instance of the com.android.internal.widget.SlidingTab$OnTriggerListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            onGrabbedStateChange(param0: globalAndroid.view.View, param1: number): void;
                            onTrigger(param0: globalAndroid.view.View, param1: number): void;
                        });
                        public constructor();
                        public static RIGHT_HANDLE: number;
                        public static NO_HANDLE: number;
                        public static LEFT_HANDLE: number;
                        public onGrabbedStateChange(param0: globalAndroid.view.View, param1: number): void;
                        public onTrigger(param0: globalAndroid.view.View, param1: number): void;
                    }
                    export class Slider extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.SlidingTab.Slider>;
                        public static ALIGN_BOTTOM: number;
                        public static ALIGN_LEFT: number;
                        public static ALIGN_RIGHT: number;
                        public static ALIGN_TOP: number;
                        public static ALIGN_UNKNOWN: number;
                        public hideTarget(): void;
                        public measure(param0: number, param1: number): void;
                        public getTabHeight(): number;
                        public getTabWidth(): number;
                        public startAnimation(param0: globalAndroid.view.animation.Animation, param1: globalAndroid.view.animation.Animation): void;
                        public updateDrawableStates(): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class SubtitleView extends globalAndroid.view.View {
                    public static class: java.lang.Class<com.android.internal.widget.SubtitleView>;
                    public onMeasure(param0: number, param1: number): void;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public onDraw(param0: globalAndroid.graphics.Canvas): void;
                    public setText(param0: number): void;
                    public setTextSize(param0: number): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public setBackgroundColor(param0: number): void;
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public setEdgeColor(param0: number): void;
                    public constructor(param0: globalAndroid.content.Context);
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public setText(param0: string): void;
                    public setForegroundColor(param0: number): void;
                    public setAlignment(param0: globalAndroid.text.Layout.Alignment): void;
                    public setTypeface(param0: globalAndroid.graphics.Typeface): void;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
                    public setEdgeType(param0: number): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public setStyle(param0: number): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class SwipeDismissLayout extends globalAndroid.widget.FrameLayout {
                    public static class: java.lang.Class<com.android.internal.widget.SwipeDismissLayout>;
                    public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                    public focusSearch(param0: number): globalAndroid.view.View;
                    public focusableViewAvailable(param0: globalAndroid.view.View): void;
                    public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                    public isLayoutRequested(): boolean;
                    public onAttachedToWindow(): void;
                    public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public isTextDirectionResolved(): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public isLayoutDirectionResolved(): boolean;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public addView(param0: globalAndroid.view.View): void;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public setOnDismissedListener(param0: com.android.internal.widget.SwipeDismissLayout.OnDismissedListener): void;
                    public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                    public clearChildFocus(param0: globalAndroid.view.View): void;
                    public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                    public getLayoutDirection(): number;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                    public canScroll(param0: globalAndroid.view.View, param1: boolean, param2: number, param3: number, param4: number): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                    public bringChildToFront(param0: globalAndroid.view.View): void;
                    public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public requestTransparentRegion(param0: globalAndroid.view.View): void;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                    public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public getTextDirection(): number;
                    public requestFitSystemWindows(): void;
                    public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public getParent(): globalAndroid.view.ViewParent;
                    public isTextAlignmentResolved(): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                    public canResolveTextAlignment(): boolean;
                    public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                    public canResolveTextDirection(): boolean;
                    public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public setDismissable(param0: boolean): void;
                    public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                    public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                    public requestDisallowInterceptTouchEvent(param0: boolean): void;
                    public addView(param0: globalAndroid.view.View, param1: number): void;
                    public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                    public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public requestLayout(): void;
                    public getParentForAccessibility(): globalAndroid.view.ViewParent;
                    public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                    public onDetachedFromWindow(): void;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public canResolveLayoutDirection(): boolean;
                    public getTextAlignment(): number;
                    public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public cancel(): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public removeView(param0: globalAndroid.view.View): void;
                    public constructor(param0: globalAndroid.content.Context);
                    public onStopNestedScroll(param0: globalAndroid.view.View): void;
                    public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                    public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                    public setOnSwipeProgressChangedListener(param0: com.android.internal.widget.SwipeDismissLayout.OnSwipeProgressChangedListener): void;
                }
                export module SwipeDismissLayout {
                    export class DismissAnimator extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.SwipeDismissLayout.DismissAnimator>;
                        public onAnimationEnd(param0: globalAndroid.animation.Animator): void;
                        public onAnimationRepeat(param0: globalAndroid.animation.Animator): void;
                        public onAnimationUpdate(param0: globalAndroid.animation.ValueAnimator): void;
                        public onAnimationCancel(param0: globalAndroid.animation.Animator): void;
                        public onAnimationStart(param0: globalAndroid.animation.Animator): void;
                    }
                    export class OnDismissedListener extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.SwipeDismissLayout.OnDismissedListener>;
                        /**
                         * Constructs a new instance of the com.android.internal.widget.SwipeDismissLayout$OnDismissedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            onDismissed(param0: com.android.internal.widget.SwipeDismissLayout): void;
                        });
                        public constructor();
                        public onDismissed(param0: com.android.internal.widget.SwipeDismissLayout): void;
                    }
                    export class OnSwipeProgressChangedListener extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.SwipeDismissLayout.OnSwipeProgressChangedListener>;
                        /**
                         * Constructs a new instance of the com.android.internal.widget.SwipeDismissLayout$OnSwipeProgressChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            onSwipeCancelled(param0: com.android.internal.widget.SwipeDismissLayout): void;
                            onSwipeProgressChanged(param0: com.android.internal.widget.SwipeDismissLayout, param1: number, param2: number): void;
                        });
                        public constructor();
                        public onSwipeProgressChanged(param0: com.android.internal.widget.SwipeDismissLayout, param1: number, param2: number): void;
                        public onSwipeCancelled(param0: com.android.internal.widget.SwipeDismissLayout): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class TextProgressBar extends globalAndroid.widget.RelativeLayout implements globalAndroid.widget.Chronometer.OnChronometerTickListener {
                    public static class: java.lang.Class<com.android.internal.widget.TextProgressBar>;
                    public static TAG: string;
                    public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                    public focusSearch(param0: number): globalAndroid.view.View;
                    public focusableViewAvailable(param0: globalAndroid.view.View): void;
                    public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                    public isLayoutRequested(): boolean;
                    public onChronometerTick(param0: globalAndroid.widget.Chronometer): void;
                    public isTextDirectionResolved(): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public isLayoutDirectionResolved(): boolean;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                    public setDurationBase(param0: number): void;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public addView(param0: globalAndroid.view.View): void;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                    public clearChildFocus(param0: globalAndroid.view.View): void;
                    public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                    public getLayoutDirection(): number;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                    public bringChildToFront(param0: globalAndroid.view.View): void;
                    public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public requestTransparentRegion(param0: globalAndroid.view.View): void;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                    public getTextDirection(): number;
                    public requestFitSystemWindows(): void;
                    public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public getParent(): globalAndroid.view.ViewParent;
                    public isTextAlignmentResolved(): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                    public canResolveTextAlignment(): boolean;
                    public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                    public canResolveTextDirection(): boolean;
                    public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                    public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                    public requestDisallowInterceptTouchEvent(param0: boolean): void;
                    public addView(param0: globalAndroid.view.View, param1: number): void;
                    public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                    public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public requestLayout(): void;
                    public getParentForAccessibility(): globalAndroid.view.ViewParent;
                    public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public canResolveLayoutDirection(): boolean;
                    public getTextAlignment(): number;
                    public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public removeView(param0: globalAndroid.view.View): void;
                    public constructor(param0: globalAndroid.content.Context);
                    public onStopNestedScroll(param0: globalAndroid.view.View): void;
                    public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                    public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class TextViewInputDisabler extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.widget.TextViewInputDisabler>;
                    public constructor(param0: globalAndroid.widget.TextView);
                    public setInputEnabled(param0: boolean): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class ToolbarWidgetWrapper extends com.android.internal.widget.DecorToolbar {
                    public static class: java.lang.Class<com.android.internal.widget.ToolbarWidgetWrapper>;
                    public getTitle(): string;
                    public setLogo(param0: number): void;
                    public setNavigationIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public getNavigationMode(): number;
                    public constructor(param0: globalAndroid.widget.Toolbar, param1: boolean);
                    public setTitle(param0: string): void;
                    public setDefaultNavigationContentDescription(param0: number): void;
                    public getContext(): globalAndroid.content.Context;
                    public getVisibility(): number;
                    public hideOverflowMenu(): boolean;
                    public saveHierarchyState(param0: globalAndroid.util.SparseArray<globalAndroid.os.Parcelable>): void;
                    public setCollapsible(param0: boolean): void;
                    public canShowOverflowMenu(): boolean;
                    public getViewGroup(): globalAndroid.view.ViewGroup;
                    public isOverflowMenuShowPending(): boolean;
                    public setDropdownParams(param0: globalAndroid.widget.SpinnerAdapter, param1: globalAndroid.widget.AdapterView.OnItemSelectedListener): void;
                    public getHeight(): number;
                    public hasLogo(): boolean;
                    public getDropdownItemCount(): number;
                    public setDisplayOptions(param0: number): void;
                    public setMenuPrepared(): void;
                    public isTitleTruncated(): boolean;
                    public setIcon(param0: number): void;
                    public setupAnimatorToVisibility(param0: number, param1: number): globalAndroid.animation.Animator;
                    public animateToVisibility(param0: number): void;
                    public setVisibility(param0: number): void;
                    public initProgress(): void;
                    public setSplitWhenNarrow(param0: boolean): void;
                    public setIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public hasExpandedActionView(): boolean;
                    public isOverflowMenuShowing(): boolean;
                    public showOverflowMenu(): boolean;
                    public constructor(param0: globalAndroid.widget.Toolbar, param1: boolean, param2: number);
                    public setDropdownSelectedPosition(param0: number): void;
                    public setWindowCallback(param0: globalAndroid.view.Window.Callback): void;
                    public restoreHierarchyState(param0: globalAndroid.util.SparseArray<globalAndroid.os.Parcelable>): void;
                    public getCustomView(): globalAndroid.view.View;
                    public setBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public setNavigationContentDescription(param0: number): void;
                    public getDropdownSelectedPosition(): number;
                    public setMenuCallbacks(param0: com.android.internal.view.menu.MenuPresenter.Callback, param1: com.android.internal.view.menu.MenuBuilder.Callback): void;
                    public setSplitToolbar(param0: boolean): void;
                    public isSplit(): boolean;
                    public setCustomView(param0: globalAndroid.view.View): void;
                    public setDefaultNavigationIcon(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public setMenu(param0: globalAndroid.view.Menu, param1: com.android.internal.view.menu.MenuPresenter.Callback): void;
                    public setSplitView(param0: globalAndroid.view.ViewGroup): void;
                    public setNavigationIcon(param0: number): void;
                    public dismissPopupMenus(): void;
                    public getMenu(): globalAndroid.view.Menu;
                    public collapseActionView(): void;
                    public setNavigationMode(param0: number): void;
                    public initIndeterminateProgress(): void;
                    public setLogo(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public canSplit(): boolean;
                    public setEmbeddedTabView(param0: com.android.internal.widget.ScrollingTabContainerView): void;
                    public setNavigationContentDescription(param0: string): void;
                    public hasEmbeddedTabs(): boolean;
                    public setSubtitle(param0: string): void;
                    public getDisplayOptions(): number;
                    public getSubtitle(): string;
                    public hasIcon(): boolean;
                    public setHomeButtonEnabled(param0: boolean): void;
                    public setWindowTitle(param0: string): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class VerifyCredentialResponse extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.widget.VerifyCredentialResponse>;
                    public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.widget.VerifyCredentialResponse>;
                    public static ERROR: com.android.internal.widget.VerifyCredentialResponse;
                    public static OK: com.android.internal.widget.VerifyCredentialResponse;
                    public static RESPONSE_ERROR: number;
                    public static RESPONSE_OK: number;
                    public static RESPONSE_RETRY: number;
                    public constructor(param0: number[]);
                    public getResponseCode(): number;
                    public getTimeout(): number;
                    public constructor();
                    public describeContents(): number;
                    public getPayload(): number[];
                    public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                    public constructor(param0: number);
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class ViewInfoStore extends java.lang.Object {
                    public static class: java.lang.Class<com.android.internal.widget.ViewInfoStore>;
                    public onViewDetached(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                }
                export module ViewInfoStore {
                    export class InfoRecord extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.ViewInfoStore.InfoRecord>;
                    }
                    export class ProcessCallback extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.ViewInfoStore.ProcessCallback>;
                        /**
                         * Constructs a new instance of the com.android.internal.widget.ViewInfoStore$ProcessCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            processAppeared(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo, param2: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo): void;
                            processDisappeared(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo, param2: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo): void;
                            processPersistent(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo, param2: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo): void;
                            unused(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                        });
                        public constructor();
                        public unused(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                        public processAppeared(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo, param2: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo): void;
                        public processPersistent(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo, param2: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo): void;
                        public processDisappeared(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo, param2: com.android.internal.widget.RecyclerView.ItemAnimator.ItemHolderInfo): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class ViewPager extends globalAndroid.view.ViewGroup {
                    public static class: java.lang.Class<com.android.internal.widget.ViewPager>;
                    public static SCROLL_STATE_DRAGGING: number;
                    public static SCROLL_STATE_IDLE: number;
                    public static SCROLL_STATE_SETTLING: number;
                    public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                    public getChildDrawingOrder(param0: number, param1: number): number;
                    public setOffscreenPageLimit(param0: number): void;
                    public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                    public isTextDirectionResolved(): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public addView(param0: globalAndroid.view.View): void;
                    public setPageTransformer(param0: boolean, param1: com.android.internal.widget.ViewPager.PageTransformer): void;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public clearChildFocus(param0: globalAndroid.view.View): void;
                    public getPageMargin(): number;
                    public getLayoutDirection(): number;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                    public setPageMarginDrawable(param0: number): void;
                    public requestTransparentRegion(param0: globalAndroid.view.View): void;
                    public getCurrentItem(): number;
                    public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public setAdapter(param0: com.android.internal.widget.PagerAdapter): void;
                    public onSaveInstanceState(): globalAndroid.os.Parcelable;
                    public addTouchables(param0: java.util.ArrayList<globalAndroid.view.View>): void;
                    public getParent(): globalAndroid.view.ViewParent;
                    public isTextAlignmentResolved(): boolean;
                    public canResolveTextAlignment(): boolean;
                    public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                    public getOffscreenPageLimit(): number;
                    public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                    public onPageScrolled(param0: number, param1: number, param2: number): void;
                    public generateDefaultLayoutParams(): globalAndroid.view.ViewGroup.LayoutParams;
                    public sendAccessibilityEvent(param0: number): void;
                    public requestLayout(): void;
                    public onInitializeAccessibilityNodeInfo(param0: globalAndroid.view.accessibility.AccessibilityNodeInfo): void;
                    public onDetachedFromWindow(): void;
                    public onMeasure(param0: number, param1: number): void;
                    public onRtlPropertiesChanged(param0: number): void;
                    public getTextAlignment(): number;
                    public dispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
                    public generateLayoutParams(param0: globalAndroid.util.AttributeSet): globalAndroid.view.ViewGroup.LayoutParams;
                    public canScrollHorizontally(param0: number): boolean;
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public constructor(param0: globalAndroid.content.Context);
                    public onRequestFocusInDescendants(param0: number, param1: globalAndroid.graphics.Rect): boolean;
                    public onInitializeAccessibilityEvent(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                    public getCurrent(): any;
                    public setOnPageChangeListener(param0: com.android.internal.widget.ViewPager.OnPageChangeListener): void;
                    public focusSearch(param0: number): globalAndroid.view.View;
                    public focusableViewAvailable(param0: globalAndroid.view.View): void;
                    public setPageMarginDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
                    public executeKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
                    public populate(): void;
                    public setCurrentItem(param0: number): void;
                    public verifyDrawable(param0: globalAndroid.graphics.drawable.Drawable): boolean;
                    public isLayoutRequested(): boolean;
                    public onAttachedToWindow(): void;
                    public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public generateLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): globalAndroid.view.ViewGroup.LayoutParams;
                    public isLayoutDirectionResolved(): boolean;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                    public checkLayoutParams(param0: globalAndroid.view.ViewGroup.LayoutParams): boolean;
                    public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                    public arrowScroll(param0: number): boolean;
                    public onDraw(param0: globalAndroid.graphics.Canvas): void;
                    public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                    public setPageMargin(param0: number): void;
                    public canScroll(param0: globalAndroid.view.View, param1: boolean, param2: number, param3: number, param4: number): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                    public bringChildToFront(param0: globalAndroid.view.View): void;
                    public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public computeScroll(): void;
                    public performAccessibilityAction(param0: number, param1: globalAndroid.os.Bundle): boolean;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                    public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
                    public getTextDirection(): number;
                    public drawableStateChanged(): void;
                    public requestFitSystemWindows(): void;
                    public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                    public canResolveTextDirection(): boolean;
                    public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                    public requestDisallowInterceptTouchEvent(param0: boolean): void;
                    public getAdapter(): com.android.internal.widget.PagerAdapter;
                    public addView(param0: globalAndroid.view.View, param1: number): void;
                    public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public addFocusables(param0: java.util.ArrayList<globalAndroid.view.View>, param1: number, param2: number): void;
                    public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                    public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                    public getParentForAccessibility(): globalAndroid.view.ViewParent;
                    public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public canResolveLayoutDirection(): boolean;
                    public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                    public onSizeChanged(param0: number, param1: number, param2: number, param3: number): void;
                    public removeView(param0: globalAndroid.view.View): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public onStopNestedScroll(param0: globalAndroid.view.View): void;
                    public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    public draw(param0: globalAndroid.graphics.Canvas): void;
                    public setCurrentItem(param0: number, param1: boolean): void;
                    public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                    public addFocusables(param0: java.util.ArrayList<globalAndroid.view.View>, param1: number): void;
                }
                export module ViewPager {
                    export class Decor extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.ViewPager.Decor>;
                        /**
                         * Constructs a new instance of the com.android.internal.widget.ViewPager$Decor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {});
                        public constructor();
                    }
                    export class ItemInfo extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.ViewPager.ItemInfo>;
                    }
                    export class LayoutParams extends globalAndroid.view.ViewGroup.LayoutParams {
                        public static class: java.lang.Class<com.android.internal.widget.ViewPager.LayoutParams>;
                        public gravity: number;
                        public isDecor: boolean;
                        public constructor(param0: globalAndroid.view.ViewGroup.LayoutParams);
                        public constructor();
                        public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                        public constructor(param0: number, param1: number);
                    }
                    export class OnAdapterChangeListener extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.ViewPager.OnAdapterChangeListener>;
                        /**
                         * Constructs a new instance of the com.android.internal.widget.ViewPager$OnAdapterChangeListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            onAdapterChanged(param0: com.android.internal.widget.PagerAdapter, param1: com.android.internal.widget.PagerAdapter): void;
                        });
                        public constructor();
                        public onAdapterChanged(param0: com.android.internal.widget.PagerAdapter, param1: com.android.internal.widget.PagerAdapter): void;
                    }
                    export class OnPageChangeListener extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.ViewPager.OnPageChangeListener>;
                        /**
                         * Constructs a new instance of the com.android.internal.widget.ViewPager$OnPageChangeListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            onPageScrollStateChanged(param0: number): void;
                            onPageScrolled(param0: number, param1: number, param2: number): void;
                            onPageSelected(param0: number): void;
                        });
                        public constructor();
                        public onPageSelected(param0: number): void;
                        public onPageScrolled(param0: number, param1: number, param2: number): void;
                        public onPageScrollStateChanged(param0: number): void;
                    }
                    export class PageTransformer extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.ViewPager.PageTransformer>;
                        /**
                         * Constructs a new instance of the com.android.internal.widget.ViewPager$PageTransformer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            transformPage(param0: globalAndroid.view.View, param1: number): void;
                        });
                        public constructor();
                        public transformPage(param0: globalAndroid.view.View, param1: number): void;
                    }
                    export class PagerObserver extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.ViewPager.PagerObserver>;
                        public onChanged(): void;
                        public onInvalidated(): void;
                    }
                    export class SavedState extends globalAndroid.view.AbsSavedState {
                        public static class: java.lang.Class<com.android.internal.widget.ViewPager.SavedState>;
                        public static CREATOR: globalAndroid.os.Parcelable.Creator<com.android.internal.widget.ViewPager.SavedState>;
                        public constructor(param0: globalAndroid.os.Parcel);
                        public constructor(param0: globalAndroid.os.Parcel, param1: java.lang.ClassLoader);
                        public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
                        public constructor(param0: globalAndroid.os.Parcelable);
                        public toString(): string;
                    }
                    export class SimpleOnPageChangeListener extends com.android.internal.widget.ViewPager.OnPageChangeListener {
                        public static class: java.lang.Class<com.android.internal.widget.ViewPager.SimpleOnPageChangeListener>;
                        public constructor();
                        public onPageSelected(param0: number): void;
                        public onPageScrolled(param0: number, param1: number, param2: number): void;
                        public onPageScrollStateChanged(param0: number): void;
                    }
                    export class ViewPositionComparator extends java.util.Comparator<globalAndroid.view.View> {
                        public static class: java.lang.Class<com.android.internal.widget.ViewPager.ViewPositionComparator>;
                        public compare(param0: globalAndroid.view.View, param1: globalAndroid.view.View): number;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class WatchHeaderListView extends globalAndroid.widget.ListView {
                    public static class: java.lang.Class<com.android.internal.widget.WatchHeaderListView>;
                    public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                    public findViewWithTagTraversal(param0: any): globalAndroid.view.View;
                    public focusSearch(param0: number): globalAndroid.view.View;
                    public focusableViewAvailable(param0: globalAndroid.view.View): void;
                    public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                    public isLayoutRequested(): boolean;
                    public isTextDirectionResolved(): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public isLayoutDirectionResolved(): boolean;
                    public afterTextChanged(param0: globalAndroid.text.Editable): void;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public addView(param0: globalAndroid.view.View): void;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public setRemoteViewsAdapter(param0: globalAndroid.content.Intent, param1: boolean): void;
                    public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                    public clearChildFocus(param0: globalAndroid.view.View): void;
                    public setTopPanel(param0: globalAndroid.view.View): void;
                    public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                    public onRemoteAdapterConnected(): boolean;
                    public getLayoutDirection(): number;
                    public onGlobalLayout(): void;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                    public wrapHeaderListAdapterInternal(): void;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                    public bringChildToFront(param0: globalAndroid.view.View): void;
                    public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public requestTransparentRegion(param0: globalAndroid.view.View): void;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                    public getTextDirection(): number;
                    public beforeTextChanged(param0: string, param1: number, param2: number, param3: number): void;
                    public onFilterComplete(param0: number): void;
                    public requestFitSystemWindows(): void;
                    public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public wrapHeaderListAdapterInternal(param0: java.util.ArrayList<globalAndroid.widget.ListView.FixedViewInfo>, param1: java.util.ArrayList<globalAndroid.widget.ListView.FixedViewInfo>, param2: globalAndroid.widget.ListAdapter): globalAndroid.widget.HeaderViewListAdapter;
                    public getParent(): globalAndroid.view.ViewParent;
                    public isTextAlignmentResolved(): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                    public onTextChanged(param0: string, param1: number, param2: number, param3: number): void;
                    public findViewTraversal(param0: number): globalAndroid.view.View;
                    public deferNotifyDataSetChanged(): void;
                    public canResolveTextAlignment(): boolean;
                    public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                    public canResolveTextDirection(): boolean;
                    public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                    public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                    public requestDisallowInterceptTouchEvent(param0: boolean): void;
                    public setAdapter(param0: any): void;
                    public addView(param0: globalAndroid.view.View, param1: number): void;
                    public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                    public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public findViewByPredicateTraversal(param0: any /* any*/, param1: globalAndroid.view.View): globalAndroid.view.View;
                    public requestLayout(): void;
                    public getParentForAccessibility(): globalAndroid.view.ViewParent;
                    public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public canResolveLayoutDirection(): boolean;
                    public getTextAlignment(): number;
                    public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public removeView(param0: globalAndroid.view.View): void;
                    public constructor(param0: globalAndroid.content.Context);
                    public onStopNestedScroll(param0: globalAndroid.view.View): void;
                    public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    public onRemoteAdapterDisconnected(): void;
                    public getHeaderViewsCount(): number;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                    public onTouchModeChanged(param0: boolean): void;
                    public setAdapter(param0: globalAndroid.widget.ListAdapter): void;
                    public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                    public setRemoteViewsAdapter(param0: globalAndroid.content.Intent): void;
                }
                export module WatchHeaderListView {
                    export class WatchHeaderListAdapter extends globalAndroid.widget.HeaderViewListAdapter {
                        public static class: java.lang.Class<com.android.internal.widget.WatchHeaderListView.WatchHeaderListAdapter>;
                        public isEnabled(param0: number): boolean;
                        public areAllItemsEnabled(): boolean;
                        public getFilter(): globalAndroid.widget.Filter;
                        public constructor(param0: java.util.ArrayList<globalAndroid.widget.ListView.FixedViewInfo>, param1: java.util.ArrayList<globalAndroid.widget.ListView.FixedViewInfo>, param2: globalAndroid.widget.ListAdapter);
                        public setTopPanel(param0: globalAndroid.view.View): void;
                        public getItemViewType(param0: number): number;
                        public getItemId(param0: number): number;
                        public getView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
                        public getWrappedAdapter(): globalAndroid.widget.ListAdapter;
                        public getCount(): number;
                        public getItem(param0: number): any;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class WatchListDecorLayout extends globalAndroid.widget.FrameLayout implements globalAndroid.view.ViewTreeObserver.OnScrollChangedListener {
                    public static class: java.lang.Class<com.android.internal.widget.WatchListDecorLayout>;
                    public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                    public focusSearch(param0: number): globalAndroid.view.View;
                    public focusableViewAvailable(param0: globalAndroid.view.View): void;
                    public onScrollChanged(): void;
                    public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                    public isLayoutRequested(): boolean;
                    public onAttachedToWindow(): void;
                    public isTextDirectionResolved(): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public isLayoutDirectionResolved(): boolean;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public addView(param0: globalAndroid.view.View): void;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                    public clearChildFocus(param0: globalAndroid.view.View): void;
                    public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                    public getLayoutDirection(): number;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                    public bringChildToFront(param0: globalAndroid.view.View): void;
                    public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public requestTransparentRegion(param0: globalAndroid.view.View): void;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                    public getTextDirection(): number;
                    public requestFitSystemWindows(): void;
                    public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public getParent(): globalAndroid.view.ViewParent;
                    public isTextAlignmentResolved(): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                    public canResolveTextAlignment(): boolean;
                    public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                    public canResolveTextDirection(): boolean;
                    public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                    public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                    public requestDisallowInterceptTouchEvent(param0: boolean): void;
                    public addView(param0: globalAndroid.view.View, param1: number): void;
                    public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public setForegroundGravity(param0: number): void;
                    public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                    public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public requestLayout(): void;
                    public getParentForAccessibility(): globalAndroid.view.ViewParent;
                    public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                    public onDetachedFromWindow(): void;
                    public onMeasure(param0: number, param1: number): void;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public canResolveLayoutDirection(): boolean;
                    public getTextAlignment(): number;
                    public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public removeView(param0: globalAndroid.view.View): void;
                    public constructor(param0: globalAndroid.content.Context);
                    public onStopNestedScroll(param0: globalAndroid.view.View): void;
                    public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    public onScrollChanged(param0: number, param1: number, param2: number, param3: number): void;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                    public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export class WeightedLinearLayout extends globalAndroid.widget.LinearLayout {
                    public static class: java.lang.Class<com.android.internal.widget.WeightedLinearLayout>;
                    public invalidateChildInParent(param0: number[], param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
                    public focusSearch(param0: number): globalAndroid.view.View;
                    public focusableViewAvailable(param0: globalAndroid.view.View): void;
                    public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
                    public isLayoutRequested(): boolean;
                    public isTextDirectionResolved(): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
                    public isLayoutDirectionResolved(): boolean;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
                    public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public addView(param0: globalAndroid.view.View): void;
                    public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public keyboardNavigationClusterSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
                    public onNestedPreFling(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public recomputeViewAttributes(param0: globalAndroid.view.View): void;
                    public clearChildFocus(param0: globalAndroid.view.View): void;
                    public onNestedScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
                    public getLayoutDirection(): number;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback, param2: number): globalAndroid.view.ActionMode;
                    public bringChildToFront(param0: globalAndroid.view.View): void;
                    public showContextMenuForChild(param0: globalAndroid.view.View, param1: number, param2: number): boolean;
                    public requestTransparentRegion(param0: globalAndroid.view.View): void;
                    public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
                    public childDrawableStateChanged(param0: globalAndroid.view.View): void;
                    public getTextDirection(): number;
                    public requestFitSystemWindows(): void;
                    public notifySubtreeAccessibilityStateChanged(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public getParent(): globalAndroid.view.ViewParent;
                    public isTextAlignmentResolved(): boolean;
                    public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
                    public canResolveTextAlignment(): boolean;
                    public childHasTransientStateChanged(param0: globalAndroid.view.View, param1: boolean): void;
                    public canResolveTextDirection(): boolean;
                    public onDescendantInvalidated(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
                    public onStartNestedScroll(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): boolean;
                    public onNestedFling(param0: globalAndroid.view.View, param1: number, param2: number, param3: boolean): boolean;
                    public requestDisallowInterceptTouchEvent(param0: boolean): void;
                    public addView(param0: globalAndroid.view.View, param1: number): void;
                    public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
                    public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
                    public onNestedPreScroll(param0: globalAndroid.view.View, param1: number, param2: number, param3: number[]): void;
                    public sendAccessibilityEvent(param0: number): void;
                    public requestLayout(): void;
                    public getParentForAccessibility(): globalAndroid.view.ViewParent;
                    public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
                    public onMeasure(param0: number, param1: number): void;
                    public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
                    public canResolveLayoutDirection(): boolean;
                    public getTextAlignment(): number;
                    public onNestedScrollAccepted(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number): void;
                    public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
                    public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
                    public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
                    public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
                    public removeView(param0: globalAndroid.view.View): void;
                    public constructor(param0: globalAndroid.content.Context);
                    public onStopNestedScroll(param0: globalAndroid.view.View): void;
                    public onNestedPrePerformAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
                    public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: boolean): boolean;
                    public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export module helper {
                    export class ItemTouchHelper extends com.android.internal.widget.RecyclerView.ItemDecoration implements com.android.internal.widget.RecyclerView.OnChildAttachStateChangeListener {
                        public static class: java.lang.Class<com.android.internal.widget.helper.ItemTouchHelper>;
                        public static ACTION_STATE_DRAG: number;
                        public static ACTION_STATE_IDLE: number;
                        public static ACTION_STATE_SWIPE: number;
                        public static ANIMATION_TYPE_DRAG: number;
                        public static ANIMATION_TYPE_SWIPE_CANCEL: number;
                        public static ANIMATION_TYPE_SWIPE_SUCCESS: number;
                        public static DOWN: number;
                        public static END: number;
                        public static LEFT: number;
                        public static RIGHT: number;
                        public static START: number;
                        public static UP: number;
                        public onChildViewDetachedFromWindow(param0: globalAndroid.view.View): void;
                        public constructor();
                        public constructor(param0: com.android.internal.widget.helper.ItemTouchHelper.Callback);
                        public onDrawOver(param0: globalAndroid.graphics.Canvas, param1: com.android.internal.widget.RecyclerView, param2: com.android.internal.widget.RecyclerView.State): void;
                        public getItemOffsets(param0: globalAndroid.graphics.Rect, param1: globalAndroid.view.View, param2: com.android.internal.widget.RecyclerView, param3: com.android.internal.widget.RecyclerView.State): void;
                        public getItemOffsets(param0: globalAndroid.graphics.Rect, param1: number, param2: com.android.internal.widget.RecyclerView): void;
                        public onDrawOver(param0: globalAndroid.graphics.Canvas, param1: com.android.internal.widget.RecyclerView): void;
                        public onDraw(param0: globalAndroid.graphics.Canvas, param1: com.android.internal.widget.RecyclerView): void;
                        public startDrag(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                        public attachToRecyclerView(param0: com.android.internal.widget.RecyclerView): void;
                        public onDraw(param0: globalAndroid.graphics.Canvas, param1: com.android.internal.widget.RecyclerView, param2: com.android.internal.widget.RecyclerView.State): void;
                        public startSwipe(param0: com.android.internal.widget.RecyclerView.ViewHolder): void;
                        public onChildViewAttachedToWindow(param0: globalAndroid.view.View): void;
                    }
                    export module ItemTouchHelper {
                        export abstract class Callback {
                            public static class: java.lang.Class<com.android.internal.widget.helper.ItemTouchHelper.Callback>;
                            public static DEFAULT_DRAG_ANIMATION_DURATION: number;
                            public static DEFAULT_SWIPE_ANIMATION_DURATION: number;
                            public getSwipeThreshold(param0: com.android.internal.widget.RecyclerView.ViewHolder): number;
                            public static makeMovementFlags(param0: number, param1: number): number;
                            public getSwipeVelocityThreshold(param0: number): number;
                            public chooseDropTarget(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: java.util.List<com.android.internal.widget.RecyclerView.ViewHolder>, param2: number, param3: number): com.android.internal.widget.RecyclerView.ViewHolder;
                            public onSelectedChanged(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: number): void;
                            public clearView(param0: com.android.internal.widget.RecyclerView, param1: com.android.internal.widget.RecyclerView.ViewHolder): void;
                            public getAnimationDuration(param0: com.android.internal.widget.RecyclerView, param1: number, param2: number, param3: number): number;
                            public getSwipeEscapeVelocity(param0: number): number;
                            public onMoved(param0: com.android.internal.widget.RecyclerView, param1: com.android.internal.widget.RecyclerView.ViewHolder, param2: number, param3: com.android.internal.widget.RecyclerView.ViewHolder, param4: number, param5: number, param6: number): void;
                            public isItemViewSwipeEnabled(): boolean;
                            public constructor();
                            public static getDefaultUIUtil(): com.android.internal.widget.helper.ItemTouchUIUtil;
                            public onChildDraw(param0: globalAndroid.graphics.Canvas, param1: com.android.internal.widget.RecyclerView, param2: com.android.internal.widget.RecyclerView.ViewHolder, param3: number, param4: number, param5: number, param6: boolean): void;
                            public onMove(param0: com.android.internal.widget.RecyclerView, param1: com.android.internal.widget.RecyclerView.ViewHolder, param2: com.android.internal.widget.RecyclerView.ViewHolder): boolean;
                            public getMovementFlags(param0: com.android.internal.widget.RecyclerView, param1: com.android.internal.widget.RecyclerView.ViewHolder): number;
                            public onSwiped(param0: com.android.internal.widget.RecyclerView.ViewHolder, param1: number): void;
                            public static makeFlag(param0: number, param1: number): number;
                            public getBoundingBoxMargin(): number;
                            public interpolateOutOfBoundsScroll(param0: com.android.internal.widget.RecyclerView, param1: number, param2: number, param3: number, param4: number): number;
                            public convertToAbsoluteDirection(param0: number, param1: number): number;
                            public getMoveThreshold(param0: com.android.internal.widget.RecyclerView.ViewHolder): number;
                            public onChildDrawOver(param0: globalAndroid.graphics.Canvas, param1: com.android.internal.widget.RecyclerView, param2: com.android.internal.widget.RecyclerView.ViewHolder, param3: number, param4: number, param5: number, param6: boolean): void;
                            public canDropOver(param0: com.android.internal.widget.RecyclerView, param1: com.android.internal.widget.RecyclerView.ViewHolder, param2: com.android.internal.widget.RecyclerView.ViewHolder): boolean;
                            public static convertToRelativeDirection(param0: number, param1: number): number;
                            public isLongPressDragEnabled(): boolean;
                        }
                        export class ItemTouchHelperGestureListener extends globalAndroid.view.GestureDetector.SimpleOnGestureListener {
                            public static class: java.lang.Class<com.android.internal.widget.helper.ItemTouchHelper.ItemTouchHelperGestureListener>;
                            public onDown(param0: globalAndroid.view.MotionEvent): boolean;
                            public onSingleTapConfirmed(param0: globalAndroid.view.MotionEvent): boolean;
                            public onLongPress(param0: globalAndroid.view.MotionEvent): void;
                            public onSingleTapUp(param0: globalAndroid.view.MotionEvent): boolean;
                            public onFling(param0: globalAndroid.view.MotionEvent, param1: globalAndroid.view.MotionEvent, param2: number, param3: number): boolean;
                            public onContextClick(param0: globalAndroid.view.MotionEvent): boolean;
                            public onScroll(param0: globalAndroid.view.MotionEvent, param1: globalAndroid.view.MotionEvent, param2: number, param3: number): boolean;
                            public onDoubleTap(param0: globalAndroid.view.MotionEvent): boolean;
                            public onShowPress(param0: globalAndroid.view.MotionEvent): void;
                            public onDoubleTapEvent(param0: globalAndroid.view.MotionEvent): boolean;
                        }
                        export class RecoverAnimation extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.widget.helper.ItemTouchHelper.RecoverAnimation>;
                            public mIsPendingCleanup: boolean;
                            public cancel(): void;
                            public onAnimationStart(param0: globalAndroid.animation.Animator): void;
                            public setFraction(param0: number): void;
                            public setDuration(param0: number): void;
                            public onAnimationCancel(param0: globalAndroid.animation.Animator): void;
                            public start(): void;
                            public onAnimationEnd(param0: globalAndroid.animation.Animator): void;
                            public onAnimationRepeat(param0: globalAndroid.animation.Animator): void;
                            public update(): void;
                        }
                        export abstract class SimpleCallback extends com.android.internal.widget.helper.ItemTouchHelper.Callback {
                            public static class: java.lang.Class<com.android.internal.widget.helper.ItemTouchHelper.SimpleCallback>;
                            public constructor();
                            public getMovementFlags(param0: com.android.internal.widget.RecyclerView, param1: com.android.internal.widget.RecyclerView.ViewHolder): number;
                            public constructor(param0: number, param1: number);
                            public getDragDirs(param0: com.android.internal.widget.RecyclerView, param1: com.android.internal.widget.RecyclerView.ViewHolder): number;
                            public getSwipeDirs(param0: com.android.internal.widget.RecyclerView, param1: com.android.internal.widget.RecyclerView.ViewHolder): number;
                            public setDefaultSwipeDirs(param0: number): void;
                            public setDefaultDragDirs(param0: number): void;
                        }
                        export class ViewDropHandler extends java.lang.Object {
                            public static class: java.lang.Class<com.android.internal.widget.helper.ItemTouchHelper.ViewDropHandler>;
                            /**
                             * Constructs a new instance of the com.android.internal.widget.helper.ItemTouchHelper$ViewDropHandler interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                             */
                            public constructor(implementation: {
                                prepareForDrop(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number, param3: number): void;
                            });
                            public constructor();
                            public prepareForDrop(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: number, param3: number): void;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export module helper {
                    export class ItemTouchUIUtil extends java.lang.Object {
                        public static class: java.lang.Class<com.android.internal.widget.helper.ItemTouchUIUtil>;
                        /**
                         * Constructs a new instance of the com.android.internal.widget.helper.ItemTouchUIUtil interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            clearView(param0: globalAndroid.view.View): void;
                            onDraw(param0: globalAndroid.graphics.Canvas, param1: com.android.internal.widget.RecyclerView, param2: globalAndroid.view.View, param3: number, param4: number, param5: number, param6: boolean): void;
                            onDrawOver(param0: globalAndroid.graphics.Canvas, param1: com.android.internal.widget.RecyclerView, param2: globalAndroid.view.View, param3: number, param4: number, param5: number, param6: boolean): void;
                            onSelected(param0: globalAndroid.view.View): void;
                        });
                        public constructor();
                        public onSelected(param0: globalAndroid.view.View): void;
                        public onDraw(param0: globalAndroid.graphics.Canvas, param1: com.android.internal.widget.RecyclerView, param2: globalAndroid.view.View, param3: number, param4: number, param5: number, param6: boolean): void;
                        public clearView(param0: globalAndroid.view.View): void;
                        public onDrawOver(param0: globalAndroid.graphics.Canvas, param1: com.android.internal.widget.RecyclerView, param2: globalAndroid.view.View, param3: number, param4: number, param5: number, param6: boolean): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module internal {
            export module widget {
                export module helper {
                    export class ItemTouchUIUtilImpl extends com.android.internal.widget.helper.ItemTouchUIUtil {
                        public static class: java.lang.Class<com.android.internal.widget.helper.ItemTouchUIUtilImpl>;
                        public onSelected(param0: globalAndroid.view.View): void;
                        public onDraw(param0: globalAndroid.graphics.Canvas, param1: com.android.internal.widget.RecyclerView, param2: globalAndroid.view.View, param3: number, param4: number, param5: number, param6: boolean): void;
                        public clearView(param0: globalAndroid.view.View): void;
                        public onDrawOver(param0: globalAndroid.graphics.Canvas, param1: com.android.internal.widget.RecyclerView, param2: globalAndroid.view.View, param3: number, param4: number, param5: number, param6: boolean): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module net {
            export class IProxyCallback extends java.lang.Object {
                public static class: java.lang.Class<com.android.net.IProxyCallback>;
                /**
                 * Constructs a new instance of the com.android.net.IProxyCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                 */
                public constructor(implementation: {
                    getProxyPort(param0: globalAndroid.os.IBinder): void;
                });
                public constructor();
                public getProxyPort(param0: globalAndroid.os.IBinder): void;
            }
            export module IProxyCallback {
                export abstract class Stub implements com.android.net.IProxyCallback {
                    public static class: java.lang.Class<com.android.net.IProxyCallback.Stub>;
                    public constructor();
                    public getProxyPort(param0: globalAndroid.os.IBinder): void;
                    public static asInterface(param0: globalAndroid.os.IBinder): com.android.net.IProxyCallback;
                    public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                    public asBinder(): globalAndroid.os.IBinder;
                }
                export module Stub {
                    export class Proxy extends com.android.net.IProxyCallback {
                        public static class: java.lang.Class<com.android.net.IProxyCallback.Stub.Proxy>;
                        public getInterfaceDescriptor(): string;
                        public getProxyPort(param0: globalAndroid.os.IBinder): void;
                        public asBinder(): globalAndroid.os.IBinder;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module net {
            export class IProxyPortListener extends java.lang.Object {
                public static class: java.lang.Class<com.android.net.IProxyPortListener>;
                /**
                 * Constructs a new instance of the com.android.net.IProxyPortListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                 */
                public constructor(implementation: {
                    setProxyPort(param0: number): void;
                });
                public constructor();
                public setProxyPort(param0: number): void;
            }
            export module IProxyPortListener {
                export abstract class Stub implements com.android.net.IProxyPortListener {
                    public static class: java.lang.Class<com.android.net.IProxyPortListener.Stub>;
                    public setProxyPort(param0: number): void;
                    public constructor();
                    public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                    public asBinder(): globalAndroid.os.IBinder;
                    public static asInterface(param0: globalAndroid.os.IBinder): com.android.net.IProxyPortListener;
                }
                export module Stub {
                    export class Proxy extends com.android.net.IProxyPortListener {
                        public static class: java.lang.Class<com.android.net.IProxyPortListener.Stub.Proxy>;
                        public getInterfaceDescriptor(): string;
                        public setProxyPort(param0: number): void;
                        public asBinder(): globalAndroid.os.IBinder;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module net {
            export class IProxyService extends java.lang.Object {
                public static class: java.lang.Class<com.android.net.IProxyService>;
                /**
                 * Constructs a new instance of the com.android.net.IProxyService interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                 */
                public constructor(implementation: {
                    resolvePacFile(param0: string, param1: string): string;
                    setPacFile(param0: string): void;
                    startPacSystem(): void;
                    stopPacSystem(): void;
                });
                public constructor();
                public setPacFile(param0: string): void;
                public stopPacSystem(): void;
                public startPacSystem(): void;
                public resolvePacFile(param0: string, param1: string): string;
            }
            export module IProxyService {
                export abstract class Stub implements com.android.net.IProxyService {
                    public static class: java.lang.Class<com.android.net.IProxyService.Stub>;
                    public constructor();
                    public stopPacSystem(): void;
                    public static asInterface(param0: globalAndroid.os.IBinder): com.android.net.IProxyService;
                    public onTransact(param0: number, param1: globalAndroid.os.Parcel, param2: globalAndroid.os.Parcel, param3: number): boolean;
                    public resolvePacFile(param0: string, param1: string): string;
                    public asBinder(): globalAndroid.os.IBinder;
                    public startPacSystem(): void;
                    public setPacFile(param0: string): void;
                }
                export module Stub {
                    export class Proxy extends com.android.net.IProxyService {
                        public static class: java.lang.Class<com.android.net.IProxyService.Stub.Proxy>;
                        public resolvePacFile(param0: string, param1: string): string;
                        public getInterfaceDescriptor(): string;
                        public startPacSystem(): void;
                        public setPacFile(param0: string): void;
                        public asBinder(): globalAndroid.os.IBinder;
                        public stopPacSystem(): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module server {
            export class AppWidgetBackupBridge extends java.lang.Object {
                public static class: java.lang.Class<com.android.server.AppWidgetBackupBridge>;
                public static restoreWidgetState(param0: string, param1: number[], param2: number): void;
                public static restoreStarting(param0: number): void;
                public static getWidgetState(param0: string, param1: number): number[];
                public static getWidgetParticipants(param0: number): java.util.List<string>;
                public static register(param0: com.android.server.WidgetBackupProvider): void;
                public constructor();
                public static restoreFinished(param0: number): void;
            }
        }
    }
}

declare module com {
    export module android {
        export module server {
            export class BootReceiver extends java.lang.Object {
                public static class: java.lang.Class<com.android.server.BootReceiver>;
                public static fixFsckFsStat(param0: string, param1: number, param2: string[], param3: number, param4: number): number;
                public onReceive(param0: globalAndroid.content.Context, param1: globalAndroid.content.Intent): void;
                public constructor();
            }
        }
    }
}

declare module com {
    export module android {
        export module server {
            export class LocalServices extends java.lang.Object {
                public static class: java.lang.Class<com.android.server.LocalServices>;
                public static getService(param0: java.lang.Class<any>): any;
                public static addService(param0: java.lang.Class<any>, param1: any): void;
                public static removeServiceForTest(param0: java.lang.Class<any>): void;
            }
        }
    }
}

declare module com {
    export module android {
        export module server {
            export class NetworkManagementSocketTagger extends java.lang.Object {
                public static class: java.lang.Class<com.android.server.NetworkManagementSocketTagger>;
                public static PROP_QTAGUID_ENABLED: string;
                public static setThreadSocketStatsUid(param0: number): number;
                public static setKernelCounterSet(param0: number, param1: number): void;
                public untag(param0: java.io.FileDescriptor): void;
                public static setThreadSocketStatsTag(param0: number): number;
                public static kernelToTag(param0: string): number;
                public static getThreadSocketStatsTag(): number;
                public static resetKernelUidStats(param0: number): void;
                public tag(param0: java.io.FileDescriptor): void;
                public static install(): void;
                public constructor();
            }
            export module NetworkManagementSocketTagger {
                export class SocketTags extends java.lang.Object {
                    public static class: java.lang.Class<com.android.server.NetworkManagementSocketTagger.SocketTags>;
                    public statsTag: number;
                    public statsUid: number;
                    public constructor();
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module server {
            export abstract class ResettableTimeout {
                public static class: java.lang.Class<com.android.server.ResettableTimeout>;
                public go(param0: number): void;
                public cancel(): void;
                public off(): void;
                public on(param0: boolean): void;
            }
            export module ResettableTimeout {
                export class T extends java.lang.Object {
                    public static class: java.lang.Class<com.android.server.ResettableTimeout.T>;
                    public run(): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module server {
            export class SystemConfig extends java.lang.Object {
                public static class: java.lang.Class<com.android.server.SystemConfig>;
                public getBackupTransportWhitelist(): globalAndroid.util.ArraySet<globalAndroid.content.ComponentName>;
                public getDefaultVrComponents(): globalAndroid.util.ArraySet<globalAndroid.content.ComponentName>;
                public getPermissions(): globalAndroid.util.ArrayMap<string, com.android.server.SystemConfig.PermissionEntry>;
                public getDisabledUntilUsedPreinstalledCarrierAssociatedApps(): globalAndroid.util.ArrayMap<string, java.util.List<string>>;
                public getAllowUnthrottledLocation(): globalAndroid.util.ArraySet<string>;
                public getSystemUserWhitelistedApps(): globalAndroid.util.ArraySet<string>;
                public getAllowInPowerSaveExceptIdle(): globalAndroid.util.ArraySet<string>;
                public getGlobalGids(): number[];
                public getAllowImplicitBroadcasts(): globalAndroid.util.ArraySet<string>;
                public getAllowInPowerSave(): globalAndroid.util.ArraySet<string>;
                public getAvailableFeatures(): globalAndroid.util.ArrayMap<string, globalAndroid.content.pm.FeatureInfo>;
                public getLinkedApps(): globalAndroid.util.ArraySet<string>;
                public getPrivAppPermissions(param0: string): globalAndroid.util.ArraySet<string>;
                public static getInstance(): com.android.server.SystemConfig;
                public getSharedLibraries(): globalAndroid.util.ArrayMap<string, string>;
                public getSystemUserBlacklistedApps(): globalAndroid.util.ArraySet<string>;
                public getSystemPermissions(): globalAndroid.util.SparseArray<globalAndroid.util.ArraySet<string>>;
                public getAllowInDataUsageSave(): globalAndroid.util.ArraySet<string>;
            }
            export module SystemConfig {
                export class PermissionEntry extends java.lang.Object {
                    public static class: java.lang.Class<com.android.server.SystemConfig.PermissionEntry>;
                    public gids: number[];
                    public name: string;
                    public perUser: boolean;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module server {
            export class WidgetBackupProvider extends java.lang.Object {
                public static class: java.lang.Class<com.android.server.WidgetBackupProvider>;
                /**
                 * Constructs a new instance of the com.android.server.WidgetBackupProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                 */
                public constructor(implementation: {
                    getWidgetParticipants(param0: number): java.util.List<string>;
                    getWidgetState(param0: string, param1: number): number[];
                    restoreFinished(param0: number): void;
                    restoreStarting(param0: number): void;
                    restoreWidgetState(param0: string, param1: number[], param2: number): void;
                });
                public constructor();
                public restoreStarting(param0: number): void;
                public getWidgetParticipants(param0: number): java.util.List<string>;
                public restoreWidgetState(param0: string, param1: number[], param2: number): void;
                public restoreFinished(param0: number): void;
                public getWidgetState(param0: string, param1: number): number[];
            }
        }
    }
}

declare module com {
    export module android {
        export module server {
            export module backup {
                export class AccountManagerBackupHelper extends java.lang.Object {
                    public static class: java.lang.Class<com.android.server.backup.AccountManagerBackupHelper>;
                    public constructor();
                    public getBackupPayload(param0: string): number[];
                    public applyRestoredPayload(param0: string, param1: number[]): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module server {
            export module backup {
                export class AccountSyncSettingsBackupHelper extends java.lang.Object {
                    public static class: java.lang.Class<com.android.server.backup.AccountSyncSettingsBackupHelper>;
                    public constructor(param0: globalAndroid.content.Context);
                    public restoreEntity(param0: globalAndroid.app.backup.BackupDataInputStream): void;
                    public writeNewStateDescription(param0: globalAndroid.os.ParcelFileDescriptor): void;
                    public static accountAdded(param0: globalAndroid.content.Context): void;
                    public performBackup(param0: globalAndroid.os.ParcelFileDescriptor, param1: globalAndroid.app.backup.BackupDataOutput, param2: globalAndroid.os.ParcelFileDescriptor): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module server {
            export module backup {
                export class NotificationBackupHelper extends java.lang.Object {
                    public static class: java.lang.Class<com.android.server.backup.NotificationBackupHelper>;
                    public constructor(param0: globalAndroid.content.Context);
                    public getBackupPayload(param0: string): number[];
                    public applyRestoredPayload(param0: string, param1: number[]): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module server {
            export module backup {
                export class PermissionBackupHelper extends java.lang.Object {
                    public static class: java.lang.Class<com.android.server.backup.PermissionBackupHelper>;
                    public constructor();
                    public getBackupPayload(param0: string): number[];
                    public applyRestoredPayload(param0: string, param1: number[]): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module server {
            export module backup {
                export class PreferredActivityBackupHelper extends java.lang.Object {
                    public static class: java.lang.Class<com.android.server.backup.PreferredActivityBackupHelper>;
                    public constructor();
                    public getBackupPayload(param0: string): number[];
                    public applyRestoredPayload(param0: string, param1: number[]): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module server {
            export module backup {
                export class ShortcutBackupHelper extends java.lang.Object {
                    public static class: java.lang.Class<com.android.server.backup.ShortcutBackupHelper>;
                    public constructor();
                    public getBackupPayload(param0: string): number[];
                    public applyRestoredPayload(param0: string, param1: number[]): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module server {
            export module backup {
                export class SystemBackupAgent extends java.lang.Object {
                    public static class: java.lang.Class<com.android.server.backup.SystemBackupAgent>;
                    public onBackup(param0: globalAndroid.os.ParcelFileDescriptor, param1: globalAndroid.app.backup.BackupDataOutput, param2: globalAndroid.os.ParcelFileDescriptor): void;
                    public onRestoreFinished(): void;
                    public constructor();
                    public onFullBackup(param0: globalAndroid.app.backup.FullBackupDataOutput): void;
                    public onRestoreFile(param0: globalAndroid.os.ParcelFileDescriptor, param1: number, param2: number, param3: string, param4: string, param5: number, param6: number): void;
                    public onRestore(param0: globalAndroid.app.backup.BackupDataInput, param1: number, param2: globalAndroid.os.ParcelFileDescriptor): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module server {
            export module backup {
                export class UsageStatsBackupHelper extends java.lang.Object {
                    public static class: java.lang.Class<com.android.server.backup.UsageStatsBackupHelper>;
                    public constructor(param0: globalAndroid.content.Context);
                    public getBackupPayload(param0: string): number[];
                    public applyRestoredPayload(param0: string, param1: number[]): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module server {
            export module connectivity {
                export module metrics {
                    export module nano {
                        export class IpConnectivityLogClass extends java.lang.Object {
                            public static class: java.lang.Class<com.android.server.connectivity.metrics.nano.IpConnectivityLogClass>;
                            /**
                             * Constructs a new instance of the com.android.server.connectivity.metrics.nano.IpConnectivityLogClass interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                             */
                            public constructor(implementation: {});
                            public constructor();
                            public static CELLULAR: number;
                            public static ETHERNET: number;
                            public static UNKNOWN: number;
                            public static WIFI: number;
                            public static BLUETOOTH: number;
                            public static NONE: number;
                            public static MULTIPLE: number;
                        }
                        export module IpConnectivityLogClass {
                            export class ApfProgramEvent extends com.android.framework.protobuf.nano.MessageNano {
                                public static class: java.lang.Class<com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ApfProgramEvent>;
                                public currentRas: number;
                                public dropMulticast: boolean;
                                public effectiveLifetime: number;
                                public filteredRas: number;
                                public hasIpv4Addr: boolean;
                                public lifetime: number;
                                public programLength: number;
                                public computeSerializedSize(): number;
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                                public static parseFrom(param0: number[]): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ApfProgramEvent;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                                public constructor();
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ApfProgramEvent;
                                public clear(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ApfProgramEvent;
                                public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ApfProgramEvent;
                                public static emptyArray(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ApfProgramEvent[];
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                                public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            }
                            export class ApfStatistics extends com.android.framework.protobuf.nano.MessageNano {
                                public static class: java.lang.Class<com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ApfStatistics>;
                                public droppedRas: number;
                                public durationMs: number;
                                public matchingRas: number;
                                public maxProgramSize: number;
                                public parseErrors: number;
                                public programUpdates: number;
                                public programUpdatesAll: number;
                                public programUpdatesAllowingMulticast: number;
                                public receivedRas: number;
                                public zeroLifetimeRas: number;
                                public clear(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ApfStatistics;
                                public computeSerializedSize(): number;
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                                public static parseFrom(param0: number[]): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ApfStatistics;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ApfStatistics;
                                public constructor();
                                public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ApfStatistics;
                                public static emptyArray(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ApfStatistics[];
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                                public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            }
                            export class ConnectStatistics extends com.android.framework.protobuf.nano.MessageNano {
                                public static class: java.lang.Class<com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ConnectStatistics>;
                                public connectBlockingCount: number;
                                public connectCount: number;
                                public errnosCounters: com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.Pair[];
                                public ipv6AddrCount: number;
                                public latenciesMs: number[];
                                public nonBlockingLatenciesMs: number[];
                                public static emptyArray(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ConnectStatistics[];
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ConnectStatistics;
                                public clear(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ConnectStatistics;
                                public computeSerializedSize(): number;
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                                public static parseFrom(param0: number[]): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ConnectStatistics;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                                public constructor();
                                public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ConnectStatistics;
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                                public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            }
                            export class DHCPEvent extends com.android.framework.protobuf.nano.MessageNano {
                                public static class: java.lang.Class<com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DHCPEvent>;
                                public static ERROR_CODE_FIELD_NUMBER: number;
                                public static STATE_TRANSITION_FIELD_NUMBER: number;
                                public durationMs: number;
                                public ifName: string;
                                public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DHCPEvent;
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                                public hasErrorCode(): boolean;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                                public clearValue(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DHCPEvent;
                                public constructor();
                                public static emptyArray(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DHCPEvent[];
                                public clear(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DHCPEvent;
                                public getErrorCode(): number;
                                public hasStateTransition(): boolean;
                                public getValueCase(): number;
                                public setErrorCode(param0: number): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DHCPEvent;
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                                public computeSerializedSize(): number;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DHCPEvent;
                                public getStateTransition(): string;
                                public static parseFrom(param0: number[]): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DHCPEvent;
                                public setStateTransition(param0: string): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DHCPEvent;
                                public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            }
                            export class DNSLatencies extends com.android.framework.protobuf.nano.MessageNano {
                                public static class: java.lang.Class<com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DNSLatencies>;
                                public aCount: number;
                                public aaaaCount: number;
                                public latenciesMs: number[];
                                public queryCount: number;
                                public returnCode: number;
                                public type: number;
                                public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DNSLatencies;
                                public computeSerializedSize(): number;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DNSLatencies;
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                                public static emptyArray(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DNSLatencies[];
                                public clear(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DNSLatencies;
                                public constructor();
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                                public static parseFrom(param0: number[]): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DNSLatencies;
                                public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            }
                            export class DNSLookupBatch extends com.android.framework.protobuf.nano.MessageNano {
                                public static class: java.lang.Class<com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DNSLookupBatch>;
                                public eventTypes: number[];
                                public latenciesMs: number[];
                                public networkId: com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.NetworkId;
                                public returnCodes: number[];
                                public computeSerializedSize(): number;
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DNSLookupBatch;
                                public constructor();
                                public static parseFrom(param0: number[]): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DNSLookupBatch;
                                public clear(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DNSLookupBatch;
                                public static emptyArray(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DNSLookupBatch[];
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                                public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DNSLookupBatch;
                                public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            }
                            export class DefaultNetworkEvent extends com.android.framework.protobuf.nano.MessageNano {
                                public static class: java.lang.Class<com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DefaultNetworkEvent>;
                                public static DUAL: number;
                                public static IPV4: number;
                                public static IPV6: number;
                                public static NONE: number;
                                public networkId: com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.NetworkId;
                                public previousNetworkId: com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.NetworkId;
                                public previousNetworkIpSupport: number;
                                public transportTypes: number[];
                                public static emptyArray(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DefaultNetworkEvent[];
                                public computeSerializedSize(): number;
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DefaultNetworkEvent;
                                public constructor();
                                public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DefaultNetworkEvent;
                                public clear(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DefaultNetworkEvent;
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                                public static parseFrom(param0: number[]): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DefaultNetworkEvent;
                                public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            }
                            export class IpConnectivityEvent extends com.android.framework.protobuf.nano.MessageNano {
                                public static class: java.lang.Class<com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpConnectivityEvent>;
                                public static APF_PROGRAM_EVENT_FIELD_NUMBER: number;
                                public static APF_STATISTICS_FIELD_NUMBER: number;
                                public static CONNECT_STATISTICS_FIELD_NUMBER: number;
                                public static DEFAULT_NETWORK_EVENT_FIELD_NUMBER: number;
                                public static DHCP_EVENT_FIELD_NUMBER: number;
                                public static DNS_LATENCIES_FIELD_NUMBER: number;
                                public static DNS_LOOKUP_BATCH_FIELD_NUMBER: number;
                                public static IP_PROVISIONING_EVENT_FIELD_NUMBER: number;
                                public static IP_REACHABILITY_EVENT_FIELD_NUMBER: number;
                                public static NETWORK_EVENT_FIELD_NUMBER: number;
                                public static RA_EVENT_FIELD_NUMBER: number;
                                public static VALIDATION_PROBE_EVENT_FIELD_NUMBER: number;
                                public ifName: string;
                                public linkLayer: number;
                                public networkId: number;
                                public timeMs: number;
                                public transports: number;
                                public getDefaultNetworkEvent(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DefaultNetworkEvent;
                                public setDnsLookupBatch(param0: com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DNSLookupBatch): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpConnectivityEvent;
                                public hasValidationProbeEvent(): boolean;
                                public setIpProvisioningEvent(param0: com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpProvisioningEvent): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpConnectivityEvent;
                                public hasDnsLookupBatch(): boolean;
                                public static parseFrom(param0: number[]): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpConnectivityEvent;
                                public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpConnectivityEvent;
                                public getApfStatistics(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ApfStatistics;
                                public hasIpReachabilityEvent(): boolean;
                                public getIpReachabilityEvent(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpReachabilityEvent;
                                public getValidationProbeEvent(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ValidationProbeEvent;
                                public setApfProgramEvent(param0: com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ApfProgramEvent): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpConnectivityEvent;
                                public getDnsLookupBatch(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DNSLookupBatch;
                                public setIpReachabilityEvent(param0: com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpReachabilityEvent): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpConnectivityEvent;
                                public clear(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpConnectivityEvent;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpConnectivityEvent;
                                public getIpProvisioningEvent(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpProvisioningEvent;
                                public setRaEvent(param0: com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.RaEvent): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpConnectivityEvent;
                                public hasApfProgramEvent(): boolean;
                                public hasNetworkEvent(): boolean;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                                public constructor();
                                public setValidationProbeEvent(param0: com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ValidationProbeEvent): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpConnectivityEvent;
                                public getRaEvent(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.RaEvent;
                                public hasRaEvent(): boolean;
                                public hasConnectStatistics(): boolean;
                                public hasDefaultNetworkEvent(): boolean;
                                public hasApfStatistics(): boolean;
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                                public getEventCase(): number;
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                                public setNetworkEvent(param0: com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.NetworkEvent): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpConnectivityEvent;
                                public computeSerializedSize(): number;
                                public hasIpProvisioningEvent(): boolean;
                                public getConnectStatistics(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ConnectStatistics;
                                public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                                public getDhcpEvent(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DHCPEvent;
                                public hasDnsLatencies(): boolean;
                                public getApfProgramEvent(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ApfProgramEvent;
                                public hasDhcpEvent(): boolean;
                                public getDnsLatencies(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DNSLatencies;
                                public setConnectStatistics(param0: com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ConnectStatistics): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpConnectivityEvent;
                                public setApfStatistics(param0: com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ApfStatistics): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpConnectivityEvent;
                                public getNetworkEvent(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.NetworkEvent;
                                public setDefaultNetworkEvent(param0: com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DefaultNetworkEvent): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpConnectivityEvent;
                                public setDnsLatencies(param0: com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DNSLatencies): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpConnectivityEvent;
                                public static emptyArray(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpConnectivityEvent[];
                                public clearEvent(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpConnectivityEvent;
                                public setDhcpEvent(param0: com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.DHCPEvent): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpConnectivityEvent;
                            }
                            export class IpConnectivityLog extends com.android.framework.protobuf.nano.MessageNano {
                                public static class: java.lang.Class<com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpConnectivityLog>;
                                public droppedEvents: number;
                                public events: com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpConnectivityEvent[];
                                public version: number;
                                public clear(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpConnectivityLog;
                                public computeSerializedSize(): number;
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                                public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpConnectivityLog;
                                public constructor();
                                public static parseFrom(param0: number[]): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpConnectivityLog;
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpConnectivityLog;
                                public static emptyArray(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpConnectivityLog[];
                                public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            }
                            export class IpProvisioningEvent extends com.android.framework.protobuf.nano.MessageNano {
                                public static class: java.lang.Class<com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpProvisioningEvent>;
                                public eventType: number;
                                public ifName: string;
                                public latencyMs: number;
                                public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpProvisioningEvent;
                                public computeSerializedSize(): number;
                                public static emptyArray(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpProvisioningEvent[];
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                                public constructor();
                                public static parseFrom(param0: number[]): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpProvisioningEvent;
                                public clear(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpProvisioningEvent;
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpProvisioningEvent;
                                public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            }
                            export class IpReachabilityEvent extends com.android.framework.protobuf.nano.MessageNano {
                                public static class: java.lang.Class<com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpReachabilityEvent>;
                                public eventType: number;
                                public ifName: string;
                                public clear(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpReachabilityEvent;
                                public static emptyArray(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpReachabilityEvent[];
                                public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpReachabilityEvent;
                                public static parseFrom(param0: number[]): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpReachabilityEvent;
                                public computeSerializedSize(): number;
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                                public constructor();
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.IpReachabilityEvent;
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                                public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            }
                            export class NetworkEvent extends com.android.framework.protobuf.nano.MessageNano {
                                public static class: java.lang.Class<com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.NetworkEvent>;
                                public eventType: number;
                                public latencyMs: number;
                                public networkId: com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.NetworkId;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.NetworkEvent;
                                public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.NetworkEvent;
                                public computeSerializedSize(): number;
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                                public constructor();
                                public clear(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.NetworkEvent;
                                public static emptyArray(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.NetworkEvent[];
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                                public static parseFrom(param0: number[]): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.NetworkEvent;
                                public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            }
                            export class NetworkId extends com.android.framework.protobuf.nano.MessageNano {
                                public static class: java.lang.Class<com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.NetworkId>;
                                public networkId: number;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.NetworkId;
                                public computeSerializedSize(): number;
                                public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.NetworkId;
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                                public static emptyArray(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.NetworkId[];
                                public constructor();
                                public clear(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.NetworkId;
                                public static parseFrom(param0: number[]): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.NetworkId;
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                                public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            }
                            export class Pair extends com.android.framework.protobuf.nano.MessageNano {
                                public static class: java.lang.Class<com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.Pair>;
                                public key: number;
                                public value: number;
                                public static parseFrom(param0: number[]): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.Pair;
                                public computeSerializedSize(): number;
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                                public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.Pair;
                                public constructor();
                                public static emptyArray(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.Pair[];
                                public clear(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.Pair;
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.Pair;
                                public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            }
                            export class RaEvent extends com.android.framework.protobuf.nano.MessageNano {
                                public static class: java.lang.Class<com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.RaEvent>;
                                public dnsslLifetime: number;
                                public prefixPreferredLifetime: number;
                                public prefixValidLifetime: number;
                                public rdnssLifetime: number;
                                public routeInfoLifetime: number;
                                public routerLifetime: number;
                                public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.RaEvent;
                                public clear(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.RaEvent;
                                public computeSerializedSize(): number;
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                                public static emptyArray(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.RaEvent[];
                                public constructor();
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.RaEvent;
                                public static parseFrom(param0: number[]): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.RaEvent;
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                                public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            }
                            export class ValidationProbeEvent extends com.android.framework.protobuf.nano.MessageNano {
                                public static class: java.lang.Class<com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ValidationProbeEvent>;
                                public latencyMs: number;
                                public networkId: com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.NetworkId;
                                public probeResult: number;
                                public probeType: number;
                                public computeSerializedSize(): number;
                                public clear(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ValidationProbeEvent;
                                public static parseFrom(param0: number[]): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ValidationProbeEvent;
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                                public static emptyArray(): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ValidationProbeEvent[];
                                public constructor();
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ValidationProbeEvent;
                                public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.connectivity.metrics.nano.IpConnectivityLogClass.ValidationProbeEvent;
                                public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            }
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module server {
            export module net {
                export class BaseNetworkObserver extends java.lang.Object {
                    public static class: java.lang.Class<com.android.server.net.BaseNetworkObserver>;
                    public addressRemoved(param0: string, param1: globalAndroid.net.LinkAddress): void;
                    public interfaceDnsServerInfo(param0: string, param1: number, param2: string[]): void;
                    public interfaceLinkStateChanged(param0: string, param1: boolean): void;
                    public interfaceStatusChanged(param0: string, param1: boolean): void;
                    public constructor();
                    public routeRemoved(param0: globalAndroid.net.RouteInfo): void;
                    public addressUpdated(param0: string, param1: globalAndroid.net.LinkAddress): void;
                    public interfaceAdded(param0: string): void;
                    public interfaceRemoved(param0: string): void;
                    public interfaceClassDataActivityChanged(param0: string, param1: boolean, param2: number): void;
                    public routeUpdated(param0: globalAndroid.net.RouteInfo): void;
                    public limitReached(param0: string, param1: string): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module server {
            export module net {
                export class DnsServerEntry extends java.lang.Comparable<com.android.server.net.DnsServerEntry> {
                    public static class: java.lang.Class<com.android.server.net.DnsServerEntry>;
                    public address: java.net.InetAddress;
                    public expiry: number;
                    public compareTo(param0: com.android.server.net.DnsServerEntry): number;
                    public constructor(param0: java.net.InetAddress, param1: number);
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module server {
            export module net {
                export class DnsServerRepository extends java.lang.Object {
                    public static class: java.lang.Class<com.android.server.net.DnsServerRepository>;
                    public static NUM_CURRENT_SERVERS: number;
                    public static NUM_SERVERS: number;
                    public static TAG: string;
                    public constructor();
                    public addServers(param0: number, param1: string[]): boolean;
                    public setDnsServersOn(param0: globalAndroid.net.LinkProperties): void;
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module server {
            export module net {
                export class NetlinkTracker extends com.android.server.net.BaseNetworkObserver {
                    public static class: java.lang.Class<com.android.server.net.NetlinkTracker>;
                    public addressRemoved(param0: string, param1: globalAndroid.net.LinkAddress): void;
                    public interfaceDnsServerInfo(param0: string, param1: number, param2: string[]): void;
                    public constructor(param0: string, param1: com.android.server.net.NetlinkTracker.Callback);
                    public getLinkProperties(): globalAndroid.net.LinkProperties;
                    public constructor();
                    public routeRemoved(param0: globalAndroid.net.RouteInfo): void;
                    public addressUpdated(param0: string, param1: globalAndroid.net.LinkAddress): void;
                    public interfaceRemoved(param0: string): void;
                    public routeUpdated(param0: globalAndroid.net.RouteInfo): void;
                    public clearLinkProperties(): void;
                }
                export module NetlinkTracker {
                    export class Callback extends java.lang.Object {
                        public static class: java.lang.Class<com.android.server.net.NetlinkTracker.Callback>;
                        /**
                         * Constructs a new instance of the com.android.server.net.NetlinkTracker$Callback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            update(): void;
                        });
                        public constructor();
                        public update(): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module server {
            export module net {
                export class NetworkPinner extends java.lang.Object {
                    public static class: java.lang.Class<com.android.server.net.NetworkPinner>;
                    public static sLock: any;
                    public static sNetwork: globalAndroid.net.Network;
                    public constructor();
                    public static unpin(): void;
                    public static pin(param0: globalAndroid.content.Context, param1: globalAndroid.net.NetworkRequest): void;
                }
                export module NetworkPinner {
                    export class Callback extends java.lang.Object {
                        public static class: java.lang.Class<com.android.server.net.NetworkPinner.Callback>;
                        public onAvailable(param0: globalAndroid.net.Network): void;
                        public onLost(param0: globalAndroid.net.Network): void;
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module server {
            export module wifi {
                export module nano {
                    export class WifiMetricsProto extends java.lang.Object {
                        public static class: java.lang.Class<com.android.server.wifi.nano.WifiMetricsProto>;
                        /**
                         * Constructs a new instance of the com.android.server.wifi.nano.WifiMetricsProto interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {});
                        public constructor();
                    }
                    export module WifiMetricsProto {
                        export class AlertReasonCount extends com.android.framework.protobuf.nano.MessageNano {
                            public static class: java.lang.Class<com.android.server.wifi.nano.WifiMetricsProto.AlertReasonCount>;
                            public count: number;
                            public reason: number;
                            public constructor();
                            public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                            public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                            public clear(): com.android.server.wifi.nano.WifiMetricsProto.AlertReasonCount;
                            public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            public computeSerializedSize(): number;
                            public static parseFrom(param0: number[]): com.android.server.wifi.nano.WifiMetricsProto.AlertReasonCount;
                            public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                            public static emptyArray(): com.android.server.wifi.nano.WifiMetricsProto.AlertReasonCount[];
                            public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.wifi.nano.WifiMetricsProto.AlertReasonCount;
                            public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.wifi.nano.WifiMetricsProto.AlertReasonCount;
                        }
                        export class ConnectionEvent extends com.android.framework.protobuf.nano.MessageNano {
                            public static class: java.lang.Class<com.android.server.wifi.nano.WifiMetricsProto.ConnectionEvent>;
                            public static HLF_DHCP: number;
                            public static HLF_NONE: number;
                            public static HLF_NO_INTERNET: number;
                            public static HLF_UNKNOWN: number;
                            public static HLF_UNWANTED: number;
                            public static ROAM_DBDC: number;
                            public static ROAM_ENTERPRISE: number;
                            public static ROAM_NONE: number;
                            public static ROAM_UNKNOWN: number;
                            public static ROAM_UNRELATED: number;
                            public static ROAM_USER_SELECTED: number;
                            public automaticBugReportTaken: boolean;
                            public connectionResult: number;
                            public connectivityLevelFailureCode: number;
                            public durationTakenToConnectMillis: number;
                            public level2FailureCode: number;
                            public roamType: number;
                            public routerFingerprint: com.android.server.wifi.nano.WifiMetricsProto.RouterFingerPrint;
                            public signalStrength: number;
                            public startTimeMillis: number;
                            public constructor();
                            public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                            public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                            public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.wifi.nano.WifiMetricsProto.ConnectionEvent;
                            public clear(): com.android.server.wifi.nano.WifiMetricsProto.ConnectionEvent;
                            public static emptyArray(): com.android.server.wifi.nano.WifiMetricsProto.ConnectionEvent[];
                            public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            public computeSerializedSize(): number;
                            public static parseFrom(param0: number[]): com.android.server.wifi.nano.WifiMetricsProto.ConnectionEvent;
                            public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                            public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.wifi.nano.WifiMetricsProto.ConnectionEvent;
                        }
                        export class RouterFingerPrint extends com.android.framework.protobuf.nano.MessageNano {
                            public static class: java.lang.Class<com.android.server.wifi.nano.WifiMetricsProto.RouterFingerPrint>;
                            public static AUTH_ENTERPRISE: number;
                            public static AUTH_OPEN: number;
                            public static AUTH_PERSONAL: number;
                            public static AUTH_UNKNOWN: number;
                            public static ROAM_TYPE_DBDC: number;
                            public static ROAM_TYPE_ENTERPRISE: number;
                            public static ROAM_TYPE_NONE: number;
                            public static ROAM_TYPE_UNKNOWN: number;
                            public static ROUTER_TECH_A: number;
                            public static ROUTER_TECH_AC: number;
                            public static ROUTER_TECH_B: number;
                            public static ROUTER_TECH_G: number;
                            public static ROUTER_TECH_N: number;
                            public static ROUTER_TECH_OTHER: number;
                            public static ROUTER_TECH_UNKNOWN: number;
                            public authentication: number;
                            public channelInfo: number;
                            public dtim: number;
                            public hidden: boolean;
                            public passpoint: boolean;
                            public roamType: number;
                            public routerTechnology: number;
                            public supportsIpv6: boolean;
                            public constructor();
                            public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.wifi.nano.WifiMetricsProto.RouterFingerPrint;
                            public static parseFrom(param0: number[]): com.android.server.wifi.nano.WifiMetricsProto.RouterFingerPrint;
                            public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                            public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                            public clear(): com.android.server.wifi.nano.WifiMetricsProto.RouterFingerPrint;
                            public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.wifi.nano.WifiMetricsProto.RouterFingerPrint;
                            public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            public computeSerializedSize(): number;
                            public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                            public static emptyArray(): com.android.server.wifi.nano.WifiMetricsProto.RouterFingerPrint[];
                        }
                        export class RssiPollCount extends com.android.framework.protobuf.nano.MessageNano {
                            public static class: java.lang.Class<com.android.server.wifi.nano.WifiMetricsProto.RssiPollCount>;
                            public count: number;
                            public rssi: number;
                            public constructor();
                            public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                            public clear(): com.android.server.wifi.nano.WifiMetricsProto.RssiPollCount;
                            public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                            public static emptyArray(): com.android.server.wifi.nano.WifiMetricsProto.RssiPollCount[];
                            public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            public computeSerializedSize(): number;
                            public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.wifi.nano.WifiMetricsProto.RssiPollCount;
                            public static parseFrom(param0: number[]): com.android.server.wifi.nano.WifiMetricsProto.RssiPollCount;
                            public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                            public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.wifi.nano.WifiMetricsProto.RssiPollCount;
                        }
                        export class SoftApDurationBucket extends com.android.framework.protobuf.nano.MessageNano {
                            public static class: java.lang.Class<com.android.server.wifi.nano.WifiMetricsProto.SoftApDurationBucket>;
                            public bucketSizeSec: number;
                            public count: number;
                            public durationSec: number;
                            public constructor();
                            public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                            public static parseFrom(param0: number[]): com.android.server.wifi.nano.WifiMetricsProto.SoftApDurationBucket;
                            public clear(): com.android.server.wifi.nano.WifiMetricsProto.SoftApDurationBucket;
                            public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                            public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            public computeSerializedSize(): number;
                            public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.wifi.nano.WifiMetricsProto.SoftApDurationBucket;
                            public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                            public static emptyArray(): com.android.server.wifi.nano.WifiMetricsProto.SoftApDurationBucket[];
                            public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.wifi.nano.WifiMetricsProto.SoftApDurationBucket;
                        }
                        export class SoftApReturnCodeCount extends com.android.framework.protobuf.nano.MessageNano {
                            public static class: java.lang.Class<com.android.server.wifi.nano.WifiMetricsProto.SoftApReturnCodeCount>;
                            public static SOFT_AP_FAILED_GENERAL_ERROR: number;
                            public static SOFT_AP_FAILED_NO_CHANNEL: number;
                            public static SOFT_AP_RETURN_CODE_UNKNOWN: number;
                            public static SOFT_AP_STARTED_SUCCESSFULLY: number;
                            public count: number;
                            public returnCode: number;
                            public startResult: number;
                            public constructor();
                            public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                            public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.wifi.nano.WifiMetricsProto.SoftApReturnCodeCount;
                            public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                            public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.wifi.nano.WifiMetricsProto.SoftApReturnCodeCount;
                            public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            public computeSerializedSize(): number;
                            public clear(): com.android.server.wifi.nano.WifiMetricsProto.SoftApReturnCodeCount;
                            public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                            public static parseFrom(param0: number[]): com.android.server.wifi.nano.WifiMetricsProto.SoftApReturnCodeCount;
                            public static emptyArray(): com.android.server.wifi.nano.WifiMetricsProto.SoftApReturnCodeCount[];
                        }
                        export class StaEvent extends com.android.framework.protobuf.nano.MessageNano {
                            public static class: java.lang.Class<com.android.server.wifi.nano.WifiMetricsProto.StaEvent>;
                            public static AUTH_FAILURE_EAP_FAILURE: number;
                            public static AUTH_FAILURE_NONE: number;
                            public static AUTH_FAILURE_TIMEOUT: number;
                            public static AUTH_FAILURE_UNKNOWN: number;
                            public static AUTH_FAILURE_WRONG_PSWD: number;
                            public static DISCONNECT_API: number;
                            public static DISCONNECT_GENERIC: number;
                            public static DISCONNECT_P2P_DISCONNECT_WIFI_REQUEST: number;
                            public static DISCONNECT_RESET_SIM_NETWORKS: number;
                            public static DISCONNECT_ROAM_WATCHDOG_TIMER: number;
                            public static DISCONNECT_UNKNOWN: number;
                            public static DISCONNECT_UNWANTED: number;
                            public static STATE_ASSOCIATED: number;
                            public static STATE_ASSOCIATING: number;
                            public static STATE_AUTHENTICATING: number;
                            public static STATE_COMPLETED: number;
                            public static STATE_DISCONNECTED: number;
                            public static STATE_DORMANT: number;
                            public static STATE_FOUR_WAY_HANDSHAKE: number;
                            public static STATE_GROUP_HANDSHAKE: number;
                            public static STATE_INACTIVE: number;
                            public static STATE_INTERFACE_DISABLED: number;
                            public static STATE_INVALID: number;
                            public static STATE_SCANNING: number;
                            public static STATE_UNINITIALIZED: number;
                            public static TYPE_ASSOCIATION_REJECTION_EVENT: number;
                            public static TYPE_AUTHENTICATION_FAILURE_EVENT: number;
                            public static TYPE_CMD_ASSOCIATED_BSSID: number;
                            public static TYPE_CMD_IP_CONFIGURATION_LOST: number;
                            public static TYPE_CMD_IP_CONFIGURATION_SUCCESSFUL: number;
                            public static TYPE_CMD_IP_REACHABILITY_LOST: number;
                            public static TYPE_CMD_START_CONNECT: number;
                            public static TYPE_CMD_START_ROAM: number;
                            public static TYPE_CMD_TARGET_BSSID: number;
                            public static TYPE_CONNECT_NETWORK: number;
                            public static TYPE_FRAMEWORK_DISCONNECT: number;
                            public static TYPE_NETWORK_AGENT_VALID_NETWORK: number;
                            public static TYPE_NETWORK_CONNECTION_EVENT: number;
                            public static TYPE_NETWORK_DISCONNECTION_EVENT: number;
                            public static TYPE_SUPPLICANT_STATE_CHANGE_EVENT: number;
                            public static TYPE_UNKNOWN: number;
                            public associationTimedOut: boolean;
                            public authFailureReason: number;
                            public configInfo: com.android.server.wifi.nano.WifiMetricsProto.StaEvent.ConfigInfo;
                            public frameworkDisconnectReason: number;
                            public lastFreq: number;
                            public lastLinkSpeed: number;
                            public lastRssi: number;
                            public localGen: boolean;
                            public reason: number;
                            public startTimeMillis: number;
                            public status: number;
                            public supplicantStateChangesBitmask: number;
                            public type: number;
                            public constructor();
                            public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                            public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.wifi.nano.WifiMetricsProto.StaEvent;
                            public clear(): com.android.server.wifi.nano.WifiMetricsProto.StaEvent;
                            public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                            public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.wifi.nano.WifiMetricsProto.StaEvent;
                            public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            public computeSerializedSize(): number;
                            public static emptyArray(): com.android.server.wifi.nano.WifiMetricsProto.StaEvent[];
                            public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                            public static parseFrom(param0: number[]): com.android.server.wifi.nano.WifiMetricsProto.StaEvent;
                        }
                        export module StaEvent {
                            export class ConfigInfo extends com.android.framework.protobuf.nano.MessageNano {
                                public static class: java.lang.Class<com.android.server.wifi.nano.WifiMetricsProto.StaEvent.ConfigInfo>;
                                public allowedAuthAlgorithms: number;
                                public allowedGroupCiphers: number;
                                public allowedKeyManagement: number;
                                public allowedPairwiseCiphers: number;
                                public allowedProtocols: number;
                                public hasEverConnected: boolean;
                                public hiddenSsid: boolean;
                                public isEphemeral: boolean;
                                public isPasspoint: boolean;
                                public scanFreq: number;
                                public scanRssi: number;
                                public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.wifi.nano.WifiMetricsProto.StaEvent.ConfigInfo;
                                public computeSerializedSize(): number;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.wifi.nano.WifiMetricsProto.StaEvent.ConfigInfo;
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                                public static parseFrom(param0: number[]): com.android.server.wifi.nano.WifiMetricsProto.StaEvent.ConfigInfo;
                                public constructor();
                                public clear(): com.android.server.wifi.nano.WifiMetricsProto.StaEvent.ConfigInfo;
                                public static emptyArray(): com.android.server.wifi.nano.WifiMetricsProto.StaEvent.ConfigInfo[];
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                                public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            }
                        }
                        export class WifiLog extends com.android.framework.protobuf.nano.MessageNano {
                            public static class: java.lang.Class<com.android.server.wifi.nano.WifiMetricsProto.WifiLog>;
                            public static FAILURE_WIFI_DISABLED: number;
                            public static SCAN_FAILURE_INTERRUPTED: number;
                            public static SCAN_FAILURE_INVALID_CONFIGURATION: number;
                            public static SCAN_SUCCESS: number;
                            public static SCAN_UNKNOWN: number;
                            public static WIFI_ASSOCIATED: number;
                            public static WIFI_DISABLED: number;
                            public static WIFI_DISCONNECTED: number;
                            public static WIFI_UNKNOWN: number;
                            public alertReasonCount: com.android.server.wifi.nano.WifiMetricsProto.AlertReasonCount[];
                            public backgroundScanRequestState: com.android.server.wifi.nano.WifiMetricsProto.WifiLog.WifiSystemStateEntry[];
                            public backgroundScanReturnEntries: com.android.server.wifi.nano.WifiMetricsProto.WifiLog.ScanReturnEntry[];
                            public connectionEvent: com.android.server.wifi.nano.WifiMetricsProto.ConnectionEvent[];
                            public isLocationEnabled: boolean;
                            public isScanningAlwaysEnabled: boolean;
                            public numBackgroundScans: number;
                            public numConnectivityWatchdogBackgroundBad: number;
                            public numConnectivityWatchdogBackgroundGood: number;
                            public numConnectivityWatchdogPnoBad: number;
                            public numConnectivityWatchdogPnoGood: number;
                            public numEmptyScanResults: number;
                            public numEnterpriseNetworkScanResults: number;
                            public numEnterpriseNetworks: number;
                            public numHalCrashes: number;
                            public numHiddenNetworkScanResults: number;
                            public numHiddenNetworks: number;
                            public numHotspot2R1NetworkScanResults: number;
                            public numHotspot2R2NetworkScanResults: number;
                            public numLastResortWatchdogAvailableNetworksTotal: number;
                            public numLastResortWatchdogBadAssociationNetworksTotal: number;
                            public numLastResortWatchdogBadAuthenticationNetworksTotal: number;
                            public numLastResortWatchdogBadDhcpNetworksTotal: number;
                            public numLastResortWatchdogBadOtherNetworksTotal: number;
                            public numLastResortWatchdogSuccesses: number;
                            public numLastResortWatchdogTriggers: number;
                            public numLastResortWatchdogTriggersWithBadAssociation: number;
                            public numLastResortWatchdogTriggersWithBadAuthentication: number;
                            public numLastResortWatchdogTriggersWithBadDhcp: number;
                            public numLastResortWatchdogTriggersWithBadOther: number;
                            public numNetworksAddedByApps: number;
                            public numNetworksAddedByUser: number;
                            public numNonEmptyScanResults: number;
                            public numOneshotScans: number;
                            public numOpenNetworkScanResults: number;
                            public numOpenNetworks: number;
                            public numPasspointNetworks: number;
                            public numPersonalNetworkScanResults: number;
                            public numPersonalNetworks: number;
                            public numSavedNetworks: number;
                            public numScans: number;
                            public numTotalScanResults: number;
                            public numWifiOnFailureDueToHal: number;
                            public numWifiOnFailureDueToWificond: number;
                            public numWifiToggledViaAirplane: number;
                            public numWifiToggledViaSettings: number;
                            public numWificondCrashes: number;
                            public recordDurationSec: number;
                            public rssiPollDeltaCount: com.android.server.wifi.nano.WifiMetricsProto.RssiPollCount[];
                            public rssiPollRssiCount: com.android.server.wifi.nano.WifiMetricsProto.RssiPollCount[];
                            public scanReturnEntries: com.android.server.wifi.nano.WifiMetricsProto.WifiLog.ScanReturnEntry[];
                            public softApDuration: com.android.server.wifi.nano.WifiMetricsProto.SoftApDurationBucket[];
                            public softApReturnCode: com.android.server.wifi.nano.WifiMetricsProto.SoftApReturnCodeCount[];
                            public staEventList: com.android.server.wifi.nano.WifiMetricsProto.StaEvent[];
                            public wifiScoreCount: com.android.server.wifi.nano.WifiMetricsProto.WifiScoreCount[];
                            public wifiSystemStateEntries: com.android.server.wifi.nano.WifiMetricsProto.WifiLog.WifiSystemStateEntry[];
                            public constructor();
                            public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.wifi.nano.WifiMetricsProto.WifiLog;
                            public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                            public static emptyArray(): com.android.server.wifi.nano.WifiMetricsProto.WifiLog[];
                            public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                            public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            public computeSerializedSize(): number;
                            public static parseFrom(param0: number[]): com.android.server.wifi.nano.WifiMetricsProto.WifiLog;
                            public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                            public clear(): com.android.server.wifi.nano.WifiMetricsProto.WifiLog;
                            public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.wifi.nano.WifiMetricsProto.WifiLog;
                        }
                        export module WifiLog {
                            export class ScanReturnEntry extends com.android.framework.protobuf.nano.MessageNano {
                                public static class: java.lang.Class<com.android.server.wifi.nano.WifiMetricsProto.WifiLog.ScanReturnEntry>;
                                public scanResultsCount: number;
                                public scanReturnCode: number;
                                public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.wifi.nano.WifiMetricsProto.WifiLog.ScanReturnEntry;
                                public computeSerializedSize(): number;
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                                public static parseFrom(param0: number[]): com.android.server.wifi.nano.WifiMetricsProto.WifiLog.ScanReturnEntry;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.wifi.nano.WifiMetricsProto.WifiLog.ScanReturnEntry;
                                public constructor();
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                                public static emptyArray(): com.android.server.wifi.nano.WifiMetricsProto.WifiLog.ScanReturnEntry[];
                                public clear(): com.android.server.wifi.nano.WifiMetricsProto.WifiLog.ScanReturnEntry;
                                public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            }
                            export class WifiSystemStateEntry extends com.android.framework.protobuf.nano.MessageNano {
                                public static class: java.lang.Class<com.android.server.wifi.nano.WifiMetricsProto.WifiLog.WifiSystemStateEntry>;
                                public isScreenOn: boolean;
                                public wifiState: number;
                                public wifiStateCount: number;
                                public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.wifi.nano.WifiMetricsProto.WifiLog.WifiSystemStateEntry;
                                public computeSerializedSize(): number;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.wifi.nano.WifiMetricsProto.WifiLog.WifiSystemStateEntry;
                                public static emptyArray(): com.android.server.wifi.nano.WifiMetricsProto.WifiLog.WifiSystemStateEntry[];
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                                public clear(): com.android.server.wifi.nano.WifiMetricsProto.WifiLog.WifiSystemStateEntry;
                                public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                                public constructor();
                                public static parseFrom(param0: number[]): com.android.server.wifi.nano.WifiMetricsProto.WifiLog.WifiSystemStateEntry;
                                public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                                public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            }
                        }
                        export class WifiScoreCount extends com.android.framework.protobuf.nano.MessageNano {
                            public static class: java.lang.Class<com.android.server.wifi.nano.WifiMetricsProto.WifiScoreCount>;
                            public count: number;
                            public score: number;
                            public constructor();
                            public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                            public static parseFrom(param0: number[]): com.android.server.wifi.nano.WifiMetricsProto.WifiScoreCount;
                            public clear(): com.android.server.wifi.nano.WifiMetricsProto.WifiScoreCount;
                            public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                            public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            public computeSerializedSize(): number;
                            public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.wifi.nano.WifiMetricsProto.WifiScoreCount;
                            public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                            public static emptyArray(): com.android.server.wifi.nano.WifiMetricsProto.WifiScoreCount[];
                            public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.wifi.nano.WifiMetricsProto.WifiScoreCount;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module android {
        export module server {
            export module wm {
                export module nano {
                    export class WindowManagerProtos extends java.lang.Object {
                        public static class: java.lang.Class<com.android.server.wm.nano.WindowManagerProtos>;
                        /**
                         * Constructs a new instance of the com.android.server.wm.nano.WindowManagerProtos interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {});
                        public constructor();
                    }
                    export module WindowManagerProtos {
                        export class TaskSnapshotProto extends com.android.framework.protobuf.nano.MessageNano {
                            public static class: java.lang.Class<com.android.server.wm.nano.WindowManagerProtos.TaskSnapshotProto>;
                            public insetBottom: number;
                            public insetLeft: number;
                            public insetRight: number;
                            public insetTop: number;
                            public orientation: number;
                            public constructor();
                            public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[]): com.android.framework.protobuf.nano.MessageNano;
                            public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.framework.protobuf.nano.MessageNano;
                            public writeTo(param0: com.android.framework.protobuf.nano.CodedOutputByteBufferNano): void;
                            public computeSerializedSize(): number;
                            public static emptyArray(): com.android.server.wm.nano.WindowManagerProtos.TaskSnapshotProto[];
                            public mergeFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.wm.nano.WindowManagerProtos.TaskSnapshotProto;
                            public static parseFrom(param0: number[]): com.android.server.wm.nano.WindowManagerProtos.TaskSnapshotProto;
                            public static mergeFrom(param0: com.android.framework.protobuf.nano.MessageNano, param1: number[], param2: number, param3: number): com.android.framework.protobuf.nano.MessageNano;
                            public clear(): com.android.server.wm.nano.WindowManagerProtos.TaskSnapshotProto;
                            public static parseFrom(param0: com.android.framework.protobuf.nano.CodedInputByteBufferNano): com.android.server.wm.nano.WindowManagerProtos.TaskSnapshotProto;
                        }
                    }
                }
            }
        }
    }
}

declare module com {
    export module google {
        export module android {
            export module collect {
                export class Lists extends java.lang.Object {
                    public static class: java.lang.Class<com.google.android.collect.Lists>;
                    public static newArrayList(): java.util.ArrayList<any>;
                    public constructor();
                    public static newArrayList(param0: any[]): java.util.ArrayList<any>;
                }
            }
        }
    }
}

declare module com {
    export module google {
        export module android {
            export module collect {
                export class Maps extends java.lang.Object {
                    public static class: java.lang.Class<com.google.android.collect.Maps>;
                    public static newArrayMap(): globalAndroid.util.ArrayMap<any, any>;
                    public static newHashMap(): java.util.HashMap;
                    public constructor();
                }
            }
        }
    }
}

declare module com {
    export module google {
        export module android {
            export module collect {
                export class Sets extends java.lang.Object {
                    public static class: java.lang.Class<com.google.android.collect.Sets>;
                    public static newHashSet(): java.util.HashSet;
                    public static newSortedSet(param0: any[]): java.util.SortedSet;
                    public constructor();
                    public static newHashSet(param0: any[]): java.util.HashSet;
                    public static newArraySet(param0: any[]): globalAndroid.util.ArraySet<any>;
                    public static newSortedSet(): java.util.SortedSet;
                    public static newArraySet(): globalAndroid.util.ArraySet<any>;
                }
            }
        }
    }
}

declare module com {
    export module google {
        export module android {
            export module gles_jni {
                export class EGLConfigImpl extends javax.microedition.khronos.egl.EGLConfig {
                    public static class: java.lang.Class<com.google.android.gles_jni.EGLConfigImpl>;
                }
            }
        }
    }
}

declare module com {
    export module google {
        export module android {
            export module gles_jni {
                export class EGLContextImpl extends javax.microedition.khronos.egl.EGLContext {
                    public static class: java.lang.Class<com.google.android.gles_jni.EGLContextImpl>;
                    public equals(param0: any): boolean;
                    public constructor();
                    public getGL(): javax.microedition.khronos.opengles.GL;
                    public hashCode(): number;
                    public constructor(param0: number);
                }
            }
        }
    }
}

declare module com {
    export module google {
        export module android {
            export module gles_jni {
                export class EGLDisplayImpl extends javax.microedition.khronos.egl.EGLDisplay {
                    public static class: java.lang.Class<com.google.android.gles_jni.EGLDisplayImpl>;
                    public equals(param0: any): boolean;
                    public constructor();
                    public hashCode(): number;
                    public constructor(param0: number);
                }
            }
        }
    }
}

declare module com {
    export module google {
        export module android {
            export module gles_jni {
                export class EGLImpl extends javax.microedition.khronos.egl.EGL10 {
                    public static class: java.lang.Class<com.google.android.gles_jni.EGLImpl>;
                    public eglSwapBuffers(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLSurface): boolean;
                    public eglGetCurrentDisplay(): javax.microedition.khronos.egl.EGLDisplay;
                    public static getInitCount(param0: javax.microedition.khronos.egl.EGLDisplay): number;
                    public eglQueryContext(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLContext, param2: number, param3: number[]): boolean;
                    public eglGetConfigs(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig[], param2: number, param3: number[]): boolean;
                    public eglGetError(): number;
                    public eglGetDisplay(param0: any): javax.microedition.khronos.egl.EGLDisplay;
                    public constructor();
                    public eglGetCurrentSurface(param0: number): javax.microedition.khronos.egl.EGLSurface;
                    public eglCreatePbufferSurface(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig, param2: number[]): javax.microedition.khronos.egl.EGLSurface;
                    public eglCreateWindowSurface(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig, param2: any, param3: number[]): javax.microedition.khronos.egl.EGLSurface;
                    public eglGetConfigAttrib(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig, param2: number, param3: number[]): boolean;
                    public eglInitialize(param0: javax.microedition.khronos.egl.EGLDisplay, param1: number[]): boolean;
                    public eglWaitGL(): boolean;
                    public eglCreatePixmapSurface(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig, param2: any, param3: number[]): javax.microedition.khronos.egl.EGLSurface;
                    public eglMakeCurrent(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLSurface, param2: javax.microedition.khronos.egl.EGLSurface, param3: javax.microedition.khronos.egl.EGLContext): boolean;
                    public eglWaitNative(param0: number, param1: any): boolean;
                    public eglCreateContext(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig, param2: javax.microedition.khronos.egl.EGLContext, param3: number[]): javax.microedition.khronos.egl.EGLContext;
                    public eglChooseConfig(param0: javax.microedition.khronos.egl.EGLDisplay, param1: number[], param2: javax.microedition.khronos.egl.EGLConfig[], param3: number, param4: number[]): boolean;
                    public eglTerminate(param0: javax.microedition.khronos.egl.EGLDisplay): boolean;
                    public eglQuerySurface(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLSurface, param2: number, param3: number[]): boolean;
                    public eglGetCurrentContext(): javax.microedition.khronos.egl.EGLContext;
                    public eglDestroyContext(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLContext): boolean;
                    public eglDestroySurface(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLSurface): boolean;
                    public eglCopyBuffers(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLSurface, param2: any): boolean;
                    public eglQueryString(param0: javax.microedition.khronos.egl.EGLDisplay, param1: number): string;
                    public eglReleaseThread(): boolean;
                }
            }
        }
    }
}

declare module com {
    export module google {
        export module android {
            export module gles_jni {
                export class EGLSurfaceImpl extends javax.microedition.khronos.egl.EGLSurface {
                    public static class: java.lang.Class<com.google.android.gles_jni.EGLSurfaceImpl>;
                    public equals(param0: any): boolean;
                    public constructor();
                    public hashCode(): number;
                    public constructor(param0: number);
                }
            }
        }
    }
}

declare module com {
    export module google {
        export module android {
            export module gles_jni {
                export class GLImpl implements javax.microedition.khronos.opengles.GL10, javax.microedition.khronos.opengles.GL10Ext, javax.microedition.khronos.opengles.GL11, javax.microedition.khronos.opengles.GL11Ext, javax.microedition.khronos.opengles.GL11ExtensionPack {
                    public static class: java.lang.Class<com.google.android.gles_jni.GLImpl>;
                    public glDrawElements(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                    public glEnableClientState(param0: number): void;
                    public glLoadMatrixx(param0: number[], param1: number): void;
                    public glGenBuffers(param0: number, param1: java.nio.IntBuffer): void;
                    public glPushMatrix(): void;
                    public glGetLightfv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glScalex(param0: number, param1: number, param2: number): void;
                    public glGetTexEnvxv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glClipPlanef(param0: number, param1: java.nio.FloatBuffer): void;
                    public glMultiTexCoord4x(param0: number, param1: number, param2: number, param3: number, param4: number): void;
                    public glViewport(param0: number, param1: number, param2: number, param3: number): void;
                    public constructor();
                    public glMultMatrixx(param0: java.nio.IntBuffer): void;
                    public glTexGenf(param0: number, param1: number, param2: number): void;
                    public glTexGenx(param0: number, param1: number, param2: number): void;
                    public glLineWidthx(param0: number): void;
                    public glPopMatrix(): void;
                    public glColor4ub(param0: number, param1: number, param2: number, param3: number): void;
                    public glFogfv(param0: number, param1: number[], param2: number): void;
                    public glHint(param0: number, param1: number): void;
                    public glTexParameteriv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glGetTexParameterfv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glOrthof(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): void;
                    public glGetFramebufferAttachmentParameterivOES(param0: number, param1: number, param2: number, param3: java.nio.IntBuffer): void;
                    public glGetTexGenfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                    public glScalef(param0: number, param1: number, param2: number): void;
                    public glGetTexParameteriv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glGetLightxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glRenderbufferStorageOES(param0: number, param1: number, param2: number, param3: number): void;
                    public glTexGenxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glClearDepthx(param0: number): void;
                    public glClipPlanef(param0: number, param1: number[], param2: number): void;
                    public glGetRenderbufferParameterivOES(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glBlendFuncSeparate(param0: number, param1: number, param2: number, param3: number): void;
                    public glTexGenxv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glTexParameterfv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glGetClipPlanef(param0: number, param1: java.nio.FloatBuffer): void;
                    public glIsBuffer(param0: number): boolean;
                    public glIsFramebufferOES(param0: number): boolean;
                    public glClearDepthf(param0: number): void;
                    public glBufferData(param0: number, param1: number, param2: java.nio.Buffer, param3: number): void;
                    public glClear(param0: number): void;
                    public glDrawTexsvOES(param0: number[], param1: number): void;
                    public glFramebufferTexture2DOES(param0: number, param1: number, param2: number, param3: number, param4: number): void;
                    public glOrthox(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): void;
                    public glLightModelf(param0: number, param1: number): void;
                    public glGetError(): number;
                    public glFramebufferRenderbufferOES(param0: number, param1: number, param2: number, param3: number): void;
                    public glColorPointer(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                    public glDisableClientState(param0: number): void;
                    public glLightfv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glMatrixMode(param0: number): void;
                    public glLightModelxv(param0: number, param1: number[], param2: number): void;
                    public glGenRenderbuffersOES(param0: number, param1: java.nio.IntBuffer): void;
                    public glBindFramebufferOES(param0: number, param1: number): void;
                    public glRotatef(param0: number, param1: number, param2: number, param3: number): void;
                    public glGenerateMipmapOES(param0: number): void;
                    public glGetMaterialxv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glBindBuffer(param0: number, param1: number): void;
                    public glDrawTexsOES(param0: number, param1: number, param2: number, param3: number, param4: number): void;
                    public glTexParameteri(param0: number, param1: number, param2: number): void;
                    public glTranslatef(param0: number, param1: number, param2: number): void;
                    public glTexSubImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: java.nio.Buffer): void;
                    public glRotatex(param0: number, param1: number, param2: number, param3: number): void;
                    public glAlphaFunc(param0: number, param1: number): void;
                    public glLogicOp(param0: number): void;
                    public glDeleteTextures(param0: number, param1: java.nio.IntBuffer): void;
                    public glClearColor(param0: number, param1: number, param2: number, param3: number): void;
                    public glGenFramebuffersOES(param0: number, param1: number[], param2: number): void;
                    public glLightxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glGetFloatv(param0: number, param1: number[], param2: number): void;
                    public glGetTexParameteriv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glColor4x(param0: number, param1: number, param2: number, param3: number): void;
                    public glGetBooleanv(param0: number, param1: boolean[], param2: number): void;
                    public glTexEnvfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                    public glDepthMask(param0: boolean): void;
                    public glDepthRangef(param0: number, param1: number): void;
                    public glPointParameterfv(param0: number, param1: java.nio.FloatBuffer): void;
                    public glStencilOp(param0: number, param1: number, param2: number): void;
                    public glTexEnvxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glMaterialxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glPixelStorei(param0: number, param1: number): void;
                    public glVertexPointer(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                    public glGetTexGeniv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glDrawTexxvOES(param0: number[], param1: number): void;
                    public glDrawTexxvOES(param0: java.nio.IntBuffer): void;
                    public glPointParameterfv(param0: number, param1: number[], param2: number): void;
                    public glTexParameterfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                    public glGetTexEnviv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glGenBuffers(param0: number, param1: number[], param2: number): void;
                    public glLightModelfv(param0: number, param1: number[], param2: number): void;
                    public glGetIntegerv(param0: number, param1: number[], param2: number): void;
                    public glGetTexParameterxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glFogf(param0: number, param1: number): void;
                    public glLoadMatrixf(param0: java.nio.FloatBuffer): void;
                    public glGetClipPlanef(param0: number, param1: number[], param2: number): void;
                    public glStencilFunc(param0: number, param1: number, param2: number): void;
                    public glMultMatrixf(param0: number[], param1: number): void;
                    public glPointSize(param0: number): void;
                    public glCheckFramebufferStatusOES(param0: number): number;
                    public glDeleteRenderbuffersOES(param0: number, param1: java.nio.IntBuffer): void;
                    public glTexCoordPointer(param0: number, param1: number, param2: number, param3: number): void;
                    public glDisable(param0: number): void;
                    public glDrawTexfvOES(param0: java.nio.FloatBuffer): void;
                    public glLoadMatrixx(param0: java.nio.IntBuffer): void;
                    public glLoadIdentity(): void;
                    public glLightModelfv(param0: number, param1: java.nio.FloatBuffer): void;
                    public glGetFixedv(param0: number, param1: number[], param2: number): void;
                    public glDeleteFramebuffersOES(param0: number, param1: java.nio.IntBuffer): void;
                    public glGenTextures(param0: number, param1: java.nio.IntBuffer): void;
                    public glDepthRangex(param0: number, param1: number): void;
                    public glPolygonOffset(param0: number, param1: number): void;
                    public glMultMatrixf(param0: java.nio.FloatBuffer): void;
                    public glGetLightxv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glGetBooleanv(param0: number, param1: java.nio.IntBuffer): void;
                    public glTexEnviv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glAlphaFuncx(param0: number, param1: number): void;
                    public glFrustumx(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): void;
                    public glFogx(param0: number, param1: number): void;
                    public glLightModelxv(param0: number, param1: java.nio.IntBuffer): void;
                    public glTexGeniv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glGenFramebuffersOES(param0: number, param1: java.nio.IntBuffer): void;
                    public glBlendEquation(param0: number): void;
                    public glGetBufferParameteriv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glTexGeni(param0: number, param1: number, param2: number): void;
                    public glTexGenfv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glTexParameterxv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glTexEnvx(param0: number, param1: number, param2: number): void;
                    public glCopyTexSubImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
                    public glGetTexParameterxv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glBindRenderbufferOES(param0: number, param1: number): void;
                    public glPolygonOffsetx(param0: number, param1: number): void;
                    public glGetTexParameterfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                    public glPointParameterxv(param0: number, param1: number[], param2: number): void;
                    public glTexGeniv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glShadeModel(param0: number): void;
                    public glFinish(): void;
                    public glPointParameterf(param0: number, param1: number): void;
                    public glTexParameterf(param0: number, param1: number, param2: number): void;
                    public glTexEnvf(param0: number, param1: number, param2: number): void;
                    public glTexCoordPointer(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                    public glLightfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                    public glGetTexEnviv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glActiveTexture(param0: number): void;
                    public glIsTexture(param0: number): boolean;
                    public glTexParameterx(param0: number, param1: number, param2: number): void;
                    public glNormalPointer(param0: number, param1: number, param2: number): void;
                    public glBindTexture(param0: number, param1: number): void;
                    public glFrontFace(param0: number): void;
                    public glLoadMatrixf(param0: number[], param1: number): void;
                    public glDeleteFramebuffersOES(param0: number, param1: number[], param2: number): void;
                    public glTexGenfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                    public glCullFace(param0: number): void;
                    public glGenRenderbuffersOES(param0: number, param1: number[], param2: number): void;
                    public glClipPlanex(param0: number, param1: number[], param2: number): void;
                    public glLightxv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glDrawTexivOES(param0: java.nio.IntBuffer): void;
                    public glTexParameterxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glMultiTexCoord4f(param0: number, param1: number, param2: number, param3: number, param4: number): void;
                    public glBlendEquationSeparate(param0: number, param1: number): void;
                    public glGenTextures(param0: number, param1: number[], param2: number): void;
                    public glClearStencil(param0: number): void;
                    public glClientActiveTexture(param0: number): void;
                    public glSampleCoverage(param0: number, param1: boolean): void;
                    public glClipPlanex(param0: number, param1: java.nio.IntBuffer): void;
                    public glPointParameterx(param0: number, param1: number): void;
                    public glQueryMatrixxOES(param0: java.nio.IntBuffer, param1: java.nio.IntBuffer): number;
                    public glPointParameterxv(param0: number, param1: java.nio.IntBuffer): void;
                    public glPointSizePointerOES(param0: number, param1: number, param2: java.nio.Buffer): void;
                    public glColorMask(param0: boolean, param1: boolean, param2: boolean, param3: boolean): void;
                    public glGetMaterialfv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glGetTexEnvxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glGetBufferParameteriv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glPointSizex(param0: number): void;
                    public glLightModelx(param0: number, param1: number): void;
                    public glGetIntegerv(param0: number, param1: java.nio.IntBuffer): void;
                    public glQueryMatrixxOES(param0: number[], param1: number, param2: number[], param3: number): number;
                    public glMaterialf(param0: number, param1: number, param2: number): void;
                    public glDrawTexfOES(param0: number, param1: number, param2: number, param3: number, param4: number): void;
                    public glNormal3x(param0: number, param1: number, param2: number): void;
                    public glCompressedTexSubImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: java.nio.Buffer): void;
                    public glGetFramebufferAttachmentParameterivOES(param0: number, param1: number, param2: number, param3: number[], param4: number): void;
                    public glTexParameteriv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glMatrixIndexPointerOES(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                    public glTexEnvfv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glBufferSubData(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                    public glMultMatrixx(param0: number[], param1: number): void;
                    public glReadPixels(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: java.nio.Buffer): void;
                    public glGetFixedv(param0: number, param1: java.nio.IntBuffer): void;
                    public glFogxv(param0: number, param1: java.nio.IntBuffer): void;
                    public glGetTexGenxv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glGetRenderbufferParameterivOES(param0: number, param1: number, param2: number[], param3: number): void;
                    public glGetTexGenxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glDeleteRenderbuffersOES(param0: number, param1: number[], param2: number): void;
                    public glMaterialfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                    public glNormalPointer(param0: number, param1: number, param2: java.nio.Buffer): void;
                    public glDeleteTextures(param0: number, param1: number[], param2: number): void;
                    public glStencilMask(param0: number): void;
                    public glLoadPaletteFromModelViewMatrixOES(): void;
                    public glTexImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: java.nio.Buffer): void;
                    public glVertexPointer(param0: number, param1: number, param2: number, param3: number): void;
                    public glIsRenderbufferOES(param0: number): boolean;
                    public glFlush(): void;
                    public glTexEnviv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glLightx(param0: number, param1: number, param2: number): void;
                    public glDrawTexiOES(param0: number, param1: number, param2: number, param3: number, param4: number): void;
                    public glEnable(param0: number): void;
                    public glTexEnvxv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glDrawElements(param0: number, param1: number, param2: number, param3: number): void;
                    public glGetMaterialxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glGetTexGeniv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glCurrentPaletteMatrixOES(param0: number): void;
                    public glDepthFunc(param0: number): void;
                    public glClearColorx(param0: number, param1: number, param2: number, param3: number): void;
                    public glDrawTexivOES(param0: number[], param1: number): void;
                    public glSampleCoveragex(param0: number, param1: boolean): void;
                    public glLightf(param0: number, param1: number, param2: number): void;
                    public glDrawTexfvOES(param0: number[], param1: number): void;
                    public glMaterialxv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glGetPointerv(param0: number, param1: java.nio.Buffer[]): void;
                    public glCompressedTexImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: java.nio.Buffer): void;
                    public glScissor(param0: number, param1: number, param2: number, param3: number): void;
                    public glFogfv(param0: number, param1: java.nio.FloatBuffer): void;
                    public glGetString(param0: number): string;
                    public glColorPointer(param0: number, param1: number, param2: number, param3: number): void;
                    public glDrawArrays(param0: number, param1: number, param2: number): void;
                    public glLineWidth(param0: number): void;
                    public glWeightPointerOES(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                    public glIsEnabled(param0: number): boolean;
                    public glWeightPointerOES(param0: number, param1: number, param2: number, param3: number): void;
                    public glGetMaterialfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                    public glBlendFunc(param0: number, param1: number): void;
                    public glGetClipPlanex(param0: number, param1: number[], param2: number): void;
                    public glGetTexGenfv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glGetClipPlanex(param0: number, param1: java.nio.IntBuffer): void;
                    public glDrawTexxOES(param0: number, param1: number, param2: number, param3: number, param4: number): void;
                    public glGetLightfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                    public glColor4f(param0: number, param1: number, param2: number, param3: number): void;
                    public glMaterialfv(param0: number, param1: number, param2: number[], param3: number): void;
                    public _glGetString(param0: number): string;
                    public glCopyTexImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
                    public glDeleteBuffers(param0: number, param1: java.nio.IntBuffer): void;
                    public glTexEnvi(param0: number, param1: number, param2: number): void;
                    public glTranslatex(param0: number, param1: number, param2: number): void;
                    public glFogxv(param0: number, param1: number[], param2: number): void;
                    public glNormal3f(param0: number, param1: number, param2: number): void;
                    public glFrustumf(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): void;
                    public glGetFloatv(param0: number, param1: java.nio.FloatBuffer): void;
                    public glMatrixIndexPointerOES(param0: number, param1: number, param2: number, param3: number): void;
                    public glMaterialx(param0: number, param1: number, param2: number): void;
                    public glDrawTexsvOES(param0: java.nio.ShortBuffer): void;
                    public glDeleteBuffers(param0: number, param1: number[], param2: number): void;
                }
            }
        }
    }
}

declare module com {
    export module google {
        export module android {
            export module util {
                export abstract class AbstractMessageParser {
                    public static class: java.lang.Class<com.google.android.util.AbstractMessageParser>;
                    public static musicNote: string;
                    public constructor(param0: string, param1: boolean, param2: boolean, param3: boolean, param4: boolean, param5: boolean, param6: boolean);
                    public getRawText(): string;
                    public getPartCount(): number;
                    public parse(): void;
                    public constructor(param0: string);
                    public static reverse(param0: string): string;
                    public static tokenForUrl(param0: string, param1: string): com.google.android.util.AbstractMessageParser.Token;
                    public getPart(param0: number): com.google.android.util.AbstractMessageParser.Part;
                    public getResources(): com.google.android.util.AbstractMessageParser.Resources;
                    public getParts(): java.util.List<com.google.android.util.AbstractMessageParser.Part>;
                    public toHtml(): string;
                }
                export module AbstractMessageParser {
                    export class Acronym extends com.google.android.util.AbstractMessageParser.Token {
                        public static class: java.lang.Class<com.google.android.util.AbstractMessageParser.Acronym>;
                        public constructor(param0: com.google.android.util.AbstractMessageParser.Token.Type, param1: string);
                        public isHtml(): boolean;
                        public getInfo(): java.util.List<string>;
                        public getValue(): string;
                        public constructor(param0: string, param1: string);
                    }
                    export class FlickrPhoto extends com.google.android.util.AbstractMessageParser.Token {
                        public static class: java.lang.Class<com.google.android.util.AbstractMessageParser.FlickrPhoto>;
                        public constructor(param0: com.google.android.util.AbstractMessageParser.Token.Type, param1: string);
                        public getUser(): string;
                        public static getTagsURL(param0: string): string;
                        public static getUserTagsURL(param0: string, param1: string): string;
                        public getPhoto(): string;
                        public getUrl(): string;
                        public static matchURL(param0: string, param1: string): com.google.android.util.AbstractMessageParser.FlickrPhoto;
                        public static getRssUrl(param0: string): string;
                        public isHtml(): boolean;
                        public static getPhotoURL(param0: string, param1: string): string;
                        public getGrouping(): string;
                        public getInfo(): java.util.List<string>;
                        public isMedia(): boolean;
                        public getGroupingId(): string;
                        public static getUserSetsURL(param0: string, param1: string): string;
                        public constructor(param0: string, param1: string, param2: string, param3: string, param4: string);
                        public static getUserURL(param0: string): string;
                    }
                    export class Format extends com.google.android.util.AbstractMessageParser.Token {
                        public static class: java.lang.Class<com.google.android.util.AbstractMessageParser.Format>;
                        public constructor(param0: com.google.android.util.AbstractMessageParser.Token.Type, param1: string);
                        public isHtml(): boolean;
                        public controlCaps(): boolean;
                        public getInfo(): java.util.List<string>;
                        public setMatched(param0: boolean): void;
                        public toHtml(param0: boolean): string;
                        public setCaps(): boolean;
                        public constructor(param0: string, param1: boolean);
                    }
                    export class Html extends com.google.android.util.AbstractMessageParser.Token {
                        public static class: java.lang.Class<com.google.android.util.AbstractMessageParser.Html>;
                        public constructor(param0: com.google.android.util.AbstractMessageParser.Token.Type, param1: string);
                        public isHtml(): boolean;
                        public getInfo(): java.util.List<string>;
                        public static trimTrailingWhitespace(param0: string): string;
                        public trimLeadingWhitespace(): void;
                        public trimTrailingWhitespace(): void;
                        public constructor(param0: string, param1: string);
                        public toHtml(param0: boolean): string;
                    }
                    export class Link extends com.google.android.util.AbstractMessageParser.Token {
                        public static class: java.lang.Class<com.google.android.util.AbstractMessageParser.Link>;
                        public constructor(param0: com.google.android.util.AbstractMessageParser.Token.Type, param1: string);
                        public isHtml(): boolean;
                        public getInfo(): java.util.List<string>;
                        public getURL(): string;
                        public constructor(param0: string, param1: string);
                    }
                    export class MusicTrack extends com.google.android.util.AbstractMessageParser.Token {
                        public static class: java.lang.Class<com.google.android.util.AbstractMessageParser.MusicTrack>;
                        public constructor(param0: com.google.android.util.AbstractMessageParser.Token.Type, param1: string);
                        public isHtml(): boolean;
                        public getTrack(): string;
                        public getInfo(): java.util.List<string>;
                        public constructor(param0: string);
                    }
                    export class Part extends java.lang.Object {
                        public static class: java.lang.Class<com.google.android.util.AbstractMessageParser.Part>;
                        public constructor();
                        public getMediaToken(): com.google.android.util.AbstractMessageParser.Token;
                        public getTokens(): java.util.ArrayList<com.google.android.util.AbstractMessageParser.Token>;
                        public getRawText(): string;
                        public isMedia(): boolean;
                        public getType(param0: boolean): string;
                        public setMeText(param0: string): void;
                        public add(param0: com.google.android.util.AbstractMessageParser.Token): void;
                    }
                    export class Photo extends com.google.android.util.AbstractMessageParser.Token {
                        public static class: java.lang.Class<com.google.android.util.AbstractMessageParser.Photo>;
                        public constructor(param0: com.google.android.util.AbstractMessageParser.Token.Type, param1: string);
                        public constructor(param0: string, param1: string, param2: string, param3: string);
                        public getUser(): string;
                        public static getRssUrl(param0: string): string;
                        public isHtml(): boolean;
                        public static getAlbumURL(param0: string, param1: string): string;
                        public getInfo(): java.util.List<string>;
                        public getPhoto(): string;
                        public getAlbum(): string;
                        public static matchURL(param0: string, param1: string): com.google.android.util.AbstractMessageParser.Photo;
                        public isMedia(): boolean;
                        public static getPhotoURL(param0: string, param1: string, param2: string): string;
                    }
                    export class Resources extends java.lang.Object {
                        public static class: java.lang.Class<com.google.android.util.AbstractMessageParser.Resources>;
                        /**
                         * Constructs a new instance of the com.google.android.util.AbstractMessageParser$Resources interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            getAcronyms(): com.google.android.util.AbstractMessageParser.TrieNode;
                            getDomainSuffixes(): com.google.android.util.AbstractMessageParser.TrieNode;
                            getSchemes(): java.util.Set<string>;
                            getSmileys(): com.google.android.util.AbstractMessageParser.TrieNode;
                        });
                        public constructor();
                        public getAcronyms(): com.google.android.util.AbstractMessageParser.TrieNode;
                        public getSchemes(): java.util.Set<string>;
                        public getDomainSuffixes(): com.google.android.util.AbstractMessageParser.TrieNode;
                        public getSmileys(): com.google.android.util.AbstractMessageParser.TrieNode;
                    }
                    export class Smiley extends com.google.android.util.AbstractMessageParser.Token {
                        public static class: java.lang.Class<com.google.android.util.AbstractMessageParser.Smiley>;
                        public constructor(param0: com.google.android.util.AbstractMessageParser.Token.Type, param1: string);
                        public isHtml(): boolean;
                        public getInfo(): java.util.List<string>;
                        public constructor(param0: string);
                    }
                    export abstract class Token {
                        public static class: java.lang.Class<com.google.android.util.AbstractMessageParser.Token>;
                        public text: string;
                        public type: com.google.android.util.AbstractMessageParser.Token.Type;
                        public constructor(param0: com.google.android.util.AbstractMessageParser.Token.Type, param1: string);
                        public isHtml(): boolean;
                        public controlCaps(): boolean;
                        public isArray(): boolean;
                        public getInfo(): java.util.List<string>;
                        public getRawText(): string;
                        public isMedia(): boolean;
                        public getType(): com.google.android.util.AbstractMessageParser.Token.Type;
                        public toHtml(param0: boolean): string;
                        public setCaps(): boolean;
                    }
                    export module Token {
                        export class Type extends java.lang.Object {
                            public static class: java.lang.Class<com.google.android.util.AbstractMessageParser.Token.Type>;
                            public static ACRONYM: com.google.android.util.AbstractMessageParser.Token.Type;
                            public static FLICKR: com.google.android.util.AbstractMessageParser.Token.Type;
                            public static FORMAT: com.google.android.util.AbstractMessageParser.Token.Type;
                            public static GOOGLE_VIDEO: com.google.android.util.AbstractMessageParser.Token.Type;
                            public static HTML: com.google.android.util.AbstractMessageParser.Token.Type;
                            public static LINK: com.google.android.util.AbstractMessageParser.Token.Type;
                            public static MUSIC: com.google.android.util.AbstractMessageParser.Token.Type;
                            public static PHOTO: com.google.android.util.AbstractMessageParser.Token.Type;
                            public static SMILEY: com.google.android.util.AbstractMessageParser.Token.Type;
                            public static YOUTUBE_VIDEO: com.google.android.util.AbstractMessageParser.Token.Type;
                            public static values(): com.google.android.util.AbstractMessageParser.Token.Type[];
                            public static valueOf(param0: string): com.google.android.util.AbstractMessageParser.Token.Type;
                            public toString(): string;
                        }
                    }
                    export class TrieNode extends java.lang.Object {
                        public static class: java.lang.Class<com.google.android.util.AbstractMessageParser.TrieNode>;
                        public constructor();
                        public exists(): boolean;
                        public setValue(param0: string): void;
                        public static addToTrie(param0: com.google.android.util.AbstractMessageParser.TrieNode, param1: string, param2: string): void;
                        public getValue(): string;
                        public getText(): string;
                        public getChild(param0: string): com.google.android.util.AbstractMessageParser.TrieNode;
                        public constructor(param0: string);
                        public getOrCreateChild(param0: string): com.google.android.util.AbstractMessageParser.TrieNode;
                    }
                    export class Video extends com.google.android.util.AbstractMessageParser.Token {
                        public static class: java.lang.Class<com.google.android.util.AbstractMessageParser.Video>;
                        public constructor(param0: com.google.android.util.AbstractMessageParser.Token.Type, param1: string);
                        public static getURL(param0: string, param1: string): string;
                        public static getRssUrl(param0: string): string;
                        public isHtml(): boolean;
                        public getInfo(): java.util.List<string>;
                        public static getURL(param0: string): string;
                        public isMedia(): boolean;
                        public constructor(param0: string, param1: string);
                        public static matchURL(param0: string, param1: string): com.google.android.util.AbstractMessageParser.Video;
                        public getDocID(): string;
                    }
                    export class YouTubeVideo extends com.google.android.util.AbstractMessageParser.Token {
                        public static class: java.lang.Class<com.google.android.util.AbstractMessageParser.YouTubeVideo>;
                        public constructor(param0: com.google.android.util.AbstractMessageParser.Token.Type, param1: string);
                        public static getURL(param0: string, param1: string): string;
                        public static getRssUrl(param0: string): string;
                        public isHtml(): boolean;
                        public getInfo(): java.util.List<string>;
                        public static getPrefixedURL(param0: boolean, param1: string, param2: string, param3: string): string;
                        public static getURL(param0: string): string;
                        public static matchURL(param0: string, param1: string): com.google.android.util.AbstractMessageParser.YouTubeVideo;
                        public isMedia(): boolean;
                        public constructor(param0: string, param1: string);
                        public getDocID(): string;
                    }
                }
            }
        }
    }
}

declare module com {
    export module google {
        export module android {
            export module util {
                export class Procedure<T> extends java.lang.Object {
                    public static class: java.lang.Class<com.google.android.util.Procedure<any>>;
                    /**
                     * Constructs a new instance of the com.google.android.util.Procedure<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        apply(param0: T): void;
                    });
                    public constructor();
                    public apply(param0: T): void;
                }
            }
        }
    }
}

declare module com {
    export module google {
        export module android {
            export module util {
                export class SmileyParser extends com.google.android.util.AbstractMessageParser {
                    public static class: java.lang.Class<com.google.android.util.SmileyParser>;
                    public constructor(param0: string, param1: boolean, param2: boolean, param3: boolean, param4: boolean, param5: boolean, param6: boolean);
                    public constructor(param0: string);
                    public getResources(): com.google.android.util.AbstractMessageParser.Resources;
                    public getSpannableString(param0: globalAndroid.content.Context): string;
                    public constructor(param0: string, param1: com.google.android.util.SmileyResources);
                }
            }
        }
    }
}

declare module com {
    export module google {
        export module android {
            export module util {
                export class SmileyResources extends com.google.android.util.AbstractMessageParser.Resources {
                    public static class: java.lang.Class<com.google.android.util.SmileyResources>;
                    public getSmileys(): com.google.android.util.AbstractMessageParser.TrieNode;
                    public getAcronyms(): com.google.android.util.AbstractMessageParser.TrieNode;
                    public getSmileyRes(param0: string): number;
                    public constructor(param0: string[], param1: number[]);
                    public getDomainSuffixes(): com.google.android.util.AbstractMessageParser.TrieNode;
                    public getSchemes(): java.util.Set<string>;
                }
            }
        }
    }
}

declare module com {
    export module nxp {
        export module nfc {
            export class NxpConstants extends java.lang.Object {
                public static class: java.lang.Class<com.nxp.nfc.NxpConstants>;
                public static ACTION_CHECK_X509: string;
                public static ACTION_CHECK_X509_RESULT: string;
                public static ACTION_CONNECTIVITY_EVENT_DETECTED: string;
                public static ACTION_EMVCO_MULTIPLE_CARD_DETECTED: string;
                public static ACTION_GSMA_ENABLE_NFC: string;
                public static ACTION_GSMA_ENABLE_SET_FLAG: string;
                public static ACTION_MULTI_EVT_TRANSACTION: string;
                public static ACTION_ROUTING_TABLE_FULL: string;
                public static ACTION_SWP_READER_ACTIVATED: string;
                public static ACTION_SWP_READER_DEACTIVATED: string;
                public static ACTION_SWP_READER_REQUESTED: string;
                public static ACTION_SWP_READER_REQUESTED_FAILED: string;
                public static ACTION_SWP_READER_TAG_PRESENT: string;
                public static ACTION_SWP_READER_TAG_REMOVE: string;
                public static ACTION_TRANSACTION_DETECTED: string;
                public static ALL_SE_ID: string;
                public static EXTRA_AID: string;
                public static EXTRA_DATA: string;
                public static EXTRA_GSMA_AID: string;
                public static EXTRA_GSMA_DATA: string;
                public static EXTRA_GSMA_PREV_PAYMENT_COMPONENT: string;
                public static EXTRA_PKG: string;
                public static EXTRA_RESULT: string;
                public static EXTRA_SE_NAME: string;
                public static EXTRA_SOURCE: string;
                public static HOST_ID: string;
                public static HOST_ID_TYPE: number;
                public static PERMISSIONS_NFC: string;
                public static PERMISSIONS_TRANSACTION_EVENT: string;
                public static SERVICE_STATE_DISABLED: number;
                public static SERVICE_STATE_DISABLING: number;
                public static SERVICE_STATE_ENABLED: number;
                public static SERVICE_STATE_ENABLING: number;
                public static SET_PACKAGE_NAME: string;
                public static SMART_MX_ID: string;
                public static SMART_MX_ID_TYPE: number;
                public static UICC2_ID: string;
                public static UICC2_ID_TYPE: number;
                public static UICC_ID: string;
                public static UICC_ID_TYPE: number;
                public constructor();
            }
        }
    }
}

declare module javax {
    export module microedition {
        export module khronos {
            export module egl {
                export class EGL extends java.lang.Object {
                    public static class: java.lang.Class<javax.microedition.khronos.egl.EGL>;
                    /**
                     * Constructs a new instance of the javax.microedition.khronos.egl.EGL interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {});
                    public constructor();
                }
            }
        }
    }
}

declare module javax {
    export module microedition {
        export module khronos {
            export module egl {
                export class EGL10 extends javax.microedition.khronos.egl.EGL {
                    public static class: java.lang.Class<javax.microedition.khronos.egl.EGL10>;
                    /**
                     * Constructs a new instance of the javax.microedition.khronos.egl.EGL10 interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        <clinit>(): void;
                        eglChooseConfig(param0: javax.microedition.khronos.egl.EGLDisplay, param1: number[], param2: javax.microedition.khronos.egl.EGLConfig[], param3: number, param4: number[]): boolean;
                        eglCopyBuffers(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLSurface, param2: any): boolean;
                        eglCreateContext(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig, param2: javax.microedition.khronos.egl.EGLContext, param3: number[]): javax.microedition.khronos.egl.EGLContext;
                        eglCreatePbufferSurface(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig, param2: number[]): javax.microedition.khronos.egl.EGLSurface;
                        eglCreatePixmapSurface(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig, param2: any, param3: number[]): javax.microedition.khronos.egl.EGLSurface;
                        eglCreateWindowSurface(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig, param2: any, param3: number[]): javax.microedition.khronos.egl.EGLSurface;
                        eglDestroyContext(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLContext): boolean;
                        eglDestroySurface(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLSurface): boolean;
                        eglGetConfigAttrib(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig, param2: number, param3: number[]): boolean;
                        eglGetConfigs(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig[], param2: number, param3: number[]): boolean;
                        eglGetCurrentContext(): javax.microedition.khronos.egl.EGLContext;
                        eglGetCurrentDisplay(): javax.microedition.khronos.egl.EGLDisplay;
                        eglGetCurrentSurface(param0: number): javax.microedition.khronos.egl.EGLSurface;
                        eglGetDisplay(param0: any): javax.microedition.khronos.egl.EGLDisplay;
                        eglGetError(): number;
                        eglInitialize(param0: javax.microedition.khronos.egl.EGLDisplay, param1: number[]): boolean;
                        eglMakeCurrent(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLSurface, param2: javax.microedition.khronos.egl.EGLSurface, param3: javax.microedition.khronos.egl.EGLContext): boolean;
                        eglQueryContext(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLContext, param2: number, param3: number[]): boolean;
                        eglQueryString(param0: javax.microedition.khronos.egl.EGLDisplay, param1: number): string;
                        eglQuerySurface(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLSurface, param2: number, param3: number[]): boolean;
                        eglReleaseThread(): boolean;
                        eglSwapBuffers(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLSurface): boolean;
                        eglTerminate(param0: javax.microedition.khronos.egl.EGLDisplay): boolean;
                        eglWaitGL(): boolean;
                        eglWaitNative(param0: number, param1: any): boolean;
                    });
                    public constructor();
                    public static EGL_MAX_PBUFFER_HEIGHT: number;
                    public static EGL_BAD_CONFIG: number;
                    public static EGL_TRANSPARENT_RED_VALUE: number;
                    public static EGL_ALPHA_SIZE: number;
                    public static EGL_LUMINANCE_BUFFER: number;
                    public static EGL_SAMPLES: number;
                    public static EGL_EXTENSIONS: number;
                    public static EGL_NO_DISPLAY: javax.microedition.khronos.egl.EGLDisplay;
                    public static EGL_VERSION: number;
                    public static EGL_TRANSPARENT_GREEN_VALUE: number;
                    public static EGL_CONFIG_ID: number;
                    public static EGL_LARGEST_PBUFFER: number;
                    public static EGL_DEPTH_SIZE: number;
                    public static EGL_HEIGHT: number;
                    public static EGL_MAX_PBUFFER_WIDTH: number;
                    public static EGL_NOT_INITIALIZED: number;
                    public static EGL_RENDER_BUFFER: number;
                    public static EGL_RED_SIZE: number;
                    public static EGL_DONT_CARE: number;
                    public static EGL_READ: number;
                    public static EGL_BAD_NATIVE_WINDOW: number;
                    public static EGL_PIXMAP_BIT: number;
                    public static EGL_WIDTH: number;
                    public static EGL_STENCIL_SIZE: number;
                    public static EGL_SUCCESS: number;
                    public static EGL_GREEN_SIZE: number;
                    public static EGL_DRAW: number;
                    public static EGL_COLORSPACE: number;
                    public static EGL_LEVEL: number;
                    public static EGL_PBUFFER_BIT: number;
                    public static EGL_BAD_SURFACE: number;
                    public static EGL_BLUE_SIZE: number;
                    public static EGL_RENDERABLE_TYPE: number;
                    public static EGL_BAD_ATTRIBUTE: number;
                    public static EGL_VENDOR: number;
                    public static EGL_BAD_ACCESS: number;
                    public static EGL_CORE_NATIVE_ENGINE: number;
                    public static EGL_NONE: number;
                    public static EGL_VERTICAL_RESOLUTION: number;
                    public static EGL_BAD_CURRENT_SURFACE: number;
                    public static EGL_COLOR_BUFFER_TYPE: number;
                    public static EGL_CONFIG_CAVEAT: number;
                    public static EGL_BAD_NATIVE_PIXMAP: number;
                    public static EGL_NATIVE_VISUAL_TYPE: number;
                    public static EGL_LUMINANCE_SIZE: number;
                    public static EGL_NON_CONFORMANT_CONFIG: number;
                    public static EGL_BAD_MATCH: number;
                    public static EGL_SAMPLE_BUFFERS: number;
                    public static EGL_TRANSPARENT_BLUE_VALUE: number;
                    public static EGL_PIXEL_ASPECT_RATIO: number;
                    public static EGL_SURFACE_TYPE: number;
                    public static EGL_TRANSPARENT_TYPE: number;
                    public static EGL_ALPHA_FORMAT: number;
                    public static EGL_NO_SURFACE: javax.microedition.khronos.egl.EGLSurface;
                    public static EGL_WINDOW_BIT: number;
                    public static EGL_BAD_ALLOC: number;
                    public static EGL_RGB_BUFFER: number;
                    public static EGL_ALPHA_MASK_SIZE: number;
                    public static EGL_DEFAULT_DISPLAY: any;
                    public static EGL_HORIZONTAL_RESOLUTION: number;
                    public static EGL_TRANSPARENT_RGB: number;
                    public static EGL_MAX_PBUFFER_PIXELS: number;
                    public static EGL_SLOW_CONFIG: number;
                    public static EGL_SINGLE_BUFFER: number;
                    public static EGL_BUFFER_SIZE: number;
                    public static EGL_NO_CONTEXT: javax.microedition.khronos.egl.EGLContext;
                    public static EGL_NATIVE_RENDERABLE: number;
                    public static EGL_BAD_DISPLAY: number;
                    public static EGL_BAD_PARAMETER: number;
                    public static EGL_BAD_CONTEXT: number;
                    public static EGL_NATIVE_VISUAL_ID: number;
                    public eglSwapBuffers(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLSurface): boolean;
                    public eglGetCurrentDisplay(): javax.microedition.khronos.egl.EGLDisplay;
                    public eglQueryContext(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLContext, param2: number, param3: number[]): boolean;
                    public eglGetConfigs(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig[], param2: number, param3: number[]): boolean;
                    public eglGetError(): number;
                    public eglGetDisplay(param0: any): javax.microedition.khronos.egl.EGLDisplay;
                    public eglGetCurrentSurface(param0: number): javax.microedition.khronos.egl.EGLSurface;
                    public eglCreatePbufferSurface(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig, param2: number[]): javax.microedition.khronos.egl.EGLSurface;
                    public eglCreateWindowSurface(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig, param2: any, param3: number[]): javax.microedition.khronos.egl.EGLSurface;
                    public eglGetConfigAttrib(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig, param2: number, param3: number[]): boolean;
                    public eglInitialize(param0: javax.microedition.khronos.egl.EGLDisplay, param1: number[]): boolean;
                    public eglWaitGL(): boolean;
                    public eglCreatePixmapSurface(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig, param2: any, param3: number[]): javax.microedition.khronos.egl.EGLSurface;
                    public eglMakeCurrent(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLSurface, param2: javax.microedition.khronos.egl.EGLSurface, param3: javax.microedition.khronos.egl.EGLContext): boolean;
                    public eglWaitNative(param0: number, param1: any): boolean;
                    public eglCreateContext(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig, param2: javax.microedition.khronos.egl.EGLContext, param3: number[]): javax.microedition.khronos.egl.EGLContext;
                    public eglChooseConfig(param0: javax.microedition.khronos.egl.EGLDisplay, param1: number[], param2: javax.microedition.khronos.egl.EGLConfig[], param3: number, param4: number[]): boolean;
                    public eglTerminate(param0: javax.microedition.khronos.egl.EGLDisplay): boolean;
                    public eglQuerySurface(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLSurface, param2: number, param3: number[]): boolean;
                    public eglGetCurrentContext(): javax.microedition.khronos.egl.EGLContext;
                    public eglDestroyContext(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLContext): boolean;
                    public eglDestroySurface(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLSurface): boolean;
                    public eglCopyBuffers(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLSurface, param2: any): boolean;
                    public eglQueryString(param0: javax.microedition.khronos.egl.EGLDisplay, param1: number): string;
                    public eglReleaseThread(): boolean;
                }
            }
        }
    }
}

declare module javax {
    export module microedition {
        export module khronos {
            export module egl {
                export class EGL11 extends javax.microedition.khronos.egl.EGL10 {
                    public static class: java.lang.Class<javax.microedition.khronos.egl.EGL11>;
                    /**
                     * Constructs a new instance of the javax.microedition.khronos.egl.EGL11 interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        <clinit>(): void;
                        eglChooseConfig(param0: javax.microedition.khronos.egl.EGLDisplay, param1: number[], param2: javax.microedition.khronos.egl.EGLConfig[], param3: number, param4: number[]): boolean;
                        eglCopyBuffers(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLSurface, param2: any): boolean;
                        eglCreateContext(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig, param2: javax.microedition.khronos.egl.EGLContext, param3: number[]): javax.microedition.khronos.egl.EGLContext;
                        eglCreatePbufferSurface(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig, param2: number[]): javax.microedition.khronos.egl.EGLSurface;
                        eglCreatePixmapSurface(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig, param2: any, param3: number[]): javax.microedition.khronos.egl.EGLSurface;
                        eglCreateWindowSurface(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig, param2: any, param3: number[]): javax.microedition.khronos.egl.EGLSurface;
                        eglDestroyContext(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLContext): boolean;
                        eglDestroySurface(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLSurface): boolean;
                        eglGetConfigAttrib(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig, param2: number, param3: number[]): boolean;
                        eglGetConfigs(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig[], param2: number, param3: number[]): boolean;
                        eglGetCurrentContext(): javax.microedition.khronos.egl.EGLContext;
                        eglGetCurrentDisplay(): javax.microedition.khronos.egl.EGLDisplay;
                        eglGetCurrentSurface(param0: number): javax.microedition.khronos.egl.EGLSurface;
                        eglGetDisplay(param0: any): javax.microedition.khronos.egl.EGLDisplay;
                        eglGetError(): number;
                        eglInitialize(param0: javax.microedition.khronos.egl.EGLDisplay, param1: number[]): boolean;
                        eglMakeCurrent(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLSurface, param2: javax.microedition.khronos.egl.EGLSurface, param3: javax.microedition.khronos.egl.EGLContext): boolean;
                        eglQueryContext(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLContext, param2: number, param3: number[]): boolean;
                        eglQueryString(param0: javax.microedition.khronos.egl.EGLDisplay, param1: number): string;
                        eglQuerySurface(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLSurface, param2: number, param3: number[]): boolean;
                        eglReleaseThread(): boolean;
                        eglSwapBuffers(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLSurface): boolean;
                        eglTerminate(param0: javax.microedition.khronos.egl.EGLDisplay): boolean;
                        eglWaitGL(): boolean;
                        eglWaitNative(param0: number, param1: any): boolean;
                    });
                    public constructor();
                    public static EGL_MAX_PBUFFER_HEIGHT: number;
                    public static EGL_BAD_CONFIG: number;
                    public static EGL_TRANSPARENT_RED_VALUE: number;
                    public static EGL_ALPHA_SIZE: number;
                    public static EGL_LUMINANCE_BUFFER: number;
                    public static EGL_SAMPLES: number;
                    public static EGL_EXTENSIONS: number;
                    public static EGL_NO_DISPLAY: javax.microedition.khronos.egl.EGLDisplay;
                    public static EGL_VERSION: number;
                    public static EGL_TRANSPARENT_GREEN_VALUE: number;
                    public static EGL_CONFIG_ID: number;
                    public static EGL_LARGEST_PBUFFER: number;
                    public static EGL_DEPTH_SIZE: number;
                    public static EGL_HEIGHT: number;
                    public static EGL_MAX_PBUFFER_WIDTH: number;
                    public static EGL_NOT_INITIALIZED: number;
                    public static EGL_RENDER_BUFFER: number;
                    public static EGL_RED_SIZE: number;
                    public static EGL_DONT_CARE: number;
                    public static EGL_READ: number;
                    public static EGL_BAD_NATIVE_WINDOW: number;
                    public static EGL_PIXMAP_BIT: number;
                    public static EGL_WIDTH: number;
                    public static EGL_STENCIL_SIZE: number;
                    public static EGL_SUCCESS: number;
                    public static EGL_GREEN_SIZE: number;
                    public static EGL_DRAW: number;
                    public static EGL_COLORSPACE: number;
                    public static EGL_LEVEL: number;
                    public static EGL_PBUFFER_BIT: number;
                    public static EGL_BAD_SURFACE: number;
                    public static EGL_BLUE_SIZE: number;
                    public static EGL_RENDERABLE_TYPE: number;
                    public static EGL_BAD_ATTRIBUTE: number;
                    public static EGL_VENDOR: number;
                    public static EGL_BAD_ACCESS: number;
                    public static EGL_CORE_NATIVE_ENGINE: number;
                    public static EGL_NONE: number;
                    public static EGL_VERTICAL_RESOLUTION: number;
                    public static EGL_BAD_CURRENT_SURFACE: number;
                    public static EGL_COLOR_BUFFER_TYPE: number;
                    public static EGL_CONFIG_CAVEAT: number;
                    public static EGL_BAD_NATIVE_PIXMAP: number;
                    public static EGL_NATIVE_VISUAL_TYPE: number;
                    public static EGL_LUMINANCE_SIZE: number;
                    public static EGL_NON_CONFORMANT_CONFIG: number;
                    public static EGL_CONTEXT_LOST: number;
                    public static EGL_BAD_MATCH: number;
                    public static EGL_SAMPLE_BUFFERS: number;
                    public static EGL_TRANSPARENT_BLUE_VALUE: number;
                    public static EGL_PIXEL_ASPECT_RATIO: number;
                    public static EGL_SURFACE_TYPE: number;
                    public static EGL_TRANSPARENT_TYPE: number;
                    public static EGL_ALPHA_FORMAT: number;
                    public static EGL_NO_SURFACE: javax.microedition.khronos.egl.EGLSurface;
                    public static EGL_WINDOW_BIT: number;
                    public static EGL_BAD_ALLOC: number;
                    public static EGL_RGB_BUFFER: number;
                    public static EGL_ALPHA_MASK_SIZE: number;
                    public static EGL_DEFAULT_DISPLAY: any;
                    public static EGL_HORIZONTAL_RESOLUTION: number;
                    public static EGL_TRANSPARENT_RGB: number;
                    public static EGL_MAX_PBUFFER_PIXELS: number;
                    public static EGL_SLOW_CONFIG: number;
                    public static EGL_SINGLE_BUFFER: number;
                    public static EGL_BUFFER_SIZE: number;
                    public static EGL_NO_CONTEXT: javax.microedition.khronos.egl.EGLContext;
                    public static EGL_NATIVE_RENDERABLE: number;
                    public static EGL_BAD_DISPLAY: number;
                    public static EGL_BAD_PARAMETER: number;
                    public static EGL_BAD_CONTEXT: number;
                    public static EGL_NATIVE_VISUAL_ID: number;
                    public eglSwapBuffers(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLSurface): boolean;
                    public eglGetCurrentDisplay(): javax.microedition.khronos.egl.EGLDisplay;
                    public eglQueryContext(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLContext, param2: number, param3: number[]): boolean;
                    public eglGetConfigs(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig[], param2: number, param3: number[]): boolean;
                    public eglGetError(): number;
                    public eglGetDisplay(param0: any): javax.microedition.khronos.egl.EGLDisplay;
                    public eglGetCurrentSurface(param0: number): javax.microedition.khronos.egl.EGLSurface;
                    public eglCreatePbufferSurface(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig, param2: number[]): javax.microedition.khronos.egl.EGLSurface;
                    public eglCreateWindowSurface(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig, param2: any, param3: number[]): javax.microedition.khronos.egl.EGLSurface;
                    public eglGetConfigAttrib(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig, param2: number, param3: number[]): boolean;
                    public eglInitialize(param0: javax.microedition.khronos.egl.EGLDisplay, param1: number[]): boolean;
                    public eglWaitGL(): boolean;
                    public eglCreatePixmapSurface(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig, param2: any, param3: number[]): javax.microedition.khronos.egl.EGLSurface;
                    public eglMakeCurrent(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLSurface, param2: javax.microedition.khronos.egl.EGLSurface, param3: javax.microedition.khronos.egl.EGLContext): boolean;
                    public eglWaitNative(param0: number, param1: any): boolean;
                    public eglCreateContext(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLConfig, param2: javax.microedition.khronos.egl.EGLContext, param3: number[]): javax.microedition.khronos.egl.EGLContext;
                    public eglChooseConfig(param0: javax.microedition.khronos.egl.EGLDisplay, param1: number[], param2: javax.microedition.khronos.egl.EGLConfig[], param3: number, param4: number[]): boolean;
                    public eglTerminate(param0: javax.microedition.khronos.egl.EGLDisplay): boolean;
                    public eglQuerySurface(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLSurface, param2: number, param3: number[]): boolean;
                    public eglGetCurrentContext(): javax.microedition.khronos.egl.EGLContext;
                    public eglDestroyContext(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLContext): boolean;
                    public eglDestroySurface(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLSurface): boolean;
                    public eglCopyBuffers(param0: javax.microedition.khronos.egl.EGLDisplay, param1: javax.microedition.khronos.egl.EGLSurface, param2: any): boolean;
                    public eglQueryString(param0: javax.microedition.khronos.egl.EGLDisplay, param1: number): string;
                    public eglReleaseThread(): boolean;
                }
            }
        }
    }
}

declare module javax {
    export module microedition {
        export module khronos {
            export module egl {
                export abstract class EGLConfig {
                    public static class: java.lang.Class<javax.microedition.khronos.egl.EGLConfig>;
                    public constructor();
                }
            }
        }
    }
}

declare module javax {
    export module microedition {
        export module khronos {
            export module egl {
                export abstract class EGLContext {
                    public static class: java.lang.Class<javax.microedition.khronos.egl.EGLContext>;
                    public constructor();
                    public static getEGL(): javax.microedition.khronos.egl.EGL;
                    public getGL(): javax.microedition.khronos.opengles.GL;
                }
            }
        }
    }
}

declare module javax {
    export module microedition {
        export module khronos {
            export module egl {
                export abstract class EGLDisplay {
                    public static class: java.lang.Class<javax.microedition.khronos.egl.EGLDisplay>;
                    public constructor();
                }
            }
        }
    }
}

declare module javax {
    export module microedition {
        export module khronos {
            export module egl {
                export abstract class EGLSurface {
                    public static class: java.lang.Class<javax.microedition.khronos.egl.EGLSurface>;
                    public constructor();
                }
            }
        }
    }
}

declare module javax {
    export module microedition {
        export module khronos {
            export module opengles {
                export class GL extends java.lang.Object {
                    public static class: java.lang.Class<javax.microedition.khronos.opengles.GL>;
                    /**
                     * Constructs a new instance of the javax.microedition.khronos.opengles.GL interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {});
                    public constructor();
                }
            }
        }
    }
}

declare module javax {
    export module microedition {
        export module khronos {
            export module opengles {
                export class GL10 extends javax.microedition.khronos.opengles.GL {
                    public static class: java.lang.Class<javax.microedition.khronos.opengles.GL10>;
                    /**
                     * Constructs a new instance of the javax.microedition.khronos.opengles.GL10 interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        glActiveTexture(param0: number): void;
                        glAlphaFunc(param0: number, param1: number): void;
                        glAlphaFuncx(param0: number, param1: number): void;
                        glBindTexture(param0: number, param1: number): void;
                        glBlendFunc(param0: number, param1: number): void;
                        glClear(param0: number): void;
                        glClearColor(param0: number, param1: number, param2: number, param3: number): void;
                        glClearColorx(param0: number, param1: number, param2: number, param3: number): void;
                        glClearDepthf(param0: number): void;
                        glClearDepthx(param0: number): void;
                        glClearStencil(param0: number): void;
                        glClientActiveTexture(param0: number): void;
                        glColor4f(param0: number, param1: number, param2: number, param3: number): void;
                        glColor4x(param0: number, param1: number, param2: number, param3: number): void;
                        glColorMask(param0: boolean, param1: boolean, param2: boolean, param3: boolean): void;
                        glColorPointer(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                        glCompressedTexImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: java.nio.Buffer): void;
                        glCompressedTexSubImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: java.nio.Buffer): void;
                        glCopyTexImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
                        glCopyTexSubImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
                        glCullFace(param0: number): void;
                        glDeleteTextures(param0: number, param1: java.nio.IntBuffer): void;
                        glDeleteTextures(param0: number, param1: number[], param2: number): void;
                        glDepthFunc(param0: number): void;
                        glDepthMask(param0: boolean): void;
                        glDepthRangef(param0: number, param1: number): void;
                        glDepthRangex(param0: number, param1: number): void;
                        glDisable(param0: number): void;
                        glDisableClientState(param0: number): void;
                        glDrawArrays(param0: number, param1: number, param2: number): void;
                        glDrawElements(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                        glEnable(param0: number): void;
                        glEnableClientState(param0: number): void;
                        glFinish(): void;
                        glFlush(): void;
                        glFogf(param0: number, param1: number): void;
                        glFogfv(param0: number, param1: java.nio.FloatBuffer): void;
                        glFogfv(param0: number, param1: number[], param2: number): void;
                        glFogx(param0: number, param1: number): void;
                        glFogxv(param0: number, param1: java.nio.IntBuffer): void;
                        glFogxv(param0: number, param1: number[], param2: number): void;
                        glFrontFace(param0: number): void;
                        glFrustumf(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): void;
                        glFrustumx(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): void;
                        glGenTextures(param0: number, param1: java.nio.IntBuffer): void;
                        glGenTextures(param0: number, param1: number[], param2: number): void;
                        glGetError(): number;
                        glGetIntegerv(param0: number, param1: java.nio.IntBuffer): void;
                        glGetIntegerv(param0: number, param1: number[], param2: number): void;
                        glGetString(param0: number): string;
                        glHint(param0: number, param1: number): void;
                        glLightModelf(param0: number, param1: number): void;
                        glLightModelfv(param0: number, param1: java.nio.FloatBuffer): void;
                        glLightModelfv(param0: number, param1: number[], param2: number): void;
                        glLightModelx(param0: number, param1: number): void;
                        glLightModelxv(param0: number, param1: java.nio.IntBuffer): void;
                        glLightModelxv(param0: number, param1: number[], param2: number): void;
                        glLightf(param0: number, param1: number, param2: number): void;
                        glLightfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                        glLightfv(param0: number, param1: number, param2: number[], param3: number): void;
                        glLightx(param0: number, param1: number, param2: number): void;
                        glLightxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                        glLightxv(param0: number, param1: number, param2: number[], param3: number): void;
                        glLineWidth(param0: number): void;
                        glLineWidthx(param0: number): void;
                        glLoadIdentity(): void;
                        glLoadMatrixf(param0: java.nio.FloatBuffer): void;
                        glLoadMatrixf(param0: number[], param1: number): void;
                        glLoadMatrixx(param0: java.nio.IntBuffer): void;
                        glLoadMatrixx(param0: number[], param1: number): void;
                        glLogicOp(param0: number): void;
                        glMaterialf(param0: number, param1: number, param2: number): void;
                        glMaterialfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                        glMaterialfv(param0: number, param1: number, param2: number[], param3: number): void;
                        glMaterialx(param0: number, param1: number, param2: number): void;
                        glMaterialxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                        glMaterialxv(param0: number, param1: number, param2: number[], param3: number): void;
                        glMatrixMode(param0: number): void;
                        glMultMatrixf(param0: java.nio.FloatBuffer): void;
                        glMultMatrixf(param0: number[], param1: number): void;
                        glMultMatrixx(param0: java.nio.IntBuffer): void;
                        glMultMatrixx(param0: number[], param1: number): void;
                        glMultiTexCoord4f(param0: number, param1: number, param2: number, param3: number, param4: number): void;
                        glMultiTexCoord4x(param0: number, param1: number, param2: number, param3: number, param4: number): void;
                        glNormal3f(param0: number, param1: number, param2: number): void;
                        glNormal3x(param0: number, param1: number, param2: number): void;
                        glNormalPointer(param0: number, param1: number, param2: java.nio.Buffer): void;
                        glOrthof(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): void;
                        glOrthox(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): void;
                        glPixelStorei(param0: number, param1: number): void;
                        glPointSize(param0: number): void;
                        glPointSizex(param0: number): void;
                        glPolygonOffset(param0: number, param1: number): void;
                        glPolygonOffsetx(param0: number, param1: number): void;
                        glPopMatrix(): void;
                        glPushMatrix(): void;
                        glReadPixels(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: java.nio.Buffer): void;
                        glRotatef(param0: number, param1: number, param2: number, param3: number): void;
                        glRotatex(param0: number, param1: number, param2: number, param3: number): void;
                        glSampleCoverage(param0: number, param1: boolean): void;
                        glSampleCoveragex(param0: number, param1: boolean): void;
                        glScalef(param0: number, param1: number, param2: number): void;
                        glScalex(param0: number, param1: number, param2: number): void;
                        glScissor(param0: number, param1: number, param2: number, param3: number): void;
                        glShadeModel(param0: number): void;
                        glStencilFunc(param0: number, param1: number, param2: number): void;
                        glStencilMask(param0: number): void;
                        glStencilOp(param0: number, param1: number, param2: number): void;
                        glTexCoordPointer(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                        glTexEnvf(param0: number, param1: number, param2: number): void;
                        glTexEnvfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                        glTexEnvfv(param0: number, param1: number, param2: number[], param3: number): void;
                        glTexEnvx(param0: number, param1: number, param2: number): void;
                        glTexEnvxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                        glTexEnvxv(param0: number, param1: number, param2: number[], param3: number): void;
                        glTexImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: java.nio.Buffer): void;
                        glTexParameterf(param0: number, param1: number, param2: number): void;
                        glTexParameterx(param0: number, param1: number, param2: number): void;
                        glTexSubImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: java.nio.Buffer): void;
                        glTranslatef(param0: number, param1: number, param2: number): void;
                        glTranslatex(param0: number, param1: number, param2: number): void;
                        glVertexPointer(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                        glViewport(param0: number, param1: number, param2: number, param3: number): void;
                    });
                    public constructor();
                    public static GL_CULL_FACE: number;
                    public static GL_TEXTURE_ENV_COLOR: number;
                    public static GL_MAX_PROJECTION_STACK_DEPTH: number;
                    public static GL_LINE_STRIP: number;
                    public static GL_LUMINANCE: number;
                    public static GL_TRUE: number;
                    public static GL_DEPTH_TEST: number;
                    public static GL_INVALID_OPERATION: number;
                    public static GL_DST_COLOR: number;
                    public static GL_LESS: number;
                    public static GL_TEXTURE_COORD_ARRAY: number;
                    public static GL_NO_ERROR: number;
                    public static GL_FRONT_AND_BACK: number;
                    public static GL_SET: number;
                    public static GL_COPY: number;
                    public static GL_TEXTURE_WRAP_T: number;
                    public static GL_TEXTURE_WRAP_S: number;
                    public static GL_ONE: number;
                    public static GL_FOG_HINT: number;
                    public static GL_LUMINANCE_ALPHA: number;
                    public static GL_PALETTE8_RGBA4_OES: number;
                    public static GL_XOR: number;
                    public static GL_SPOT_CUTOFF: number;
                    public static GL_QUADRATIC_ATTENUATION: number;
                    public static GL_DECAL: number;
                    public static GL_REPLACE: number;
                    public static GL_GREATER: number;
                    public static GL_FLAT: number;
                    public static GL_KEEP: number;
                    public static GL_LINEAR_MIPMAP_NEAREST: number;
                    public static GL_EXP2: number;
                    public static GL_ONE_MINUS_SRC_COLOR: number;
                    public static GL_PALETTE4_RGBA8_OES: number;
                    public static GL_SCISSOR_TEST: number;
                    public static GL_ALIASED_POINT_SIZE_RANGE: number;
                    public static GL_CW: number;
                    public static GL_LEQUAL: number;
                    public static GL_ALIASED_LINE_WIDTH_RANGE: number;
                    public static GL_INVALID_ENUM: number;
                    public static GL_RED_BITS: number;
                    public static GL_CCW: number;
                    public static GL_SHORT: number;
                    public static GL_ONE_MINUS_DST_COLOR: number;
                    public static GL_GREEN_BITS: number;
                    public static GL_VENDOR: number;
                    public static GL_TEXTURE: number;
                    public static GL_ALWAYS: number;
                    public static GL_LIGHT_MODEL_AMBIENT: number;
                    public static GL_COLOR_BUFFER_BIT: number;
                    public static GL_LINE_SMOOTH_HINT: number;
                    public static GL_EXP: number;
                    public static GL_INVERT: number;
                    public static GL_NEAREST: number;
                    public static GL_ONE_MINUS_DST_ALPHA: number;
                    public static GL_COLOR_MATERIAL: number;
                    public static GL_AND_REVERSE: number;
                    public static GL_DONT_CARE: number;
                    public static GL_FALSE: number;
                    public static GL_ALPHA: number;
                    public static GL_NEVER: number;
                    public static GL_BYTE: number;
                    public static GL_ALPHA_TEST: number;
                    public static GL_AND: number;
                    public static GL_COLOR_ARRAY: number;
                    public static GL_COPY_INVERTED: number;
                    public static GL_LINE_SMOOTH: number;
                    public static GL_EQUAL: number;
                    public static GL_BACK: number;
                    public static GL_PALETTE8_RGB5_A1_OES: number;
                    public static GL_NUM_COMPRESSED_TEXTURE_FORMATS: number;
                    public static GL_TRIANGLE_STRIP: number;
                    public static GL_SAMPLE_ALPHA_TO_COVERAGE: number;
                    public static GL_ONE_MINUS_SRC_ALPHA: number;
                    public static GL_LINEAR_ATTENUATION: number;
                    public static GL_PALETTE4_RGB5_A1_OES: number;
                    public static GL_TEXTURE_ENV_MODE: number;
                    public static GL_TRIANGLES: number;
                    public static GL_AND_INVERTED: number;
                    public static GL_NORMAL_ARRAY: number;
                    public static GL_PROJECTION: number;
                    public static GL_POSITION: number;
                    public static GL_FIXED: number;
                    public static GL_DEPTH_BUFFER_BIT: number;
                    public static GL_TEXTURE_2D: number;
                    public static GL_SHININESS: number;
                    public static GL_MAX_TEXTURE_UNITS: number;
                    public static GL_OR_INVERTED: number;
                    public static GL_NOOP: number;
                    public static GL_MAX_TEXTURE_SIZE: number;
                    public static GL_PALETTE8_RGBA8_OES: number;
                    public static GL_SAMPLE_COVERAGE: number;
                    public static GL_EXTENSIONS: number;
                    public static GL_OUT_OF_MEMORY: number;
                    public static GL_LINEAR: number;
                    public static GL_RGBA: number;
                    public static GL_NEAREST_MIPMAP_LINEAR: number;
                    public static GL_UNSIGNED_SHORT_5_6_5: number;
                    public static GL_DEPTH_BITS: number;
                    public static GL_UNPACK_ALIGNMENT: number;
                    public static GL_SRC_ALPHA_SATURATE: number;
                    public static GL_SPOT_EXPONENT: number;
                    public static GL_RESCALE_NORMAL: number;
                    public static GL_VERTEX_ARRAY: number;
                    public static GL_MAX_ELEMENTS_VERTICES: number;
                    public static GL_ALPHA_BITS: number;
                    public static GL_PERSPECTIVE_CORRECTION_HINT: number;
                    public static GL_LIGHTING: number;
                    public static GL_TEXTURE20: number;
                    public static GL_MAX_VIEWPORT_DIMS: number;
                    public static GL_STACK_OVERFLOW: number;
                    public static GL_TEXTURE16: number;
                    public static GL_LIGHT_MODEL_TWO_SIDE: number;
                    public static GL_TEXTURE17: number;
                    public static GL_TEXTURE14: number;
                    public static GL_TEXTURE15: number;
                    public static GL_TEXTURE12: number;
                    public static GL_TEXTURE13: number;
                    public static GL_TEXTURE10: number;
                    public static GL_TEXTURE11: number;
                    public static GL_IMPLEMENTATION_COLOR_READ_TYPE_OES: number;
                    public static GL_TEXTURE18: number;
                    public static GL_FOG_END: number;
                    public static GL_TEXTURE19: number;
                    public static GL_UNSIGNED_SHORT_4_4_4_4: number;
                    public static GL_NEAREST_MIPMAP_NEAREST: number;
                    public static GL_TEXTURE30: number;
                    public static GL_LINEAR_MIPMAP_LINEAR: number;
                    public static GL_TEXTURE31: number;
                    public static GL_TEXTURE27: number;
                    public static GL_TEXTURE28: number;
                    public static GL_FOG_MODE: number;
                    public static GL_SPOT_DIRECTION: number;
                    public static GL_TEXTURE25: number;
                    public static GL_EMISSION: number;
                    public static GL_TEXTURE26: number;
                    public static GL_TEXTURE23: number;
                    public static GL_TEXTURE24: number;
                    public static GL_TEXTURE21: number;
                    public static GL_TEXTURE22: number;
                    public static GL_OR: number;
                    public static GL_OR_REVERSE: number;
                    public static GL_SPECULAR: number;
                    public static GL_TEXTURE29: number;
                    public static GL_STENCIL_BUFFER_BIT: number;
                    public static GL_LINE_LOOP: number;
                    public static GL_SMOOTH: number;
                    public static GL_MAX_LIGHTS: number;
                    public static GL_SAMPLE_ALPHA_TO_ONE: number;
                    public static GL_TRIANGLE_FAN: number;
                    public static GL_RENDERER: number;
                    public static GL_DIFFUSE: number;
                    public static GL_MULTISAMPLE: number;
                    public static GL_POINT_SMOOTH_HINT: number;
                    public static GL_POINT_SIZE: number;
                    public static GL_SMOOTH_LINE_WIDTH_RANGE: number;
                    public static GL_PACK_ALIGNMENT: number;
                    public static GL_REPEAT: number;
                    public static GL_PALETTE4_RGB8_OES: number;
                    public static GL_NAND: number;
                    public static GL_STENCIL_TEST: number;
                    public static GL_ZERO: number;
                    public static GL_TEXTURE0: number;
                    public static GL_DECR: number;
                    public static GL_SMOOTH_POINT_SIZE_RANGE: number;
                    public static GL_COLOR_LOGIC_OP: number;
                    public static GL_TEXTURE9: number;
                    public static GL_UNSIGNED_SHORT: number;
                    public static GL_LINES: number;
                    public static GL_CLAMP_TO_EDGE: number;
                    public static GL_POINTS: number;
                    public static GL_POINT_FADE_THRESHOLD_SIZE: number;
                    public static GL_TEXTURE3: number;
                    public static GL_TEXTURE4: number;
                    public static GL_TEXTURE1: number;
                    public static GL_TEXTURE2: number;
                    public static GL_TEXTURE7: number;
                    public static GL_TEXTURE8: number;
                    public static GL_TEXTURE5: number;
                    public static GL_TEXTURE6: number;
                    public static GL_FOG_START: number;
                    public static GL_NOTEQUAL: number;
                    public static GL_SUBPIXEL_BITS: number;
                    public static GL_POLYGON_SMOOTH_HINT: number;
                    public static GL_SRC_COLOR: number;
                    public static GL_AMBIENT: number;
                    public static GL_FRONT: number;
                    public static GL_TEXTURE_ENV: number;
                    public static GL_FOG: number;
                    public static GL_STENCIL_BITS: number;
                    public static GL_UNSIGNED_SHORT_5_5_5_1: number;
                    public static GL_RGB: number;
                    public static GL_NOR: number;
                    public static GL_CLEAR: number;
                    public static GL_MODELVIEW: number;
                    public static GL_PALETTE4_R5_G6_B5_OES: number;
                    public static GL_MAX_MODELVIEW_STACK_DEPTH: number;
                    public static GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES: number;
                    public static GL_FOG_COLOR: number;
                    public static GL_EQUIV: number;
                    public static GL_FASTEST: number;
                    public static GL_SRC_ALPHA: number;
                    public static GL_BLEND: number;
                    public static GL_PALETTE8_R5_G6_B5_OES: number;
                    public static GL_POINT_SMOOTH: number;
                    public static GL_PALETTE8_RGB8_OES: number;
                    public static GL_CONSTANT_ATTENUATION: number;
                    public static GL_MAX_ELEMENTS_INDICES: number;
                    public static GL_PALETTE4_RGBA4_OES: number;
                    public static GL_INCR: number;
                    public static GL_POLYGON_OFFSET_FILL: number;
                    public static GL_INVALID_VALUE: number;
                    public static GL_LIGHT3: number;
                    public static GL_LIGHT2: number;
                    public static GL_LIGHT1: number;
                    public static GL_LIGHT0: number;
                    public static GL_NORMALIZE: number;
                    public static GL_LIGHT7: number;
                    public static GL_LIGHT6: number;
                    public static GL_BLUE_BITS: number;
                    public static GL_LIGHT5: number;
                    public static GL_AMBIENT_AND_DIFFUSE: number;
                    public static GL_LIGHT4: number;
                    public static GL_FLOAT: number;
                    public static GL_GEQUAL: number;
                    public static GL_TEXTURE_MIN_FILTER: number;
                    public static GL_NICEST: number;
                    public static GL_UNSIGNED_BYTE: number;
                    public static GL_TEXTURE_MAG_FILTER: number;
                    public static GL_VERSION: number;
                    public static GL_ADD: number;
                    public static GL_STACK_UNDERFLOW: number;
                    public static GL_FOG_DENSITY: number;
                    public static GL_DITHER: number;
                    public static GL_MAX_TEXTURE_STACK_DEPTH: number;
                    public static GL_MODULATE: number;
                    public static GL_DST_ALPHA: number;
                    public static GL_COMPRESSED_TEXTURE_FORMATS: number;
                    public glDrawElements(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                    public glEnableClientState(param0: number): void;
                    public glLoadMatrixx(param0: number[], param1: number): void;
                    public glPushMatrix(): void;
                    public glScalex(param0: number, param1: number, param2: number): void;
                    public glTexEnvx(param0: number, param1: number, param2: number): void;
                    public glCopyTexSubImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
                    public glMultiTexCoord4x(param0: number, param1: number, param2: number, param3: number, param4: number): void;
                    public glPolygonOffsetx(param0: number, param1: number): void;
                    public glViewport(param0: number, param1: number, param2: number, param3: number): void;
                    public glMultMatrixx(param0: java.nio.IntBuffer): void;
                    public glLineWidthx(param0: number): void;
                    public glPopMatrix(): void;
                    public glFogfv(param0: number, param1: number[], param2: number): void;
                    public glHint(param0: number, param1: number): void;
                    public glOrthof(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): void;
                    public glShadeModel(param0: number): void;
                    public glFinish(): void;
                    public glTexParameterf(param0: number, param1: number, param2: number): void;
                    public glScalef(param0: number, param1: number, param2: number): void;
                    public glTexEnvf(param0: number, param1: number, param2: number): void;
                    public glClearDepthx(param0: number): void;
                    public glTexCoordPointer(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                    public glLightfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                    public glActiveTexture(param0: number): void;
                    public glTexParameterx(param0: number, param1: number, param2: number): void;
                    public glBindTexture(param0: number, param1: number): void;
                    public glFrontFace(param0: number): void;
                    public glLoadMatrixf(param0: number[], param1: number): void;
                    public glClearDepthf(param0: number): void;
                    public glCullFace(param0: number): void;
                    public glLightxv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glClear(param0: number): void;
                    public glMultiTexCoord4f(param0: number, param1: number, param2: number, param3: number, param4: number): void;
                    public glOrthox(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): void;
                    public glLightModelf(param0: number, param1: number): void;
                    public glGetError(): number;
                    public glGenTextures(param0: number, param1: number[], param2: number): void;
                    public glClearStencil(param0: number): void;
                    public glClientActiveTexture(param0: number): void;
                    public glSampleCoverage(param0: number, param1: boolean): void;
                    public glColorPointer(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                    public glDisableClientState(param0: number): void;
                    public glLightfv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glMatrixMode(param0: number): void;
                    public glLightModelxv(param0: number, param1: number[], param2: number): void;
                    public glColorMask(param0: boolean, param1: boolean, param2: boolean, param3: boolean): void;
                    public glPointSizex(param0: number): void;
                    public glRotatef(param0: number, param1: number, param2: number, param3: number): void;
                    public glLightModelx(param0: number, param1: number): void;
                    public glGetIntegerv(param0: number, param1: java.nio.IntBuffer): void;
                    public glMaterialf(param0: number, param1: number, param2: number): void;
                    public glNormal3x(param0: number, param1: number, param2: number): void;
                    public glTranslatef(param0: number, param1: number, param2: number): void;
                    public glCompressedTexSubImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: java.nio.Buffer): void;
                    public glTexSubImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: java.nio.Buffer): void;
                    public glRotatex(param0: number, param1: number, param2: number, param3: number): void;
                    public glAlphaFunc(param0: number, param1: number): void;
                    public glLogicOp(param0: number): void;
                    public glDeleteTextures(param0: number, param1: java.nio.IntBuffer): void;
                    public glTexEnvfv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glMultMatrixx(param0: number[], param1: number): void;
                    public glReadPixels(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: java.nio.Buffer): void;
                    public glClearColor(param0: number, param1: number, param2: number, param3: number): void;
                    public glFogxv(param0: number, param1: java.nio.IntBuffer): void;
                    public glLightxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glMaterialfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                    public glNormalPointer(param0: number, param1: number, param2: java.nio.Buffer): void;
                    public glDeleteTextures(param0: number, param1: number[], param2: number): void;
                    public glStencilMask(param0: number): void;
                    public glTexImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: java.nio.Buffer): void;
                    public glColor4x(param0: number, param1: number, param2: number, param3: number): void;
                    public glFlush(): void;
                    public glTexEnvfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                    public glDepthMask(param0: boolean): void;
                    public glDepthRangef(param0: number, param1: number): void;
                    public glStencilOp(param0: number, param1: number, param2: number): void;
                    public glTexEnvxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glLightx(param0: number, param1: number, param2: number): void;
                    public glMaterialxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glPixelStorei(param0: number, param1: number): void;
                    public glEnable(param0: number): void;
                    public glTexEnvxv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glVertexPointer(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                    public glLightModelfv(param0: number, param1: number[], param2: number): void;
                    public glGetIntegerv(param0: number, param1: number[], param2: number): void;
                    public glFogf(param0: number, param1: number): void;
                    public glLoadMatrixf(param0: java.nio.FloatBuffer): void;
                    public glDepthFunc(param0: number): void;
                    public glStencilFunc(param0: number, param1: number, param2: number): void;
                    public glClearColorx(param0: number, param1: number, param2: number, param3: number): void;
                    public glSampleCoveragex(param0: number, param1: boolean): void;
                    public glMultMatrixf(param0: number[], param1: number): void;
                    public glPointSize(param0: number): void;
                    public glLightf(param0: number, param1: number, param2: number): void;
                    public glMaterialxv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glCompressedTexImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: java.nio.Buffer): void;
                    public glScissor(param0: number, param1: number, param2: number, param3: number): void;
                    public glDisable(param0: number): void;
                    public glFogfv(param0: number, param1: java.nio.FloatBuffer): void;
                    public glGetString(param0: number): string;
                    public glDrawArrays(param0: number, param1: number, param2: number): void;
                    public glLineWidth(param0: number): void;
                    public glLoadMatrixx(param0: java.nio.IntBuffer): void;
                    public glLoadIdentity(): void;
                    public glLightModelfv(param0: number, param1: java.nio.FloatBuffer): void;
                    public glBlendFunc(param0: number, param1: number): void;
                    public glColor4f(param0: number, param1: number, param2: number, param3: number): void;
                    public glMaterialfv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glCopyTexImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
                    public glGenTextures(param0: number, param1: java.nio.IntBuffer): void;
                    public glDepthRangex(param0: number, param1: number): void;
                    public glPolygonOffset(param0: number, param1: number): void;
                    public glMultMatrixf(param0: java.nio.FloatBuffer): void;
                    public glTranslatex(param0: number, param1: number, param2: number): void;
                    public glFogxv(param0: number, param1: number[], param2: number): void;
                    public glNormal3f(param0: number, param1: number, param2: number): void;
                    public glFrustumf(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): void;
                    public glMaterialx(param0: number, param1: number, param2: number): void;
                    public glAlphaFuncx(param0: number, param1: number): void;
                    public glFrustumx(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): void;
                    public glFogx(param0: number, param1: number): void;
                    public glLightModelxv(param0: number, param1: java.nio.IntBuffer): void;
                }
            }
        }
    }
}

declare module javax {
    export module microedition {
        export module khronos {
            export module opengles {
                export class GL10Ext extends javax.microedition.khronos.opengles.GL {
                    public static class: java.lang.Class<javax.microedition.khronos.opengles.GL10Ext>;
                    /**
                     * Constructs a new instance of the javax.microedition.khronos.opengles.GL10Ext interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        glQueryMatrixxOES(param0: java.nio.IntBuffer, param1: java.nio.IntBuffer): number;
                        glQueryMatrixxOES(param0: number[], param1: number, param2: number[], param3: number): number;
                    });
                    public constructor();
                    public glQueryMatrixxOES(param0: number[], param1: number, param2: number[], param3: number): number;
                    public glQueryMatrixxOES(param0: java.nio.IntBuffer, param1: java.nio.IntBuffer): number;
                }
            }
        }
    }
}

declare module javax {
    export module microedition {
        export module khronos {
            export module opengles {
                export class GL11 extends javax.microedition.khronos.opengles.GL10 {
                    public static class: java.lang.Class<javax.microedition.khronos.opengles.GL11>;
                    /**
                     * Constructs a new instance of the javax.microedition.khronos.opengles.GL11 interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        glBindBuffer(param0: number, param1: number): void;
                        glBufferData(param0: number, param1: number, param2: java.nio.Buffer, param3: number): void;
                        glBufferSubData(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                        glClipPlanef(param0: number, param1: java.nio.FloatBuffer): void;
                        glClipPlanef(param0: number, param1: number[], param2: number): void;
                        glClipPlanex(param0: number, param1: java.nio.IntBuffer): void;
                        glClipPlanex(param0: number, param1: number[], param2: number): void;
                        glColor4ub(param0: number, param1: number, param2: number, param3: number): void;
                        glColorPointer(param0: number, param1: number, param2: number, param3: number): void;
                        glDeleteBuffers(param0: number, param1: java.nio.IntBuffer): void;
                        glDeleteBuffers(param0: number, param1: number[], param2: number): void;
                        glDrawElements(param0: number, param1: number, param2: number, param3: number): void;
                        glGenBuffers(param0: number, param1: java.nio.IntBuffer): void;
                        glGenBuffers(param0: number, param1: number[], param2: number): void;
                        glGetBooleanv(param0: number, param1: java.nio.IntBuffer): void;
                        glGetBooleanv(param0: number, param1: boolean[], param2: number): void;
                        glGetBufferParameteriv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                        glGetBufferParameteriv(param0: number, param1: number, param2: number[], param3: number): void;
                        glGetClipPlanef(param0: number, param1: java.nio.FloatBuffer): void;
                        glGetClipPlanef(param0: number, param1: number[], param2: number): void;
                        glGetClipPlanex(param0: number, param1: java.nio.IntBuffer): void;
                        glGetClipPlanex(param0: number, param1: number[], param2: number): void;
                        glGetFixedv(param0: number, param1: java.nio.IntBuffer): void;
                        glGetFixedv(param0: number, param1: number[], param2: number): void;
                        glGetFloatv(param0: number, param1: java.nio.FloatBuffer): void;
                        glGetFloatv(param0: number, param1: number[], param2: number): void;
                        glGetLightfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                        glGetLightfv(param0: number, param1: number, param2: number[], param3: number): void;
                        glGetLightxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                        glGetLightxv(param0: number, param1: number, param2: number[], param3: number): void;
                        glGetMaterialfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                        glGetMaterialfv(param0: number, param1: number, param2: number[], param3: number): void;
                        glGetMaterialxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                        glGetMaterialxv(param0: number, param1: number, param2: number[], param3: number): void;
                        glGetPointerv(param0: number, param1: java.nio.Buffer[]): void;
                        glGetTexEnviv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                        glGetTexEnviv(param0: number, param1: number, param2: number[], param3: number): void;
                        glGetTexEnvxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                        glGetTexEnvxv(param0: number, param1: number, param2: number[], param3: number): void;
                        glGetTexParameterfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                        glGetTexParameterfv(param0: number, param1: number, param2: number[], param3: number): void;
                        glGetTexParameteriv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                        glGetTexParameteriv(param0: number, param1: number, param2: number[], param3: number): void;
                        glGetTexParameterxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                        glGetTexParameterxv(param0: number, param1: number, param2: number[], param3: number): void;
                        glIsBuffer(param0: number): boolean;
                        glIsEnabled(param0: number): boolean;
                        glIsTexture(param0: number): boolean;
                        glNormalPointer(param0: number, param1: number, param2: number): void;
                        glPointParameterf(param0: number, param1: number): void;
                        glPointParameterfv(param0: number, param1: java.nio.FloatBuffer): void;
                        glPointParameterfv(param0: number, param1: number[], param2: number): void;
                        glPointParameterx(param0: number, param1: number): void;
                        glPointParameterxv(param0: number, param1: java.nio.IntBuffer): void;
                        glPointParameterxv(param0: number, param1: number[], param2: number): void;
                        glPointSizePointerOES(param0: number, param1: number, param2: java.nio.Buffer): void;
                        glTexCoordPointer(param0: number, param1: number, param2: number, param3: number): void;
                        glTexEnvi(param0: number, param1: number, param2: number): void;
                        glTexEnviv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                        glTexEnviv(param0: number, param1: number, param2: number[], param3: number): void;
                        glTexParameterfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                        glTexParameterfv(param0: number, param1: number, param2: number[], param3: number): void;
                        glTexParameteri(param0: number, param1: number, param2: number): void;
                        glTexParameteriv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                        glTexParameteriv(param0: number, param1: number, param2: number[], param3: number): void;
                        glTexParameterxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                        glTexParameterxv(param0: number, param1: number, param2: number[], param3: number): void;
                        glVertexPointer(param0: number, param1: number, param2: number, param3: number): void;
                        glActiveTexture(param0: number): void;
                        glAlphaFunc(param0: number, param1: number): void;
                        glAlphaFuncx(param0: number, param1: number): void;
                        glBindTexture(param0: number, param1: number): void;
                        glBlendFunc(param0: number, param1: number): void;
                        glClear(param0: number): void;
                        glClearColor(param0: number, param1: number, param2: number, param3: number): void;
                        glClearColorx(param0: number, param1: number, param2: number, param3: number): void;
                        glClearDepthf(param0: number): void;
                        glClearDepthx(param0: number): void;
                        glClearStencil(param0: number): void;
                        glClientActiveTexture(param0: number): void;
                        glColor4f(param0: number, param1: number, param2: number, param3: number): void;
                        glColor4x(param0: number, param1: number, param2: number, param3: number): void;
                        glColorMask(param0: boolean, param1: boolean, param2: boolean, param3: boolean): void;
                        glColorPointer(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                        glCompressedTexImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: java.nio.Buffer): void;
                        glCompressedTexSubImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: java.nio.Buffer): void;
                        glCopyTexImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
                        glCopyTexSubImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
                        glCullFace(param0: number): void;
                        glDeleteTextures(param0: number, param1: java.nio.IntBuffer): void;
                        glDeleteTextures(param0: number, param1: number[], param2: number): void;
                        glDepthFunc(param0: number): void;
                        glDepthMask(param0: boolean): void;
                        glDepthRangef(param0: number, param1: number): void;
                        glDepthRangex(param0: number, param1: number): void;
                        glDisable(param0: number): void;
                        glDisableClientState(param0: number): void;
                        glDrawArrays(param0: number, param1: number, param2: number): void;
                        glDrawElements(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                        glEnable(param0: number): void;
                        glEnableClientState(param0: number): void;
                        glFinish(): void;
                        glFlush(): void;
                        glFogf(param0: number, param1: number): void;
                        glFogfv(param0: number, param1: java.nio.FloatBuffer): void;
                        glFogfv(param0: number, param1: number[], param2: number): void;
                        glFogx(param0: number, param1: number): void;
                        glFogxv(param0: number, param1: java.nio.IntBuffer): void;
                        glFogxv(param0: number, param1: number[], param2: number): void;
                        glFrontFace(param0: number): void;
                        glFrustumf(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): void;
                        glFrustumx(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): void;
                        glGenTextures(param0: number, param1: java.nio.IntBuffer): void;
                        glGenTextures(param0: number, param1: number[], param2: number): void;
                        glGetError(): number;
                        glGetIntegerv(param0: number, param1: java.nio.IntBuffer): void;
                        glGetIntegerv(param0: number, param1: number[], param2: number): void;
                        glGetString(param0: number): string;
                        glHint(param0: number, param1: number): void;
                        glLightModelf(param0: number, param1: number): void;
                        glLightModelfv(param0: number, param1: java.nio.FloatBuffer): void;
                        glLightModelfv(param0: number, param1: number[], param2: number): void;
                        glLightModelx(param0: number, param1: number): void;
                        glLightModelxv(param0: number, param1: java.nio.IntBuffer): void;
                        glLightModelxv(param0: number, param1: number[], param2: number): void;
                        glLightf(param0: number, param1: number, param2: number): void;
                        glLightfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                        glLightfv(param0: number, param1: number, param2: number[], param3: number): void;
                        glLightx(param0: number, param1: number, param2: number): void;
                        glLightxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                        glLightxv(param0: number, param1: number, param2: number[], param3: number): void;
                        glLineWidth(param0: number): void;
                        glLineWidthx(param0: number): void;
                        glLoadIdentity(): void;
                        glLoadMatrixf(param0: java.nio.FloatBuffer): void;
                        glLoadMatrixf(param0: number[], param1: number): void;
                        glLoadMatrixx(param0: java.nio.IntBuffer): void;
                        glLoadMatrixx(param0: number[], param1: number): void;
                        glLogicOp(param0: number): void;
                        glMaterialf(param0: number, param1: number, param2: number): void;
                        glMaterialfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                        glMaterialfv(param0: number, param1: number, param2: number[], param3: number): void;
                        glMaterialx(param0: number, param1: number, param2: number): void;
                        glMaterialxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                        glMaterialxv(param0: number, param1: number, param2: number[], param3: number): void;
                        glMatrixMode(param0: number): void;
                        glMultMatrixf(param0: java.nio.FloatBuffer): void;
                        glMultMatrixf(param0: number[], param1: number): void;
                        glMultMatrixx(param0: java.nio.IntBuffer): void;
                        glMultMatrixx(param0: number[], param1: number): void;
                        glMultiTexCoord4f(param0: number, param1: number, param2: number, param3: number, param4: number): void;
                        glMultiTexCoord4x(param0: number, param1: number, param2: number, param3: number, param4: number): void;
                        glNormal3f(param0: number, param1: number, param2: number): void;
                        glNormal3x(param0: number, param1: number, param2: number): void;
                        glNormalPointer(param0: number, param1: number, param2: java.nio.Buffer): void;
                        glOrthof(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): void;
                        glOrthox(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): void;
                        glPixelStorei(param0: number, param1: number): void;
                        glPointSize(param0: number): void;
                        glPointSizex(param0: number): void;
                        glPolygonOffset(param0: number, param1: number): void;
                        glPolygonOffsetx(param0: number, param1: number): void;
                        glPopMatrix(): void;
                        glPushMatrix(): void;
                        glReadPixels(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: java.nio.Buffer): void;
                        glRotatef(param0: number, param1: number, param2: number, param3: number): void;
                        glRotatex(param0: number, param1: number, param2: number, param3: number): void;
                        glSampleCoverage(param0: number, param1: boolean): void;
                        glSampleCoveragex(param0: number, param1: boolean): void;
                        glScalef(param0: number, param1: number, param2: number): void;
                        glScalex(param0: number, param1: number, param2: number): void;
                        glScissor(param0: number, param1: number, param2: number, param3: number): void;
                        glShadeModel(param0: number): void;
                        glStencilFunc(param0: number, param1: number, param2: number): void;
                        glStencilMask(param0: number): void;
                        glStencilOp(param0: number, param1: number, param2: number): void;
                        glTexCoordPointer(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                        glTexEnvf(param0: number, param1: number, param2: number): void;
                        glTexEnvfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                        glTexEnvfv(param0: number, param1: number, param2: number[], param3: number): void;
                        glTexEnvx(param0: number, param1: number, param2: number): void;
                        glTexEnvxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                        glTexEnvxv(param0: number, param1: number, param2: number[], param3: number): void;
                        glTexImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: java.nio.Buffer): void;
                        glTexParameterf(param0: number, param1: number, param2: number): void;
                        glTexParameterx(param0: number, param1: number, param2: number): void;
                        glTexSubImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: java.nio.Buffer): void;
                        glTranslatef(param0: number, param1: number, param2: number): void;
                        glTranslatex(param0: number, param1: number, param2: number): void;
                        glVertexPointer(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                        glViewport(param0: number, param1: number, param2: number, param3: number): void;
                    });
                    public constructor();
                    public static GL_COLOR_ARRAY_POINTER: number;
                    public static GL_PREVIOUS: number;
                    public static GL_CULL_FACE: number;
                    public static GL_TEXTURE_ENV_COLOR: number;
                    public static GL_STENCIL_PASS_DEPTH_PASS: number;
                    public static GL_MAX_PROJECTION_STACK_DEPTH: number;
                    public static GL_PRIMARY_COLOR: number;
                    public static GL_LINE_STRIP: number;
                    public static GL_LUMINANCE: number;
                    public static GL_TRUE: number;
                    public static GL_DEPTH_TEST: number;
                    public static GL_INVALID_OPERATION: number;
                    public static GL_VERTEX_ARRAY_SIZE: number;
                    public static GL_DST_COLOR: number;
                    public static GL_VIEWPORT: number;
                    public static GL_LESS: number;
                    public static GL_POLYGON_OFFSET_FACTOR: number;
                    public static GL_TEXTURE_COORD_ARRAY: number;
                    public static GL_POINT_SIZE_ARRAY_POINTER_OES: number;
                    public static GL_OPERAND0_RGB: number;
                    public static GL_NO_ERROR: number;
                    public static GL_SRC2_RGB: number;
                    public static GL_FRONT_AND_BACK: number;
                    public static GL_INTERPOLATE: number;
                    public static GL_STENCIL_VALUE_MASK: number;
                    public static GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES: number;
                    public static GL_SET: number;
                    public static GL_CURRENT_TEXTURE_COORDS: number;
                    public static GL_COPY: number;
                    public static GL_DEPTH_CLEAR_VALUE: number;
                    public static GL_TEXTURE_WRAP_T: number;
                    public static GL_TEXTURE_WRAP_S: number;
                    public static GL_ONE: number;
                    public static GL_FOG_HINT: number;
                    public static GL_LUMINANCE_ALPHA: number;
                    public static GL_PALETTE8_RGBA4_OES: number;
                    public static GL_XOR: number;
                    public static GL_SPOT_CUTOFF: number;
                    public static GL_QUADRATIC_ATTENUATION: number;
                    public static GL_DECAL: number;
                    public static GL_CURRENT_COLOR: number;
                    public static GL_REPLACE: number;
                    public static GL_GREATER: number;
                    public static GL_ELEMENT_ARRAY_BUFFER: number;
                    public static GL_DEPTH_FUNC: number;
                    public static GL_FLAT: number;
                    public static GL_KEEP: number;
                    public static GL_LINEAR_MIPMAP_NEAREST: number;
                    public static GL_EXP2: number;
                    public static GL_ONE_MINUS_SRC_COLOR: number;
                    public static GL_PALETTE4_RGBA8_OES: number;
                    public static GL_ARRAY_BUFFER_BINDING: number;
                    public static GL_SCISSOR_TEST: number;
                    public static GL_ALIASED_POINT_SIZE_RANGE: number;
                    public static GL_CW: number;
                    public static GL_LEQUAL: number;
                    public static GL_ALIASED_LINE_WIDTH_RANGE: number;
                    public static GL_INVALID_ENUM: number;
                    public static GL_RED_BITS: number;
                    public static GL_CCW: number;
                    public static GL_SHORT: number;
                    public static GL_POINT_SIZE_MAX: number;
                    public static GL_ONE_MINUS_DST_COLOR: number;
                    public static GL_GREEN_BITS: number;
                    public static GL_VENDOR: number;
                    public static GL_NORMAL_ARRAY_BUFFER_BINDING: number;
                    public static GL_TEXTURE: number;
                    public static GL_COLOR_ARRAY_SIZE: number;
                    public static GL_ALWAYS: number;
                    public static GL_LIGHT_MODEL_AMBIENT: number;
                    public static GL_COLOR_BUFFER_BIT: number;
                    public static GL_LINE_SMOOTH_HINT: number;
                    public static GL_SRC2_ALPHA: number;
                    public static GL_EXP: number;
                    public static GL_MODELVIEW_STACK_DEPTH: number;
                    public static GL_STENCIL_REF: number;
                    public static GL_INVERT: number;
                    public static GL_NEAREST: number;
                    public static GL_ONE_MINUS_DST_ALPHA: number;
                    public static GL_COLOR_MATERIAL: number;
                    public static GL_CURRENT_NORMAL: number;
                    public static GL_AND_REVERSE: number;
                    public static GL_TEXTURE_COORD_ARRAY_POINTER: number;
                    public static GL_SAMPLE_COVERAGE_VALUE: number;
                    public static GL_CLIP_PLANE0: number;
                    public static GL_DONT_CARE: number;
                    public static GL_CLIP_PLANE2: number;
                    public static GL_FALSE: number;
                    public static GL_CLIP_PLANE1: number;
                    public static GL_CLIP_PLANE4: number;
                    public static GL_CLIP_PLANE3: number;
                    public static GL_GENERATE_MIPMAP_HINT: number;
                    public static GL_RGB_SCALE: number;
                    public static GL_CLIP_PLANE5: number;
                    public static GL_ALPHA: number;
                    public static GL_COLOR_ARRAY_BUFFER_BINDING: number;
                    public static GL_NEVER: number;
                    public static GL_VERTEX_ARRAY_STRIDE: number;
                    public static GL_BYTE: number;
                    public static GL_ALPHA_TEST: number;
                    public static GL_AND: number;
                    public static GL_COLOR_ARRAY: number;
                    public static GL_CONSTANT: number;
                    public static GL_COPY_INVERTED: number;
                    public static GL_LINE_SMOOTH: number;
                    public static GL_COLOR_ARRAY_STRIDE: number;
                    public static GL_EQUAL: number;
                    public static GL_BUFFER_USAGE: number;
                    public static GL_BACK: number;
                    public static GL_PALETTE8_RGB5_A1_OES: number;
                    public static GL_COLOR_ARRAY_TYPE: number;
                    public static GL_NUM_COMPRESSED_TEXTURE_FORMATS: number;
                    public static GL_TRIANGLE_STRIP: number;
                    public static GL_DOT3_RGB: number;
                    public static GL_SAMPLE_ALPHA_TO_COVERAGE: number;
                    public static GL_ONE_MINUS_SRC_ALPHA: number;
                    public static GL_ELEMENT_ARRAY_BUFFER_BINDING: number;
                    public static GL_LINEAR_ATTENUATION: number;
                    public static GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES: number;
                    public static GL_PALETTE4_RGB5_A1_OES: number;
                    public static GL_TEXTURE_ENV_MODE: number;
                    public static GL_ALPHA_TEST_REF: number;
                    public static GL_TRIANGLES: number;
                    public static GL_MATRIX_MODE: number;
                    public static GL_PROJECTION_MATRIX: number;
                    public static GL_SRC1_ALPHA: number;
                    public static GL_AND_INVERTED: number;
                    public static GL_NORMAL_ARRAY: number;
                    public static GL_POINT_SIZE_ARRAY_TYPE_OES: number;
                    public static GL_PROJECTION: number;
                    public static GL_ARRAY_BUFFER: number;
                    public static GL_POSITION: number;
                    public static GL_FIXED: number;
                    public static GL_POINT_DISTANCE_ATTENUATION: number;
                    public static GL_DEPTH_BUFFER_BIT: number;
                    public static GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING: number;
                    public static GL_TEXTURE_2D: number;
                    public static GL_VERTEX_ARRAY_TYPE: number;
                    public static GL_SHININESS: number;
                    public static GL_MAX_TEXTURE_UNITS: number;
                    public static GL_OR_INVERTED: number;
                    public static GL_NOOP: number;
                    public static GL_VERTEX_ARRAY_BUFFER_BINDING: number;
                    public static GL_DYNAMIC_DRAW: number;
                    public static GL_MAX_TEXTURE_SIZE: number;
                    public static GL_PALETTE8_RGBA8_OES: number;
                    public static GL_SAMPLE_COVERAGE: number;
                    public static GL_EXTENSIONS: number;
                    public static GL_OUT_OF_MEMORY: number;
                    public static GL_ALPHA_SCALE: number;
                    public static GL_LINEAR: number;
                    public static GL_RGBA: number;
                    public static GL_NEAREST_MIPMAP_LINEAR: number;
                    public static GL_UNSIGNED_SHORT_5_6_5: number;
                    public static GL_COLOR_WRITEMASK: number;
                    public static GL_DEPTH_BITS: number;
                    public static GL_UNPACK_ALIGNMENT: number;
                    public static GL_SRC_ALPHA_SATURATE: number;
                    public static GL_SPOT_EXPONENT: number;
                    public static GL_RESCALE_NORMAL: number;
                    public static GL_VERTEX_ARRAY: number;
                    public static GL_ACTIVE_TEXTURE: number;
                    public static GL_MAX_ELEMENTS_VERTICES: number;
                    public static GL_TEXTURE_STACK_DEPTH: number;
                    public static GL_ALPHA_BITS: number;
                    public static GL_PERSPECTIVE_CORRECTION_HINT: number;
                    public static GL_LIGHTING: number;
                    public static GL_TEXTURE20: number;
                    public static GL_MAX_VIEWPORT_DIMS: number;
                    public static GL_DOT3_RGBA: number;
                    public static GL_STACK_OVERFLOW: number;
                    public static GL_BLEND_DST: number;
                    public static GL_TEXTURE16: number;
                    public static GL_TEXTURE_COORD_ARRAY_STRIDE: number;
                    public static GL_LIGHT_MODEL_TWO_SIDE: number;
                    public static GL_TEXTURE17: number;
                    public static GL_NORMAL_ARRAY_TYPE: number;
                    public static GL_TEXTURE14: number;
                    public static GL_TEXTURE15: number;
                    public static GL_TEXTURE12: number;
                    public static GL_TEXTURE13: number;
                    public static GL_TEXTURE10: number;
                    public static GL_SRC0_ALPHA: number;
                    public static GL_TEXTURE11: number;
                    public static GL_SUBTRACT: number;
                    public static GL_IMPLEMENTATION_COLOR_READ_TYPE_OES: number;
                    public static GL_TEXTURE18: number;
                    public static GL_COORD_REPLACE_OES: number;
                    public static GL_FOG_END: number;
                    public static GL_TEXTURE19: number;
                    public static GL_UNSIGNED_SHORT_4_4_4_4: number;
                    public static GL_BUFFER_ACCESS: number;
                    public static GL_TEXTURE_COORD_ARRAY_TYPE: number;
                    public static GL_COMBINE: number;
                    public static GL_NEAREST_MIPMAP_NEAREST: number;
                    public static GL_COLOR_CLEAR_VALUE: number;
                    public static GL_TEXTURE30: number;
                    public static GL_LINEAR_MIPMAP_LINEAR: number;
                    public static GL_TEXTURE31: number;
                    public static GL_TEXTURE27: number;
                    public static GL_MODELVIEW_MATRIX: number;
                    public static GL_TEXTURE28: number;
                    public static GL_FOG_MODE: number;
                    public static GL_SPOT_DIRECTION: number;
                    public static GL_TEXTURE25: number;
                    public static GL_EMISSION: number;
                    public static GL_TEXTURE26: number;
                    public static GL_ALPHA_TEST_FUNC: number;
                    public static GL_TEXTURE23: number;
                    public static GL_TEXTURE24: number;
                    public static GL_TEXTURE21: number;
                    public static GL_TEXTURE22: number;
                    public static GL_OR: number;
                    public static GL_OR_REVERSE: number;
                    public static GL_SRC0_RGB: number;
                    public static GL_STENCIL_PASS_DEPTH_FAIL: number;
                    public static GL_SAMPLE_COVERAGE_INVERT: number;
                    public static GL_WRITE_ONLY: number;
                    public static GL_SPECULAR: number;
                    public static GL_TEXTURE29: number;
                    public static GL_STENCIL_BUFFER_BIT: number;
                    public static GL_PROJECTION_STACK_DEPTH: number;
                    public static GL_DEPTH_WRITEMASK: number;
                    public static GL_LINE_LOOP: number;
                    public static GL_SMOOTH: number;
                    public static GL_LOGIC_OP_MODE: number;
                    public static GL_COMBINE_RGB: number;
                    public static GL_MAX_LIGHTS: number;
                    public static GL_SAMPLE_BUFFERS: number;
                    public static GL_SAMPLE_ALPHA_TO_ONE: number;
                    public static GL_NORMAL_ARRAY_POINTER: number;
                    public static GL_TRIANGLE_FAN: number;
                    public static GL_RENDERER: number;
                    public static GL_STENCIL_CLEAR_VALUE: number;
                    public static GL_DIFFUSE: number;
                    public static GL_MULTISAMPLE: number;
                    public static GL_OPERAND1_ALPHA: number;
                    public static GL_POINT_SMOOTH_HINT: number;
                    public static GL_POINT_SIZE: number;
                    public static GL_SCISSOR_BOX: number;
                    public static GL_BUFFER_SIZE: number;
                    public static GL_SMOOTH_LINE_WIDTH_RANGE: number;
                    public static GL_PACK_ALIGNMENT: number;
                    public static GL_REPEAT: number;
                    public static GL_PALETTE4_RGB8_OES: number;
                    public static GL_NAND: number;
                    public static GL_STENCIL_TEST: number;
                    public static GL_ZERO: number;
                    public static GL_TEXTURE0: number;
                    public static GL_DECR: number;
                    public static GL_SMOOTH_POINT_SIZE_RANGE: number;
                    public static GL_SHADE_MODEL: number;
                    public static GL_FRONT_FACE: number;
                    public static GL_BLEND_SRC: number;
                    public static GL_COLOR_LOGIC_OP: number;
                    public static GL_POLYGON_OFFSET_UNITS: number;
                    public static GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES: number;
                    public static GL_TEXTURE9: number;
                    public static GL_UNSIGNED_SHORT: number;
                    public static GL_OPERAND1_RGB: number;
                    public static GL_LINES: number;
                    public static GL_CLIENT_ACTIVE_TEXTURE: number;
                    public static GL_CLAMP_TO_EDGE: number;
                    public static GL_POINTS: number;
                    public static GL_POINT_FADE_THRESHOLD_SIZE: number;
                    public static GL_TEXTURE3: number;
                    public static GL_TEXTURE4: number;
                    public static GL_TEXTURE1: number;
                    public static GL_TEXTURE2: number;
                    public static GL_POINT_SIZE_ARRAY_STRIDE_OES: number;
                    public static GL_TEXTURE7: number;
                    public static GL_TEXTURE8: number;
                    public static GL_TEXTURE5: number;
                    public static GL_STATIC_DRAW: number;
                    public static GL_TEXTURE6: number;
                    public static GL_NORMAL_ARRAY_STRIDE: number;
                    public static GL_FOG_START: number;
                    public static GL_NOTEQUAL: number;
                    public static GL_SUBPIXEL_BITS: number;
                    public static GL_POLYGON_SMOOTH_HINT: number;
                    public static GL_LINE_WIDTH: number;
                    public static GL_STENCIL_FAIL: number;
                    public static GL_SRC_COLOR: number;
                    public static GL_AMBIENT: number;
                    public static GL_FRONT: number;
                    public static GL_STENCIL_WRITEMASK: number;
                    public static GL_TEXTURE_ENV: number;
                    public static GL_FOG: number;
                    public static GL_TEXTURE_BINDING_2D: number;
                    public static GL_STENCIL_BITS: number;
                    public static GL_CULL_FACE_MODE: number;
                    public static GL_UNSIGNED_SHORT_5_5_5_1: number;
                    public static GL_RGB: number;
                    public static GL_NOR: number;
                    public static GL_OPERAND0_ALPHA: number;
                    public static GL_CLEAR: number;
                    public static GL_MODELVIEW: number;
                    public static GL_PALETTE4_R5_G6_B5_OES: number;
                    public static GL_SRC1_RGB: number;
                    public static GL_MAX_MODELVIEW_STACK_DEPTH: number;
                    public static GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES: number;
                    public static GL_POINT_SIZE_MIN: number;
                    public static GL_FOG_COLOR: number;
                    public static GL_EQUIV: number;
                    public static GL_FASTEST: number;
                    public static GL_ADD_SIGNED: number;
                    public static GL_SRC_ALPHA: number;
                    public static GL_COMBINE_ALPHA: number;
                    public static GL_BLEND: number;
                    public static GL_PALETTE8_R5_G6_B5_OES: number;
                    public static GL_POINT_SMOOTH: number;
                    public static GL_PALETTE8_RGB8_OES: number;
                    public static GL_CONSTANT_ATTENUATION: number;
                    public static GL_MAX_ELEMENTS_INDICES: number;
                    public static GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES: number;
                    public static GL_PALETTE4_RGBA4_OES: number;
                    public static GL_INCR: number;
                    public static GL_VERTEX_ARRAY_POINTER: number;
                    public static GL_POLYGON_OFFSET_FILL: number;
                    public static GL_POINT_SPRITE_OES: number;
                    public static GL_INVALID_VALUE: number;
                    public static GL_LIGHT3: number;
                    public static GL_LIGHT2: number;
                    public static GL_LIGHT1: number;
                    public static GL_LIGHT0: number;
                    public static GL_NORMALIZE: number;
                    public static GL_LIGHT7: number;
                    public static GL_LIGHT6: number;
                    public static GL_DEPTH_RANGE: number;
                    public static GL_BLUE_BITS: number;
                    public static GL_LIGHT5: number;
                    public static GL_AMBIENT_AND_DIFFUSE: number;
                    public static GL_LIGHT4: number;
                    public static GL_FLOAT: number;
                    public static GL_MAX_CLIP_PLANES: number;
                    public static GL_TEXTURE_MATRIX: number;
                    public static GL_GEQUAL: number;
                    public static GL_TEXTURE_MIN_FILTER: number;
                    public static GL_NICEST: number;
                    public static GL_POINT_SIZE_ARRAY_OES: number;
                    public static GL_STENCIL_FUNC: number;
                    public static GL_UNSIGNED_BYTE: number;
                    public static GL_OPERAND2_RGB: number;
                    public static GL_TEXTURE_COORD_ARRAY_SIZE: number;
                    public static GL_TEXTURE_MAG_FILTER: number;
                    public static GL_VERSION: number;
                    public static GL_ADD: number;
                    public static GL_STACK_UNDERFLOW: number;
                    public static GL_FOG_DENSITY: number;
                    public static GL_DITHER: number;
                    public static GL_GENERATE_MIPMAP: number;
                    public static GL_OPERAND2_ALPHA: number;
                    public static GL_SAMPLES: number;
                    public static GL_MAX_TEXTURE_STACK_DEPTH: number;
                    public static GL_MODULATE: number;
                    public static GL_DST_ALPHA: number;
                    public static GL_COMPRESSED_TEXTURE_FORMATS: number;
                    public glDrawElements(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                    public glEnableClientState(param0: number): void;
                    public glLoadMatrixx(param0: number[], param1: number): void;
                    public glGenBuffers(param0: number, param1: java.nio.IntBuffer): void;
                    public glGetBufferParameteriv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glPushMatrix(): void;
                    public glGetLightfv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glScalex(param0: number, param1: number, param2: number): void;
                    public glTexParameterxv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glTexEnvx(param0: number, param1: number, param2: number): void;
                    public glGetTexEnvxv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glCopyTexSubImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
                    public glGetTexParameterxv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glClipPlanef(param0: number, param1: java.nio.FloatBuffer): void;
                    public glMultiTexCoord4x(param0: number, param1: number, param2: number, param3: number, param4: number): void;
                    public glPolygonOffsetx(param0: number, param1: number): void;
                    public glViewport(param0: number, param1: number, param2: number, param3: number): void;
                    public glGetTexParameterfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                    public glPointParameterxv(param0: number, param1: number[], param2: number): void;
                    public glMultMatrixx(param0: java.nio.IntBuffer): void;
                    public glLineWidthx(param0: number): void;
                    public glPopMatrix(): void;
                    public glColor4ub(param0: number, param1: number, param2: number, param3: number): void;
                    public glTexParameteriv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glFogfv(param0: number, param1: number[], param2: number): void;
                    public glHint(param0: number, param1: number): void;
                    public glGetTexParameterfv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glOrthof(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): void;
                    public glShadeModel(param0: number): void;
                    public glFinish(): void;
                    public glPointParameterf(param0: number, param1: number): void;
                    public glTexParameterf(param0: number, param1: number, param2: number): void;
                    public glScalef(param0: number, param1: number, param2: number): void;
                    public glGetTexParameteriv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glGetLightxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glTexEnvf(param0: number, param1: number, param2: number): void;
                    public glClipPlanef(param0: number, param1: number[], param2: number): void;
                    public glClearDepthx(param0: number): void;
                    public glTexCoordPointer(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                    public glLightfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                    public glGetTexEnviv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glIsTexture(param0: number): boolean;
                    public glActiveTexture(param0: number): void;
                    public glTexParameterfv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glTexParameterx(param0: number, param1: number, param2: number): void;
                    public glNormalPointer(param0: number, param1: number, param2: number): void;
                    public glBindTexture(param0: number, param1: number): void;
                    public glFrontFace(param0: number): void;
                    public glLoadMatrixf(param0: number[], param1: number): void;
                    public glGetClipPlanef(param0: number, param1: java.nio.FloatBuffer): void;
                    public glIsBuffer(param0: number): boolean;
                    public glClearDepthf(param0: number): void;
                    public glCullFace(param0: number): void;
                    public glBufferData(param0: number, param1: number, param2: java.nio.Buffer, param3: number): void;
                    public glClipPlanex(param0: number, param1: number[], param2: number): void;
                    public glLightxv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glTexParameterxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glClear(param0: number): void;
                    public glMultiTexCoord4f(param0: number, param1: number, param2: number, param3: number, param4: number): void;
                    public glOrthox(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): void;
                    public glLightModelf(param0: number, param1: number): void;
                    public glGetError(): number;
                    public glGenTextures(param0: number, param1: number[], param2: number): void;
                    public glClearStencil(param0: number): void;
                    public glClientActiveTexture(param0: number): void;
                    public glSampleCoverage(param0: number, param1: boolean): void;
                    public glClipPlanex(param0: number, param1: java.nio.IntBuffer): void;
                    public glColorPointer(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                    public glDisableClientState(param0: number): void;
                    public glLightfv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glMatrixMode(param0: number): void;
                    public glPointParameterx(param0: number, param1: number): void;
                    public glPointParameterxv(param0: number, param1: java.nio.IntBuffer): void;
                    public glPointSizePointerOES(param0: number, param1: number, param2: java.nio.Buffer): void;
                    public glLightModelxv(param0: number, param1: number[], param2: number): void;
                    public glColorMask(param0: boolean, param1: boolean, param2: boolean, param3: boolean): void;
                    public glGetMaterialfv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glGetTexEnvxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glGetBufferParameteriv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glPointSizex(param0: number): void;
                    public glRotatef(param0: number, param1: number, param2: number, param3: number): void;
                    public glLightModelx(param0: number, param1: number): void;
                    public glGetIntegerv(param0: number, param1: java.nio.IntBuffer): void;
                    public glGetMaterialxv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glMaterialf(param0: number, param1: number, param2: number): void;
                    public glBindBuffer(param0: number, param1: number): void;
                    public glTexParameteri(param0: number, param1: number, param2: number): void;
                    public glNormal3x(param0: number, param1: number, param2: number): void;
                    public glTranslatef(param0: number, param1: number, param2: number): void;
                    public glCompressedTexSubImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: java.nio.Buffer): void;
                    public glTexSubImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: java.nio.Buffer): void;
                    public glRotatex(param0: number, param1: number, param2: number, param3: number): void;
                    public glAlphaFunc(param0: number, param1: number): void;
                    public glLogicOp(param0: number): void;
                    public glDeleteTextures(param0: number, param1: java.nio.IntBuffer): void;
                    public glTexParameteriv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glTexEnvfv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glBufferSubData(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                    public glMultMatrixx(param0: number[], param1: number): void;
                    public glReadPixels(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: java.nio.Buffer): void;
                    public glGetFixedv(param0: number, param1: java.nio.IntBuffer): void;
                    public glClearColor(param0: number, param1: number, param2: number, param3: number): void;
                    public glFogxv(param0: number, param1: java.nio.IntBuffer): void;
                    public glLightxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glMaterialfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                    public glGetFloatv(param0: number, param1: number[], param2: number): void;
                    public glNormalPointer(param0: number, param1: number, param2: java.nio.Buffer): void;
                    public glDeleteTextures(param0: number, param1: number[], param2: number): void;
                    public glStencilMask(param0: number): void;
                    public glTexImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: java.nio.Buffer): void;
                    public glVertexPointer(param0: number, param1: number, param2: number, param3: number): void;
                    public glGetTexParameteriv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glColor4x(param0: number, param1: number, param2: number, param3: number): void;
                    public glGetBooleanv(param0: number, param1: boolean[], param2: number): void;
                    public glTexEnviv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glFlush(): void;
                    public glTexEnvfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                    public glDepthMask(param0: boolean): void;
                    public glPointParameterfv(param0: number, param1: java.nio.FloatBuffer): void;
                    public glDepthRangef(param0: number, param1: number): void;
                    public glStencilOp(param0: number, param1: number, param2: number): void;
                    public glTexEnvxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glLightx(param0: number, param1: number, param2: number): void;
                    public glMaterialxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glPixelStorei(param0: number, param1: number): void;
                    public glEnable(param0: number): void;
                    public glTexEnvxv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glVertexPointer(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                    public glPointParameterfv(param0: number, param1: number[], param2: number): void;
                    public glTexParameterfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                    public glGetTexEnviv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glGenBuffers(param0: number, param1: number[], param2: number): void;
                    public glLightModelfv(param0: number, param1: number[], param2: number): void;
                    public glDrawElements(param0: number, param1: number, param2: number, param3: number): void;
                    public glGetTexParameterxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glGetIntegerv(param0: number, param1: number[], param2: number): void;
                    public glGetMaterialxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glFogf(param0: number, param1: number): void;
                    public glLoadMatrixf(param0: java.nio.FloatBuffer): void;
                    public glDepthFunc(param0: number): void;
                    public glGetClipPlanef(param0: number, param1: number[], param2: number): void;
                    public glStencilFunc(param0: number, param1: number, param2: number): void;
                    public glClearColorx(param0: number, param1: number, param2: number, param3: number): void;
                    public glSampleCoveragex(param0: number, param1: boolean): void;
                    public glMultMatrixf(param0: number[], param1: number): void;
                    public glPointSize(param0: number): void;
                    public glLightf(param0: number, param1: number, param2: number): void;
                    public glMaterialxv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glGetPointerv(param0: number, param1: java.nio.Buffer[]): void;
                    public glTexCoordPointer(param0: number, param1: number, param2: number, param3: number): void;
                    public glCompressedTexImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: java.nio.Buffer): void;
                    public glScissor(param0: number, param1: number, param2: number, param3: number): void;
                    public glDisable(param0: number): void;
                    public glFogfv(param0: number, param1: java.nio.FloatBuffer): void;
                    public glGetString(param0: number): string;
                    public glColorPointer(param0: number, param1: number, param2: number, param3: number): void;
                    public glDrawArrays(param0: number, param1: number, param2: number): void;
                    public glLineWidth(param0: number): void;
                    public glIsEnabled(param0: number): boolean;
                    public glLoadMatrixx(param0: java.nio.IntBuffer): void;
                    public glLoadIdentity(): void;
                    public glLightModelfv(param0: number, param1: java.nio.FloatBuffer): void;
                    public glGetMaterialfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                    public glBlendFunc(param0: number, param1: number): void;
                    public glGetClipPlanex(param0: number, param1: number[], param2: number): void;
                    public glGetClipPlanex(param0: number, param1: java.nio.IntBuffer): void;
                    public glGetLightfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                    public glGetFixedv(param0: number, param1: number[], param2: number): void;
                    public glColor4f(param0: number, param1: number, param2: number, param3: number): void;
                    public glMaterialfv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glCopyTexImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
                    public glGenTextures(param0: number, param1: java.nio.IntBuffer): void;
                    public glDeleteBuffers(param0: number, param1: java.nio.IntBuffer): void;
                    public glTexEnvi(param0: number, param1: number, param2: number): void;
                    public glDepthRangex(param0: number, param1: number): void;
                    public glPolygonOffset(param0: number, param1: number): void;
                    public glMultMatrixf(param0: java.nio.FloatBuffer): void;
                    public glGetLightxv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glGetBooleanv(param0: number, param1: java.nio.IntBuffer): void;
                    public glTexEnviv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glTranslatex(param0: number, param1: number, param2: number): void;
                    public glFogxv(param0: number, param1: number[], param2: number): void;
                    public glNormal3f(param0: number, param1: number, param2: number): void;
                    public glGetFloatv(param0: number, param1: java.nio.FloatBuffer): void;
                    public glFrustumf(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): void;
                    public glMaterialx(param0: number, param1: number, param2: number): void;
                    public glAlphaFuncx(param0: number, param1: number): void;
                    public glFrustumx(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): void;
                    public glFogx(param0: number, param1: number): void;
                    public glLightModelxv(param0: number, param1: java.nio.IntBuffer): void;
                    public glDeleteBuffers(param0: number, param1: number[], param2: number): void;
                }
            }
        }
    }
}

declare module javax {
    export module microedition {
        export module khronos {
            export module opengles {
                export class GL11Ext extends javax.microedition.khronos.opengles.GL {
                    public static class: java.lang.Class<javax.microedition.khronos.opengles.GL11Ext>;
                    /**
                     * Constructs a new instance of the javax.microedition.khronos.opengles.GL11Ext interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        glCurrentPaletteMatrixOES(param0: number): void;
                        glDrawTexfOES(param0: number, param1: number, param2: number, param3: number, param4: number): void;
                        glDrawTexfvOES(param0: java.nio.FloatBuffer): void;
                        glDrawTexfvOES(param0: number[], param1: number): void;
                        glDrawTexiOES(param0: number, param1: number, param2: number, param3: number, param4: number): void;
                        glDrawTexivOES(param0: java.nio.IntBuffer): void;
                        glDrawTexivOES(param0: number[], param1: number): void;
                        glDrawTexsOES(param0: number, param1: number, param2: number, param3: number, param4: number): void;
                        glDrawTexsvOES(param0: java.nio.ShortBuffer): void;
                        glDrawTexsvOES(param0: number[], param1: number): void;
                        glDrawTexxOES(param0: number, param1: number, param2: number, param3: number, param4: number): void;
                        glDrawTexxvOES(param0: java.nio.IntBuffer): void;
                        glDrawTexxvOES(param0: number[], param1: number): void;
                        glEnable(param0: number): void;
                        glEnableClientState(param0: number): void;
                        glLoadPaletteFromModelViewMatrixOES(): void;
                        glMatrixIndexPointerOES(param0: number, param1: number, param2: number, param3: number): void;
                        glMatrixIndexPointerOES(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                        glTexParameterfv(param0: number, param1: number, param2: number[], param3: number): void;
                        glWeightPointerOES(param0: number, param1: number, param2: number, param3: number): void;
                        glWeightPointerOES(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                    });
                    public constructor();
                    public static GL_MATRIX_INDEX_ARRAY_OES: number;
                    public static GL_WEIGHT_ARRAY_BUFFER_BINDING_OES: number;
                    public static GL_WEIGHT_ARRAY_OES: number;
                    public static GL_MATRIX_INDEX_ARRAY_TYPE_OES: number;
                    public static GL_MATRIX_PALETTE_OES: number;
                    public static GL_WEIGHT_ARRAY_POINTER_OES: number;
                    public static GL_WEIGHT_ARRAY_TYPE_OES: number;
                    public static GL_MAX_PALETTE_MATRICES_OES: number;
                    public static GL_MATRIX_INDEX_ARRAY_POINTER_OES: number;
                    public static GL_MAX_VERTEX_UNITS_OES: number;
                    public static GL_WEIGHT_ARRAY_SIZE_OES: number;
                    public static GL_WEIGHT_ARRAY_STRIDE_OES: number;
                    public static GL_MATRIX_INDEX_ARRAY_STRIDE_OES: number;
                    public static GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES: number;
                    public static GL_MATRIX_INDEX_ARRAY_SIZE_OES: number;
                    public static GL_TEXTURE_CROP_RECT_OES: number;
                    public glEnableClientState(param0: number): void;
                    public glMatrixIndexPointerOES(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                    public glDrawTexxOES(param0: number, param1: number, param2: number, param3: number, param4: number): void;
                    public glDrawTexivOES(param0: java.nio.IntBuffer): void;
                    public glDrawTexsvOES(param0: number[], param1: number): void;
                    public glCurrentPaletteMatrixOES(param0: number): void;
                    public glDrawTexivOES(param0: number[], param1: number): void;
                    public glDrawTexiOES(param0: number, param1: number, param2: number, param3: number, param4: number): void;
                    public glDrawTexfvOES(param0: number[], param1: number): void;
                    public glDrawTexfOES(param0: number, param1: number, param2: number, param3: number, param4: number): void;
                    public glDrawTexsOES(param0: number, param1: number, param2: number, param3: number, param4: number): void;
                    public glEnable(param0: number): void;
                    public glMatrixIndexPointerOES(param0: number, param1: number, param2: number, param3: number): void;
                    public glDrawTexxvOES(param0: number[], param1: number): void;
                    public glLoadPaletteFromModelViewMatrixOES(): void;
                    public glWeightPointerOES(param0: number, param1: number, param2: number, param3: java.nio.Buffer): void;
                    public glDrawTexfvOES(param0: java.nio.FloatBuffer): void;
                    public glDrawTexxvOES(param0: java.nio.IntBuffer): void;
                    public glTexParameterfv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glDrawTexsvOES(param0: java.nio.ShortBuffer): void;
                    public glWeightPointerOES(param0: number, param1: number, param2: number, param3: number): void;
                }
            }
        }
    }
}

declare module javax {
    export module microedition {
        export module khronos {
            export module opengles {
                export class GL11ExtensionPack extends javax.microedition.khronos.opengles.GL {
                    public static class: java.lang.Class<javax.microedition.khronos.opengles.GL11ExtensionPack>;
                    /**
                     * Constructs a new instance of the javax.microedition.khronos.opengles.GL11ExtensionPack interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        glBindFramebufferOES(param0: number, param1: number): void;
                        glBindRenderbufferOES(param0: number, param1: number): void;
                        glBindTexture(param0: number, param1: number): void;
                        glBlendEquation(param0: number): void;
                        glBlendEquationSeparate(param0: number, param1: number): void;
                        glBlendFuncSeparate(param0: number, param1: number, param2: number, param3: number): void;
                        glCheckFramebufferStatusOES(param0: number): number;
                        glCompressedTexImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: java.nio.Buffer): void;
                        glCopyTexImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
                        glDeleteFramebuffersOES(param0: number, param1: java.nio.IntBuffer): void;
                        glDeleteFramebuffersOES(param0: number, param1: number[], param2: number): void;
                        glDeleteRenderbuffersOES(param0: number, param1: java.nio.IntBuffer): void;
                        glDeleteRenderbuffersOES(param0: number, param1: number[], param2: number): void;
                        glEnable(param0: number): void;
                        glFramebufferRenderbufferOES(param0: number, param1: number, param2: number, param3: number): void;
                        glFramebufferTexture2DOES(param0: number, param1: number, param2: number, param3: number, param4: number): void;
                        glGenFramebuffersOES(param0: number, param1: java.nio.IntBuffer): void;
                        glGenFramebuffersOES(param0: number, param1: number[], param2: number): void;
                        glGenRenderbuffersOES(param0: number, param1: java.nio.IntBuffer): void;
                        glGenRenderbuffersOES(param0: number, param1: number[], param2: number): void;
                        glGenerateMipmapOES(param0: number): void;
                        glGetFramebufferAttachmentParameterivOES(param0: number, param1: number, param2: number, param3: java.nio.IntBuffer): void;
                        glGetFramebufferAttachmentParameterivOES(param0: number, param1: number, param2: number, param3: number[], param4: number): void;
                        glGetIntegerv(param0: number, param1: java.nio.IntBuffer): void;
                        glGetIntegerv(param0: number, param1: number[], param2: number): void;
                        glGetRenderbufferParameterivOES(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                        glGetRenderbufferParameterivOES(param0: number, param1: number, param2: number[], param3: number): void;
                        glGetTexGenfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                        glGetTexGenfv(param0: number, param1: number, param2: number[], param3: number): void;
                        glGetTexGeniv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                        glGetTexGeniv(param0: number, param1: number, param2: number[], param3: number): void;
                        glGetTexGenxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                        glGetTexGenxv(param0: number, param1: number, param2: number[], param3: number): void;
                        glIsFramebufferOES(param0: number): boolean;
                        glIsRenderbufferOES(param0: number): boolean;
                        glRenderbufferStorageOES(param0: number, param1: number, param2: number, param3: number): void;
                        glStencilOp(param0: number, param1: number, param2: number): void;
                        glTexEnvf(param0: number, param1: number, param2: number): void;
                        glTexEnvfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                        glTexEnvfv(param0: number, param1: number, param2: number[], param3: number): void;
                        glTexEnvx(param0: number, param1: number, param2: number): void;
                        glTexEnvxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                        glTexEnvxv(param0: number, param1: number, param2: number[], param3: number): void;
                        glTexGenf(param0: number, param1: number, param2: number): void;
                        glTexGenfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                        glTexGenfv(param0: number, param1: number, param2: number[], param3: number): void;
                        glTexGeni(param0: number, param1: number, param2: number): void;
                        glTexGeniv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                        glTexGeniv(param0: number, param1: number, param2: number[], param3: number): void;
                        glTexGenx(param0: number, param1: number, param2: number): void;
                        glTexGenxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                        glTexGenxv(param0: number, param1: number, param2: number[], param3: number): void;
                        glTexParameterf(param0: number, param1: number, param2: number): void;
                    });
                    public constructor();
                    public static GL_MIRRORED_REPEAT: number;
                    public static GL_COLOR_ATTACHMENT10_OES: number;
                    public static GL_RGB5_A1: number;
                    public static GL_RENDERBUFFER_STENCIL_SIZE_OES: number;
                    public static GL_MAX_RENDERBUFFER_SIZE_OES: number;
                    public static GL_RENDERBUFFER_BINDING_OES: number;
                    public static GL_TEXTURE_GEN_STR: number;
                    public static GL_COLOR_ATTACHMENT5_OES: number;
                    public static GL_DECR_WRAP: number;
                    public static GL_STENCIL_INDEX1_OES: number;
                    public static GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES: number;
                    public static GL_RENDERBUFFER_INTERNAL_FORMAT_OES: number;
                    public static GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES: number;
                    public static GL_BLEND_SRC_ALPHA: number;
                    public static GL_DEPTH_COMPONENT24: number;
                    public static GL_BLEND_EQUATION_ALPHA: number;
                    public static GL_BLEND_SRC_RGB: number;
                    public static GL_COLOR_ATTACHMENT4_OES: number;
                    public static GL_BLEND_DST_ALPHA: number;
                    public static GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES: number;
                    public static GL_BLEND_DST_RGB: number;
                    public static GL_FRAMEBUFFER_BINDING_OES: number;
                    public static GL_NORMAL_MAP: number;
                    public static GL_COLOR_ATTACHMENT7_OES: number;
                    public static GL_TEXTURE_BINDING_CUBE_MAP: number;
                    public static GL_REFLECTION_MAP: number;
                    public static GL_DEPTH_COMPONENT: number;
                    public static GL_DEPTH_ATTACHMENT_OES: number;
                    public static GL_RENDERBUFFER_ALPHA_SIZE_OES: number;
                    public static GL_COLOR_ATTACHMENT12_OES: number;
                    public static GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES: number;
                    public static GL_BLEND_EQUATION_RGB: number;
                    public static GL_TEXTURE_CUBE_MAP_NEGATIVE_X: number;
                    public static GL_INCR_WRAP: number;
                    public static GL_TEXTURE_CUBE_MAP_NEGATIVE_Y: number;
                    public static GL_RENDERBUFFER_DEPTH_SIZE_OES: number;
                    public static GL_TEXTURE_CUBE_MAP_NEGATIVE_Z: number;
                    public static GL_RENDERBUFFER_OES: number;
                    public static GL_DEPTH_COMPONENT16: number;
                    public static GL_COLOR_ATTACHMENT11_OES: number;
                    public static GL_COLOR_ATTACHMENT6_OES: number;
                    public static GL_MAX_COLOR_ATTACHMENTS_OES: number;
                    public static GL_RENDERBUFFER_HEIGHT_OES: number;
                    public static GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES: number;
                    public static GL_FRAMEBUFFER_OES: number;
                    public static GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES: number;
                    public static GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES: number;
                    public static GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES: number;
                    public static GL_TEXTURE_GEN_MODE: number;
                    public static GL_FUNC_REVERSE_SUBTRACT: number;
                    public static GL_COLOR_ATTACHMENT14_OES: number;
                    public static GL_COLOR_ATTACHMENT9_OES: number;
                    public static GL_FRAMEBUFFER_UNSUPPORTED_OES: number;
                    public static GL_FUNC_SUBTRACT: number;
                    public static GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES: number;
                    public static GL_MAX_CUBE_MAP_TEXTURE_SIZE: number;
                    public static GL_BLEND_EQUATION: number;
                    public static GL_COLOR_ATTACHMENT0_OES: number;
                    public static GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES: number;
                    public static GL_TEXTURE_CUBE_MAP_POSITIVE_X: number;
                    public static GL_STENCIL_INDEX: number;
                    public static GL_STENCIL_INDEX4_OES: number;
                    public static GL_TEXTURE_CUBE_MAP_POSITIVE_Z: number;
                    public static GL_TEXTURE_CUBE_MAP_POSITIVE_Y: number;
                    public static GL_COLOR_ATTACHMENT13_OES: number;
                    public static GL_COLOR_ATTACHMENT8_OES: number;
                    public static GL_RENDERBUFFER_WIDTH_OES: number;
                    public static GL_STENCIL_INDEX8_OES: number;
                    public static GL_RENDERBUFFER_RED_SIZE_OES: number;
                    public static GL_INVALID_FRAMEBUFFER_OPERATION_OES: number;
                    public static GL_FRAMEBUFFER_COMPLETE_OES: number;
                    public static GL_RENDERBUFFER_GREEN_SIZE_OES: number;
                    public static GL_RGB565_OES: number;
                    public static GL_RGBA4: number;
                    public static GL_TEXTURE_CUBE_MAP: number;
                    public static GL_RGB8: number;
                    public static GL_COLOR_ATTACHMENT3_OES: number;
                    public static GL_RGBA8: number;
                    public static GL_COLOR_ATTACHMENT2_OES: number;
                    public static GL_COLOR_ATTACHMENT15_OES: number;
                    public static GL_FUNC_ADD: number;
                    public static GL_STENCIL_ATTACHMENT_OES: number;
                    public static GL_DEPTH_COMPONENT32: number;
                    public static GL_RENDERBUFFER_BLUE_SIZE_OES: number;
                    public static GL_STR: number;
                    public static GL_COLOR_ATTACHMENT1_OES: number;
                    public glTexEnvfv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glTexGeni(param0: number, param1: number, param2: number): void;
                    public glTexGenfv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glTexEnvx(param0: number, param1: number, param2: number): void;
                    public glGenFramebuffersOES(param0: number, param1: number[], param2: number): void;
                    public glGetTexGenxv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glGetRenderbufferParameterivOES(param0: number, param1: number, param2: number[], param3: number): void;
                    public glBindRenderbufferOES(param0: number, param1: number): void;
                    public glGetTexGenxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glDeleteRenderbuffersOES(param0: number, param1: number[], param2: number): void;
                    public glTexGenf(param0: number, param1: number, param2: number): void;
                    public glTexGenx(param0: number, param1: number, param2: number): void;
                    public glTexGeniv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glIsRenderbufferOES(param0: number): boolean;
                    public glGetFramebufferAttachmentParameterivOES(param0: number, param1: number, param2: number, param3: java.nio.IntBuffer): void;
                    public glGetTexGenfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                    public glTexEnvfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                    public glTexParameterf(param0: number, param1: number, param2: number): void;
                    public glStencilOp(param0: number, param1: number, param2: number): void;
                    public glRenderbufferStorageOES(param0: number, param1: number, param2: number, param3: number): void;
                    public glTexEnvxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glTexEnvf(param0: number, param1: number, param2: number): void;
                    public glTexGenxv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glGetRenderbufferParameterivOES(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glEnable(param0: number): void;
                    public glTexEnvxv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glBlendFuncSeparate(param0: number, param1: number, param2: number, param3: number): void;
                    public glGetTexGeniv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glTexGenxv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glBindTexture(param0: number, param1: number): void;
                    public glDeleteFramebuffersOES(param0: number, param1: number[], param2: number): void;
                    public glIsFramebufferOES(param0: number): boolean;
                    public glTexGenfv(param0: number, param1: number, param2: java.nio.FloatBuffer): void;
                    public glGenRenderbuffersOES(param0: number, param1: number[], param2: number): void;
                    public glGetIntegerv(param0: number, param1: number[], param2: number): void;
                    public glFramebufferTexture2DOES(param0: number, param1: number, param2: number, param3: number, param4: number): void;
                    public glGetTexGeniv(param0: number, param1: number, param2: java.nio.IntBuffer): void;
                    public glBlendEquationSeparate(param0: number, param1: number): void;
                    public glFramebufferRenderbufferOES(param0: number, param1: number, param2: number, param3: number): void;
                    public glCheckFramebufferStatusOES(param0: number): number;
                    public glDeleteRenderbuffersOES(param0: number, param1: java.nio.IntBuffer): void;
                    public glCompressedTexImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: java.nio.Buffer): void;
                    public glGenRenderbuffersOES(param0: number, param1: java.nio.IntBuffer): void;
                    public glGetTexGenfv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glBindFramebufferOES(param0: number, param1: number): void;
                    public glCopyTexImage2D(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
                    public glDeleteFramebuffersOES(param0: number, param1: java.nio.IntBuffer): void;
                    public glGetIntegerv(param0: number, param1: java.nio.IntBuffer): void;
                    public glGenerateMipmapOES(param0: number): void;
                    public glTexGeniv(param0: number, param1: number, param2: number[], param3: number): void;
                    public glGetFramebufferAttachmentParameterivOES(param0: number, param1: number, param2: number, param3: number[], param4: number): void;
                    public glGenFramebuffersOES(param0: number, param1: java.nio.IntBuffer): void;
                    public glBlendEquation(param0: number): void;
                }
            }
        }
    }
}

declare module org {
    export module apache {
        export module http {
            export module conn {
                export class ConnectTimeoutException extends java.lang.Object {
                    public static class: java.lang.Class<org.apache.http.conn.ConnectTimeoutException>;
                    public constructor(param0: string);
                    public constructor();
                }
            }
        }
    }
}

declare module org {
    export module apache {
        export module http {
            export module conn {
                export module scheme {
                    export class HostNameResolver extends java.lang.Object {
                        public static class: java.lang.Class<org.apache.http.conn.scheme.HostNameResolver>;
                        /**
                         * Constructs a new instance of the org.apache.http.conn.scheme.HostNameResolver interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            resolve(param0: string): java.net.InetAddress;
                        });
                        public constructor();
                        public resolve(param0: string): java.net.InetAddress;
                    }
                }
            }
        }
    }
}

declare module org {
    export module apache {
        export module http {
            export module conn {
                export module scheme {
                    export class LayeredSocketFactory extends org.apache.http.conn.scheme.SocketFactory {
                        public static class: java.lang.Class<org.apache.http.conn.scheme.LayeredSocketFactory>;
                        /**
                         * Constructs a new instance of the org.apache.http.conn.scheme.LayeredSocketFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            createSocket(param0: java.net.Socket, param1: string, param2: number, param3: boolean): java.net.Socket;
                            connectSocket(param0: java.net.Socket, param1: string, param2: number, param3: java.net.InetAddress, param4: number, param5: org.apache.http.params.HttpParams): java.net.Socket;
                            createSocket(): java.net.Socket;
                            isSecure(param0: java.net.Socket): boolean;
                        });
                        public constructor();
                        public connectSocket(param0: java.net.Socket, param1: string, param2: number, param3: java.net.InetAddress, param4: number, param5: org.apache.http.params.HttpParams): java.net.Socket;
                        public createSocket(param0: java.net.Socket, param1: string, param2: number, param3: boolean): java.net.Socket;
                        public isSecure(param0: java.net.Socket): boolean;
                        public createSocket(): java.net.Socket;
                    }
                }
            }
        }
    }
}

declare module org {
    export module apache {
        export module http {
            export module conn {
                export module scheme {
                    export class SocketFactory extends java.lang.Object {
                        public static class: java.lang.Class<org.apache.http.conn.scheme.SocketFactory>;
                        /**
                         * Constructs a new instance of the org.apache.http.conn.scheme.SocketFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            connectSocket(param0: java.net.Socket, param1: string, param2: number, param3: java.net.InetAddress, param4: number, param5: org.apache.http.params.HttpParams): java.net.Socket;
                            createSocket(): java.net.Socket;
                            isSecure(param0: java.net.Socket): boolean;
                        });
                        public constructor();
                        public connectSocket(param0: java.net.Socket, param1: string, param2: number, param3: java.net.InetAddress, param4: number, param5: org.apache.http.params.HttpParams): java.net.Socket;
                        public isSecure(param0: java.net.Socket): boolean;
                        public createSocket(): java.net.Socket;
                    }
                }
            }
        }
    }
}

declare module org {
    export module apache {
        export module http {
            export module conn {
                export module ssl {
                    export abstract class AbstractVerifier extends org.apache.http.conn.ssl.X509HostnameVerifier {
                        public static class: java.lang.Class<org.apache.http.conn.ssl.AbstractVerifier>;
                        public static acceptableCountryWildcard(param0: string): boolean;
                        public verify(param0: string, param1: string[], param2: string[]): void;
                        public verify(param0: string, param1: string[], param2: string[], param3: boolean): void;
                        public constructor();
                        public static countDots(param0: string): number;
                        public verify(param0: string, param1: javax.net.ssl.SSLSession): boolean;
                        public static getDNSSubjectAlts(param0: java.security.cert.X509Certificate): string[];
                        public static getCNs(param0: java.security.cert.X509Certificate): string[];
                        public verify(param0: string, param1: javax.net.ssl.SSLSocket): void;
                        public verify(param0: string, param1: java.security.cert.X509Certificate): void;
                    }
                }
            }
        }
    }
}

declare module org {
    export module apache {
        export module http {
            export module conn {
                export module ssl {
                    export class AllowAllHostnameVerifier extends org.apache.http.conn.ssl.AbstractVerifier {
                        public static class: java.lang.Class<org.apache.http.conn.ssl.AllowAllHostnameVerifier>;
                        public verify(param0: string, param1: string[], param2: string[]): void;
                        public verify(param0: string, param1: string[], param2: string[], param3: boolean): void;
                        public constructor();
                        public verify(param0: string, param1: javax.net.ssl.SSLSession): boolean;
                        public verify(param0: string, param1: javax.net.ssl.SSLSocket): void;
                        public toString(): string;
                        public verify(param0: string, param1: java.security.cert.X509Certificate): void;
                    }
                }
            }
        }
    }
}

declare module org {
    export module apache {
        export module http {
            export module conn {
                export module ssl {
                    export class AndroidDistinguishedNameParser extends java.lang.Object {
                        public static class: java.lang.Class<org.apache.http.conn.ssl.AndroidDistinguishedNameParser>;
                        public constructor(param0: javax.security.auth.x500.X500Principal);
                        public findMostSpecific(param0: string): string;
                        public getAllMostSpecificFirst(param0: string): java.util.List<string>;
                    }
                }
            }
        }
    }
}

declare module org {
    export module apache {
        export module http {
            export module conn {
                export module ssl {
                    export class BrowserCompatHostnameVerifier extends org.apache.http.conn.ssl.AbstractVerifier {
                        public static class: java.lang.Class<org.apache.http.conn.ssl.BrowserCompatHostnameVerifier>;
                        public verify(param0: string, param1: string[], param2: string[]): void;
                        public verify(param0: string, param1: string[], param2: string[], param3: boolean): void;
                        public constructor();
                        public verify(param0: string, param1: javax.net.ssl.SSLSession): boolean;
                        public verify(param0: string, param1: javax.net.ssl.SSLSocket): void;
                        public toString(): string;
                        public verify(param0: string, param1: java.security.cert.X509Certificate): void;
                    }
                }
            }
        }
    }
}

declare module org {
    export module apache {
        export module http {
            export module conn {
                export module ssl {
                    export class SSLSocketFactory extends org.apache.http.conn.scheme.LayeredSocketFactory {
                        public static class: java.lang.Class<org.apache.http.conn.ssl.SSLSocketFactory>;
                        public static ALLOW_ALL_HOSTNAME_VERIFIER: org.apache.http.conn.ssl.X509HostnameVerifier;
                        public static BROWSER_COMPATIBLE_HOSTNAME_VERIFIER: org.apache.http.conn.ssl.X509HostnameVerifier;
                        public static SSL: string;
                        public static SSLV2: string;
                        public static STRICT_HOSTNAME_VERIFIER: org.apache.http.conn.ssl.X509HostnameVerifier;
                        public static TLS: string;
                        public constructor(param0: string, param1: java.security.KeyStore, param2: string, param3: java.security.KeyStore, param4: java.security.SecureRandom, param5: org.apache.http.conn.scheme.HostNameResolver);
                        public getHostnameVerifier(): org.apache.http.conn.ssl.X509HostnameVerifier;
                        public constructor(param0: java.security.KeyStore);
                        public constructor(param0: java.security.KeyStore, param1: string);
                        public static getSocketFactory(): org.apache.http.conn.ssl.SSLSocketFactory;
                        public connectSocket(param0: java.net.Socket, param1: string, param2: number, param3: java.net.InetAddress, param4: number, param5: org.apache.http.params.HttpParams): java.net.Socket;
                        public createSocket(param0: java.net.Socket, param1: string, param2: number, param3: boolean): java.net.Socket;
                        public constructor(param0: java.security.KeyStore, param1: string, param2: java.security.KeyStore);
                        public isSecure(param0: java.net.Socket): boolean;
                        public constructor(param0: javax.net.ssl.SSLSocketFactory);
                        public createSocket(): java.net.Socket;
                        public setHostnameVerifier(param0: org.apache.http.conn.ssl.X509HostnameVerifier): void;
                    }
                    export module SSLSocketFactory {
                        export class NoPreloadHolder extends java.lang.Object {
                            public static class: java.lang.Class<org.apache.http.conn.ssl.SSLSocketFactory.NoPreloadHolder>;
                        }
                    }
                }
            }
        }
    }
}

declare module org {
    export module apache {
        export module http {
            export module conn {
                export module ssl {
                    export class StrictHostnameVerifier extends org.apache.http.conn.ssl.AbstractVerifier {
                        public static class: java.lang.Class<org.apache.http.conn.ssl.StrictHostnameVerifier>;
                        public verify(param0: string, param1: string[], param2: string[]): void;
                        public verify(param0: string, param1: string[], param2: string[], param3: boolean): void;
                        public constructor();
                        public verify(param0: string, param1: javax.net.ssl.SSLSession): boolean;
                        public verify(param0: string, param1: javax.net.ssl.SSLSocket): void;
                        public toString(): string;
                        public verify(param0: string, param1: java.security.cert.X509Certificate): void;
                    }
                }
            }
        }
    }
}

declare module org {
    export module apache {
        export module http {
            export module conn {
                export module ssl {
                    export class X509HostnameVerifier extends java.lang.Object {
                        public static class: java.lang.Class<org.apache.http.conn.ssl.X509HostnameVerifier>;
                        /**
                         * Constructs a new instance of the org.apache.http.conn.ssl.X509HostnameVerifier interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                         */
                        public constructor(implementation: {
                            verify(param0: string, param1: java.security.cert.X509Certificate): void;
                            verify(param0: string, param1: javax.net.ssl.SSLSocket): void;
                            verify(param0: string, param1: string[], param2: string[]): void;
                            verify(param0: string, param1: javax.net.ssl.SSLSession): boolean;
                        });
                        public constructor();
                        public verify(param0: string, param1: string[], param2: string[]): void;
                        public verify(param0: string, param1: javax.net.ssl.SSLSession): boolean;
                        public verify(param0: string, param1: javax.net.ssl.SSLSocket): void;
                        public verify(param0: string, param1: java.security.cert.X509Certificate): void;
                    }
                }
            }
        }
    }
}

declare module org {
    export module apache {
        export module http {
            export module params {
                export class CoreConnectionPNames extends java.lang.Object {
                    public static class: java.lang.Class<org.apache.http.params.CoreConnectionPNames>;
                    /**
                     * Constructs a new instance of the org.apache.http.params.CoreConnectionPNames interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {});
                    public constructor();
                    public static SO_LINGER: string;
                    public static CONNECTION_TIMEOUT: string;
                    public static SO_TIMEOUT: string;
                    public static SOCKET_BUFFER_SIZE: string;
                    public static MAX_HEADER_COUNT: string;
                    public static STALE_CONNECTION_CHECK: string;
                    public static TCP_NODELAY: string;
                    public static MAX_LINE_LENGTH: string;
                }
            }
        }
    }
}

declare module org {
    export module apache {
        export module http {
            export module params {
                export class HttpConnectionParams extends org.apache.http.params.CoreConnectionPNames {
                    public static class: java.lang.Class<org.apache.http.params.HttpConnectionParams>;
                    public static isStaleCheckingEnabled(param0: org.apache.http.params.HttpParams): boolean;
                    public static getTcpNoDelay(param0: org.apache.http.params.HttpParams): boolean;
                    public static setTcpNoDelay(param0: org.apache.http.params.HttpParams, param1: boolean): void;
                    public static getSoTimeout(param0: org.apache.http.params.HttpParams): number;
                    public static setSocketBufferSize(param0: org.apache.http.params.HttpParams, param1: number): void;
                    public static getConnectionTimeout(param0: org.apache.http.params.HttpParams): number;
                    public static setConnectionTimeout(param0: org.apache.http.params.HttpParams, param1: number): void;
                    public static setLinger(param0: org.apache.http.params.HttpParams, param1: number): void;
                    public static setSoTimeout(param0: org.apache.http.params.HttpParams, param1: number): void;
                    public static getLinger(param0: org.apache.http.params.HttpParams): number;
                    public static setStaleCheckingEnabled(param0: org.apache.http.params.HttpParams, param1: boolean): void;
                    public static getSocketBufferSize(param0: org.apache.http.params.HttpParams): number;
                }
            }
        }
    }
}

declare module org {
    export module apache {
        export module http {
            export module params {
                export class HttpParams extends java.lang.Object {
                    public static class: java.lang.Class<org.apache.http.params.HttpParams>;
                    /**
                     * Constructs a new instance of the org.apache.http.params.HttpParams interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
                     */
                    public constructor(implementation: {
                        copy(): org.apache.http.params.HttpParams;
                        getBooleanParameter(param0: string, param1: boolean): boolean;
                        getDoubleParameter(param0: string, param1: number): number;
                        getIntParameter(param0: string, param1: number): number;
                        getLongParameter(param0: string, param1: number): number;
                        getParameter(param0: string): any;
                        isParameterFalse(param0: string): boolean;
                        isParameterTrue(param0: string): boolean;
                        removeParameter(param0: string): boolean;
                        setBooleanParameter(param0: string, param1: boolean): org.apache.http.params.HttpParams;
                        setDoubleParameter(param0: string, param1: number): org.apache.http.params.HttpParams;
                        setIntParameter(param0: string, param1: number): org.apache.http.params.HttpParams;
                        setLongParameter(param0: string, param1: number): org.apache.http.params.HttpParams;
                        setParameter(param0: string, param1: any): org.apache.http.params.HttpParams;
                    });
                    public constructor();
                    public isParameterFalse(param0: string): boolean;
                    public setDoubleParameter(param0: string, param1: number): org.apache.http.params.HttpParams;
                    public getIntParameter(param0: string, param1: number): number;
                    public setLongParameter(param0: string, param1: number): org.apache.http.params.HttpParams;
                    public getParameter(param0: string): any;
                    public getLongParameter(param0: string, param1: number): number;
                    public isParameterTrue(param0: string): boolean;
                    public removeParameter(param0: string): boolean;
                    public copy(): org.apache.http.params.HttpParams;
                    public setParameter(param0: string, param1: any): org.apache.http.params.HttpParams;
                    public setBooleanParameter(param0: string, param1: boolean): org.apache.http.params.HttpParams;
                    public getDoubleParameter(param0: string, param1: number): number;
                    public setIntParameter(param0: string, param1: number): org.apache.http.params.HttpParams;
                    public getBooleanParameter(param0: string, param1: boolean): boolean;
                }
            }
        }
    }
}